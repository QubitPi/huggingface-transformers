import{s as Fa,f as sa,n as ja,o as Ba}from"../chunks/scheduler.56730f09.js";import{S as Ra,i as za,g as p,s as l,r as H,m as y,H as u,A as Ia,h as m,f as t,c as e,j as as,u as A,x as i,n as g,B as C,k as M,y as r,a as n,v as O,d as Y,t as q,w as D}from"../chunks/index.1f144517.js";import{C as aa}from"../chunks/CodeBlock.738eeccb.js";import{D as Na}from"../chunks/DocNotebookDropdown.243c3df7.js";import{H as ta}from"../chunks/Heading.57d46534.js";function Sa(na){let d,ts,K,ns,V,ls,J,es,T,la=`펄플렉서티(Perplexity, PPL)는 가장 일반적인 언어 모델 평가지표 중 하나입니다.
자세히 알아보기 전에 이 평가지표는 고전적인 언어 모델(자기회귀 또는 인과적 언어 모델이라고도 함)에만 적용되며 BERT와 같은 마스킹된 언어 모델에는 잘 적용하지 않습니다 (BERT는 <a href="../en/model_summary">summary of the models</a> 문서를 참고하세요).`,ps,o,Ys,ms,fa='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X = (x_0, x_1, \\dots, x_t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>',is,rs,ba='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>',os,cs,xa='<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>PPL</mtext><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">{</mo><mrow><mo>−</mo><mfrac><mn>1</mn><mi>t</mi></mfrac><munderover><mo>∑</mo><mi>i</mi><mi>t</mi></munderover><mi>log</mi><mo>⁡</mo><msub><mi>p</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mrow><mo>&lt;</mo><mi>i</mi></mrow></msub><mo stretchy="false">)</mo></mrow><mo fence="true">}</mo></mrow></mrow><annotation encoding="application/x-tex">\\text{PPL}(X) = \\exp \\left\\{ {-\\frac{1}{t}\\sum_i^t \\log p_\\theta (x_i|x_{&lt;i}) } \\right\\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">PPL</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.0582em;vertical-align:-1.2777em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">t</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7806em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">&lt;</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1774em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">}</span></span></span></span></span></span></span>',hs,ys,Va='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>log</mi><mo>⁡</mo><msub><mi>p</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mrow><mo>&lt;</mo><mi>i</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\\log p_\\theta (x_i|x_{&lt;i})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">&lt;</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1774em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>',gs,Ms,_,ea=`직관적으로 말뭉치에서 지정된 토큰 집합을 균일하게 예측하는 모델의 능력에 대한 평가로 생각할 수 있습니다.
중요한 점은 토큰화 과정이 모델의 펄플렉서티에 직접적인 영향을 미치므로 서로 다른 모델을 비교할 때 항상 이를 고려해야 합니다.`,Us,Q,pa=`이는 데이터와 모델 예측 간의 cross-entropy 값에 지수를 취한 것과 동일합니다.
펄플렉서티와 문자당 비트 수(BPC) 및 데이터 압축과의 관계에 대해 더 직관적인 이해를 원하신다면 다음 글
<a href="https://thegradient.pub/understanding-evaluation-metrics-for-language-models/" rel="nofollow">fantastic blog post on The Gradient</a>을 확인하세요.`,ds,k,us,F,ma=`모델의 컨텍스트 크기가 정해져있지 않다면,
아래와 같이 시퀀스를 자동 회귀적으로 분해하고 각 단계에서 선행 하는 전체 시퀀스를 조건부 확률에 넣어 모델의 펄플렉서티를 계산할 것입니다.`,Cs,w,ia,ws,c,qs,j,ra="GPT-2",Ds,vs,Ja='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span>',fs,bs,Ta='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mrow><mo>&lt;</mo><mi>t</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p_\\theta(x_t|x_{&lt;t})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">&lt;</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1774em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>',xs,Vs,h,Ks,Js,_a='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>',Ts,_s,Qa='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">x_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>',Qs,ks,ka='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>',Fs,js,B,oa=`모델의 시퀀스에 대한 펄플렉서티를 계산할 때,
수월하지만 차선책은 시퀀스를 청크로 쪼개고 분해된 각 부분의 로그 우도 값을 독립적으로 합산하는 것입니다.`,Bs,v,ca,Rs,R,ha=`이 방법은 각 부분의 펄플렉서티를 한 번의 포워드 패스로 계산할 수 있어 빠르지만 일반적으로 더 높은(더 나쁜) PPL을 산출합니다.
왜냐하면 대부분의 예측 단계에서 모델의 컨텍스트가 적기 때문입니다.`,zs,z,ya=`대신, 고정 길이 모델의 PPL은 슬라이딩 윈도우 전략으로 평가해야 합니다.
이 전략에는 컨텍스트 윈도우을 반복적으로 슬라이딩해 모델이 각 예측을 수행할 때 더 많은 컨텍스트를 갖도록 하는 작업이 포함됩니다.`,Is,f,ga,Ns,I,Ma=`이는 시퀀스 확률의 실제 분해에 더 가까운 근사치이며 일반적으로 더 유리한 점수를 산출합니다.
단점은 말뭉치의 각 토큰에 대해 별도의 포워드 패스가 필요하다는 것입니다.
현실적으로 좋은 절충안은 한 번에 한 토큰씩 슬라이딩하는 것이 아니라 더 큰 간격으로 컨텍스트를 이동하는 스트라이드가 적용된 슬라이딩 윈도우을 사용하는 것입니다.
이렇게 하면 계산을 훨씬 더 빠르게 진행하면서도 모델에 각 단계에서 예측을 수행할 수 있는 긴 컨텍스트를 제공할 수 있습니다.`,Ss,N,Es,S,Ua="이제 GPT-2로 위의 과정을 시연해 보겠습니다.",Gs,E,Ps,G,da=`WikiText-2 데이터 세트를 가져오고 몇 가지 슬라이딩 윈도우 전략을 사용해 펄플렉서티를 계산해보겠습니다.
이 데이터 세트는 크기가 작고 포워드 패스 한 번만 수행하기 때문에 전체 데이터 세트를 메모리에 가져오고 인코딩할 수 있습니다.`,Zs,P,$s,Z,ua=`🤗 Transformers를 사용하면 모델의 <code>labels</code>로 <code>input_ids</code>를 전달해 각 토큰에 대한 평균 음의 우도 값을 손실로 반환할 수 있습니다.
하지만 슬라이딩 윈도우 방식을 사용하면 각 반복마다 모델에 전달하는 토큰이 겹칩니다.
컨텍스트로 처리하는 토큰에 대한 로그 우도 값이 손실에 포함되는 것을 원하지 않기 때문에 이러한 토큰의 <code>input_ids</code>를 <code>-100</code>으로 설정하여 무시할 수 있습니다.`,Ws,$,Ca=`다음은 스트라이드(stride)를 <code>512</code>로 사용한 예시입니다.
즉, 모델이 한 토큰의 조건부 우도 값을 계산할 때 컨텍스트에 최소한 512개의 토큰이 포함되어있다는 의미입니다 (해당 토큰 앞에 512개의 토큰이 있는 경우).`,Ls,W,Xs,L,wa=`스트라이드를 최대 입력 길이와 동일하게 설정하면 위에서 설명한 차선책인 비슬라이딩 윈도우 전략과 동일합니다.
일반적으로 스트라이드가 작을수록 모델이 각 예측을 할 때 더 많은 컨텍스트를 볼 수 있게 되어 펄플렉서티 값이 좋아집니다.`,Hs,X,va=`위의 계산을 토큰이 겹치지 않도록 <code>stride = 1024</code>로 설정하면 PPL은 <code>19.44</code>로 GPT-2 논문에서 보고된 <code>19.93</code>과 거의 동일합니다.
<code>stride = 512</code>로 슬라이딩 윈도우 전략을 사용하면 PPL은 <code>16.45</code>로 떨어집니다.
이는 더 좋은 점수일 뿐만 아니라 시퀀스 확률의 실제 자동 회귀 분해에 더 가까운 방식으로 계산됩니다.`,As,ss,Os;return V=new ta({props:{title:"고정 길이 모델의 펄플렉서티(Perplexity)",local:"perplexity-of-fixedlength-models",headingTag:"h1"}}),J=new Na({props:{classNames:"absolute z-10 right-0 top-0",options:[{label:"Mixed",value:"https://colab.research.google.com/github/huggingface/notebooks/blob/main/transformers_doc/ko/perplexity.ipynb"},{label:"PyTorch",value:"https://colab.research.google.com/github/huggingface/notebooks/blob/main/transformers_doc/ko/pytorch/perplexity.ipynb"},{label:"TensorFlow",value:"https://colab.research.google.com/github/huggingface/notebooks/blob/main/transformers_doc/ko/tensorflow/perplexity.ipynb"},{label:"Mixed",value:"https://studiolab.sagemaker.aws/import/github/huggingface/notebooks/blob/main/transformers_doc/ko/perplexity.ipynb"},{label:"PyTorch",value:"https://studiolab.sagemaker.aws/import/github/huggingface/notebooks/blob/main/transformers_doc/ko/pytorch/perplexity.ipynb"},{label:"TensorFlow",value:"https://studiolab.sagemaker.aws/import/github/huggingface/notebooks/blob/main/transformers_doc/ko/tensorflow/perplexity.ipynb"}]}}),k=new ta({props:{title:"고정 길이 모델의 펄플렉서티(PPL) 계산하기",local:"calculating-ppl-with-fixedlength-models",headingTag:"h2"}}),N=new ta({props:{title:"예제: 🤗 Transformers에서 GPT-2로 펄플렉서티(perplexity) 계산하기",local:"example-calculating-perplexity-with-gpt2-in-transformers",headingTag:"h2"}}),E=new aa({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMEdQVDJMTUhlYWRNb2RlbCUyQyUyMEdQVDJUb2tlbml6ZXJGYXN0JTBBJTBBZGV2aWNlJTIwJTNEJTIwJTIyY3VkYSUyMiUwQW1vZGVsX2lkJTIwJTNEJTIwJTIyb3BlbmFpLWNvbW11bml0eSUyRmdwdDItbGFyZ2UlMjIlMEFtb2RlbCUyMCUzRCUyMEdQVDJMTUhlYWRNb2RlbC5mcm9tX3ByZXRyYWluZWQobW9kZWxfaWQpLnRvKGRldmljZSklMEF0b2tlbml6ZXIlMjAlM0QlMjBHUFQyVG9rZW5pemVyRmFzdC5mcm9tX3ByZXRyYWluZWQobW9kZWxfaWQp",highlighted:`<span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> GPT2LMHeadModel, GPT2TokenizerFast

device = <span class="hljs-string">&quot;cuda&quot;</span>
model_id = <span class="hljs-string">&quot;openai-community/gpt2-large&quot;</span>
model = GPT2LMHeadModel.from_pretrained(model_id).to(device)
tokenizer = GPT2TokenizerFast.from_pretrained(model_id)`,wrap:!1}}),P=new aa({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBJTBBdGVzdCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJ3aWtpdGV4dCUyMiUyQyUyMCUyMndpa2l0ZXh0LTItcmF3LXYxJTIyJTJDJTIwc3BsaXQlM0QlMjJ0ZXN0JTIyKSUwQWVuY29kaW5ncyUyMCUzRCUyMHRva2VuaXplciglMjIlNUNuJTVDbiUyMi5qb2luKHRlc3QlNUIlMjJ0ZXh0JTIyJTVEKSUyQyUyMHJldHVybl90ZW5zb3JzJTNEJTIycHQlMjIp",highlighted:`<span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset

test = load_dataset(<span class="hljs-string">&quot;wikitext&quot;</span>, <span class="hljs-string">&quot;wikitext-2-raw-v1&quot;</span>, split=<span class="hljs-string">&quot;test&quot;</span>)
encodings = tokenizer(<span class="hljs-string">&quot;\\n\\n&quot;</span>.join(test[<span class="hljs-string">&quot;text&quot;</span>]), return_tensors=<span class="hljs-string">&quot;pt&quot;</span>)`,wrap:!1}}),W=new aa({props:{code:"aW1wb3J0JTIwdG9yY2glMEFmcm9tJTIwdHFkbSUyMGltcG9ydCUyMHRxZG0lMEElMEFtYXhfbGVuZ3RoJTIwJTNEJTIwbW9kZWwuY29uZmlnLm5fcG9zaXRpb25zJTBBc3RyaWRlJTIwJTNEJTIwNTEyJTBBc2VxX2xlbiUyMCUzRCUyMGVuY29kaW5ncy5pbnB1dF9pZHMuc2l6ZSgxKSUwQSUwQW5sbHMlMjAlM0QlMjAlNUIlNUQlMEFwcmV2X2VuZF9sb2MlMjAlM0QlMjAwJTBBZm9yJTIwYmVnaW5fbG9jJTIwaW4lMjB0cWRtKHJhbmdlKDAlMkMlMjBzZXFfbGVuJTJDJTIwc3RyaWRlKSklM0ElMEElMjAlMjAlMjAlMjBlbmRfbG9jJTIwJTNEJTIwbWluKGJlZ2luX2xvYyUyMCUyQiUyMG1heF9sZW5ndGglMkMlMjBzZXFfbGVuKSUwQSUyMCUyMCUyMCUyMHRyZ19sZW4lMjAlM0QlMjBlbmRfbG9jJTIwLSUyMHByZXZfZW5kX2xvYyUyMCUyMCUyMyUyMCVFQiVBNyU4OCVFQyVBNyU4MCVFQiVBNyU4OSUyMCVFQiVBMyVBOCVFRCU5NCU4NCVFQyU5RCU5OCUyMCVFQyU4QSVBNCVFRCU4QSVCOCVFQiU5RCVCQyVFQyU5RCVCNCVFQiU5MyU5QyUyMCVFQSVCMCU5MiVFQSVCMyVCQyUyMCVFQiU4QiVBNCVFQiVBNSVCQyUyMCVFQyU4OCU5OCUyMCVFQyU5RSU4OCVFQyU5RCU4QyUwQSUyMCUyMCUyMCUyMGlucHV0X2lkcyUyMCUzRCUyMGVuY29kaW5ncy5pbnB1dF9pZHMlNUIlM0ElMkMlMjBiZWdpbl9sb2MlM0FlbmRfbG9jJTVELnRvKGRldmljZSklMEElMjAlMjAlMjAlMjB0YXJnZXRfaWRzJTIwJTNEJTIwaW5wdXRfaWRzLmNsb25lKCklMEElMjAlMjAlMjAlMjB0YXJnZXRfaWRzJTVCJTNBJTJDJTIwJTNBLXRyZ19sZW4lNUQlMjAlM0QlMjAtMTAwJTBBJTBBJTIwJTIwJTIwJTIwd2l0aCUyMHRvcmNoLm5vX2dyYWQoKSUzQSUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMG91dHB1dHMlMjAlM0QlMjBtb2RlbChpbnB1dF9pZHMlMkMlMjBsYWJlbHMlM0R0YXJnZXRfaWRzKSUwQSUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMyUyMCVFQyU4NiU5MCVFQyU4QiVBNCVFQyU5RCU4MCUyMCVFQiVBQSVBOCVFQiU5MyVBMCUyMCVFQyU5QyVBMCVFRCU5QSVBOCVFRCU5NSU5QyUyMCVFQiVBMCU4OCVFQyU5RCVCNCVFQiVCOCU5NCVFQyU5NyU5MCUyMCVFQiU4QyU4MCVFRCU5NSU5QyUyMCVFRCU4RiU4OSVFQSVCNyVBMCVFQSVCMCU5MiVFQyU5RCU4NCUyMCVFQSVCNSVBQyVFRCU5NSU5OCVFQiU4QSU5NCUyMCVFQSVCNSU5MCVFQyVCMCVBOCUyMCVFQyU5NyU5NCVFRCU4QSVCOCVFQiVBMSU5QyVFRCU5NCVCQyhjcm9zcyUyMGVudHJvcHkpJUVCJUExJTlDJTIwJUVBJUIzJTg0JUVDJTgyJUIwJUVCJTkwJUE5JUVCJThCJTg4JUVCJThCJUE0LiUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMyUyMCVFQiU4MiU5OCVFQyU5RCVCNCVFQiVCOCU4QyUyMCVFQiVCMiVBMCVFQyU5RCVCNCVFQyVBNyU4MCVFQyU5NSU4OCUyMCVFQiVBQSVBOCVFQiU4RCVCOCVFQyU5RCU4MCUyMCVFQiU4MiVCNCVFQiVCNiU4MCVFQyVBMCU4MSVFQyU5QyVCQyVFQiVBMSU5QyUyMCVFQiVBMCU4OCVFQyU5RCVCNCVFQiVCOCU5NCVFQyU5RCU4NCUyMCVFQyU5OSVCQyVFQyVBQSVCRCVFQyU5QyVCQyVFQiVBMSU5QyUyMDElRUElQjAlOUMlRUMlOTQlQTklMjAlRUIlQjAlODAlRUElQjglQjAlMjAlRUIlOTUlOEMlRUIlQUMlQjglRUMlOTclOTAlMkMlMjAoJUVEJTgzJTgwJUVDJUJDJTkzJTIwLSUyMDEpJUVBJUIwJTlDJTIwJUVCJUE3JThDJUVEJTgxJUJDJUVDJTlEJTk4JTIwJUVCJUEwJTg4JUVDJTlEJUI0JUVCJUI4JTk0JUVDJTk3JTkwJTIwJUVCJThDJTgwJUVEJTk1JUI0JTIwJUVDJTg2JTkwJUVDJThCJUE0JUVDJTlEJTg0JTIwJUVBJUIzJTg0JUVDJTgyJUIwJUVEJTk1JUE5JUVCJThCJTg4JUVCJThCJUE0LiUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMG5lZ19sb2dfbGlrZWxpaG9vZCUyMCUzRCUyMG91dHB1dHMubG9zcyUwQSUwQSUyMCUyMCUyMCUyMG5sbHMuYXBwZW5kKG5lZ19sb2dfbGlrZWxpaG9vZCklMEElMEElMjAlMjAlMjAlMjBwcmV2X2VuZF9sb2MlMjAlM0QlMjBlbmRfbG9jJTBBJTIwJTIwJTIwJTIwaWYlMjBlbmRfbG9jJTIwJTNEJTNEJTIwc2VxX2xlbiUzQSUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMGJyZWFrJTBBJTBBcHBsJTIwJTNEJTIwdG9yY2guZXhwKHRvcmNoLnN0YWNrKG5sbHMpLm1lYW4oKSk=",highlighted:`<span class="hljs-keyword">import</span> torch
<span class="hljs-keyword">from</span> tqdm <span class="hljs-keyword">import</span> tqdm

max_length = model.config.n_positions
stride = <span class="hljs-number">512</span>
seq_len = encodings.input_ids.size(<span class="hljs-number">1</span>)

nlls = []
prev_end_loc = <span class="hljs-number">0</span>
<span class="hljs-keyword">for</span> begin_loc <span class="hljs-keyword">in</span> tqdm(<span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, seq_len, stride)):
    end_loc = <span class="hljs-built_in">min</span>(begin_loc + max_length, seq_len)
    trg_len = end_loc - prev_end_loc  <span class="hljs-comment"># 마지막 루프의 스트라이드 값과 다를 수 있음</span>
    input_ids = encodings.input_ids[:, begin_loc:end_loc].to(device)
    target_ids = input_ids.clone()
    target_ids[:, :-trg_len] = -<span class="hljs-number">100</span>

    <span class="hljs-keyword">with</span> torch.no_grad():
        outputs = model(input_ids, labels=target_ids)

        <span class="hljs-comment"># 손실은 모든 유효한 레이블에 대한 평균값을 구하는 교차 엔트로피(cross entropy)로 계산됩니다.</span>
        <span class="hljs-comment"># 나이브 베이지안 모델은 내부적으로 레이블을 왼쪽으로 1개씩 밀기 때문에, (타켓 - 1)개 만큼의 레이블에 대해 손실을 계산합니다.</span>
        neg_log_likelihood = outputs.loss

    nlls.append(neg_log_likelihood)

    prev_end_loc = end_loc
    <span class="hljs-keyword">if</span> end_loc == seq_len:
        <span class="hljs-keyword">break</span>

ppl = torch.exp(torch.stack(nlls).mean())`,wrap:!1}}),{c(){d=p("meta"),ts=l(),K=p("p"),ns=l(),H(V.$$.fragment),ls=l(),H(J.$$.fragment),es=l(),T=p("p"),T.innerHTML=la,ps=l(),o=p("p"),Ys=y(`펄플렉서티는 시퀀스의 음의 로그 우도(negative log-likelihood, NLL) 값의 평균에 지수(exponentiate)를 취한 값으로 정의됩니다.
토큰화된 시퀀스`),ms=new u(!1),is=y(" 가 있을 때,"),rs=new u(!1),os=y(` 의 펄플렉서티는 아래 수식과 같이 구할 수 있습니다.
`),cs=new u(!1),hs=l(),ys=new u(!1),gs=y(" 는 모델에 i번째 이전까지 토큰이 주어졌을 때 i번째 토큰의 로그 우도값입니다."),Ms=l(),_=p("p"),_.textContent=ea,Us=l(),Q=p("p"),Q.innerHTML=pa,ds=l(),H(k.$$.fragment),us=l(),F=p("p"),F.textContent=ma,Cs=l(),w=p("img"),ws=l(),c=p("p"),qs=y(`그러나 모델의 근사치를 구할 때는 일반적으로 모델이 처리할 수 있는 토큰 수에 제한이 있습니다.
예를 들어, 가장 큰 버전의 `),j=p("a"),j.textContent=ra,Ds=y(`는 토큰의 길이가 1024로 고정되어 있습니다.
따라서`),vs=new u(!1),fs=y(" 가 1024보다 큰 경우에"),bs=new u(!1),xs=y(" 을 계산할 수 없습니다."),Vs=l(),h=p("p"),Ks=y(`대신 시퀀스는 일반적으로 모델의 최대 입력 크기와 동일한 길이는 가지는 부분 시퀀스로 쪼갭니다.
만약 모델의 최대 입력 길이가`),Js=new u(!1),Ts=y(` 라면,
토큰`),_s=new u(!1),Qs=y(" 의 우도 값을 계산할 때 이전 토큰을 모두 사용하지 않고,"),ks=new u(!1),Fs=y(" 토큰까지 사용해 대략적인 우도 값을 추정합니다."),js=l(),B=p("p"),B.textContent=oa,Bs=l(),v=p("img"),Rs=l(),R=p("p"),R.textContent=ha,zs=l(),z=p("p"),z.textContent=ya,Is=l(),f=p("img"),Ns=l(),I=p("p"),I.textContent=Ma,Ss=l(),H(N.$$.fragment),Es=l(),S=p("p"),S.textContent=Ua,Gs=l(),H(E.$$.fragment),Ps=l(),G=p("p"),G.textContent=da,Zs=l(),H(P.$$.fragment),$s=l(),Z=p("p"),Z.innerHTML=ua,Ws=l(),$=p("p"),$.innerHTML=Ca,Ls=l(),H(W.$$.fragment),Xs=l(),L=p("p"),L.textContent=wa,Hs=l(),X=p("p"),X.innerHTML=va,As=l(),ss=p("p"),this.h()},l(s){const a=Ia("svelte-u9bgzb",document.head);d=m(a,"META",{name:!0,content:!0}),a.forEach(t),ts=e(s),K=m(s,"P",{}),as(K).forEach(t),ns=e(s),A(V.$$.fragment,s),ls=e(s),A(J.$$.fragment,s),es=e(s),T=m(s,"P",{"data-svelte-h":!0}),i(T)!=="svelte-11w5q0v"&&(T.innerHTML=la),ps=e(s),o=m(s,"P",{});var U=as(o);Ys=g(U,`펄플렉서티는 시퀀스의 음의 로그 우도(negative log-likelihood, NLL) 값의 평균에 지수(exponentiate)를 취한 값으로 정의됩니다.
토큰화된 시퀀스`),ms=C(U,!1),is=g(U," 가 있을 때,"),rs=C(U,!1),os=g(U,` 의 펄플렉서티는 아래 수식과 같이 구할 수 있습니다.
`),cs=C(U,!1),hs=e(U),ys=C(U,!1),gs=g(U," 는 모델에 i번째 이전까지 토큰이 주어졌을 때 i번째 토큰의 로그 우도값입니다."),U.forEach(t),Ms=e(s),_=m(s,"P",{"data-svelte-h":!0}),i(_)!=="svelte-1b4v3xq"&&(_.textContent=ea),Us=e(s),Q=m(s,"P",{"data-svelte-h":!0}),i(Q)!=="svelte-33m9h2"&&(Q.innerHTML=pa),ds=e(s),A(k.$$.fragment,s),us=e(s),F=m(s,"P",{"data-svelte-h":!0}),i(F)!=="svelte-1sg414w"&&(F.textContent=ma),Cs=e(s),w=m(s,"IMG",{width:!0,alt:!0,src:!0}),ws=e(s),c=m(s,"P",{});var b=as(c);qs=g(b,`그러나 모델의 근사치를 구할 때는 일반적으로 모델이 처리할 수 있는 토큰 수에 제한이 있습니다.
예를 들어, 가장 큰 버전의 `),j=m(b,"A",{href:!0,"data-svelte-h":!0}),i(j)!=="svelte-1kdeo4m"&&(j.textContent=ra),Ds=g(b,`는 토큰의 길이가 1024로 고정되어 있습니다.
따라서`),vs=C(b,!1),fs=g(b," 가 1024보다 큰 경우에"),bs=C(b,!1),xs=g(b," 을 계산할 수 없습니다."),b.forEach(t),Vs=e(s),h=m(s,"P",{});var x=as(h);Ks=g(x,`대신 시퀀스는 일반적으로 모델의 최대 입력 크기와 동일한 길이는 가지는 부분 시퀀스로 쪼갭니다.
만약 모델의 최대 입력 길이가`),Js=C(x,!1),Ts=g(x,` 라면,
토큰`),_s=C(x,!1),Qs=g(x," 의 우도 값을 계산할 때 이전 토큰을 모두 사용하지 않고,"),ks=C(x,!1),Fs=g(x," 토큰까지 사용해 대략적인 우도 값을 추정합니다."),x.forEach(t),js=e(s),B=m(s,"P",{"data-svelte-h":!0}),i(B)!=="svelte-p30g18"&&(B.textContent=oa),Bs=e(s),v=m(s,"IMG",{width:!0,alt:!0,src:!0}),Rs=e(s),R=m(s,"P",{"data-svelte-h":!0}),i(R)!=="svelte-1b7o98p"&&(R.textContent=ha),zs=e(s),z=m(s,"P",{"data-svelte-h":!0}),i(z)!=="svelte-10v5nla"&&(z.textContent=ya),Is=e(s),f=m(s,"IMG",{width:!0,alt:!0,src:!0}),Ns=e(s),I=m(s,"P",{"data-svelte-h":!0}),i(I)!=="svelte-1bx3afe"&&(I.textContent=Ma),Ss=e(s),A(N.$$.fragment,s),Es=e(s),S=m(s,"P",{"data-svelte-h":!0}),i(S)!=="svelte-1scr742"&&(S.textContent=Ua),Gs=e(s),A(E.$$.fragment,s),Ps=e(s),G=m(s,"P",{"data-svelte-h":!0}),i(G)!=="svelte-g326s0"&&(G.textContent=da),Zs=e(s),A(P.$$.fragment,s),$s=e(s),Z=m(s,"P",{"data-svelte-h":!0}),i(Z)!=="svelte-aa9p9w"&&(Z.innerHTML=ua),Ws=e(s),$=m(s,"P",{"data-svelte-h":!0}),i($)!=="svelte-bou0a7"&&($.innerHTML=Ca),Ls=e(s),A(W.$$.fragment,s),Xs=e(s),L=m(s,"P",{"data-svelte-h":!0}),i(L)!=="svelte-1ro3gyl"&&(L.textContent=wa),Hs=e(s),X=m(s,"P",{"data-svelte-h":!0}),i(X)!=="svelte-1cfqojp"&&(X.innerHTML=va),As=e(s),ss=m(s,"P",{}),as(ss).forEach(t),this.h()},h(){M(d,"name","hf:doc:metadata"),M(d,"content",Ea),ms.a=is,rs.a=os,cs.a=hs,ys.a=gs,M(w,"width","600"),M(w,"alt","Full decomposition of a sequence with unlimited context length"),sa(w.src,ia="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/ppl_full.gif")||M(w,"src",ia),M(j,"href","model_doc/gpt2"),vs.a=fs,bs.a=xs,Js.a=Ts,_s.a=Qs,ks.a=Fs,M(v,"width","600"),M(v,"alt","Suboptimal PPL not taking advantage of full available context"),sa(v.src,ca="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/ppl_chunked.gif")||M(v,"src",ca),M(f,"width","600"),M(f,"alt","Sliding window PPL taking advantage of all available context"),sa(f.src,ga="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/ppl_sliding.gif")||M(f,"src",ga)},m(s,a){r(document.head,d),n(s,ts,a),n(s,K,a),n(s,ns,a),O(V,s,a),n(s,ls,a),O(J,s,a),n(s,es,a),n(s,T,a),n(s,ps,a),n(s,o,a),r(o,Ys),ms.m(fa,o),r(o,is),rs.m(ba,o),r(o,os),cs.m(xa,o),r(o,hs),ys.m(Va,o),r(o,gs),n(s,Ms,a),n(s,_,a),n(s,Us,a),n(s,Q,a),n(s,ds,a),O(k,s,a),n(s,us,a),n(s,F,a),n(s,Cs,a),n(s,w,a),n(s,ws,a),n(s,c,a),r(c,qs),r(c,j),r(c,Ds),vs.m(Ja,c),r(c,fs),bs.m(Ta,c),r(c,xs),n(s,Vs,a),n(s,h,a),r(h,Ks),Js.m(_a,h),r(h,Ts),_s.m(Qa,h),r(h,Qs),ks.m(ka,h),r(h,Fs),n(s,js,a),n(s,B,a),n(s,Bs,a),n(s,v,a),n(s,Rs,a),n(s,R,a),n(s,zs,a),n(s,z,a),n(s,Is,a),n(s,f,a),n(s,Ns,a),n(s,I,a),n(s,Ss,a),O(N,s,a),n(s,Es,a),n(s,S,a),n(s,Gs,a),O(E,s,a),n(s,Ps,a),n(s,G,a),n(s,Zs,a),O(P,s,a),n(s,$s,a),n(s,Z,a),n(s,Ws,a),n(s,$,a),n(s,Ls,a),O(W,s,a),n(s,Xs,a),n(s,L,a),n(s,Hs,a),n(s,X,a),n(s,As,a),n(s,ss,a),Os=!0},p:ja,i(s){Os||(Y(V.$$.fragment,s),Y(J.$$.fragment,s),Y(k.$$.fragment,s),Y(N.$$.fragment,s),Y(E.$$.fragment,s),Y(P.$$.fragment,s),Y(W.$$.fragment,s),Os=!0)},o(s){q(V.$$.fragment,s),q(J.$$.fragment,s),q(k.$$.fragment,s),q(N.$$.fragment,s),q(E.$$.fragment,s),q(P.$$.fragment,s),q(W.$$.fragment,s),Os=!1},d(s){s&&(t(ts),t(K),t(ns),t(ls),t(es),t(T),t(ps),t(o),t(Ms),t(_),t(Us),t(Q),t(ds),t(us),t(F),t(Cs),t(w),t(ws),t(c),t(Vs),t(h),t(js),t(B),t(Bs),t(v),t(Rs),t(R),t(zs),t(z),t(Is),t(f),t(Ns),t(I),t(Ss),t(Es),t(S),t(Gs),t(Ps),t(G),t(Zs),t($s),t(Z),t(Ws),t($),t(Ls),t(Xs),t(L),t(Hs),t(X),t(As),t(ss)),t(d),D(V,s),D(J,s),D(k,s),D(N,s),D(E,s),D(P,s),D(W,s)}}}const Ea='{"title":"고정 길이 모델의 펄플렉서티(Perplexity)","local":"perplexity-of-fixedlength-models","sections":[{"title":"고정 길이 모델의 펄플렉서티(PPL) 계산하기","local":"calculating-ppl-with-fixedlength-models","sections":[],"depth":2},{"title":"예제: 🤗 Transformers에서 GPT-2로 펄플렉서티(perplexity) 계산하기","local":"example-calculating-perplexity-with-gpt2-in-transformers","sections":[],"depth":2}],"depth":1}';function Ga(na){return Ba(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Xa extends Ra{constructor(d){super(),za(this,d,Ga,Sa,Fa,{})}}export{Xa as component};
