import{s as As,n as Us,o as Gs}from"../chunks/scheduler.56730f09.js";import{S as Ks,i as Qs,g as r,s as m,r as C,m as h,H as d,A as Bs,h as c,f as t,c as p,j as xs,u as P,x as E,n as o,B as u,k as fs,y as i,a as e,v as j,d as S,t as q,w as R}from"../chunks/index.1f144517.js";import{H as A}from"../chunks/Heading.57d46534.js";function Ds(ys){let g,U,H,G,f,K,w,_s=`대부분의 트랜스포머 모델은 정방행렬인 전체 어텐션을 사용합니다.
하지만 이는 긴 텍스트를 다룰 때는 큰 계산 병목 현상을 유발할 수 있습니다.
<code>Longformer</code>와 <code>Reformer</code>는 훈련 속도를 높이기 위해 어텐션 행렬의 희소 버전을 사용하여 효율을 높이려는 모델입니다.`,Q,x,B,y,bs=`<a href="model_doc/reformer">Reformer</a>는 LSH(Locality Sensitive Hashing) 어텐션을 사용합니다. softmax(QK^t)에서는 행렬 QK^t의 (softmax 차원에서) 가장 큰 요소들만 유용한 기여를 할 것입니다.
따라서 각각의 쿼리 q에 대해, q와 가까운 키 k만 고려할 수 있습니다. 해시 함수는 q와 k가 가까운지 여부를 결정하는 데 사용됩니다.
어텐션 마스크는 현재 토큰을 마스킹하여 변경됩니다. 이 때 첫 번째 위치의 토큰은 제외합니다. 왜냐하면 쿼리와 키가 동일한 값을 갖게 되기 때문입니다(서로 매우 유사함).
해시는 약간의 무작위성을 가질 수 있으므로, 실제로는 여러 개의 해시 함수가 사용되고 (<code>n_rounds</code> 매개변수에 의해 결정됨) 그 후에 평균값을 취하게 됩니다.`,D,_,F,b,$s=`<a href="model_doc/longformer">Longformer</a>는 지역 어텐션을 사용합니다. 종종 특정 토큰에 대해 지역 컨텍스트(예: 왼쪽과 오른쪽에 있는 두 개의 토큰은 무엇인가요?)만으로도 작업을 수행하는데 충분합니다.
또한 작은 창(window)을 가진 어텐션 레이어를 쌓음으로써 마지막 레이어는 창 내의 토큰뿐만 아니라 더 많은 수의 토큰에 대한 수용 영역(receptive field)을 갖게 되어 전체 문장의 표현을 구축할 수 있습니다.`,I,$,Ms=`사전에 선택된 일부 입력 토큰들은 전역 어텐션을 받습니다. 이 몇 개의 토큰에 대해서는 어텐션 행렬이 모든 토큰에 접근할 수 있으며, 이 과정은 대칭적으로 이루어집니다.
다른 모든 토큰들은 로컬 창 내의 토큰들에 더해 해당 특정 토큰들에도 접근할 수 있습니다. 이는 논문의 Figure 2d에서 나타나며, 아래에 샘플 어텐션 마스크가 제시되어 있습니다:`,V,v,ks='<img scale="50 %" align="center" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/local_attention_mask.png"/>',J,M,zs="적은 파라미터의 어텐션 행렬을 사용하면 모델이 더 큰 시퀀스 입력 길이를 가질 수 있습니다.",N,k,O,z,W,n,L,Ls="Reformer",ws,X,Es='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mo>×</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">l \\times d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span></span></span></span>',Y,Z,Hs='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span>',ss,as,Ts='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span></span></span></span>',ts,ns,Cs='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>l</mi><mn>1</mn></msub><mo>×</mo><msub><mi>d</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">l_{1} \\times d_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>',es,ls,Ps='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>l</mi><mn>2</mn></msub><mo>×</mo><msub><mi>d</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">l_{2} \\times d_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>',ms,ps,js='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>l</mi><mn>1</mn></msub><mo>×</mo><msub><mi>l</mi><mn>2</mn></msub><mo>=</mo><mi>l</mi></mrow><annotation encoding="application/x-tex">l_{1} \\times l_{2} = l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span>',is,rs,Ss='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mn>1</mn></msub><mo>+</mo><msub><mi>d</mi><mn>2</mn></msub><mo>=</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">d_{1} + d_{2} = d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span></span></span></span>',cs,hs,qs='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi><mi mathvariant="normal">%</mi><mi>l</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">j \\% l1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9444em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mord">%</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord">1</span></span></span></span>',os,gs,Rs='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mi>l</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">j // l1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mord">//</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord">1</span></span></span></span>',ds,us,T,vs;return f=new A({props:{title:"어텐션 메커니즘",local:"attention_mechanisms",headingTag:"h1"}}),x=new A({props:{title:"LSH 어텐션",local:"lsh_attention",headingTag:"h2"}}),_=new A({props:{title:"지역 어텐션",local:"local_attention",headingTag:"h2"}}),k=new A({props:{title:"다른 방법들",local:"other_tricks",headingTag:"h2"}}),z=new A({props:{title:"축별 위치 인코딩",local:"axial_positional_encodings",headingTag:"h3"}}),{c(){g=r("meta"),U=m(),H=r("p"),G=m(),C(f.$$.fragment),K=m(),w=r("p"),w.innerHTML=_s,Q=m(),C(x.$$.fragment),B=m(),y=r("p"),y.innerHTML=bs,D=m(),C(_.$$.fragment),F=m(),b=r("p"),b.innerHTML=$s,I=m(),$=r("p"),$.textContent=Ms,V=m(),v=r("div"),v.innerHTML=ks,J=m(),M=r("p"),M.textContent=zs,N=m(),C(k.$$.fragment),O=m(),C(z.$$.fragment),W=m(),n=r("p"),L=r("a"),L.textContent=Ls,ws=h("는 축별 위치 인코딩(axial positional encodings)을 사용합니다. 기존의 트랜스포머 모델에서는 위치 인코딩 행렬 E는 크기가"),X=new d(!1),Y=h(`인 행렬이며,
여기서`),Z=new d(!1),ss=h("은 시퀀스 길이(sequence length)이고"),as=new d(!1),ts=h(`는 숨겨진 상태(hidden state)의 차원입니다. 매우 긴 텍스트의 경우, 이 행렬은 매우 크며 GPU 상에서 공간을 많이 차지할 수 있습니다.
이를 완화하기 위해, 축별 위치 인코딩은 큰 행렬 E를 두 개의 작은 행렬 E1과 E2로 분해합니다. 이때 E1의 크기는`),ns=new d(!1),es=h("이고, E2의 크기는"),ls=new d(!1),ms=h(`입니다.
이때`),ps=new d(!1),is=h("이고"),rs=new d(!1),cs=h("(길이에 대한 곱셈 연산을 사용하면 훨씬 작아집니다). E의 시간 단계 j에 대한 임베딩은 E1에서 시간 단계"),hs=new d(!1),os=h("의 임베딩과 E2에서 시간 단계 "),gs=new d(!1),ds=h("의 임베딩을 연결하여 얻습니다."),us=m(),T=r("p"),this.h()},l(s){const a=Bs("svelte-u9bgzb",document.head);g=c(a,"META",{name:!0,content:!0}),a.forEach(t),U=p(s),H=c(s,"P",{}),xs(H).forEach(t),G=p(s),P(f.$$.fragment,s),K=p(s),w=c(s,"P",{"data-svelte-h":!0}),E(w)!=="svelte-jt294z"&&(w.innerHTML=_s),Q=p(s),P(x.$$.fragment,s),B=p(s),y=c(s,"P",{"data-svelte-h":!0}),E(y)!=="svelte-6wbt6"&&(y.innerHTML=bs),D=p(s),P(_.$$.fragment,s),F=p(s),b=c(s,"P",{"data-svelte-h":!0}),E(b)!=="svelte-1195vp3"&&(b.innerHTML=$s),I=p(s),$=c(s,"P",{"data-svelte-h":!0}),E($)!=="svelte-rbnmsa"&&($.textContent=Ms),V=p(s),v=c(s,"DIV",{class:!0,"data-svelte-h":!0}),E(v)!=="svelte-d4kpls"&&(v.innerHTML=ks),J=p(s),M=c(s,"P",{"data-svelte-h":!0}),E(M)!=="svelte-1jaot4s"&&(M.textContent=zs),N=p(s),P(k.$$.fragment,s),O=p(s),P(z.$$.fragment,s),W=p(s),n=c(s,"P",{});var l=xs(n);L=c(l,"A",{href:!0,"data-svelte-h":!0}),E(L)!=="svelte-zf8r8v"&&(L.textContent=Ls),ws=o(l,"는 축별 위치 인코딩(axial positional encodings)을 사용합니다. 기존의 트랜스포머 모델에서는 위치 인코딩 행렬 E는 크기가"),X=u(l,!1),Y=o(l,`인 행렬이며,
여기서`),Z=u(l,!1),ss=o(l,"은 시퀀스 길이(sequence length)이고"),as=u(l,!1),ts=o(l,`는 숨겨진 상태(hidden state)의 차원입니다. 매우 긴 텍스트의 경우, 이 행렬은 매우 크며 GPU 상에서 공간을 많이 차지할 수 있습니다.
이를 완화하기 위해, 축별 위치 인코딩은 큰 행렬 E를 두 개의 작은 행렬 E1과 E2로 분해합니다. 이때 E1의 크기는`),ns=u(l,!1),es=o(l,"이고, E2의 크기는"),ls=u(l,!1),ms=o(l,`입니다.
이때`),ps=u(l,!1),is=o(l,"이고"),rs=u(l,!1),cs=o(l,"(길이에 대한 곱셈 연산을 사용하면 훨씬 작아집니다). E의 시간 단계 j에 대한 임베딩은 E1에서 시간 단계"),hs=u(l,!1),os=o(l,"의 임베딩과 E2에서 시간 단계 "),gs=u(l,!1),ds=o(l,"의 임베딩을 연결하여 얻습니다."),l.forEach(t),us=p(s),T=c(s,"P",{}),xs(T).forEach(t),this.h()},h(){fs(g,"name","hf:doc:metadata"),fs(g,"content",Fs),fs(v,"class","flex justify-center"),fs(L,"href","model_doc/reformer"),X.a=Y,Z.a=ss,as.a=ts,ns.a=es,ls.a=ms,ps.a=is,rs.a=cs,hs.a=os,gs.a=ds},m(s,a){i(document.head,g),e(s,U,a),e(s,H,a),e(s,G,a),j(f,s,a),e(s,K,a),e(s,w,a),e(s,Q,a),j(x,s,a),e(s,B,a),e(s,y,a),e(s,D,a),j(_,s,a),e(s,F,a),e(s,b,a),e(s,I,a),e(s,$,a),e(s,V,a),e(s,v,a),e(s,J,a),e(s,M,a),e(s,N,a),j(k,s,a),e(s,O,a),j(z,s,a),e(s,W,a),e(s,n,a),i(n,L),i(n,ws),X.m(Es,n),i(n,Y),Z.m(Hs,n),i(n,ss),as.m(Ts,n),i(n,ts),ns.m(Cs,n),i(n,es),ls.m(Ps,n),i(n,ms),ps.m(js,n),i(n,is),rs.m(Ss,n),i(n,cs),hs.m(qs,n),i(n,os),gs.m(Rs,n),i(n,ds),e(s,us,a),e(s,T,a),vs=!0},p:Us,i(s){vs||(S(f.$$.fragment,s),S(x.$$.fragment,s),S(_.$$.fragment,s),S(k.$$.fragment,s),S(z.$$.fragment,s),vs=!0)},o(s){q(f.$$.fragment,s),q(x.$$.fragment,s),q(_.$$.fragment,s),q(k.$$.fragment,s),q(z.$$.fragment,s),vs=!1},d(s){s&&(t(U),t(H),t(G),t(K),t(w),t(Q),t(B),t(y),t(D),t(F),t(b),t(I),t($),t(V),t(v),t(J),t(M),t(N),t(O),t(W),t(n),t(us),t(T)),t(g),R(f,s),R(x,s),R(_,s),R(k,s),R(z,s)}}}const Fs='{"title":"어텐션 메커니즘","local":"attention_mechanisms","sections":[{"title":"LSH 어텐션","local":"lsh_attention","sections":[],"depth":2},{"title":"지역 어텐션","local":"local_attention","sections":[],"depth":2},{"title":"다른 방법들","local":"other_tricks","sections":[{"title":"축별 위치 인코딩","local":"axial_positional_encodings","sections":[],"depth":3}],"depth":2}],"depth":1}';function Is(ys){return Gs(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Os extends Ks{constructor(g){super(),Qs(this,g,Is,Ds,As,{})}}export{Os as component};
