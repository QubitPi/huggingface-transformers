import{s as ie,o as re,n as me}from"../chunks/scheduler.9bc65507.js";import{S as pe,i as de,g as i,s,r as B,A as ue,h as r,f as a,c as o,j as ne,u as G,x as p,k as se,y as ge,a as l,v as R,d as W,t as I,w as X}from"../chunks/index.707bf1b6.js";import{T as ce}from"../chunks/Tip.c2ecdbf4.js";import{C as fe}from"../chunks/CodeBlock.54a9f38d.js";import{H as oe}from"../chunks/Heading.342b1fa6.js";function he(x){let n,u='Refer to <a href="t5">T5â€™s documentation page</a> for all API references, code examples, and notebooks. For more details regarding training and evaluation of the MADLAD-400, refer to the model card.';return{c(){n=i("p"),n.innerHTML=u},l(m){n=r(m,"P",{"data-svelte-h":!0}),p(n)!=="svelte-1r5ii45"&&(n.innerHTML=u)},m(m,_){l(m,n,_)},p:me,d(m){m&&a(n)}}}function Me(x){let n,u,m,_,g,L,c,j,f,N="MADLAD-400 models were released in the paper [MADLAD-400: A Multilingual And Document-Level Large Audited Dataset](MADLAD-400: A Multilingual And Document-Level Large Audited Dataset).",k,h,V="The abstract from the paper is the following:",D,M,Q=`<em>We introduce MADLAD-400, a manually audited, general domain 3T token monolingual dataset based on CommonCrawl, spanning 419 languages. We discuss
the limitations revealed by self-auditing MADLAD-400, and the role data auditing
had in the dataset creation process. We then train and release a 10.7B-parameter
multilingual machine translation model on 250 billion tokens covering over 450
languages using publicly available data, and find that it is competitive with models
that are significantly larger, and report the results on different domains. In addition, we train a 8B-parameter language model, and assess the results on few-shot
translation. We make the baseline models 1
available to the research community.</em>`,Z,b,Y='This model was added by <a href="https://huggingface.co/jbochi" rel="nofollow">Juarez Bochi</a>. The original checkpoints can be found <a href="https://github.com/google-research/google-research/tree/master/madlad_400" rel="nofollow">here</a>.',U,v,K="This is a machine translation model that supports many low-resource languages, and that is competitive with models that are significantly larger.",E,w,O="One can directly use MADLAD-400 weights without finetuning the model:",H,y,z,T,ee="Google has released the following variants:",F,$,te='<li><p><a href="https://huggingface.co/google/madlad400-3b-mt" rel="nofollow">google/madlad400-3b-mt</a></p></li> <li><p><a href="https://huggingface.co/google/madlad400-7b-mt" rel="nofollow">google/madlad400-7b-mt</a></p></li> <li><p><a href="https://huggingface.co/google/madlad400-7b-mt-bt" rel="nofollow">google/madlad400-7b-mt-bt</a></p></li> <li><p><a href="https://huggingface.co/google/madlad400-10b-mt" rel="nofollow">google/madlad400-10b-mt</a></p></li>',S,C,ae='The original checkpoints can be found <a href="https://github.com/google-research/google-research/tree/master/madlad_400" rel="nofollow">here</a>.',q,d,J,A,P;return g=new oe({props:{title:"MADLAD-400",local:"madlad-400",headingTag:"h1"}}),c=new oe({props:{title:"Overview",local:"overview",headingTag:"h2"}}),y=new fe({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMEF1dG9Nb2RlbEZvclNlcTJTZXFMTSUyQyUyMEF1dG9Ub2tlbml6ZXIlMEElMEFtb2RlbCUyMCUzRCUyMEF1dG9Nb2RlbEZvclNlcTJTZXFMTS5mcm9tX3ByZXRyYWluZWQoJTIyZ29vZ2xlJTJGbWFkbGFkNDAwLTNiLW10JTIyKSUwQXRva2VuaXplciUyMCUzRCUyMEF1dG9Ub2tlbml6ZXIuZnJvbV9wcmV0cmFpbmVkKCUyMmdvb2dsZSUyRm1hZGxhZDQwMC0zYi1tdCUyMiklMEElMEFpbnB1dHMlMjAlM0QlMjB0b2tlbml6ZXIoJTIyJTNDMnB0JTNFJTIwSSUyMGxvdmUlMjBwaXp6YSElMjIlMkMlMjByZXR1cm5fdGVuc29ycyUzRCUyMnB0JTIyKSUwQW91dHB1dHMlMjAlM0QlMjBtb2RlbC5nZW5lcmF0ZSgqKmlucHV0cyklMEFwcmludCh0b2tlbml6ZXIuYmF0Y2hfZGVjb2RlKG91dHB1dHMlMkMlMjBza2lwX3NwZWNpYWxfdG9rZW5zJTNEVHJ1ZSkp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoModelForSeq2SeqLM, AutoTokenizer

<span class="hljs-meta">&gt;&gt;&gt; </span>model = AutoModelForSeq2SeqLM.from_pretrained(<span class="hljs-string">&quot;google/madlad400-3b-mt&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer = AutoTokenizer.from_pretrained(<span class="hljs-string">&quot;google/madlad400-3b-mt&quot;</span>)

<span class="hljs-meta">&gt;&gt;&gt; </span>inputs = tokenizer(<span class="hljs-string">&quot;&lt;2pt&gt; I love pizza!&quot;</span>, return_tensors=<span class="hljs-string">&quot;pt&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>outputs = model.generate(**inputs)
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(tokenizer.batch_decode(outputs, skip_special_tokens=<span class="hljs-literal">True</span>))
[<span class="hljs-string">&#x27;Eu amo pizza!&#x27;</span>]`,wrap:!1}}),d=new ce({props:{$$slots:{default:[he]},$$scope:{ctx:x}}}),{c(){n=i("meta"),u=s(),m=i("p"),_=s(),B(g.$$.fragment),L=s(),B(c.$$.fragment),j=s(),f=i("p"),f.textContent=N,k=s(),h=i("p"),h.textContent=V,D=s(),M=i("p"),M.innerHTML=Q,Z=s(),b=i("p"),b.innerHTML=Y,U=s(),v=i("p"),v.textContent=K,E=s(),w=i("p"),w.textContent=O,H=s(),B(y.$$.fragment),z=s(),T=i("p"),T.textContent=ee,F=s(),$=i("ul"),$.innerHTML=te,S=s(),C=i("p"),C.innerHTML=ae,q=s(),B(d.$$.fragment),J=s(),A=i("p"),this.h()},l(e){const t=ue("svelte-u9bgzb",document.head);n=r(t,"META",{name:!0,content:!0}),t.forEach(a),u=o(e),m=r(e,"P",{}),ne(m).forEach(a),_=o(e),G(g.$$.fragment,e),L=o(e),G(c.$$.fragment,e),j=o(e),f=r(e,"P",{"data-svelte-h":!0}),p(f)!=="svelte-s429a9"&&(f.textContent=N),k=o(e),h=r(e,"P",{"data-svelte-h":!0}),p(h)!=="svelte-auuxi2"&&(h.textContent=V),D=o(e),M=r(e,"P",{"data-svelte-h":!0}),p(M)!=="svelte-44wcro"&&(M.innerHTML=Q),Z=o(e),b=r(e,"P",{"data-svelte-h":!0}),p(b)!=="svelte-1qcpk4i"&&(b.innerHTML=Y),U=o(e),v=r(e,"P",{"data-svelte-h":!0}),p(v)!=="svelte-1yvayop"&&(v.textContent=K),E=o(e),w=r(e,"P",{"data-svelte-h":!0}),p(w)!=="svelte-1iz0fs1"&&(w.textContent=O),H=o(e),G(y.$$.fragment,e),z=o(e),T=r(e,"P",{"data-svelte-h":!0}),p(T)!=="svelte-1p0jqca"&&(T.textContent=ee),F=o(e),$=r(e,"UL",{"data-svelte-h":!0}),p($)!=="svelte-1s9lf6e"&&($.innerHTML=te),S=o(e),C=r(e,"P",{"data-svelte-h":!0}),p(C)!=="svelte-ffgnqr"&&(C.innerHTML=ae),q=o(e),G(d.$$.fragment,e),J=o(e),A=r(e,"P",{}),ne(A).forEach(a),this.h()},h(){se(n,"name","hf:doc:metadata"),se(n,"content",be)},m(e,t){ge(document.head,n),l(e,u,t),l(e,m,t),l(e,_,t),R(g,e,t),l(e,L,t),R(c,e,t),l(e,j,t),l(e,f,t),l(e,k,t),l(e,h,t),l(e,D,t),l(e,M,t),l(e,Z,t),l(e,b,t),l(e,U,t),l(e,v,t),l(e,E,t),l(e,w,t),l(e,H,t),R(y,e,t),l(e,z,t),l(e,T,t),l(e,F,t),l(e,$,t),l(e,S,t),l(e,C,t),l(e,q,t),R(d,e,t),l(e,J,t),l(e,A,t),P=!0},p(e,[t]){const le={};t&2&&(le.$$scope={dirty:t,ctx:e}),d.$set(le)},i(e){P||(W(g.$$.fragment,e),W(c.$$.fragment,e),W(y.$$.fragment,e),W(d.$$.fragment,e),P=!0)},o(e){I(g.$$.fragment,e),I(c.$$.fragment,e),I(y.$$.fragment,e),I(d.$$.fragment,e),P=!1},d(e){e&&(a(u),a(m),a(_),a(L),a(j),a(f),a(k),a(h),a(D),a(M),a(Z),a(b),a(U),a(v),a(E),a(w),a(H),a(z),a(T),a(F),a($),a(S),a(C),a(q),a(J),a(A)),a(n),X(g,e),X(c,e),X(y,e),X(d,e)}}}const be='{"title":"MADLAD-400","local":"madlad-400","sections":[{"title":"Overview","local":"overview","sections":[],"depth":2}],"depth":1}';function ve(x){return re(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class _e extends pe{constructor(n){super(),de(this,n,ve,Me,ie,{})}}export{_e as component};
