import{s as Wo,c as Vo,u as qo,g as Ro,d as Go,o as Yo,n as Va}from"../chunks/scheduler.9bc65507.js";import{S as zo,i as Bo,r as p,u as g,v as h,d,t as f,w as u,g as s,m as No,s as r,h as o,j as v,n as Fo,f as n,c as a,k as $,a as c,y as t,o as Oo,A as Xo,x as i}from"../chunks/index.707bf1b6.js";import{T as Qo}from"../chunks/Tip.c2ecdbf4.js";import{D as C}from"../chunks/Docstring.17db21ae.js";import{C as Qa}from"../chunks/CodeBlock.54a9f38d.js";import{E as So}from"../chunks/ExampleCodeBlock.4f515aa9.js";import{H as Br}from"../chunks/Heading.342b1fa6.js";function Zo(I){let m,x,b,k,y;const _=I[1].default,M=Vo(_,I,I[2],null);return{c(){m=s("p"),x=No("Deprecated in "),b=No(I[0]),k=r(),M&&M.c(),this.h()},l(L){m=o(L,"P",{class:!0});var E=v(m);x=Fo(E,"Deprecated in "),b=Fo(E,I[0]),E.forEach(n),k=a(L),M&&M.l(L),this.h()},h(){$(m,"class","font-medium")},m(L,E){c(L,m,E),t(m,x),t(m,b),c(L,k,E),M&&M.m(L,E),y=!0},p(L,E){(!y||E&1)&&Oo(b,L[0]),M&&M.p&&(!y||E&4)&&qo(M,_,L,L[2],y?Go(_,L[2],E,null):Ro(L[2]),null)},i(L){y||(d(M,L),y=!0)},o(L){f(M,L),y=!1},d(L){L&&(n(m),n(k)),M&&M.d(L)}}}function Ko(I){let m,x;return m=new Qo({props:{warning:!0,$$slots:{default:[Zo]},$$scope:{ctx:I}}}),{c(){p(m.$$.fragment)},l(b){g(m.$$.fragment,b)},m(b,k){h(m,b,k),x=!0},p(b,[k]){const y={};k&5&&(y.$$scope={dirty:k,ctx:b}),m.$set(y)},i(b){x||(d(m.$$.fragment,b),x=!0)},o(b){f(m.$$.fragment,b),x=!1},d(b){u(m,b)}}}function el(I,m,x){let{$$slots:b={},$$scope:k}=m,{version:y}=m;return I.$$set=_=>{"version"in _&&x(0,y=_.version),"$$scope"in _&&x(2,k=_.$$scope)},[y,b,k]}class tl extends zo{constructor(m){super(),Bo(this,m,el,Ko,Wo,{version:0})}}function rl(I){let m,x="Setting <code>WANDB_LOG_MODEL</code> as <code>bool</code> will be deprecated in version 5 of ü§ó Transformers.";return{c(){m=s("p"),m.innerHTML=x},l(b){m=o(b,"P",{"data-svelte-h":!0}),i(m)!=="svelte-fxlq1n"&&(m.innerHTML=x)},m(b,k){c(b,m,k)},p:Va,d(b){b&&n(m)}}}function al(I){let m,x="Example:",b,k,y;return k=new Qa({props:{code:"JTIzJTIwTm90ZSUzQSUyMFRoaXMlMjBleGFtcGxlJTIwc2tpcHMlMjBvdmVyJTIwc29tZSUyMHNldHVwJTIwc3RlcHMlMjBmb3IlMjBicmV2aXR5LiUwQWZyb20lMjBmbHl0ZWtpdCUyMGltcG9ydCUyMGN1cnJlbnRfY29udGV4dCUyQyUyMHRhc2slMEElMEElMEElNDB0YXNrJTBBZGVmJTIwdHJhaW5faGZfdHJhbnNmb3JtZXIoKSUzQSUwQSUyMCUyMCUyMCUyMGNwJTIwJTNEJTIwY3VycmVudF9jb250ZXh0KCkuY2hlY2twb2ludCUwQSUyMCUyMCUyMCUyMHRyYWluZXIlMjAlM0QlMjBUcmFpbmVyKC4uLiUyQyUyMGNhbGxiYWNrcyUzRCU1QkZseXRlQ2FsbGJhY2soKSU1RCklMEElMjAlMjAlMjAlMjBvdXRwdXQlMjAlM0QlMjB0cmFpbmVyLnRyYWluKHJlc3VtZV9mcm9tX2NoZWNrcG9pbnQlM0RjcC5yZXN0b3JlKCkp",highlighted:`<span class="hljs-comment"># Note: This example skips over some setup steps for brevity.</span>
<span class="hljs-keyword">from</span> flytekit <span class="hljs-keyword">import</span> current_context, task


<span class="hljs-meta">@task</span>
<span class="hljs-keyword">def</span> <span class="hljs-title function_">train_hf_transformer</span>():
    cp = current_context().checkpoint
    trainer = Trainer(..., callbacks=[FlyteCallback()])
    output = trainer.train(resume_from_checkpoint=cp.restore())`,wrap:!1}}),{c(){m=s("p"),m.textContent=x,b=r(),p(k.$$.fragment)},l(_){m=o(_,"P",{"data-svelte-h":!0}),i(m)!=="svelte-11lpom8"&&(m.textContent=x),b=a(_),g(k.$$.fragment,_)},m(_,M){c(_,m,M),c(_,b,M),h(k,_,M),y=!0},p:Va,i(_){y||(d(k.$$.fragment,_),y=!0)},o(_){f(k.$$.fragment,_),y=!1},d(_){_&&(n(m),n(b)),u(k,_)}}}function nl(I){let m,x="Example:",b,k,y;return k=new Qa({props:{code:"Y2xhc3MlMjBQcmludGVyQ2FsbGJhY2soVHJhaW5lckNhbGxiYWNrKSUzQSUwQSUyMCUyMCUyMCUyMGRlZiUyMG9uX2xvZyhzZWxmJTJDJTIwYXJncyUyQyUyMHN0YXRlJTJDJTIwY29udHJvbCUyQyUyMGxvZ3MlM0ROb25lJTJDJTIwKiprd2FyZ3MpJTNBJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwXyUyMCUzRCUyMGxvZ3MucG9wKCUyMnRvdGFsX2Zsb3MlMjIlMkMlMjBOb25lKSUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMGlmJTIwc3RhdGUuaXNfbG9jYWxfcHJvY2Vzc196ZXJvJTNBJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwcHJpbnQobG9ncyk=",highlighted:`<span class="hljs-keyword">class</span> <span class="hljs-title class_">PrinterCallback</span>(<span class="hljs-title class_ inherited__">TrainerCallback</span>):
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">on_log</span>(<span class="hljs-params">self, args, state, control, logs=<span class="hljs-literal">None</span>, **kwargs</span>):
        _ = logs.pop(<span class="hljs-string">&quot;total_flos&quot;</span>, <span class="hljs-literal">None</span>)
        <span class="hljs-keyword">if</span> state.is_local_process_zero:
            <span class="hljs-built_in">print</span>(logs)`,wrap:!1}}),{c(){m=s("p"),m.textContent=x,b=r(),p(k.$$.fragment)},l(_){m=o(_,"P",{"data-svelte-h":!0}),i(m)!=="svelte-11lpom8"&&(m.textContent=x),b=a(_),g(k.$$.fragment,_)},m(_,M){c(_,m,M),c(_,b,M),h(k,_,M),y=!0},p:Va,i(_){y||(d(k.$$.fragment,_),y=!0)},o(_){f(k.$$.fragment,_),y=!1},d(_){_&&(n(m),n(b)),u(k,_)}}}function sl(I){let m,x=`In all this class, one step is to be understood as one update step. When using gradient accumulation, one update
step may require several forward and backward passes: if you use <code>gradient_accumulation_steps=n</code>, then one update
step requires going through <em>n</em> batches.`;return{c(){m=s("p"),m.innerHTML=x},l(b){m=o(b,"P",{"data-svelte-h":!0}),i(m)!=="svelte-rhwh6p"&&(m.innerHTML=x)},m(b,k){c(b,m,k)},p:Va,d(b){b&&n(m)}}}function ol(I){let m,x,b,k,y,_,M,L=`Callbacks are objects that can customize the behavior of the training loop in the PyTorch
<a href="/docs/transformers/main/en/main_classes/trainer#transformers.Trainer">Trainer</a> (this feature is not yet implemented in TensorFlow) that can inspect the training loop
state (for progress reporting, logging on TensorBoard or other ML platforms‚Ä¶) and take decisions (like early
stopping).`,E,Ie,ks=`Callbacks are ‚Äúread only‚Äù pieces of code, apart from the <a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerControl">TrainerControl</a> object they return, they
cannot change anything in the training loop. For customizations that require changes in the training loop, you should
subclass <a href="/docs/transformers/main/en/main_classes/trainer#transformers.Trainer">Trainer</a> and override the methods you need (see <a href="trainer">trainer</a> for examples).`,Qr,Ee,ws='By default, <code>TrainingArguments.report_to</code> is set to <code>&quot;all&quot;</code>, so a <a href="/docs/transformers/main/en/main_classes/trainer#transformers.Trainer">Trainer</a> will use the following callbacks.',Vr,He,ys=`<li><a href="/docs/transformers/main/en/main_classes/callback#transformers.DefaultFlowCallback">DefaultFlowCallback</a> which handles the default behavior for logging, saving and evaluation.</li> <li><a href="/docs/transformers/main/en/main_classes/callback#transformers.PrinterCallback">PrinterCallback</a> or <a href="/docs/transformers/main/en/main_classes/callback#transformers.ProgressCallback">ProgressCallback</a> to display progress and print the
logs (the first one is used if you deactivate tqdm through the <a href="/docs/transformers/main/en/main_classes/trainer#transformers.TrainingArguments">TrainingArguments</a>, otherwise
it‚Äôs the second one).</li> <li><a href="/docs/transformers/main/en/main_classes/callback#transformers.integrations.TensorBoardCallback">TensorBoardCallback</a> if tensorboard is accessible (either through PyTorch &gt;= 1.4
or tensorboardX).</li> <li><a href="/docs/transformers/main/en/main_classes/callback#transformers.integrations.WandbCallback">WandbCallback</a> if <a href="https://www.wandb.com/" rel="nofollow">wandb</a> is installed.</li> <li><a href="/docs/transformers/main/en/main_classes/callback#transformers.integrations.CometCallback">CometCallback</a> if <a href="https://www.comet.ml/site/" rel="nofollow">comet_ml</a> is installed.</li> <li><a href="/docs/transformers/main/en/main_classes/callback#transformers.integrations.MLflowCallback">MLflowCallback</a> if <a href="https://www.mlflow.org/" rel="nofollow">mlflow</a> is installed.</li> <li><a href="/docs/transformers/main/en/main_classes/callback#transformers.integrations.NeptuneCallback">NeptuneCallback</a> if <a href="https://neptune.ai/" rel="nofollow">neptune</a> is installed.</li> <li><a href="/docs/transformers/main/en/main_classes/callback#transformers.integrations.AzureMLCallback">AzureMLCallback</a> if <a href="https://pypi.org/project/azureml-sdk/" rel="nofollow">azureml-sdk</a> is
installed.</li> <li><a href="/docs/transformers/main/en/main_classes/callback#transformers.integrations.CodeCarbonCallback">CodeCarbonCallback</a> if <a href="https://pypi.org/project/codecarbon/" rel="nofollow">codecarbon</a> is
installed.</li> <li><a href="/docs/transformers/main/en/main_classes/callback#transformers.integrations.ClearMLCallback">ClearMLCallback</a> if <a href="https://github.com/allegroai/clearml" rel="nofollow">clearml</a> is installed.</li> <li><a href="/docs/transformers/main/en/main_classes/callback#transformers.integrations.DagsHubCallback">DagsHubCallback</a> if <a href="https://dagshub.com/" rel="nofollow">dagshub</a> is installed.</li> <li><a href="/docs/transformers/main/en/main_classes/callback#transformers.integrations.FlyteCallback">FlyteCallback</a> if <a href="https://flyte.org/" rel="nofollow">flyte</a> is installed.</li> <li><a href="/docs/transformers/main/en/main_classes/callback#transformers.integrations.DVCLiveCallback">DVCLiveCallback</a> if <a href="https://dvc.org/doc/dvclive" rel="nofollow">dvclive</a> is installed.</li>`,qr,Pe,Ms="If a package is installed but you don‚Äôt wish to use the accompanying integration, you can change <code>TrainingArguments.report_to</code> to a list of just those integrations you want to use (e.g. <code>[&quot;azure_ml&quot;, &quot;wandb&quot;]</code>).",Rr,je,xs=`The main class that implements callbacks is <a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback">TrainerCallback</a>. It gets the
<a href="/docs/transformers/main/en/main_classes/trainer#transformers.TrainingArguments">TrainingArguments</a> used to instantiate the <a href="/docs/transformers/main/en/main_classes/trainer#transformers.Trainer">Trainer</a>, can access that
Trainer‚Äôs internal state via <a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerState">TrainerState</a>, and can take some actions on the training loop via
<a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerControl">TrainerControl</a>.`,Gr,Je,Yr,De,Ls='Here is the list of the available <a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback">TrainerCallback</a> in the library:',Or,S,Ae,qa,Et,Is='A <a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback">TrainerCallback</a> that sends the logs to <a href="https://www.comet.ml/site/" rel="nofollow">Comet ML</a>.',Ra,P,Ue,Ga,Ht,Es="Setup the optional Comet.ml integration.",Ya,Pt,Hs="Environment:",Oa,jt,Ps=`<li><strong>COMET_MODE</strong> (<code>str</code>, <em>optional</em>, defaults to <code>ONLINE</code>):
Whether to create an online, offline experiment or disable Comet logging. Can be <code>OFFLINE</code>, <code>ONLINE</code>, or
<code>DISABLED</code>.</li> <li><strong>COMET_PROJECT_NAME</strong> (<code>str</code>, <em>optional</em>):
Comet project name for experiments.</li> <li><strong>COMET_OFFLINE_DIRECTORY</strong> (<code>str</code>, <em>optional</em>):
Folder to use for saving offline experiments when <code>COMET_MODE</code> is <code>OFFLINE</code>.</li> <li><strong>COMET_LOG_ASSETS</strong> (<code>str</code>, <em>optional</em>, defaults to <code>TRUE</code>):
Whether or not to log training assets (tf event logs, checkpoints, etc), to Comet. Can be <code>TRUE</code>, or
<code>FALSE</code>.</li>`,Xa,Jt,js=`For a number of configurable items in the environment, see
<a href="https://www.comet.ml/docs/python-sdk/advanced/#comet-configuration-variables" rel="nofollow">here</a>.`,Xr,O,Ne,Za,Dt,Js='A <a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback">TrainerCallback</a> that handles the default flow of the training loop for logs, evaluation and checkpoints.',Zr,X,Fe,Ka,At,Ds='A bare <a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback">TrainerCallback</a> that just prints the logs.',Kr,Z,Se,en,Ut,As='A <a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback">TrainerCallback</a> that displays the progress of training or evaluation.',ea,W,We,tn,Nt,Us='A <a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback">TrainerCallback</a> that handles early stopping.',rn,Ft,Ns=`This callback depends on <a href="/docs/transformers/main/en/main_classes/trainer#transformers.TrainingArguments">TrainingArguments</a> argument <em>load_best_model_at_end</em> functionality to set best_metric
in <a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerState">TrainerState</a>. Note that if the <a href="/docs/transformers/main/en/main_classes/trainer#transformers.TrainingArguments">TrainingArguments</a> argument <em>save_steps</em> differs from <em>eval_steps</em>, the
early stopping will not occur until the next save step.`,ta,K,ze,an,St,Fs='A <a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback">TrainerCallback</a> that sends the logs to <a href="https://www.tensorflow.org/tensorboard" rel="nofollow">TensorBoard</a>.',ra,z,Be,nn,Wt,Ss='A <a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback">TrainerCallback</a> that logs metrics, media, model checkpoints to <a href="https://www.wandb.com/" rel="nofollow">Weight and Biases</a>.',sn,j,Qe,on,zt,Ws="Setup the optional Weights &amp; Biases (<em>wandb</em>) integration.",ln,Bt,zs=`One can subclass and override this method to customize the setup if needed. Find more information
<a href="https://docs.wandb.ai/guides/integrations/huggingface" rel="nofollow">here</a>. You can also override the following environment
variables:`,cn,Qt,Bs="Environment:",mn,B,Ve,Vt,Qs=`<strong>WANDB_LOG_MODEL</strong> (<code>str</code>, <em>optional</em>, defaults to <code>&quot;false&quot;</code>):
Whether to log model and checkpoints during training. Can be <code>&quot;end&quot;</code>, <code>&quot;checkpoint&quot;</code> or <code>&quot;false&quot;</code>. If set
to <code>&quot;end&quot;</code>, the model will be uploaded at the end of training. If set to <code>&quot;checkpoint&quot;</code>, the checkpoint
will be uploaded every <code>args.save_steps</code> . If set to <code>&quot;false&quot;</code>, the model will not be uploaded. Use along
with <code>load_best_model_at_end()</code> to upload best model.`,dn,ne,fn,qt,Vs=`<p><strong>WANDB_WATCH</strong> (<code>str</code>, <em>optional</em> defaults to <code>&quot;false&quot;</code>):
Can be <code>&quot;gradients&quot;</code>, <code>&quot;all&quot;</code>, <code>&quot;parameters&quot;</code>, or <code>&quot;false&quot;</code>. Set to <code>&quot;all&quot;</code> to log gradients and
parameters.</p>`,pn,Rt,qs=`<p><strong>WANDB_PROJECT</strong> (<code>str</code>, <em>optional</em>, defaults to <code>&quot;huggingface&quot;</code>):
Set this to a custom string to store results in a different project.</p>`,gn,Gt,Rs=`<p><strong>WANDB_DISABLED</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>):
Whether to disable wandb entirely. Set <code>WANDB_DISABLED=true</code> to disable.</p>`,aa,Q,qe,hn,Yt,Gs=`A <a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback">TrainerCallback</a> that sends the logs to <a href="https://www.mlflow.org/" rel="nofollow">MLflow</a>. Can be disabled by setting
environment variable <code>DISABLE_MLFLOW_INTEGRATION = TRUE</code>.`,un,U,Re,bn,Ot,Ys="Setup the optional MLflow integration.",_n,Xt,Os="Environment:",vn,Zt,Xs=`<li><strong>HF_MLFLOW_LOG_ARTIFACTS</strong> (<code>str</code>, <em>optional</em>):
Whether to use MLflow <code>.log_artifact()</code> facility to log artifacts. This only makes sense if logging to a
remote server, e.g. s3 or GCS. If set to <code>True</code> or <em>1</em>, will copy each saved checkpoint on each save in
<a href="/docs/transformers/main/en/main_classes/trainer#transformers.TrainingArguments">TrainingArguments</a>‚Äôs <code>output_dir</code> to the local or remote artifact storage. Using it without a remote
storage will just copy the files to your artifact location.</li> <li><strong>MLFLOW_TRACKING_URI</strong> (<code>str</code>, <em>optional</em>, defaults to <code>&quot;&quot;</code>):
Whether to store runs at a specific path or remote server. Default to an empty string which will store runs
at <code>./mlruns</code> locally.</li> <li><strong>MLFLOW_EXPERIMENT_NAME</strong> (<code>str</code>, <em>optional</em>, defaults to <code>None</code>):
Whether to use an MLflow experiment_name under which to launch the run. Default to <code>None</code> which will point
to the <code>Default</code> experiment in MLflow. Otherwise, it is a case sensitive name of the experiment to be
activated. If an experiment with this name does not exist, a new experiment with this name is created.</li> <li><strong>MLFLOW_TAGS</strong> (<code>str</code>, <em>optional</em>):
A string dump of a dictionary of key/value pair to be added to the MLflow run as tags. Example:
<code>os.environ[&#39;MLFLOW_TAGS&#39;]=&#39;{&quot;release.candidate&quot;: &quot;RC1&quot;, &quot;release.version&quot;: &quot;2.2.0&quot;}&#39;</code>.</li> <li><strong>MLFLOW_NESTED_RUN</strong> (<code>str</code>, <em>optional</em>):
Whether to use MLflow nested runs. If set to <code>True</code> or <em>1</em>, will create a nested run inside the current
run.</li> <li><strong>MLFLOW_RUN_ID</strong> (<code>str</code>, <em>optional</em>):
Allow to reattach to an existing run which can be usefull when resuming training from a checkpoint. When
<code>MLFLOW_RUN_ID</code> environment variable is set, <code>start_run</code> attempts to resume a run with the specified run ID
and other parameters are ignored.</li> <li><strong>MLFLOW_FLATTEN_PARAMS</strong> (<code>str</code>, <em>optional</em>, defaults to <code>False</code>):
Whether to flatten the parameters dictionary before logging.</li>`,na,ee,Ge,Tn,Kt,Zs='A <a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback">TrainerCallback</a> that sends the logs to <a href="https://pypi.org/project/azureml-sdk/" rel="nofollow">AzureML</a>.',sa,te,Ye,$n,er,Ks='A <a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback">TrainerCallback</a> that tracks the CO2 emission of training.',oa,V,Oe,Cn,tr,eo='TrainerCallback that sends the logs to <a href="https://app.neptune.ai" rel="nofollow">Neptune</a>.',kn,rr,to=`For instructions and examples, see the <a href="https://docs.neptune.ai/integrations/transformers" rel="nofollow">Transformers integration
guide</a> in the Neptune documentation.`,la,J,Xe,wn,ar,ro='A <a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback">TrainerCallback</a> that sends the logs to <a href="https://clear.ml/" rel="nofollow">ClearML</a>.',yn,nr,ao="Environment:",Mn,sr,no=`<li><strong>CLEARML_PROJECT</strong> (<code>str</code>, <em>optional</em>, defaults to <code>HuggingFace Transformers</code>):
ClearML project name.</li> <li><strong>CLEARML_TASK</strong> (<code>str</code>, <em>optional</em>, defaults to <code>Trainer</code>):
ClearML task name.</li> <li><strong>CLEARML_LOG_MODEL</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>):
Whether to log models as artifacts during training.</li>`,ia,q,Ze,xn,or,so='A <a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback">TrainerCallback</a> that logs to <a href="https://dagshub.com/" rel="nofollow">DagsHub</a>. Extends <code>MLflowCallback</code>',Ln,N,Ke,In,lr,oo="Setup the DagsHub‚Äôs Logging integration.",En,ir,lo="Environment:",Hn,cr,io=`<li><strong>HF_DAGSHUB_LOG_ARTIFACTS</strong> (<code>str</code>, <em>optional</em>):
Whether to save the data and model artifacts for the experiment. Default to <code>False</code>.</li>`,ca,R,et,Pn,mr,co=`A <a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback">TrainerCallback</a> that sends the logs to <a href="https://flyte.org/" rel="nofollow">Flyte</a>.
NOTE: This callback only works within a Flyte task.`,jn,se,ma,D,tt,Jn,dr,mo='A <a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback">TrainerCallback</a> that sends the logs to <a href="https://www.dvc.org/doc/dvclive" rel="nofollow">DVCLive</a>.',Dn,fr,fo=`Use the environment variables below in <code>setup</code> to configure the integration. To customize this callback beyond
those environment variables, see <a href="https://dvc.org/doc/dvclive/ml-frameworks/huggingface" rel="nofollow">here</a>.`,An,F,rt,Un,pr,po=`Setup the optional DVCLive integration. To customize this callback beyond the environment variables below, see
<a href="https://dvc.org/doc/dvclive/ml-frameworks/huggingface" rel="nofollow">here</a>.`,Nn,gr,go="Environment:",Fn,hr,ho=`<li><strong>HF_DVCLIVE_LOG_MODEL</strong> (<code>str</code>, <em>optional</em>):
Whether to use <code>dvclive.Live.log_artifact()</code> to log checkpoints created by <a href="/docs/transformers/main/en/main_classes/trainer#transformers.Trainer">Trainer</a>. If set to <code>True</code> or
<em>1</em>, the final checkpoint is logged at the end of training. If set to <code>all</code>, the entire
<a href="/docs/transformers/main/en/main_classes/trainer#transformers.TrainingArguments">TrainingArguments</a>‚Äôs <code>output_dir</code> is logged at each checkpoint.</li>`,da,at,fa,T,nt,Sn,ur,uo=`A class for objects that will inspect the state of the training loop at some events and take some decisions. At
each of those events the following arguments are available:`,Wn,br,bo=`The <code>control</code> object is the only one that can be changed by the callback, in which case the event that changes it
should return the modified version.`,zn,_r,_o=`The argument <code>args</code>, <code>state</code> and <code>control</code> are positionals for all events, all the others are grouped in <code>kwargs</code>.
You can unpack the ones you need in the signature of the event using them. As an example, see the code of the
simple <a href="/docs/transformers/main/en/main_classes/callback#transformers.PrinterCallback">PrinterCallback</a>.`,Bn,oe,Qn,le,st,Vn,vr,vo="Event called at the beginning of an epoch.",qn,ie,ot,Rn,Tr,To="Event called at the end of an epoch.",Gn,ce,lt,Yn,$r,$o="Event called after an evaluation phase.",On,me,it,Xn,Cr,Co='Event called at the end of the initialization of the <a href="/docs/transformers/main/en/main_classes/trainer#transformers.Trainer">Trainer</a>.',Zn,de,ct,Kn,kr,ko="Event called after logging the last logs.",es,fe,mt,ts,wr,wo="Event called after a successful prediction.",rs,pe,dt,as,yr,yo="Event called after a prediction step.",ns,ge,ft,ss,Mr,Mo="Event called after a checkpoint save.",os,he,pt,ls,xr,xo=`Event called at the beginning of a training step. If using gradient accumulation, one training step might take
several inputs.`,is,ue,gt,cs,Lr,Lo=`Event called at the end of a training step. If using gradient accumulation, one training step might take
several inputs.`,ms,be,ht,ds,Ir,Io="Event called at the end of an substep during gradient accumulation.",fs,_e,ut,ps,Er,Eo="Event called at the beginning of training.",gs,ve,bt,hs,Hr,Ho="Event called at the end of training.",pa,_t,Po='Here is an example of how to register a custom callback with the PyTorch <a href="/docs/transformers/main/en/main_classes/trainer#transformers.Trainer">Trainer</a>:',ga,vt,ha,Tt,jo="Another way to register a callback is to call <code>trainer.add_callback()</code> as follows:",ua,$t,ba,Ct,_a,H,kt,us,Pr,Jo=`A class containing the <a href="/docs/transformers/main/en/main_classes/trainer#transformers.Trainer">Trainer</a> inner state that will be saved along the model and optimizer when checkpointing
and passed to the <a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback">TrainerCallback</a>.`,bs,Te,_s,$e,wt,vs,jr,Do="Create an instance from the content of <code>json_path</code>.",Ts,Ce,yt,$s,Jr,Ao="Save the content of this instance in JSON format inside <code>json_path</code>.",va,Mt,Ta,re,xt,Cs,Dr,Uo=`A class that handles the <a href="/docs/transformers/main/en/main_classes/trainer#transformers.Trainer">Trainer</a> control flow. This class is used by the <a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback">TrainerCallback</a> to activate some
switches in the training loop.`,$a,zr,Ca;return y=new Br({props:{title:"Callbacks",local:"callbacks",headingTag:"h1"}}),Je=new Br({props:{title:"Available Callbacks",local:"transformers.integrations.CometCallback",headingTag:"h2"}}),Ae=new C({props:{name:"class transformers.integrations.CometCallback",anchor:"transformers.integrations.CometCallback",parameters:[],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/integrations/integration_utils.py#L833"}}),Ue=new C({props:{name:"setup",anchor:"transformers.integrations.CometCallback.setup",parameters:[{name:"args",val:""},{name:"state",val:""},{name:"model",val:""}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/integrations/integration_utils.py#L844"}}),Ne=new C({props:{name:"class transformers.DefaultFlowCallback",anchor:"transformers.DefaultFlowCallback",parameters:[],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/trainer_callback.py#L432"}}),Fe=new C({props:{name:"class transformers.PrinterCallback",anchor:"transformers.PrinterCallback",parameters:[],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/trainer_callback.py#L532"}}),Se=new C({props:{name:"class transformers.ProgressCallback",anchor:"transformers.ProgressCallback",parameters:[],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/trainer_callback.py#L482"}}),We=new C({props:{name:"class transformers.EarlyStoppingCallback",anchor:"transformers.EarlyStoppingCallback",parameters:[{name:"early_stopping_patience",val:": int = 1"},{name:"early_stopping_threshold",val:": Optional = 0.0"}],parametersDescription:[{anchor:"transformers.EarlyStoppingCallback.early_stopping_patience",description:`<strong>early_stopping_patience</strong> (<code>int</code>) &#x2014;
Use with <code>metric_for_best_model</code> to stop training when the specified metric worsens for
<code>early_stopping_patience</code> evaluation calls.`,name:"early_stopping_patience"},{anchor:"transformers.EarlyStoppingCallback.early_stopping_threshold(float,",description:`<strong>early_stopping_threshold(<code>float</code>,</strong> <em>optional</em>) &#x2014;
Use with TrainingArguments <code>metric_for_best_model</code> and <code>early_stopping_patience</code> to denote how much the
specified metric must improve to satisfy early stopping conditions. \``,name:"early_stopping_threshold(float,"}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/trainer_callback.py#L543"}}),ze=new C({props:{name:"class transformers.integrations.TensorBoardCallback",anchor:"transformers.integrations.TensorBoardCallback",parameters:[{name:"tb_writer",val:" = None"}],parametersDescription:[{anchor:"transformers.integrations.TensorBoardCallback.tb_writer",description:`<strong>tb_writer</strong> (<code>SummaryWriter</code>, <em>optional</em>) &#x2014;
The writer to use. Will instantiate one if not set.`,name:"tb_writer"}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/integrations/integration_utils.py#L579"}}),Be=new C({props:{name:"class transformers.integrations.WandbCallback",anchor:"transformers.integrations.WandbCallback",parameters:[],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/integrations/integration_utils.py#L665"}}),Qe=new C({props:{name:"setup",anchor:"transformers.integrations.WandbCallback.setup",parameters:[{name:"args",val:""},{name:"state",val:""},{name:"model",val:""},{name:"**kwargs",val:""}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/integrations/integration_utils.py#L690"}}),ne=new tl({props:{version:"5.0",$$slots:{default:[rl]},$$scope:{ctx:I}}}),qe=new C({props:{name:"class transformers.integrations.MLflowCallback",anchor:"transformers.integrations.MLflowCallback",parameters:[],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/integrations/integration_utils.py#L933"}}),Re=new C({props:{name:"setup",anchor:"transformers.integrations.MLflowCallback.setup",parameters:[{name:"args",val:""},{name:"state",val:""},{name:"model",val:""}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/integrations/integration_utils.py#L952"}}),Ge=new C({props:{name:"class transformers.integrations.AzureMLCallback",anchor:"transformers.integrations.AzureMLCallback",parameters:[{name:"azureml_run",val:" = None"}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/integrations/integration_utils.py#L910"}}),Ye=new C({props:{name:"class transformers.integrations.CodeCarbonCallback",anchor:"transformers.integrations.CodeCarbonCallback",parameters:[],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/integrations/integration_utils.py#L1410"}}),Oe=new C({props:{name:"class transformers.integrations.NeptuneCallback",anchor:"transformers.integrations.NeptuneCallback",parameters:[{name:"api_token",val:": Optional = None"},{name:"project",val:": Optional = None"},{name:"name",val:": Optional = None"},{name:"base_namespace",val:": str = 'finetuning'"},{name:"run",val:" = None"},{name:"log_parameters",val:": bool = True"},{name:"log_checkpoints",val:": Optional = None"},{name:"**neptune_run_kwargs",val:""}],parametersDescription:[{anchor:"transformers.integrations.NeptuneCallback.api_token",description:`<strong>api_token</strong> (<code>str</code>, <em>optional</em>) &#x2014; Neptune API token obtained upon registration.
You can leave this argument out if you have saved your token to the <code>NEPTUNE_API_TOKEN</code> environment
variable (strongly recommended). See full setup instructions in the
<a href="https://docs.neptune.ai/setup/installation" rel="nofollow">docs</a>.`,name:"api_token"},{anchor:"transformers.integrations.NeptuneCallback.project",description:`<strong>project</strong> (<code>str</code>, <em>optional</em>) &#x2014; Name of an existing Neptune project, in the form &#x201C;workspace-name/project-name&#x201D;.
You can find and copy the name in Neptune from the project settings -&gt; Properties. If None (default), the
value of the <code>NEPTUNE_PROJECT</code> environment variable is used.`,name:"project"},{anchor:"transformers.integrations.NeptuneCallback.name",description:"<strong>name</strong> (<code>str</code>, <em>optional</em>) &#x2014; Custom name for the run.",name:"name"},{anchor:"transformers.integrations.NeptuneCallback.base_namespace",description:`<strong>base_namespace</strong> (<code>str</code>, optional, defaults to &#x201C;finetuning&#x201D;) &#x2014; In the Neptune run, the root namespace
that will contain all of the metadata logged by the callback.`,name:"base_namespace"},{anchor:"transformers.integrations.NeptuneCallback.log_parameters",description:`<strong>log_parameters</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
If True, logs all Trainer arguments and model parameters provided by the Trainer.`,name:"log_parameters"},{anchor:"transformers.integrations.NeptuneCallback.log_checkpoints",description:`<strong>log_checkpoints</strong> (<code>str</code>, <em>optional</em>) &#x2014; If &#x201C;same&#x201D;, uploads checkpoints whenever they are saved by the Trainer.
If &#x201C;last&#x201D;, uploads only the most recently saved checkpoint. If &#x201C;best&#x201D;, uploads the best checkpoint (among
the ones saved by the Trainer). If <code>None</code>, does not upload checkpoints.`,name:"log_checkpoints"},{anchor:"transformers.integrations.NeptuneCallback.run",description:`<strong>run</strong> (<code>Run</code>, <em>optional</em>) &#x2014; Pass a Neptune run object if you want to continue logging to an existing run.
Read more about resuming runs in the <a href="https://docs.neptune.ai/logging/to_existing_object" rel="nofollow">docs</a>.`,name:"run"},{anchor:"transformers.integrations.NeptuneCallback.*neptune_run_kwargs",description:`*<strong>*neptune_run_kwargs</strong> (<em>optional</em>) &#x2014;
Additional keyword arguments to be passed directly to the
<a href="https://docs.neptune.ai/api/neptune#init_run" rel="nofollow"><code>neptune.init_run()</code></a> function when a new run is created.`,name:"*neptune_run_kwargs"}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/integrations/integration_utils.py#L1139"}}),Xe=new C({props:{name:"class transformers.integrations.ClearMLCallback",anchor:"transformers.integrations.ClearMLCallback",parameters:[],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/integrations/integration_utils.py#L1439"}}),Ze=new C({props:{name:"class transformers.integrations.DagsHubCallback",anchor:"transformers.integrations.DagsHubCallback",parameters:[],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/integrations/integration_utils.py#L1079"}}),Ke=new C({props:{name:"setup",anchor:"transformers.integrations.DagsHubCallback.setup",parameters:[{name:"*args",val:""},{name:"**kwargs",val:""}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/integrations/integration_utils.py#L1093"}}),et=new C({props:{name:"class transformers.integrations.FlyteCallback",anchor:"transformers.integrations.FlyteCallback",parameters:[{name:"save_log_history",val:": bool = True"},{name:"sync_checkpoints",val:": bool = True"}],parametersDescription:[{anchor:"transformers.integrations.FlyteCallback.save_log_history",description:`<strong>save_log_history</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
When set to True, the training logs are saved as a Flyte Deck.`,name:"save_log_history"},{anchor:"transformers.integrations.FlyteCallback.sync_checkpoints",description:`<strong>sync_checkpoints</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
When set to True, checkpoints are synced with Flyte and can be used to resume training in the case of an
interruption.`,name:"sync_checkpoints"}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/integrations/integration_utils.py#L1692"}}),se=new So({props:{anchor:"transformers.integrations.FlyteCallback.example",$$slots:{default:[al]},$$scope:{ctx:I}}}),tt=new C({props:{name:"class transformers.integrations.DVCLiveCallback",anchor:"transformers.integrations.DVCLiveCallback",parameters:[{name:"live",val:": Optional = None"},{name:"log_model",val:": Union = None"},{name:"**kwargs",val:""}],parametersDescription:[{anchor:"transformers.integrations.DVCLiveCallback.live",description:`<strong>live</strong> (<code>dvclive.Live</code>, <em>optional</em>, defaults to <code>None</code>) &#x2014;
Optional Live instance. If None, a new instance will be created using **kwargs.`,name:"live"},{anchor:"transformers.integrations.DVCLiveCallback.log_model",description:`<strong>log_model</strong> (Union[Literal[&#x201C;all&#x201D;], bool], <em>optional</em>, defaults to <code>None</code>) &#x2014;
Whether to use <code>dvclive.Live.log_artifact()</code> to log checkpoints created by <a href="/docs/transformers/main/en/main_classes/trainer#transformers.Trainer">Trainer</a>. If set to <code>True</code>,
the final checkpoint is logged at the end of training. If set to <code>&quot;all&quot;</code>, the entire
<a href="/docs/transformers/main/en/main_classes/trainer#transformers.TrainingArguments">TrainingArguments</a>&#x2019;s <code>output_dir</code> is logged at each checkpoint.`,name:"log_model"}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/integrations/integration_utils.py#L1755"}}),rt=new C({props:{name:"setup",anchor:"transformers.integrations.DVCLiveCallback.setup",parameters:[{name:"args",val:""},{name:"state",val:""},{name:"model",val:""}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/integrations/integration_utils.py#L1796"}}),at=new Br({props:{title:"TrainerCallback",local:"transformers.TrainerCallback",headingTag:"h2"}}),nt=new C({props:{name:"class transformers.TrainerCallback",anchor:"transformers.TrainerCallback",parameters:[],parametersDescription:[{anchor:"transformers.TrainerCallback.args",description:`<strong>args</strong> (<a href="/docs/transformers/main/en/main_classes/trainer#transformers.TrainingArguments">TrainingArguments</a>) &#x2014;
The training arguments used to instantiate the <a href="/docs/transformers/main/en/main_classes/trainer#transformers.Trainer">Trainer</a>.`,name:"args"},{anchor:"transformers.TrainerCallback.state",description:`<strong>state</strong> (<a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerState">TrainerState</a>) &#x2014;
The current state of the <a href="/docs/transformers/main/en/main_classes/trainer#transformers.Trainer">Trainer</a>.`,name:"state"},{anchor:"transformers.TrainerCallback.control",description:`<strong>control</strong> (<a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerControl">TrainerControl</a>) &#x2014;
The object that is returned to the <a href="/docs/transformers/main/en/main_classes/trainer#transformers.Trainer">Trainer</a> and can be used to make some decisions.`,name:"control"},{anchor:"transformers.TrainerCallback.model",description:`<strong>model</strong> (<a href="/docs/transformers/main/en/main_classes/model#transformers.PreTrainedModel">PreTrainedModel</a> or <code>torch.nn.Module</code>) &#x2014;
The model being trained.`,name:"model"},{anchor:"transformers.TrainerCallback.tokenizer",description:`<strong>tokenizer</strong> (<a href="/docs/transformers/main/en/main_classes/tokenizer#transformers.PreTrainedTokenizer">PreTrainedTokenizer</a>) &#x2014;
The tokenizer used for encoding the data.`,name:"tokenizer"},{anchor:"transformers.TrainerCallback.optimizer",description:`<strong>optimizer</strong> (<code>torch.optim.Optimizer</code>) &#x2014;
The optimizer used for the training steps.`,name:"optimizer"},{anchor:"transformers.TrainerCallback.lr_scheduler",description:`<strong>lr_scheduler</strong> (<code>torch.optim.lr_scheduler.LambdaLR</code>) &#x2014;
The scheduler used for setting the learning rate.`,name:"lr_scheduler"},{anchor:"transformers.TrainerCallback.train_dataloader",description:`<strong>train_dataloader</strong> (<code>torch.utils.data.DataLoader</code>, <em>optional</em>) &#x2014;
The current dataloader used for training.`,name:"train_dataloader"},{anchor:"transformers.TrainerCallback.eval_dataloader",description:`<strong>eval_dataloader</strong> (<code>torch.utils.data.DataLoader</code>, <em>optional</em>) &#x2014;
The current dataloader used for training.`,name:"eval_dataloader"},{anchor:"transformers.TrainerCallback.metrics",description:`<strong>metrics</strong> (<code>Dict[str, float]</code>) &#x2014;
The metrics computed by the last evaluation phase.</p>
<p>Those are only accessible in the event <code>on_evaluate</code>.`,name:"metrics"},{anchor:"transformers.TrainerCallback.logs",description:`<strong>logs</strong>  (<code>Dict[str, float]</code>) &#x2014;
The values to log.</p>
<p>Those are only accessible in the event <code>on_log</code>.`,name:"logs"}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/trainer_callback.py#L175"}}),oe=new So({props:{anchor:"transformers.TrainerCallback.example",$$slots:{default:[nl]},$$scope:{ctx:I}}}),st=new C({props:{name:"on_epoch_begin",anchor:"transformers.TrainerCallback.on_epoch_begin",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/trainer_callback.py#L244"}}),ot=new C({props:{name:"on_epoch_end",anchor:"transformers.TrainerCallback.on_epoch_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/trainer_callback.py#L250"}}),lt=new C({props:{name:"on_evaluate",anchor:"transformers.TrainerCallback.on_evaluate",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/trainer_callback.py#L276"}}),it=new C({props:{name:"on_init_end",anchor:"transformers.TrainerCallback.on_init_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/trainer_callback.py#L226"}}),ct=new C({props:{name:"on_log",anchor:"transformers.TrainerCallback.on_log",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/trainer_callback.py#L294"}}),mt=new C({props:{name:"on_predict",anchor:"transformers.TrainerCallback.on_predict",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"metrics",val:""},{name:"**kwargs",val:""}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/trainer_callback.py#L282"}}),dt=new C({props:{name:"on_prediction_step",anchor:"transformers.TrainerCallback.on_prediction_step",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/trainer_callback.py#L300"}}),ft=new C({props:{name:"on_save",anchor:"transformers.TrainerCallback.on_save",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/trainer_callback.py#L288"}}),pt=new C({props:{name:"on_step_begin",anchor:"transformers.TrainerCallback.on_step_begin",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/trainer_callback.py#L256"}}),gt=new C({props:{name:"on_step_end",anchor:"transformers.TrainerCallback.on_step_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/trainer_callback.py#L269"}}),ht=new C({props:{name:"on_substep_end",anchor:"transformers.TrainerCallback.on_substep_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/trainer_callback.py#L263"}}),ut=new C({props:{name:"on_train_begin",anchor:"transformers.TrainerCallback.on_train_begin",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/trainer_callback.py#L232"}}),bt=new C({props:{name:"on_train_end",anchor:"transformers.TrainerCallback.on_train_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/trainer_callback.py#L238"}}),vt=new Qa({props:{code:"Y2xhc3MlMjBNeUNhbGxiYWNrKFRyYWluZXJDYWxsYmFjayklM0ElMEElMjAlMjAlMjAlMjAlMjJBJTIwY2FsbGJhY2slMjB0aGF0JTIwcHJpbnRzJTIwYSUyMG1lc3NhZ2UlMjBhdCUyMHRoZSUyMGJlZ2lubmluZyUyMG9mJTIwdHJhaW5pbmclMjIlMEElMEElMjAlMjAlMjAlMjBkZWYlMjBvbl90cmFpbl9iZWdpbihzZWxmJTJDJTIwYXJncyUyQyUyMHN0YXRlJTJDJTIwY29udHJvbCUyQyUyMCoqa3dhcmdzKSUzQSUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMHByaW50KCUyMlN0YXJ0aW5nJTIwdHJhaW5pbmclMjIpJTBBJTBBJTBBdHJhaW5lciUyMCUzRCUyMFRyYWluZXIoJTBBJTIwJTIwJTIwJTIwbW9kZWwlMkMlMEElMjAlMjAlMjAlMjBhcmdzJTJDJTBBJTIwJTIwJTIwJTIwdHJhaW5fZGF0YXNldCUzRHRyYWluX2RhdGFzZXQlMkMlMEElMjAlMjAlMjAlMjBldmFsX2RhdGFzZXQlM0RldmFsX2RhdGFzZXQlMkMlMEElMjAlMjAlMjAlMjBjYWxsYmFja3MlM0QlNUJNeUNhbGxiYWNrJTVEJTJDJTIwJTIwJTIzJTIwV2UlMjBjYW4lMjBlaXRoZXIlMjBwYXNzJTIwdGhlJTIwY2FsbGJhY2slMjBjbGFzcyUyMHRoaXMlMjB3YXklMjBvciUyMGFuJTIwaW5zdGFuY2UlMjBvZiUyMGl0JTIwKE15Q2FsbGJhY2soKSklMEEp",highlighted:`<span class="hljs-keyword">class</span> <span class="hljs-title class_">MyCallback</span>(<span class="hljs-title class_ inherited__">TrainerCallback</span>):
    <span class="hljs-string">&quot;A callback that prints a message at the beginning of training&quot;</span>

    <span class="hljs-keyword">def</span> <span class="hljs-title function_">on_train_begin</span>(<span class="hljs-params">self, args, state, control, **kwargs</span>):
        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Starting training&quot;</span>)


trainer = Trainer(
    model,
    args,
    train_dataset=train_dataset,
    eval_dataset=eval_dataset,
    callbacks=[MyCallback],  <span class="hljs-comment"># We can either pass the callback class this way or an instance of it (MyCallback())</span>
)`,wrap:!1}}),$t=new Qa({props:{code:"dHJhaW5lciUyMCUzRCUyMFRyYWluZXIoLi4uKSUwQXRyYWluZXIuYWRkX2NhbGxiYWNrKE15Q2FsbGJhY2spJTBBJTIzJTIwQWx0ZXJuYXRpdmVseSUyQyUyMHdlJTIwY2FuJTIwcGFzcyUyMGFuJTIwaW5zdGFuY2UlMjBvZiUyMHRoZSUyMGNhbGxiYWNrJTIwY2xhc3MlMEF0cmFpbmVyLmFkZF9jYWxsYmFjayhNeUNhbGxiYWNrKCkp",highlighted:`trainer = Trainer(...)
trainer.add_callback(MyCallback)
<span class="hljs-comment"># Alternatively, we can pass an instance of the callback class</span>
trainer.add_callback(MyCallback())`,wrap:!1}}),Ct=new Br({props:{title:"TrainerState",local:"transformers.TrainerState",headingTag:"h2"}}),kt=new C({props:{name:"class transformers.TrainerState",anchor:"transformers.TrainerState",parameters:[{name:"epoch",val:": Optional = None"},{name:"global_step",val:": int = 0"},{name:"max_steps",val:": int = 0"},{name:"logging_steps",val:": int = 500"},{name:"eval_steps",val:": int = 500"},{name:"save_steps",val:": int = 500"},{name:"train_batch_size",val:": int = None"},{name:"num_train_epochs",val:": int = 0"},{name:"num_input_tokens_seen",val:": int = 0"},{name:"total_flos",val:": float = 0"},{name:"log_history",val:": List = None"},{name:"best_metric",val:": Optional = None"},{name:"best_model_checkpoint",val:": Optional = None"},{name:"is_local_process_zero",val:": bool = True"},{name:"is_world_process_zero",val:": bool = True"},{name:"is_hyper_param_search",val:": bool = False"},{name:"trial_name",val:": str = None"},{name:"trial_params",val:": Dict = None"}],parametersDescription:[{anchor:"transformers.TrainerState.epoch",description:`<strong>epoch</strong> (<code>float</code>, <em>optional</em>) &#x2014;
Only set during training, will represent the epoch the training is at (the decimal part being the
percentage of the current epoch completed).`,name:"epoch"},{anchor:"transformers.TrainerState.global_step",description:`<strong>global_step</strong> (<code>int</code>, <em>optional</em>, defaults to 0) &#x2014;
During training, represents the number of update steps completed.`,name:"global_step"},{anchor:"transformers.TrainerState.max_steps",description:`<strong>max_steps</strong> (<code>int</code>, <em>optional</em>, defaults to 0) &#x2014;
The number of update steps to do during the current training.`,name:"max_steps"},{anchor:"transformers.TrainerState.logging_steps",description:`<strong>logging_steps</strong> (<code>int</code>, <em>optional</em>, defaults to 500) &#x2014;
Log every X updates steps`,name:"logging_steps"},{anchor:"transformers.TrainerState.eval_steps",description:`<strong>eval_steps</strong> (<code>int</code>, <em>optional</em>) &#x2014;
Run an evaluation every X steps.`,name:"eval_steps"},{anchor:"transformers.TrainerState.save_steps",description:`<strong>save_steps</strong> (<code>int</code>, <em>optional</em>, defaults to 500) &#x2014;
Save checkpoint every X updates steps.`,name:"save_steps"},{anchor:"transformers.TrainerState.train_batch_size",description:`<strong>train_batch_size</strong> (<code>int</code>, <em>optional</em>) &#x2014;
The batch size for the training dataloader. Only needed when
<code>auto_find_batch_size</code> has been used.`,name:"train_batch_size"},{anchor:"transformers.TrainerState.num_input_tokens_seen",description:`<strong>num_input_tokens_seen</strong> (<code>int</code>, <em>optional</em>, defaults to 0) &#x2014;
The number of tokens seen during training (number of input tokens, not the number of prediction tokens).`,name:"num_input_tokens_seen"},{anchor:"transformers.TrainerState.total_flos",description:`<strong>total_flos</strong> (<code>float</code>, <em>optional</em>, defaults to 0) &#x2014;
The total number of floating operations done by the model since the beginning of training (stored as floats
to avoid overflow).`,name:"total_flos"},{anchor:"transformers.TrainerState.log_history",description:`<strong>log_history</strong> (<code>List[Dict[str, float]]</code>, <em>optional</em>) &#x2014;
The list of logs done since the beginning of training.`,name:"log_history"},{anchor:"transformers.TrainerState.best_metric",description:`<strong>best_metric</strong> (<code>float</code>, <em>optional</em>) &#x2014;
When tracking the best model, the value of the best metric encountered so far.`,name:"best_metric"},{anchor:"transformers.TrainerState.best_model_checkpoint",description:`<strong>best_model_checkpoint</strong> (<code>str</code>, <em>optional</em>) &#x2014;
When tracking the best model, the value of the name of the checkpoint for the best model encountered so
far.`,name:"best_model_checkpoint"},{anchor:"transformers.TrainerState.is_local_process_zero",description:`<strong>is_local_process_zero</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
Whether or not this process is the local (e.g., on one machine if training in a distributed fashion on
several machines) main process.`,name:"is_local_process_zero"},{anchor:"transformers.TrainerState.is_world_process_zero",description:`<strong>is_world_process_zero</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
Whether or not this process is the global main process (when training in a distributed fashion on several
machines, this is only going to be <code>True</code> for one process).`,name:"is_world_process_zero"},{anchor:"transformers.TrainerState.is_hyper_param_search",description:`<strong>is_hyper_param_search</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether we are in the process of a hyper parameter search using Trainer.hyperparameter_search. This will
impact the way data will be logged in TensorBoard.`,name:"is_hyper_param_search"}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/trainer_callback.py#L34"}}),Te=new Qo({props:{$$slots:{default:[sl]},$$scope:{ctx:I}}}),wt=new C({props:{name:"load_from_json",anchor:"transformers.TrainerState.load_from_json",parameters:[{name:"json_path",val:": str"}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/trainer_callback.py#L117"}}),yt=new C({props:{name:"save_to_json",anchor:"transformers.TrainerState.save_to_json",parameters:[{name:"json_path",val:": str"}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/trainer_callback.py#L111"}}),Mt=new Br({props:{title:"TrainerControl",local:"transformers.TrainerControl",headingTag:"h2"}}),xt=new C({props:{name:"class transformers.TrainerControl",anchor:"transformers.TrainerControl",parameters:[{name:"should_training_stop",val:": bool = False"},{name:"should_epoch_stop",val:": bool = False"},{name:"should_save",val:": bool = False"},{name:"should_evaluate",val:": bool = False"},{name:"should_log",val:": bool = False"}],parametersDescription:[{anchor:"transformers.TrainerControl.should_training_stop",description:`<strong>should_training_stop</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the training should be interrupted.</p>
<p>If <code>True</code>, this variable will not be set back to <code>False</code>. The training will just stop.`,name:"should_training_stop"},{anchor:"transformers.TrainerControl.should_epoch_stop",description:`<strong>should_epoch_stop</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the current epoch should be interrupted.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next epoch.`,name:"should_epoch_stop"},{anchor:"transformers.TrainerControl.should_save",description:`<strong>should_save</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the model should be saved at this step.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next step.`,name:"should_save"},{anchor:"transformers.TrainerControl.should_evaluate",description:`<strong>should_evaluate</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the model should be evaluated at this step.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next step.`,name:"should_evaluate"},{anchor:"transformers.TrainerControl.should_log",description:`<strong>should_log</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the logs should be reported at this step.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next step.`,name:"should_log"}],source:"https://github.com/QubitPi/huggingface-transformers/blob/main/src/transformers/trainer_callback.py#L125"}}),{c(){m=s("meta"),x=r(),b=s("p"),k=r(),p(y.$$.fragment),_=r(),M=s("p"),M.innerHTML=L,E=r(),Ie=s("p"),Ie.innerHTML=ks,Qr=r(),Ee=s("p"),Ee.innerHTML=ws,Vr=r(),He=s("ul"),He.innerHTML=ys,qr=r(),Pe=s("p"),Pe.innerHTML=Ms,Rr=r(),je=s("p"),je.innerHTML=xs,Gr=r(),p(Je.$$.fragment),Yr=r(),De=s("p"),De.innerHTML=Ls,Or=r(),S=s("div"),p(Ae.$$.fragment),qa=r(),Et=s("p"),Et.innerHTML=Is,Ra=r(),P=s("div"),p(Ue.$$.fragment),Ga=r(),Ht=s("p"),Ht.textContent=Es,Ya=r(),Pt=s("p"),Pt.textContent=Hs,Oa=r(),jt=s("ul"),jt.innerHTML=Ps,Xa=r(),Jt=s("p"),Jt.innerHTML=js,Xr=r(),O=s("div"),p(Ne.$$.fragment),Za=r(),Dt=s("p"),Dt.innerHTML=Js,Zr=r(),X=s("div"),p(Fe.$$.fragment),Ka=r(),At=s("p"),At.innerHTML=Ds,Kr=r(),Z=s("div"),p(Se.$$.fragment),en=r(),Ut=s("p"),Ut.innerHTML=As,ea=r(),W=s("div"),p(We.$$.fragment),tn=r(),Nt=s("p"),Nt.innerHTML=Us,rn=r(),Ft=s("p"),Ft.innerHTML=Ns,ta=r(),K=s("div"),p(ze.$$.fragment),an=r(),St=s("p"),St.innerHTML=Fs,ra=r(),z=s("div"),p(Be.$$.fragment),nn=r(),Wt=s("p"),Wt.innerHTML=Ss,sn=r(),j=s("div"),p(Qe.$$.fragment),on=r(),zt=s("p"),zt.innerHTML=Ws,ln=r(),Bt=s("p"),Bt.innerHTML=zs,cn=r(),Qt=s("p"),Qt.textContent=Bs,mn=r(),B=s("ul"),Ve=s("li"),Vt=s("p"),Vt.innerHTML=Qs,dn=r(),p(ne.$$.fragment),fn=r(),qt=s("li"),qt.innerHTML=Vs,pn=r(),Rt=s("li"),Rt.innerHTML=qs,gn=r(),Gt=s("li"),Gt.innerHTML=Rs,aa=r(),Q=s("div"),p(qe.$$.fragment),hn=r(),Yt=s("p"),Yt.innerHTML=Gs,un=r(),U=s("div"),p(Re.$$.fragment),bn=r(),Ot=s("p"),Ot.textContent=Ys,_n=r(),Xt=s("p"),Xt.textContent=Os,vn=r(),Zt=s("ul"),Zt.innerHTML=Xs,na=r(),ee=s("div"),p(Ge.$$.fragment),Tn=r(),Kt=s("p"),Kt.innerHTML=Zs,sa=r(),te=s("div"),p(Ye.$$.fragment),$n=r(),er=s("p"),er.innerHTML=Ks,oa=r(),V=s("div"),p(Oe.$$.fragment),Cn=r(),tr=s("p"),tr.innerHTML=eo,kn=r(),rr=s("p"),rr.innerHTML=to,la=r(),J=s("div"),p(Xe.$$.fragment),wn=r(),ar=s("p"),ar.innerHTML=ro,yn=r(),nr=s("p"),nr.textContent=ao,Mn=r(),sr=s("ul"),sr.innerHTML=no,ia=r(),q=s("div"),p(Ze.$$.fragment),xn=r(),or=s("p"),or.innerHTML=so,Ln=r(),N=s("div"),p(Ke.$$.fragment),In=r(),lr=s("p"),lr.textContent=oo,En=r(),ir=s("p"),ir.textContent=lo,Hn=r(),cr=s("ul"),cr.innerHTML=io,ca=r(),R=s("div"),p(et.$$.fragment),Pn=r(),mr=s("p"),mr.innerHTML=co,jn=r(),p(se.$$.fragment),ma=r(),D=s("div"),p(tt.$$.fragment),Jn=r(),dr=s("p"),dr.innerHTML=mo,Dn=r(),fr=s("p"),fr.innerHTML=fo,An=r(),F=s("div"),p(rt.$$.fragment),Un=r(),pr=s("p"),pr.innerHTML=po,Nn=r(),gr=s("p"),gr.textContent=go,Fn=r(),hr=s("ul"),hr.innerHTML=ho,da=r(),p(at.$$.fragment),fa=r(),T=s("div"),p(nt.$$.fragment),Sn=r(),ur=s("p"),ur.textContent=uo,Wn=r(),br=s("p"),br.innerHTML=bo,zn=r(),_r=s("p"),_r.innerHTML=_o,Bn=r(),p(oe.$$.fragment),Qn=r(),le=s("div"),p(st.$$.fragment),Vn=r(),vr=s("p"),vr.textContent=vo,qn=r(),ie=s("div"),p(ot.$$.fragment),Rn=r(),Tr=s("p"),Tr.textContent=To,Gn=r(),ce=s("div"),p(lt.$$.fragment),Yn=r(),$r=s("p"),$r.textContent=$o,On=r(),me=s("div"),p(it.$$.fragment),Xn=r(),Cr=s("p"),Cr.innerHTML=Co,Zn=r(),de=s("div"),p(ct.$$.fragment),Kn=r(),kr=s("p"),kr.textContent=ko,es=r(),fe=s("div"),p(mt.$$.fragment),ts=r(),wr=s("p"),wr.textContent=wo,rs=r(),pe=s("div"),p(dt.$$.fragment),as=r(),yr=s("p"),yr.textContent=yo,ns=r(),ge=s("div"),p(ft.$$.fragment),ss=r(),Mr=s("p"),Mr.textContent=Mo,os=r(),he=s("div"),p(pt.$$.fragment),ls=r(),xr=s("p"),xr.textContent=xo,is=r(),ue=s("div"),p(gt.$$.fragment),cs=r(),Lr=s("p"),Lr.textContent=Lo,ms=r(),be=s("div"),p(ht.$$.fragment),ds=r(),Ir=s("p"),Ir.textContent=Io,fs=r(),_e=s("div"),p(ut.$$.fragment),ps=r(),Er=s("p"),Er.textContent=Eo,gs=r(),ve=s("div"),p(bt.$$.fragment),hs=r(),Hr=s("p"),Hr.textContent=Ho,pa=r(),_t=s("p"),_t.innerHTML=Po,ga=r(),p(vt.$$.fragment),ha=r(),Tt=s("p"),Tt.innerHTML=jo,ua=r(),p($t.$$.fragment),ba=r(),p(Ct.$$.fragment),_a=r(),H=s("div"),p(kt.$$.fragment),us=r(),Pr=s("p"),Pr.innerHTML=Jo,bs=r(),p(Te.$$.fragment),_s=r(),$e=s("div"),p(wt.$$.fragment),vs=r(),jr=s("p"),jr.innerHTML=Do,Ts=r(),Ce=s("div"),p(yt.$$.fragment),$s=r(),Jr=s("p"),Jr.innerHTML=Ao,va=r(),p(Mt.$$.fragment),Ta=r(),re=s("div"),p(xt.$$.fragment),Cs=r(),Dr=s("p"),Dr.innerHTML=Uo,$a=r(),zr=s("p"),this.h()},l(e){const l=Xo("svelte-u9bgzb",document.head);m=o(l,"META",{name:!0,content:!0}),l.forEach(n),x=a(e),b=o(e,"P",{}),v(b).forEach(n),k=a(e),g(y.$$.fragment,e),_=a(e),M=o(e,"P",{"data-svelte-h":!0}),i(M)!=="svelte-117jlmj"&&(M.innerHTML=L),E=a(e),Ie=o(e,"P",{"data-svelte-h":!0}),i(Ie)!=="svelte-1ouow8t"&&(Ie.innerHTML=ks),Qr=a(e),Ee=o(e,"P",{"data-svelte-h":!0}),i(Ee)!=="svelte-c2r1ku"&&(Ee.innerHTML=ws),Vr=a(e),He=o(e,"UL",{"data-svelte-h":!0}),i(He)!=="svelte-17k5xnc"&&(He.innerHTML=ys),qr=a(e),Pe=o(e,"P",{"data-svelte-h":!0}),i(Pe)!=="svelte-r4lsec"&&(Pe.innerHTML=Ms),Rr=a(e),je=o(e,"P",{"data-svelte-h":!0}),i(je)!=="svelte-8ifmvc"&&(je.innerHTML=xs),Gr=a(e),g(Je.$$.fragment,e),Yr=a(e),De=o(e,"P",{"data-svelte-h":!0}),i(De)!=="svelte-1l9ib2b"&&(De.innerHTML=Ls),Or=a(e),S=o(e,"DIV",{class:!0});var ae=v(S);g(Ae.$$.fragment,ae),qa=a(ae),Et=o(ae,"P",{"data-svelte-h":!0}),i(Et)!=="svelte-kwk50w"&&(Et.innerHTML=Is),Ra=a(ae),P=o(ae,"DIV",{class:!0});var A=v(P);g(Ue.$$.fragment,A),Ga=a(A),Ht=o(A,"P",{"data-svelte-h":!0}),i(Ht)!=="svelte-1bfkm9x"&&(Ht.textContent=Es),Ya=a(A),Pt=o(A,"P",{"data-svelte-h":!0}),i(Pt)!=="svelte-1fkshtn"&&(Pt.textContent=Hs),Oa=a(A),jt=o(A,"UL",{"data-svelte-h":!0}),i(jt)!=="svelte-12drq5x"&&(jt.innerHTML=Ps),Xa=a(A),Jt=o(A,"P",{"data-svelte-h":!0}),i(Jt)!=="svelte-1faq0a7"&&(Jt.innerHTML=js),A.forEach(n),ae.forEach(n),Xr=a(e),O=o(e,"DIV",{class:!0});var Lt=v(O);g(Ne.$$.fragment,Lt),Za=a(Lt),Dt=o(Lt,"P",{"data-svelte-h":!0}),i(Dt)!=="svelte-tbohg7"&&(Dt.innerHTML=Js),Lt.forEach(n),Zr=a(e),X=o(e,"DIV",{class:!0});var It=v(X);g(Fe.$$.fragment,It),Ka=a(It),At=o(It,"P",{"data-svelte-h":!0}),i(At)!=="svelte-u33mq4"&&(At.innerHTML=Ds),It.forEach(n),Kr=a(e),Z=o(e,"DIV",{class:!0});var ka=v(Z);g(Se.$$.fragment,ka),en=a(ka),Ut=o(ka,"P",{"data-svelte-h":!0}),i(Ut)!=="svelte-1arpznt"&&(Ut.innerHTML=As),ka.forEach(n),ea=a(e),W=o(e,"DIV",{class:!0});var Ar=v(W);g(We.$$.fragment,Ar),tn=a(Ar),Nt=o(Ar,"P",{"data-svelte-h":!0}),i(Nt)!=="svelte-1uk5lii"&&(Nt.innerHTML=Us),rn=a(Ar),Ft=o(Ar,"P",{"data-svelte-h":!0}),i(Ft)!=="svelte-1hyho8y"&&(Ft.innerHTML=Ns),Ar.forEach(n),ta=a(e),K=o(e,"DIV",{class:!0});var wa=v(K);g(ze.$$.fragment,wa),an=a(wa),St=o(wa,"P",{"data-svelte-h":!0}),i(St)!=="svelte-11ee725"&&(St.innerHTML=Fs),wa.forEach(n),ra=a(e),z=o(e,"DIV",{class:!0});var Ur=v(z);g(Be.$$.fragment,Ur),nn=a(Ur),Wt=o(Ur,"P",{"data-svelte-h":!0}),i(Wt)!=="svelte-mdmk5i"&&(Wt.innerHTML=Ss),sn=a(Ur),j=o(Ur,"DIV",{class:!0});var G=v(j);g(Qe.$$.fragment,G),on=a(G),zt=o(G,"P",{"data-svelte-h":!0}),i(zt)!=="svelte-op70zs"&&(zt.innerHTML=Ws),ln=a(G),Bt=o(G,"P",{"data-svelte-h":!0}),i(Bt)!=="svelte-m2rt7w"&&(Bt.innerHTML=zs),cn=a(G),Qt=o(G,"P",{"data-svelte-h":!0}),i(Qt)!=="svelte-1fkshtn"&&(Qt.textContent=Bs),mn=a(G),B=o(G,"UL",{});var ke=v(B);Ve=o(ke,"LI",{});var ya=v(Ve);Vt=o(ya,"P",{"data-svelte-h":!0}),i(Vt)!=="svelte-py3r3s"&&(Vt.innerHTML=Qs),dn=a(ya),g(ne.$$.fragment,ya),ya.forEach(n),fn=a(ke),qt=o(ke,"LI",{"data-svelte-h":!0}),i(qt)!=="svelte-dx3m30"&&(qt.innerHTML=Vs),pn=a(ke),Rt=o(ke,"LI",{"data-svelte-h":!0}),i(Rt)!=="svelte-n1uh6c"&&(Rt.innerHTML=qs),gn=a(ke),Gt=o(ke,"LI",{"data-svelte-h":!0}),i(Gt)!=="svelte-ybo66z"&&(Gt.innerHTML=Rs),ke.forEach(n),G.forEach(n),Ur.forEach(n),aa=a(e),Q=o(e,"DIV",{class:!0});var Nr=v(Q);g(qe.$$.fragment,Nr),hn=a(Nr),Yt=o(Nr,"P",{"data-svelte-h":!0}),i(Yt)!=="svelte-1oxe4mu"&&(Yt.innerHTML=Gs),un=a(Nr),U=o(Nr,"DIV",{class:!0});var we=v(U);g(Re.$$.fragment,we),bn=a(we),Ot=o(we,"P",{"data-svelte-h":!0}),i(Ot)!=="svelte-nmg16f"&&(Ot.textContent=Ys),_n=a(we),Xt=o(we,"P",{"data-svelte-h":!0}),i(Xt)!=="svelte-1fkshtn"&&(Xt.textContent=Os),vn=a(we),Zt=o(we,"UL",{"data-svelte-h":!0}),i(Zt)!=="svelte-5vbhjb"&&(Zt.innerHTML=Xs),we.forEach(n),Nr.forEach(n),na=a(e),ee=o(e,"DIV",{class:!0});var Ma=v(ee);g(Ge.$$.fragment,Ma),Tn=a(Ma),Kt=o(Ma,"P",{"data-svelte-h":!0}),i(Kt)!=="svelte-a0ewdh"&&(Kt.innerHTML=Zs),Ma.forEach(n),sa=a(e),te=o(e,"DIV",{class:!0});var xa=v(te);g(Ye.$$.fragment,xa),$n=a(xa),er=o(xa,"P",{"data-svelte-h":!0}),i(er)!=="svelte-wnzizl"&&(er.innerHTML=Ks),xa.forEach(n),oa=a(e),V=o(e,"DIV",{class:!0});var Fr=v(V);g(Oe.$$.fragment,Fr),Cn=a(Fr),tr=o(Fr,"P",{"data-svelte-h":!0}),i(tr)!=="svelte-4ag9j6"&&(tr.innerHTML=eo),kn=a(Fr),rr=o(Fr,"P",{"data-svelte-h":!0}),i(rr)!=="svelte-1mhjcx0"&&(rr.innerHTML=to),Fr.forEach(n),la=a(e),J=o(e,"DIV",{class:!0});var ye=v(J);g(Xe.$$.fragment,ye),wn=a(ye),ar=o(ye,"P",{"data-svelte-h":!0}),i(ar)!=="svelte-1qgg58f"&&(ar.innerHTML=ro),yn=a(ye),nr=o(ye,"P",{"data-svelte-h":!0}),i(nr)!=="svelte-1fkshtn"&&(nr.textContent=ao),Mn=a(ye),sr=o(ye,"UL",{"data-svelte-h":!0}),i(sr)!=="svelte-15svthu"&&(sr.innerHTML=no),ye.forEach(n),ia=a(e),q=o(e,"DIV",{class:!0});var Sr=v(q);g(Ze.$$.fragment,Sr),xn=a(Sr),or=o(Sr,"P",{"data-svelte-h":!0}),i(or)!=="svelte-1w5b5fu"&&(or.innerHTML=so),Ln=a(Sr),N=o(Sr,"DIV",{class:!0});var Me=v(N);g(Ke.$$.fragment,Me),In=a(Me),lr=o(Me,"P",{"data-svelte-h":!0}),i(lr)!=="svelte-1wbmj3"&&(lr.textContent=oo),En=a(Me),ir=o(Me,"P",{"data-svelte-h":!0}),i(ir)!=="svelte-1fkshtn"&&(ir.textContent=lo),Hn=a(Me),cr=o(Me,"UL",{"data-svelte-h":!0}),i(cr)!=="svelte-dna85o"&&(cr.innerHTML=io),Me.forEach(n),Sr.forEach(n),ca=a(e),R=o(e,"DIV",{class:!0});var Wr=v(R);g(et.$$.fragment,Wr),Pn=a(Wr),mr=o(Wr,"P",{"data-svelte-h":!0}),i(mr)!=="svelte-7nm0bd"&&(mr.innerHTML=co),jn=a(Wr),g(se.$$.fragment,Wr),Wr.forEach(n),ma=a(e),D=o(e,"DIV",{class:!0});var xe=v(D);g(tt.$$.fragment,xe),Jn=a(xe),dr=o(xe,"P",{"data-svelte-h":!0}),i(dr)!=="svelte-rsra78"&&(dr.innerHTML=mo),Dn=a(xe),fr=o(xe,"P",{"data-svelte-h":!0}),i(fr)!=="svelte-eu3kj7"&&(fr.innerHTML=fo),An=a(xe),F=o(xe,"DIV",{class:!0});var Le=v(F);g(rt.$$.fragment,Le),Un=a(Le),pr=o(Le,"P",{"data-svelte-h":!0}),i(pr)!=="svelte-jjkenj"&&(pr.innerHTML=po),Nn=a(Le),gr=o(Le,"P",{"data-svelte-h":!0}),i(gr)!=="svelte-1fkshtn"&&(gr.textContent=go),Fn=a(Le),hr=o(Le,"UL",{"data-svelte-h":!0}),i(hr)!=="svelte-z751aa"&&(hr.innerHTML=ho),Le.forEach(n),xe.forEach(n),da=a(e),g(at.$$.fragment,e),fa=a(e),T=o(e,"DIV",{class:!0});var w=v(T);g(nt.$$.fragment,w),Sn=a(w),ur=o(w,"P",{"data-svelte-h":!0}),i(ur)!=="svelte-14xg00o"&&(ur.textContent=uo),Wn=a(w),br=o(w,"P",{"data-svelte-h":!0}),i(br)!=="svelte-1xprdvt"&&(br.innerHTML=bo),zn=a(w),_r=o(w,"P",{"data-svelte-h":!0}),i(_r)!=="svelte-1mdgvl9"&&(_r.innerHTML=_o),Bn=a(w),g(oe.$$.fragment,w),Qn=a(w),le=o(w,"DIV",{class:!0});var La=v(le);g(st.$$.fragment,La),Vn=a(La),vr=o(La,"P",{"data-svelte-h":!0}),i(vr)!=="svelte-106889p"&&(vr.textContent=vo),La.forEach(n),qn=a(w),ie=o(w,"DIV",{class:!0});var Ia=v(ie);g(ot.$$.fragment,Ia),Rn=a(Ia),Tr=o(Ia,"P",{"data-svelte-h":!0}),i(Tr)!=="svelte-oshcpj"&&(Tr.textContent=To),Ia.forEach(n),Gn=a(w),ce=o(w,"DIV",{class:!0});var Ea=v(ce);g(lt.$$.fragment,Ea),Yn=a(Ea),$r=o(Ea,"P",{"data-svelte-h":!0}),i($r)!=="svelte-1o0xh73"&&($r.textContent=$o),Ea.forEach(n),On=a(w),me=o(w,"DIV",{class:!0});var Ha=v(me);g(it.$$.fragment,Ha),Xn=a(Ha),Cr=o(Ha,"P",{"data-svelte-h":!0}),i(Cr)!=="svelte-1wy373q"&&(Cr.innerHTML=Co),Ha.forEach(n),Zn=a(w),de=o(w,"DIV",{class:!0});var Pa=v(de);g(ct.$$.fragment,Pa),Kn=a(Pa),kr=o(Pa,"P",{"data-svelte-h":!0}),i(kr)!=="svelte-10eiwg0"&&(kr.textContent=ko),Pa.forEach(n),es=a(w),fe=o(w,"DIV",{class:!0});var ja=v(fe);g(mt.$$.fragment,ja),ts=a(ja),wr=o(ja,"P",{"data-svelte-h":!0}),i(wr)!=="svelte-1df7x4n"&&(wr.textContent=wo),ja.forEach(n),rs=a(w),pe=o(w,"DIV",{class:!0});var Ja=v(pe);g(dt.$$.fragment,Ja),as=a(Ja),yr=o(Ja,"P",{"data-svelte-h":!0}),i(yr)!=="svelte-18swygp"&&(yr.textContent=yo),Ja.forEach(n),ns=a(w),ge=o(w,"DIV",{class:!0});var Da=v(ge);g(ft.$$.fragment,Da),ss=a(Da),Mr=o(Da,"P",{"data-svelte-h":!0}),i(Mr)!=="svelte-19xp05v"&&(Mr.textContent=Mo),Da.forEach(n),os=a(w),he=o(w,"DIV",{class:!0});var Aa=v(he);g(pt.$$.fragment,Aa),ls=a(Aa),xr=o(Aa,"P",{"data-svelte-h":!0}),i(xr)!=="svelte-7af61p"&&(xr.textContent=xo),Aa.forEach(n),is=a(w),ue=o(w,"DIV",{class:!0});var Ua=v(ue);g(gt.$$.fragment,Ua),cs=a(Ua),Lr=o(Ua,"P",{"data-svelte-h":!0}),i(Lr)!=="svelte-8cdxjr"&&(Lr.textContent=Lo),Ua.forEach(n),ms=a(w),be=o(w,"DIV",{class:!0});var Na=v(be);g(ht.$$.fragment,Na),ds=a(Na),Ir=o(Na,"P",{"data-svelte-h":!0}),i(Ir)!=="svelte-sluvs0"&&(Ir.textContent=Io),Na.forEach(n),fs=a(w),_e=o(w,"DIV",{class:!0});var Fa=v(_e);g(ut.$$.fragment,Fa),ps=a(Fa),Er=o(Fa,"P",{"data-svelte-h":!0}),i(Er)!=="svelte-6bvy6d"&&(Er.textContent=Eo),Fa.forEach(n),gs=a(w),ve=o(w,"DIV",{class:!0});var Sa=v(ve);g(bt.$$.fragment,Sa),hs=a(Sa),Hr=o(Sa,"P",{"data-svelte-h":!0}),i(Hr)!=="svelte-zzwxsv"&&(Hr.textContent=Ho),Sa.forEach(n),w.forEach(n),pa=a(e),_t=o(e,"P",{"data-svelte-h":!0}),i(_t)!=="svelte-jteqqf"&&(_t.innerHTML=Po),ga=a(e),g(vt.$$.fragment,e),ha=a(e),Tt=o(e,"P",{"data-svelte-h":!0}),i(Tt)!=="svelte-8gc48t"&&(Tt.innerHTML=jo),ua=a(e),g($t.$$.fragment,e),ba=a(e),g(Ct.$$.fragment,e),_a=a(e),H=o(e,"DIV",{class:!0});var Y=v(H);g(kt.$$.fragment,Y),us=a(Y),Pr=o(Y,"P",{"data-svelte-h":!0}),i(Pr)!=="svelte-2lch02"&&(Pr.innerHTML=Jo),bs=a(Y),g(Te.$$.fragment,Y),_s=a(Y),$e=o(Y,"DIV",{class:!0});var Wa=v($e);g(wt.$$.fragment,Wa),vs=a(Wa),jr=o(Wa,"P",{"data-svelte-h":!0}),i(jr)!=="svelte-hbs6ga"&&(jr.innerHTML=Do),Wa.forEach(n),Ts=a(Y),Ce=o(Y,"DIV",{class:!0});var za=v(Ce);g(yt.$$.fragment,za),$s=a(za),Jr=o(za,"P",{"data-svelte-h":!0}),i(Jr)!=="svelte-dkslae"&&(Jr.innerHTML=Ao),za.forEach(n),Y.forEach(n),va=a(e),g(Mt.$$.fragment,e),Ta=a(e),re=o(e,"DIV",{class:!0});var Ba=v(re);g(xt.$$.fragment,Ba),Cs=a(Ba),Dr=o(Ba,"P",{"data-svelte-h":!0}),i(Dr)!=="svelte-lakwdm"&&(Dr.innerHTML=Uo),Ba.forEach(n),$a=a(e),zr=o(e,"P",{}),v(zr).forEach(n),this.h()},h(){$(m,"name","hf:doc:metadata"),$(m,"content",ll),$(P,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(S,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(O,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(X,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(Z,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(W,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(K,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(j,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(z,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(U,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(Q,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(ee,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(te,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(V,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(J,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(N,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(q,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(R,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(F,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(D,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(le,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(ie,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(ce,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(me,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(de,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(fe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(pe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(ge,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(he,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(ue,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(be,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(_e,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(ve,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(T,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$($e,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(Ce,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(H,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),$(re,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8")},m(e,l){t(document.head,m),c(e,x,l),c(e,b,l),c(e,k,l),h(y,e,l),c(e,_,l),c(e,M,l),c(e,E,l),c(e,Ie,l),c(e,Qr,l),c(e,Ee,l),c(e,Vr,l),c(e,He,l),c(e,qr,l),c(e,Pe,l),c(e,Rr,l),c(e,je,l),c(e,Gr,l),h(Je,e,l),c(e,Yr,l),c(e,De,l),c(e,Or,l),c(e,S,l),h(Ae,S,null),t(S,qa),t(S,Et),t(S,Ra),t(S,P),h(Ue,P,null),t(P,Ga),t(P,Ht),t(P,Ya),t(P,Pt),t(P,Oa),t(P,jt),t(P,Xa),t(P,Jt),c(e,Xr,l),c(e,O,l),h(Ne,O,null),t(O,Za),t(O,Dt),c(e,Zr,l),c(e,X,l),h(Fe,X,null),t(X,Ka),t(X,At),c(e,Kr,l),c(e,Z,l),h(Se,Z,null),t(Z,en),t(Z,Ut),c(e,ea,l),c(e,W,l),h(We,W,null),t(W,tn),t(W,Nt),t(W,rn),t(W,Ft),c(e,ta,l),c(e,K,l),h(ze,K,null),t(K,an),t(K,St),c(e,ra,l),c(e,z,l),h(Be,z,null),t(z,nn),t(z,Wt),t(z,sn),t(z,j),h(Qe,j,null),t(j,on),t(j,zt),t(j,ln),t(j,Bt),t(j,cn),t(j,Qt),t(j,mn),t(j,B),t(B,Ve),t(Ve,Vt),t(Ve,dn),h(ne,Ve,null),t(B,fn),t(B,qt),t(B,pn),t(B,Rt),t(B,gn),t(B,Gt),c(e,aa,l),c(e,Q,l),h(qe,Q,null),t(Q,hn),t(Q,Yt),t(Q,un),t(Q,U),h(Re,U,null),t(U,bn),t(U,Ot),t(U,_n),t(U,Xt),t(U,vn),t(U,Zt),c(e,na,l),c(e,ee,l),h(Ge,ee,null),t(ee,Tn),t(ee,Kt),c(e,sa,l),c(e,te,l),h(Ye,te,null),t(te,$n),t(te,er),c(e,oa,l),c(e,V,l),h(Oe,V,null),t(V,Cn),t(V,tr),t(V,kn),t(V,rr),c(e,la,l),c(e,J,l),h(Xe,J,null),t(J,wn),t(J,ar),t(J,yn),t(J,nr),t(J,Mn),t(J,sr),c(e,ia,l),c(e,q,l),h(Ze,q,null),t(q,xn),t(q,or),t(q,Ln),t(q,N),h(Ke,N,null),t(N,In),t(N,lr),t(N,En),t(N,ir),t(N,Hn),t(N,cr),c(e,ca,l),c(e,R,l),h(et,R,null),t(R,Pn),t(R,mr),t(R,jn),h(se,R,null),c(e,ma,l),c(e,D,l),h(tt,D,null),t(D,Jn),t(D,dr),t(D,Dn),t(D,fr),t(D,An),t(D,F),h(rt,F,null),t(F,Un),t(F,pr),t(F,Nn),t(F,gr),t(F,Fn),t(F,hr),c(e,da,l),h(at,e,l),c(e,fa,l),c(e,T,l),h(nt,T,null),t(T,Sn),t(T,ur),t(T,Wn),t(T,br),t(T,zn),t(T,_r),t(T,Bn),h(oe,T,null),t(T,Qn),t(T,le),h(st,le,null),t(le,Vn),t(le,vr),t(T,qn),t(T,ie),h(ot,ie,null),t(ie,Rn),t(ie,Tr),t(T,Gn),t(T,ce),h(lt,ce,null),t(ce,Yn),t(ce,$r),t(T,On),t(T,me),h(it,me,null),t(me,Xn),t(me,Cr),t(T,Zn),t(T,de),h(ct,de,null),t(de,Kn),t(de,kr),t(T,es),t(T,fe),h(mt,fe,null),t(fe,ts),t(fe,wr),t(T,rs),t(T,pe),h(dt,pe,null),t(pe,as),t(pe,yr),t(T,ns),t(T,ge),h(ft,ge,null),t(ge,ss),t(ge,Mr),t(T,os),t(T,he),h(pt,he,null),t(he,ls),t(he,xr),t(T,is),t(T,ue),h(gt,ue,null),t(ue,cs),t(ue,Lr),t(T,ms),t(T,be),h(ht,be,null),t(be,ds),t(be,Ir),t(T,fs),t(T,_e),h(ut,_e,null),t(_e,ps),t(_e,Er),t(T,gs),t(T,ve),h(bt,ve,null),t(ve,hs),t(ve,Hr),c(e,pa,l),c(e,_t,l),c(e,ga,l),h(vt,e,l),c(e,ha,l),c(e,Tt,l),c(e,ua,l),h($t,e,l),c(e,ba,l),h(Ct,e,l),c(e,_a,l),c(e,H,l),h(kt,H,null),t(H,us),t(H,Pr),t(H,bs),h(Te,H,null),t(H,_s),t(H,$e),h(wt,$e,null),t($e,vs),t($e,jr),t(H,Ts),t(H,Ce),h(yt,Ce,null),t(Ce,$s),t(Ce,Jr),c(e,va,l),h(Mt,e,l),c(e,Ta,l),c(e,re,l),h(xt,re,null),t(re,Cs),t(re,Dr),c(e,$a,l),c(e,zr,l),Ca=!0},p(e,[l]){const ae={};l&2&&(ae.$$scope={dirty:l,ctx:e}),ne.$set(ae);const A={};l&2&&(A.$$scope={dirty:l,ctx:e}),se.$set(A);const Lt={};l&2&&(Lt.$$scope={dirty:l,ctx:e}),oe.$set(Lt);const It={};l&2&&(It.$$scope={dirty:l,ctx:e}),Te.$set(It)},i(e){Ca||(d(y.$$.fragment,e),d(Je.$$.fragment,e),d(Ae.$$.fragment,e),d(Ue.$$.fragment,e),d(Ne.$$.fragment,e),d(Fe.$$.fragment,e),d(Se.$$.fragment,e),d(We.$$.fragment,e),d(ze.$$.fragment,e),d(Be.$$.fragment,e),d(Qe.$$.fragment,e),d(ne.$$.fragment,e),d(qe.$$.fragment,e),d(Re.$$.fragment,e),d(Ge.$$.fragment,e),d(Ye.$$.fragment,e),d(Oe.$$.fragment,e),d(Xe.$$.fragment,e),d(Ze.$$.fragment,e),d(Ke.$$.fragment,e),d(et.$$.fragment,e),d(se.$$.fragment,e),d(tt.$$.fragment,e),d(rt.$$.fragment,e),d(at.$$.fragment,e),d(nt.$$.fragment,e),d(oe.$$.fragment,e),d(st.$$.fragment,e),d(ot.$$.fragment,e),d(lt.$$.fragment,e),d(it.$$.fragment,e),d(ct.$$.fragment,e),d(mt.$$.fragment,e),d(dt.$$.fragment,e),d(ft.$$.fragment,e),d(pt.$$.fragment,e),d(gt.$$.fragment,e),d(ht.$$.fragment,e),d(ut.$$.fragment,e),d(bt.$$.fragment,e),d(vt.$$.fragment,e),d($t.$$.fragment,e),d(Ct.$$.fragment,e),d(kt.$$.fragment,e),d(Te.$$.fragment,e),d(wt.$$.fragment,e),d(yt.$$.fragment,e),d(Mt.$$.fragment,e),d(xt.$$.fragment,e),Ca=!0)},o(e){f(y.$$.fragment,e),f(Je.$$.fragment,e),f(Ae.$$.fragment,e),f(Ue.$$.fragment,e),f(Ne.$$.fragment,e),f(Fe.$$.fragment,e),f(Se.$$.fragment,e),f(We.$$.fragment,e),f(ze.$$.fragment,e),f(Be.$$.fragment,e),f(Qe.$$.fragment,e),f(ne.$$.fragment,e),f(qe.$$.fragment,e),f(Re.$$.fragment,e),f(Ge.$$.fragment,e),f(Ye.$$.fragment,e),f(Oe.$$.fragment,e),f(Xe.$$.fragment,e),f(Ze.$$.fragment,e),f(Ke.$$.fragment,e),f(et.$$.fragment,e),f(se.$$.fragment,e),f(tt.$$.fragment,e),f(rt.$$.fragment,e),f(at.$$.fragment,e),f(nt.$$.fragment,e),f(oe.$$.fragment,e),f(st.$$.fragment,e),f(ot.$$.fragment,e),f(lt.$$.fragment,e),f(it.$$.fragment,e),f(ct.$$.fragment,e),f(mt.$$.fragment,e),f(dt.$$.fragment,e),f(ft.$$.fragment,e),f(pt.$$.fragment,e),f(gt.$$.fragment,e),f(ht.$$.fragment,e),f(ut.$$.fragment,e),f(bt.$$.fragment,e),f(vt.$$.fragment,e),f($t.$$.fragment,e),f(Ct.$$.fragment,e),f(kt.$$.fragment,e),f(Te.$$.fragment,e),f(wt.$$.fragment,e),f(yt.$$.fragment,e),f(Mt.$$.fragment,e),f(xt.$$.fragment,e),Ca=!1},d(e){e&&(n(x),n(b),n(k),n(_),n(M),n(E),n(Ie),n(Qr),n(Ee),n(Vr),n(He),n(qr),n(Pe),n(Rr),n(je),n(Gr),n(Yr),n(De),n(Or),n(S),n(Xr),n(O),n(Zr),n(X),n(Kr),n(Z),n(ea),n(W),n(ta),n(K),n(ra),n(z),n(aa),n(Q),n(na),n(ee),n(sa),n(te),n(oa),n(V),n(la),n(J),n(ia),n(q),n(ca),n(R),n(ma),n(D),n(da),n(fa),n(T),n(pa),n(_t),n(ga),n(ha),n(Tt),n(ua),n(ba),n(_a),n(H),n(va),n(Ta),n(re),n($a),n(zr)),n(m),u(y,e),u(Je,e),u(Ae),u(Ue),u(Ne),u(Fe),u(Se),u(We),u(ze),u(Be),u(Qe),u(ne),u(qe),u(Re),u(Ge),u(Ye),u(Oe),u(Xe),u(Ze),u(Ke),u(et),u(se),u(tt),u(rt),u(at,e),u(nt),u(oe),u(st),u(ot),u(lt),u(it),u(ct),u(mt),u(dt),u(ft),u(pt),u(gt),u(ht),u(ut),u(bt),u(vt,e),u($t,e),u(Ct,e),u(kt),u(Te),u(wt),u(yt),u(Mt,e),u(xt)}}}const ll='{"title":"Callbacks","local":"callbacks","sections":[{"title":"Available Callbacks","local":"transformers.integrations.CometCallback","sections":[],"depth":2},{"title":"TrainerCallback","local":"transformers.TrainerCallback","sections":[],"depth":2},{"title":"TrainerState","local":"transformers.TrainerState","sections":[],"depth":2},{"title":"TrainerControl","local":"transformers.TrainerControl","sections":[],"depth":2}],"depth":1}';function il(I){return Yo(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class ul extends zo{constructor(m){super(),Bo(this,m,il,ol,Wo,{})}}export{ul as component};
