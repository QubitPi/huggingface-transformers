import{s as Ba,f as Qa,o as Sa,n as Aa}from"../chunks/scheduler.36a0863c.js";import{S as Na,i as Da,g as o,s,r as p,A as Ka,h as i,f as a,c as n,j as la,u as m,x as r,k as M,y as Oa,a as l,v as u,d,t as c,w as f}from"../chunks/index.f891bdb2.js";import{T as el}from"../chunks/Tip.a8272f7f.js";import{Y as tl}from"../chunks/Youtube.0cbacd3d.js";import{C as g}from"../chunks/CodeBlock.3ec784ea.js";import{H as v}from"../chunks/Heading.3fb90772.js";function al(qe){let b,T='Para compartir un modelo con la comunidad necesitas una cuenta en <a href="https://huggingface.co/join" rel="nofollow">huggingface.co</a>. Tambi√©n puedes unirte a una organizaci√≥n existente o crear una nueva.';return{c(){b=o("p"),b.innerHTML=T},l($){b=i($,"P",{"data-svelte-h":!0}),r(b)!=="svelte-rlvb74"&&(b.innerHTML=T)},m($,Ge){l($,b,Ge)},p:Aa,d($){$&&a(b)}}}function ll(qe){let b,T,$,Ge,y,Pe,_,sa="Los √∫ltimos dos tutoriales mostraron c√≥mo puedes realizar fine-tunning a un modelo con PyTorch, Keras y ü§ó Accelerate para configuraciones distribuidas. ¬°El siguiente paso es compartir tu modelo con la comunidad! En Hugging Face creemos en compartir abiertamente a todos el conocimiento y los recursos para democratizar la inteligencia artificial. En este sentido, te animamos a considerar compartir tu modelo con la comunidad, de esta forma ayudas a otros ahorrando tiempo y recursos.",ze,C,na='En este tutorial aprender√°s dos m√©todos para compartir un modelo trained o fine-tuned en el <a href="https://huggingface.co/models" rel="nofollow">Model Hub</a>:',Ye,H,oa="<li>Mediante C√≥digo, enviando (push) tus archivos al Hub.</li> <li>Con la interfaz Web, con Drag-and-drop de tus archivos al Hub.</li>",Ie,h,ia,Ee,w,Ve,j,Be,k,ra="Cada repositorio en el Model Hub se comporta como cualquier otro repositorio en GitHub. Nuestros repositorios ofrecen versioning, commit history, y la habilidad para visualizar diferencias.",Qe,J,pa='El versioning desarrollado dentro del Model Hub es basado en git y <a href="https://git-lfs.github.com/" rel="nofollow">git-lfs</a>. En otras palabras, puedes tratar un modelo como un repositorio, brindando un mejor control de acceso y escalabilidad. Version control permite <em>revisions</em>, un m√©todo para apuntar a una versi√≥n espec√≠fica de un modelo utilizando un commit hash, tag o branch.',Se,W,ma="Como resultado, puedes cargar una versi√≥n espec√≠fica del modelo con el par√°metro <code>revision</code>:",Ae,Z,Ne,L,ua="Los archivos son editados f√°cilmente dentro de un repositorio. Incluso puedes observar el commit history y las diferencias:",De,x,da='<img src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/vis_diff.png" alt="vis_diff"/>',Ke,U,Oe,F,ca="Antes de compartir un modelo al Hub necesitar√°s tus credenciales de Hugging Face. Si tienes acceso a una terminal ejecuta el siguiente comando en el entorno virtual donde ü§ó Transformers est√© instalado. Esto guardar√° tu token de acceso dentro de tu carpeta cache de Hugging Face (~/.cache/ by default):",et,X,tt,G,fa='Si usas un notebook como Jupyter o Colaboratory, aseg√∫rate de tener instalada la biblioteca <a href="https://huggingface.co/docs/hub/adding-a-library" rel="nofollow"><code>huggingface_hub</code></a>. Esta biblioteca te permitir√° interactuar por c√≥digo con el Hub.',at,R,lt,q,ga='Luego usa <code>notebook_login</code> para iniciar sesi√≥n al Hub, y sigue el link <a href="https://huggingface.co/settings/token" rel="nofollow">aqu√≠</a> para generar un token con el que iniciaremos sesi√≥n:',st,P,nt,z,ot,Y,ba="Para asegurarnos que tu modelo pueda ser usado por alguien que est√© trabajando con un framework diferente, te recomendamos convertir y subir tu modelo con checkpoints de pytorch y tensorflow. Aunque los usuarios a√∫n son capaces de cargar su modelo desde un framework diferente, si se omite este paso ser√° m√°s lento debido a que ü§ó Transformers necesitar√° convertir el checkpoint sobre-la-marcha.",it,I,ha='Convertir un checkpoint para otro framework es f√°cil. Aseg√∫rate tener Pytorch y TensorFlow instalado (V√©ase <a href="installation">aqu√≠</a> para instrucciones de instalaci√≥n), y luego encuentra el modelo espec√≠fico para tu tarea en el otro Framework.',rt,E,$a="Por ejemplo, supongamos que has entrenado DistilBert para clasificaci√≥n de secuencias en PyTorch y quieres convertirlo a su equivalente en TensorFlow. Cargas el equivalente en TensorFlow de tu modelo para tu tarea y especificas <code>from_pt=True</code> as√≠ ü§ó Transformers convertir√° el Pytorch checkpoint a un TensorFlow Checkpoint:",pt,V,mt,B,va="Luego guardas tu nuevo modelo TensorFlow con su nuevo checkpoint:",ut,Q,dt,S,wa="De manera similar, especificas <code>from_tf=True</code> para convertir un checkpoint de TensorFlow a Pytorch:",ct,A,ft,N,Ma="Si alg√∫n modelo est√° disponible en Flax, tambi√©n puedes convertir un checkpoint de Pytorch a Flax:",gt,D,bt,K,ht,O,$t,ee,Ta='Compartir un modelo al Hub es tan simple como a√±adir un par√°metro extra o un callback. Si recuerdas del tutorial de <a href="training">fine-tuning tutorial</a>, la clase <code>TrainingArguments</code> es donde especificas los Hiperpar√°metros y opciones de entrenamiento adicionales. Una de estas opciones incluye la habilidad de compartir un modelo directamente al Hub. Para ello configuras <code>push_to_hub=True</code> dentro de <code>TrainingArguments</code>:',vt,te,wt,ae,ya="A continuaci√≥n, como usualmente, pasa tus argumentos de entrenamiento a <code>Trainer</code>:",Mt,le,Tt,se,_a="Luego que realizas fine-tune a tu modelo, llamas <code>push_to_hub()</code> en <code>Trainer</code> para enviar el modelo al Hub!ü§ó Transformers incluso a√±adir√° autom√°ticamente los Hiperpar√°metros de entrenamiento, resultados de entrenamiento y versiones del Framework a tu model card!",yt,ne,_t,oe,Ct,ie,Ca="Los usuarios de TensorFlow pueden activar la misma funcionalidad con <code>PushToHubCallback</code>. En la funcion <code>PushToHubCallback</code>, agrega:",Ht,re,Ha="<li>Un directorio de salida para tu modelo.</li> <li>Un tokenizador.</li> <li>El <code>hub_model_id</code>, el cual es tu usuario Hub y el nombre del modelo.</li>",jt,pe,kt,me,ja='Agregamos el callback a <a href="https://keras.io/api/models/model_training_apis/" rel="nofollow"><code>fit</code></a>, y ü§ó Transformers enviar√° el modelo entrenado al Hub:',Jt,ue,Wt,de,Zt,ce,ka="Puedes llamar la funci√≥n <code>push_to_hub</code> directamente en tu modelo para subirlo al Hub.",Lt,fe,Ja="Especifica el nombre del modelo en <code>push_to_hub</code>:",xt,ge,Ut,be,Wa="Esto crear√° un repositorio bajo tu usuario con el nombre del modelo <code>my-awesome-model</code>. Ahora los usuarios pueden cargar tu modelo con la funci√≥n <code>from_pretrained</code>:",Ft,he,Xt,$e,Za="Si perteneces a una organizaci√≥n y quieres compartir tu modelo bajo el nombre de la organizaci√≥n, a√±ade el par√°metro <code>organization</code>:",Gt,ve,Rt,we,La="La funci√≥n <code>push_to_hub</code> tambi√©n puede ser usada para a√±adir archivos al repositorio del modelo. Por ejemplo, a√±ade un tokenizador al repositorio:",qt,Me,Pt,Te,xa="O quiz√°s te gustar√≠a a√±adir la versi√≥n de TensorFlow de tu modelo fine-tuned en Pytorch:",zt,ye,Yt,_e,Ua="Ahora, cuando navegues a tu perfil en Hugging Face, deber√≠as observar el repositorio de tu modelo creado recientemente. Si das click en el tab <strong>Files</strong> observar√°s todos los archivos que has subido al repositorio.",It,Ce,Fa='Para m√°s detalles sobre c√≥mo crear y subir archivos al repositorio, consulta la <a href="https://huggingface.co/docs/hub/how-to-upstream" rel="nofollow">documentaci√≥n del Hub</a>.',Et,He,Vt,je,Xa='Los usuarios que prefieran un enfoque no-code tienen la opci√≥n de cargar su modelo a trav√©s de la interfaz gr√°fica del Hub. Visita la p√°gina <a href="https://huggingface.co/new" rel="nofollow">huggingface.co/new</a> para crear un nuevo repositorio:',Bt,ke,Ga='<img src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/new_model_repo.png" alt="new_model_repo"/>',Qt,Je,Ra="Desde aqu√≠, a√±ade informaci√≥n acerca del modelo:",St,We,qa="<li>Selecciona el <strong>owner</strong> (la persona propietaria) del repositorio. Puedes ser t√∫ o cualquier organizaci√≥n a la que pertenezcas.</li> <li>Escoge un nombre para tu modelo. Tambi√©n ser√° el nombre del repositorio.</li> <li>Elige si tu modelo es p√∫blico o privado.</li> <li>Especifica la licencia que usar√° tu modelo.</li>",At,Ze,Pa="Ahora puedes hacer click en el tab <strong>Files</strong> y luego en el bot√≥n <strong>Add file</strong> para subir un nuevo archivo a tu repositorio. Luego arrastra y suelta un archivo a subir y le a√±ades un mensaje al commit.",Nt,Le,za='<img src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/upload_file.png" alt="upload_file"/>',Dt,xe,Kt,Ue,Ya="Para asegurarnos que los usuarios entiendan las capacidades de tu modelo, sus limitaciones, posibles sesgos y consideraciones √©ticas, por favor a√±ade una tarjeta (como una tarjeta de presentaci√≥n) al repositorio del modelo. La tarjeta de modelo es definida en el archivo <code>README.md</code>. Puedes agregar una de la siguiente manera:",Ot,Fe,Ia="<li>Elaborando y subiendo manualmente el archivo<code>README.md</code>.</li> <li>Dando click en el bot√≥n <strong>Edit model card</strong> dentro del repositorio.</li>",ea,Xe,Ea='Toma un momento para ver la <a href="https://huggingface.co/distilbert/distilbert-base-uncased" rel="nofollow">tarjeta de modelo</a> de DistilBert para que tengas un buen ejemplo del tipo de informaci√≥n que deber√≠a incluir. Consulta <a href="https://huggingface.co/docs/hub/models-cards" rel="nofollow">la documentaci√≥n</a> para m√°s detalles acerca de otras opciones que puedes controlar dentro del archivo <code>README.md</code> como la huella de carbono del modelo o ejemplos de widgets. Consulta la documentaci√≥n <a href="https://huggingface.co/docs/hub/models-cards" rel="nofollow">aqu√≠</a>.',ta,Re,aa;return y=new v({props:{title:"Compartir un modelo",local:"compartir-un-modelo",headingTag:"h1"}}),w=new el({props:{$$slots:{default:[al]},$$scope:{ctx:qe}}}),j=new v({props:{title:"Caracter√≠sticas de los repositorios",local:"caracter√≠sticas-de-los-repositorios",headingTag:"h2"}}),Z=new g({props:{code:"bW9kZWwlMjAlM0QlMjBBdXRvTW9kZWwuZnJvbV9wcmV0cmFpbmVkKCUwQSUyMCUyMCUyMCUyMCUyMmp1bGllbi1jJTJGRXNwZXJCRVJUby1zbWFsbCUyMiUyQyUyMHJldmlzaW9uJTNEJTIydjIuMC4xJTIyJTIwJTIwJTIzJTIwdGFnJTIwbmFtZSUyQyUyMG9yJTIwYnJhbmNoJTIwbmFtZSUyQyUyMG9yJTIwY29tbWl0JTIwaGFzaCUwQSk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>model = AutoModel.from_pretrained(
<span class="hljs-meta">... </span>    <span class="hljs-string">&quot;julien-c/EsperBERTo-small&quot;</span>, revision=<span class="hljs-string">&quot;v2.0.1&quot;</span>  <span class="hljs-comment"># tag name, or branch name, or commit hash</span>
<span class="hljs-meta">... </span>)`,wrap:!1}}),U=new v({props:{title:"Configuraci√≥n inicial",local:"configuraci√≥n-inicial",headingTag:"h2"}}),X=new g({props:{code:"aHVnZ2luZ2ZhY2UtY2xpJTIwbG9naW4=",highlighted:"huggingface-cli login",wrap:!1}}),R=new g({props:{code:"cGlwJTIwaW5zdGFsbCUyMGh1Z2dpbmdmYWNlX2h1Yg==",highlighted:"pip install huggingface_hub",wrap:!1}}),P=new g({props:{code:"ZnJvbSUyMGh1Z2dpbmdmYWNlX2h1YiUyMGltcG9ydCUyMG5vdGVib29rX2xvZ2luJTBBJTBBbm90ZWJvb2tfbG9naW4oKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> notebook_login

<span class="hljs-meta">&gt;&gt;&gt; </span>notebook_login()`,wrap:!1}}),z=new v({props:{title:"Convertir un modelo para todos los Frameworks",local:"convertir-un-modelo-para-todos-los-frameworks",headingTag:"h2"}}),V=new g({props:{code:"dGZfbW9kZWwlMjAlM0QlMjBURkRpc3RpbEJlcnRGb3JTZXF1ZW5jZUNsYXNzaWZpY2F0aW9uLmZyb21fcHJldHJhaW5lZCglMjJwYXRoJTJGdG8lMkZhd2Vzb21lLW5hbWUteW91LXBpY2tlZCUyMiUyQyUyMGZyb21fcHQlM0RUcnVlKQ==",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>tf_model = TFDistilBertForSequenceClassification.from_pretrained(<span class="hljs-string">&quot;path/to/awesome-name-you-picked&quot;</span>, from_pt=<span class="hljs-literal">True</span>)',wrap:!1}}),Q=new g({props:{code:"dGZfbW9kZWwuc2F2ZV9wcmV0cmFpbmVkKCUyMnBhdGglMkZ0byUyRmF3ZXNvbWUtbmFtZS15b3UtcGlja2VkJTIyKQ==",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>tf_model.save_pretrained(<span class="hljs-string">&quot;path/to/awesome-name-you-picked&quot;</span>)',wrap:!1}}),A=new g({props:{code:"cHRfbW9kZWwlMjAlM0QlMjBEaXN0aWxCZXJ0Rm9yU2VxdWVuY2VDbGFzc2lmaWNhdGlvbi5mcm9tX3ByZXRyYWluZWQoJTIycGF0aCUyRnRvJTJGYXdlc29tZS1uYW1lLXlvdS1waWNrZWQlMjIlMkMlMjBmcm9tX3RmJTNEVHJ1ZSklMEFwdF9tb2RlbC5zYXZlX3ByZXRyYWluZWQoJTIycGF0aCUyRnRvJTJGYXdlc29tZS1uYW1lLXlvdS1waWNrZWQlMjIp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>pt_model = DistilBertForSequenceClassification.from_pretrained(<span class="hljs-string">&quot;path/to/awesome-name-you-picked&quot;</span>, from_tf=<span class="hljs-literal">True</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>pt_model.save_pretrained(<span class="hljs-string">&quot;path/to/awesome-name-you-picked&quot;</span>)`,wrap:!1}}),D=new g({props:{code:"ZmxheF9tb2RlbCUyMCUzRCUyMEZsYXhEaXN0aWxCZXJ0Rm9yU2VxdWVuY2VDbGFzc2lmaWNhdGlvbi5mcm9tX3ByZXRyYWluZWQoJTBBJTIwJTIwJTIwJTIwJTIycGF0aCUyRnRvJTJGYXdlc29tZS1uYW1lLXlvdS1waWNrZWQlMjIlMkMlMjBmcm9tX3B0JTNEVHJ1ZSUwQSk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>flax_model = FlaxDistilBertForSequenceClassification.from_pretrained(
<span class="hljs-meta">... </span>    <span class="hljs-string">&quot;path/to/awesome-name-you-picked&quot;</span>, from_pt=<span class="hljs-literal">True</span>
<span class="hljs-meta">... </span>)`,wrap:!1}}),K=new v({props:{title:"Compartir un modelo con Trainer",local:"compartir-un-modelo-con-trainer",headingTag:"h2"}}),O=new tl({props:{id:"Z1-XMy-GNLQ"}}),te=new g({props:{code:"dHJhaW5pbmdfYXJncyUyMCUzRCUyMFRyYWluaW5nQXJndW1lbnRzKG91dHB1dF9kaXIlM0QlMjJteS1hd2Vzb21lLW1vZGVsJTIyJTJDJTIwcHVzaF90b19odWIlM0RUcnVlKQ==",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>training_args = TrainingArguments(output_dir=<span class="hljs-string">&quot;my-awesome-model&quot;</span>, push_to_hub=<span class="hljs-literal">True</span>)',wrap:!1}}),le=new g({props:{code:"dHJhaW5lciUyMCUzRCUyMFRyYWluZXIoJTBBJTIwJTIwJTIwJTIwbW9kZWwlM0Rtb2RlbCUyQyUwQSUyMCUyMCUyMCUyMGFyZ3MlM0R0cmFpbmluZ19hcmdzJTJDJTBBJTIwJTIwJTIwJTIwdHJhaW5fZGF0YXNldCUzRHNtYWxsX3RyYWluX2RhdGFzZXQlMkMlMEElMjAlMjAlMjAlMjBldmFsX2RhdGFzZXQlM0RzbWFsbF9ldmFsX2RhdGFzZXQlMkMlMEElMjAlMjAlMjAlMjBjb21wdXRlX21ldHJpY3MlM0Rjb21wdXRlX21ldHJpY3MlMkMlMEEp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>trainer = Trainer(
<span class="hljs-meta">... </span>    model=model,
<span class="hljs-meta">... </span>    args=training_args,
<span class="hljs-meta">... </span>    train_dataset=small_train_dataset,
<span class="hljs-meta">... </span>    eval_dataset=small_eval_dataset,
<span class="hljs-meta">... </span>    compute_metrics=compute_metrics,
<span class="hljs-meta">... </span>)`,wrap:!1}}),ne=new g({props:{code:"dHJhaW5lci5wdXNoX3RvX2h1Yigp",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>trainer.push_to_hub()',wrap:!1}}),oe=new v({props:{title:"Compartir un modelo con PushToHubCallback",local:"compartir-un-modelo-con-pushtohubcallback",headingTag:"h2"}}),pe=new g({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMFB1c2hUb0h1YkNhbGxiYWNrJTBBJTBBcHVzaF90b19odWJfY2FsbGJhY2slMjAlM0QlMjBQdXNoVG9IdWJDYWxsYmFjayglMEElMjAlMjAlMjAlMjBvdXRwdXRfZGlyJTNEJTIyLiUyRnlvdXJfbW9kZWxfc2F2ZV9wYXRoJTIyJTJDJTIwdG9rZW5pemVyJTNEdG9rZW5pemVyJTJDJTIwaHViX21vZGVsX2lkJTNEJTIyeW91ci11c2VybmFtZSUyRm15LWF3ZXNvbWUtbW9kZWwlMjIlMEEp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> PushToHubCallback

<span class="hljs-meta">&gt;&gt;&gt; </span>push_to_hub_callback = PushToHubCallback(
<span class="hljs-meta">... </span>    output_dir=<span class="hljs-string">&quot;./your_model_save_path&quot;</span>, tokenizer=tokenizer, hub_model_id=<span class="hljs-string">&quot;your-username/my-awesome-model&quot;</span>
<span class="hljs-meta">... </span>)`,wrap:!1}}),ue=new g({props:{code:"bW9kZWwuZml0KHRmX3RyYWluX2RhdGFzZXQlMkMlMjB2YWxpZGF0aW9uX2RhdGElM0R0Zl92YWxpZGF0aW9uX2RhdGFzZXQlMkMlMjBlcG9jaHMlM0QzJTJDJTIwY2FsbGJhY2tzJTNEcHVzaF90b19odWJfY2FsbGJhY2sp",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>model.fit(tf_train_dataset, validation_data=tf_validation_dataset, epochs=<span class="hljs-number">3</span>, callbacks=push_to_hub_callback)',wrap:!1}}),de=new v({props:{title:"Usando la funci√≥n push_to_hub",local:"usando-la-funci√≥n-pushtohub",headingTag:"h2"}}),ge=new g({props:{code:"cHRfbW9kZWwucHVzaF90b19odWIoJTIybXktYXdlc29tZS1tb2RlbCUyMik=",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>pt_model.push_to_hub(<span class="hljs-string">&quot;my-awesome-model&quot;</span>)',wrap:!1}}),he=new g({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMEF1dG9Nb2RlbCUwQSUwQW1vZGVsJTIwJTNEJTIwQXV0b01vZGVsLmZyb21fcHJldHJhaW5lZCglMjJ5b3VyX3VzZXJuYW1lJTJGbXktYXdlc29tZS1tb2RlbCUyMik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoModel

<span class="hljs-meta">&gt;&gt;&gt; </span>model = AutoModel.from_pretrained(<span class="hljs-string">&quot;your_username/my-awesome-model&quot;</span>)`,wrap:!1}}),ve=new g({props:{code:"cHRfbW9kZWwucHVzaF90b19odWIoJTIybXktYXdlc29tZS1tb2RlbCUyMiUyQyUyMG9yZ2FuaXphdGlvbiUzRCUyMm15LWF3ZXNvbWUtb3JnJTIyKQ==",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>pt_model.push_to_hub(<span class="hljs-string">&quot;my-awesome-model&quot;</span>, organization=<span class="hljs-string">&quot;my-awesome-org&quot;</span>)',wrap:!1}}),Me=new g({props:{code:"dG9rZW5pemVyLnB1c2hfdG9faHViKCUyMm15LWF3ZXNvbWUtbW9kZWwlMjIp",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer.push_to_hub(<span class="hljs-string">&quot;my-awesome-model&quot;</span>)',wrap:!1}}),ye=new g({props:{code:"dGZfbW9kZWwucHVzaF90b19odWIoJTIybXktYXdlc29tZS1tb2RlbCUyMik=",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>tf_model.push_to_hub(<span class="hljs-string">&quot;my-awesome-model&quot;</span>)',wrap:!1}}),He=new v({props:{title:"Compartir con la interfaz web",local:"compartir-con-la-interfaz-web",headingTag:"h2"}}),xe=new v({props:{title:"A√±adiendo una tarjeta de modelo",local:"a√±adiendo-una-tarjeta-de-modelo",headingTag:"h2"}}),{c(){b=o("meta"),T=s(),$=o("p"),Ge=s(),p(y.$$.fragment),Pe=s(),_=o("p"),_.textContent=sa,ze=s(),C=o("p"),C.innerHTML=na,Ye=s(),H=o("ul"),H.innerHTML=oa,Ie=s(),h=o("iframe"),Ee=s(),p(w.$$.fragment),Ve=s(),p(j.$$.fragment),Be=s(),k=o("p"),k.textContent=ra,Qe=s(),J=o("p"),J.innerHTML=pa,Se=s(),W=o("p"),W.innerHTML=ma,Ae=s(),p(Z.$$.fragment),Ne=s(),L=o("p"),L.textContent=ua,De=s(),x=o("p"),x.innerHTML=da,Ke=s(),p(U.$$.fragment),Oe=s(),F=o("p"),F.textContent=ca,et=s(),p(X.$$.fragment),tt=s(),G=o("p"),G.innerHTML=fa,at=s(),p(R.$$.fragment),lt=s(),q=o("p"),q.innerHTML=ga,st=s(),p(P.$$.fragment),nt=s(),p(z.$$.fragment),ot=s(),Y=o("p"),Y.textContent=ba,it=s(),I=o("p"),I.innerHTML=ha,rt=s(),E=o("p"),E.innerHTML=$a,pt=s(),p(V.$$.fragment),mt=s(),B=o("p"),B.textContent=va,ut=s(),p(Q.$$.fragment),dt=s(),S=o("p"),S.innerHTML=wa,ct=s(),p(A.$$.fragment),ft=s(),N=o("p"),N.textContent=Ma,gt=s(),p(D.$$.fragment),bt=s(),p(K.$$.fragment),ht=s(),p(O.$$.fragment),$t=s(),ee=o("p"),ee.innerHTML=Ta,vt=s(),p(te.$$.fragment),wt=s(),ae=o("p"),ae.innerHTML=ya,Mt=s(),p(le.$$.fragment),Tt=s(),se=o("p"),se.innerHTML=_a,yt=s(),p(ne.$$.fragment),_t=s(),p(oe.$$.fragment),Ct=s(),ie=o("p"),ie.innerHTML=Ca,Ht=s(),re=o("ul"),re.innerHTML=Ha,jt=s(),p(pe.$$.fragment),kt=s(),me=o("p"),me.innerHTML=ja,Jt=s(),p(ue.$$.fragment),Wt=s(),p(de.$$.fragment),Zt=s(),ce=o("p"),ce.innerHTML=ka,Lt=s(),fe=o("p"),fe.innerHTML=Ja,xt=s(),p(ge.$$.fragment),Ut=s(),be=o("p"),be.innerHTML=Wa,Ft=s(),p(he.$$.fragment),Xt=s(),$e=o("p"),$e.innerHTML=Za,Gt=s(),p(ve.$$.fragment),Rt=s(),we=o("p"),we.innerHTML=La,qt=s(),p(Me.$$.fragment),Pt=s(),Te=o("p"),Te.textContent=xa,zt=s(),p(ye.$$.fragment),Yt=s(),_e=o("p"),_e.innerHTML=Ua,It=s(),Ce=o("p"),Ce.innerHTML=Fa,Et=s(),p(He.$$.fragment),Vt=s(),je=o("p"),je.innerHTML=Xa,Bt=s(),ke=o("p"),ke.innerHTML=Ga,Qt=s(),Je=o("p"),Je.textContent=Ra,St=s(),We=o("ul"),We.innerHTML=qa,At=s(),Ze=o("p"),Ze.innerHTML=Pa,Nt=s(),Le=o("p"),Le.innerHTML=za,Dt=s(),p(xe.$$.fragment),Kt=s(),Ue=o("p"),Ue.innerHTML=Ya,Ot=s(),Fe=o("ul"),Fe.innerHTML=Ia,ea=s(),Xe=o("p"),Xe.innerHTML=Ea,ta=s(),Re=o("p"),this.h()},l(e){const t=Ka("svelte-u9bgzb",document.head);b=i(t,"META",{name:!0,content:!0}),t.forEach(a),T=n(e),$=i(e,"P",{}),la($).forEach(a),Ge=n(e),m(y.$$.fragment,e),Pe=n(e),_=i(e,"P",{"data-svelte-h":!0}),r(_)!=="svelte-1k0bjf1"&&(_.textContent=sa),ze=n(e),C=i(e,"P",{"data-svelte-h":!0}),r(C)!=="svelte-1l6l27k"&&(C.innerHTML=na),Ye=n(e),H=i(e,"UL",{"data-svelte-h":!0}),r(H)!=="svelte-lbt73o"&&(H.innerHTML=oa),Ie=n(e),h=i(e,"IFRAME",{width:!0,height:!0,src:!0,title:!0,frameborder:!0,allow:!0}),la(h).forEach(a),Ee=n(e),m(w.$$.fragment,e),Ve=n(e),m(j.$$.fragment,e),Be=n(e),k=i(e,"P",{"data-svelte-h":!0}),r(k)!=="svelte-1m1ik0i"&&(k.textContent=ra),Qe=n(e),J=i(e,"P",{"data-svelte-h":!0}),r(J)!=="svelte-1x24aol"&&(J.innerHTML=pa),Se=n(e),W=i(e,"P",{"data-svelte-h":!0}),r(W)!=="svelte-hdvlgk"&&(W.innerHTML=ma),Ae=n(e),m(Z.$$.fragment,e),Ne=n(e),L=i(e,"P",{"data-svelte-h":!0}),r(L)!=="svelte-1qxxgiw"&&(L.textContent=ua),De=n(e),x=i(e,"P",{"data-svelte-h":!0}),r(x)!=="svelte-hnu2bf"&&(x.innerHTML=da),Ke=n(e),m(U.$$.fragment,e),Oe=n(e),F=i(e,"P",{"data-svelte-h":!0}),r(F)!=="svelte-1g5fu1m"&&(F.textContent=ca),et=n(e),m(X.$$.fragment,e),tt=n(e),G=i(e,"P",{"data-svelte-h":!0}),r(G)!=="svelte-fplemq"&&(G.innerHTML=fa),at=n(e),m(R.$$.fragment,e),lt=n(e),q=i(e,"P",{"data-svelte-h":!0}),r(q)!=="svelte-kevyjo"&&(q.innerHTML=ga),st=n(e),m(P.$$.fragment,e),nt=n(e),m(z.$$.fragment,e),ot=n(e),Y=i(e,"P",{"data-svelte-h":!0}),r(Y)!=="svelte-146ofs2"&&(Y.textContent=ba),it=n(e),I=i(e,"P",{"data-svelte-h":!0}),r(I)!=="svelte-11mba1k"&&(I.innerHTML=ha),rt=n(e),E=i(e,"P",{"data-svelte-h":!0}),r(E)!=="svelte-1ny0v7u"&&(E.innerHTML=$a),pt=n(e),m(V.$$.fragment,e),mt=n(e),B=i(e,"P",{"data-svelte-h":!0}),r(B)!=="svelte-o3cbwn"&&(B.textContent=va),ut=n(e),m(Q.$$.fragment,e),dt=n(e),S=i(e,"P",{"data-svelte-h":!0}),r(S)!=="svelte-ulvk0d"&&(S.innerHTML=wa),ct=n(e),m(A.$$.fragment,e),ft=n(e),N=i(e,"P",{"data-svelte-h":!0}),r(N)!=="svelte-429767"&&(N.textContent=Ma),gt=n(e),m(D.$$.fragment,e),bt=n(e),m(K.$$.fragment,e),ht=n(e),m(O.$$.fragment,e),$t=n(e),ee=i(e,"P",{"data-svelte-h":!0}),r(ee)!=="svelte-1sgc057"&&(ee.innerHTML=Ta),vt=n(e),m(te.$$.fragment,e),wt=n(e),ae=i(e,"P",{"data-svelte-h":!0}),r(ae)!=="svelte-kzxr1v"&&(ae.innerHTML=ya),Mt=n(e),m(le.$$.fragment,e),Tt=n(e),se=i(e,"P",{"data-svelte-h":!0}),r(se)!=="svelte-whzxh1"&&(se.innerHTML=_a),yt=n(e),m(ne.$$.fragment,e),_t=n(e),m(oe.$$.fragment,e),Ct=n(e),ie=i(e,"P",{"data-svelte-h":!0}),r(ie)!=="svelte-lgxugm"&&(ie.innerHTML=Ca),Ht=n(e),re=i(e,"UL",{"data-svelte-h":!0}),r(re)!=="svelte-1uwp7vk"&&(re.innerHTML=Ha),jt=n(e),m(pe.$$.fragment,e),kt=n(e),me=i(e,"P",{"data-svelte-h":!0}),r(me)!=="svelte-15qhq4s"&&(me.innerHTML=ja),Jt=n(e),m(ue.$$.fragment,e),Wt=n(e),m(de.$$.fragment,e),Zt=n(e),ce=i(e,"P",{"data-svelte-h":!0}),r(ce)!=="svelte-165txge"&&(ce.innerHTML=ka),Lt=n(e),fe=i(e,"P",{"data-svelte-h":!0}),r(fe)!=="svelte-12csyqh"&&(fe.innerHTML=Ja),xt=n(e),m(ge.$$.fragment,e),Ut=n(e),be=i(e,"P",{"data-svelte-h":!0}),r(be)!=="svelte-4ffbzx"&&(be.innerHTML=Wa),Ft=n(e),m(he.$$.fragment,e),Xt=n(e),$e=i(e,"P",{"data-svelte-h":!0}),r($e)!=="svelte-1esezl0"&&($e.innerHTML=Za),Gt=n(e),m(ve.$$.fragment,e),Rt=n(e),we=i(e,"P",{"data-svelte-h":!0}),r(we)!=="svelte-1tt1awr"&&(we.innerHTML=La),qt=n(e),m(Me.$$.fragment,e),Pt=n(e),Te=i(e,"P",{"data-svelte-h":!0}),r(Te)!=="svelte-1gwpvu5"&&(Te.textContent=xa),zt=n(e),m(ye.$$.fragment,e),Yt=n(e),_e=i(e,"P",{"data-svelte-h":!0}),r(_e)!=="svelte-1njs5z3"&&(_e.innerHTML=Ua),It=n(e),Ce=i(e,"P",{"data-svelte-h":!0}),r(Ce)!=="svelte-8a2l3q"&&(Ce.innerHTML=Fa),Et=n(e),m(He.$$.fragment,e),Vt=n(e),je=i(e,"P",{"data-svelte-h":!0}),r(je)!=="svelte-1r5hlnl"&&(je.innerHTML=Xa),Bt=n(e),ke=i(e,"P",{"data-svelte-h":!0}),r(ke)!=="svelte-ahj3l9"&&(ke.innerHTML=Ga),Qt=n(e),Je=i(e,"P",{"data-svelte-h":!0}),r(Je)!=="svelte-64eblq"&&(Je.textContent=Ra),St=n(e),We=i(e,"UL",{"data-svelte-h":!0}),r(We)!=="svelte-1drcs5r"&&(We.innerHTML=qa),At=n(e),Ze=i(e,"P",{"data-svelte-h":!0}),r(Ze)!=="svelte-1dpz2rf"&&(Ze.innerHTML=Pa),Nt=n(e),Le=i(e,"P",{"data-svelte-h":!0}),r(Le)!=="svelte-32sxm9"&&(Le.innerHTML=za),Dt=n(e),m(xe.$$.fragment,e),Kt=n(e),Ue=i(e,"P",{"data-svelte-h":!0}),r(Ue)!=="svelte-4h0fos"&&(Ue.innerHTML=Ya),Ot=n(e),Fe=i(e,"UL",{"data-svelte-h":!0}),r(Fe)!=="svelte-1rwuv0n"&&(Fe.innerHTML=Ia),ea=n(e),Xe=i(e,"P",{"data-svelte-h":!0}),r(Xe)!=="svelte-112h59w"&&(Xe.innerHTML=Ea),ta=n(e),Re=i(e,"P",{}),la(Re).forEach(a),this.h()},h(){M(b,"name","hf:doc:metadata"),M(b,"content",sl),M(h,"width","560"),M(h,"height","315"),Qa(h.src,ia="https://www.youtube.com/embed/XvSGPZFEjDY")||M(h,"src",ia),M(h,"title","YouTube video player"),M(h,"frameborder","0"),M(h,"allow",`accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope;
picture-in-picture`),h.allowFullscreen=""},m(e,t){Oa(document.head,b),l(e,T,t),l(e,$,t),l(e,Ge,t),u(y,e,t),l(e,Pe,t),l(e,_,t),l(e,ze,t),l(e,C,t),l(e,Ye,t),l(e,H,t),l(e,Ie,t),l(e,h,t),l(e,Ee,t),u(w,e,t),l(e,Ve,t),u(j,e,t),l(e,Be,t),l(e,k,t),l(e,Qe,t),l(e,J,t),l(e,Se,t),l(e,W,t),l(e,Ae,t),u(Z,e,t),l(e,Ne,t),l(e,L,t),l(e,De,t),l(e,x,t),l(e,Ke,t),u(U,e,t),l(e,Oe,t),l(e,F,t),l(e,et,t),u(X,e,t),l(e,tt,t),l(e,G,t),l(e,at,t),u(R,e,t),l(e,lt,t),l(e,q,t),l(e,st,t),u(P,e,t),l(e,nt,t),u(z,e,t),l(e,ot,t),l(e,Y,t),l(e,it,t),l(e,I,t),l(e,rt,t),l(e,E,t),l(e,pt,t),u(V,e,t),l(e,mt,t),l(e,B,t),l(e,ut,t),u(Q,e,t),l(e,dt,t),l(e,S,t),l(e,ct,t),u(A,e,t),l(e,ft,t),l(e,N,t),l(e,gt,t),u(D,e,t),l(e,bt,t),u(K,e,t),l(e,ht,t),u(O,e,t),l(e,$t,t),l(e,ee,t),l(e,vt,t),u(te,e,t),l(e,wt,t),l(e,ae,t),l(e,Mt,t),u(le,e,t),l(e,Tt,t),l(e,se,t),l(e,yt,t),u(ne,e,t),l(e,_t,t),u(oe,e,t),l(e,Ct,t),l(e,ie,t),l(e,Ht,t),l(e,re,t),l(e,jt,t),u(pe,e,t),l(e,kt,t),l(e,me,t),l(e,Jt,t),u(ue,e,t),l(e,Wt,t),u(de,e,t),l(e,Zt,t),l(e,ce,t),l(e,Lt,t),l(e,fe,t),l(e,xt,t),u(ge,e,t),l(e,Ut,t),l(e,be,t),l(e,Ft,t),u(he,e,t),l(e,Xt,t),l(e,$e,t),l(e,Gt,t),u(ve,e,t),l(e,Rt,t),l(e,we,t),l(e,qt,t),u(Me,e,t),l(e,Pt,t),l(e,Te,t),l(e,zt,t),u(ye,e,t),l(e,Yt,t),l(e,_e,t),l(e,It,t),l(e,Ce,t),l(e,Et,t),u(He,e,t),l(e,Vt,t),l(e,je,t),l(e,Bt,t),l(e,ke,t),l(e,Qt,t),l(e,Je,t),l(e,St,t),l(e,We,t),l(e,At,t),l(e,Ze,t),l(e,Nt,t),l(e,Le,t),l(e,Dt,t),u(xe,e,t),l(e,Kt,t),l(e,Ue,t),l(e,Ot,t),l(e,Fe,t),l(e,ea,t),l(e,Xe,t),l(e,ta,t),l(e,Re,t),aa=!0},p(e,[t]){const Va={};t&2&&(Va.$$scope={dirty:t,ctx:e}),w.$set(Va)},i(e){aa||(d(y.$$.fragment,e),d(w.$$.fragment,e),d(j.$$.fragment,e),d(Z.$$.fragment,e),d(U.$$.fragment,e),d(X.$$.fragment,e),d(R.$$.fragment,e),d(P.$$.fragment,e),d(z.$$.fragment,e),d(V.$$.fragment,e),d(Q.$$.fragment,e),d(A.$$.fragment,e),d(D.$$.fragment,e),d(K.$$.fragment,e),d(O.$$.fragment,e),d(te.$$.fragment,e),d(le.$$.fragment,e),d(ne.$$.fragment,e),d(oe.$$.fragment,e),d(pe.$$.fragment,e),d(ue.$$.fragment,e),d(de.$$.fragment,e),d(ge.$$.fragment,e),d(he.$$.fragment,e),d(ve.$$.fragment,e),d(Me.$$.fragment,e),d(ye.$$.fragment,e),d(He.$$.fragment,e),d(xe.$$.fragment,e),aa=!0)},o(e){c(y.$$.fragment,e),c(w.$$.fragment,e),c(j.$$.fragment,e),c(Z.$$.fragment,e),c(U.$$.fragment,e),c(X.$$.fragment,e),c(R.$$.fragment,e),c(P.$$.fragment,e),c(z.$$.fragment,e),c(V.$$.fragment,e),c(Q.$$.fragment,e),c(A.$$.fragment,e),c(D.$$.fragment,e),c(K.$$.fragment,e),c(O.$$.fragment,e),c(te.$$.fragment,e),c(le.$$.fragment,e),c(ne.$$.fragment,e),c(oe.$$.fragment,e),c(pe.$$.fragment,e),c(ue.$$.fragment,e),c(de.$$.fragment,e),c(ge.$$.fragment,e),c(he.$$.fragment,e),c(ve.$$.fragment,e),c(Me.$$.fragment,e),c(ye.$$.fragment,e),c(He.$$.fragment,e),c(xe.$$.fragment,e),aa=!1},d(e){e&&(a(T),a($),a(Ge),a(Pe),a(_),a(ze),a(C),a(Ye),a(H),a(Ie),a(h),a(Ee),a(Ve),a(Be),a(k),a(Qe),a(J),a(Se),a(W),a(Ae),a(Ne),a(L),a(De),a(x),a(Ke),a(Oe),a(F),a(et),a(tt),a(G),a(at),a(lt),a(q),a(st),a(nt),a(ot),a(Y),a(it),a(I),a(rt),a(E),a(pt),a(mt),a(B),a(ut),a(dt),a(S),a(ct),a(ft),a(N),a(gt),a(bt),a(ht),a($t),a(ee),a(vt),a(wt),a(ae),a(Mt),a(Tt),a(se),a(yt),a(_t),a(Ct),a(ie),a(Ht),a(re),a(jt),a(kt),a(me),a(Jt),a(Wt),a(Zt),a(ce),a(Lt),a(fe),a(xt),a(Ut),a(be),a(Ft),a(Xt),a($e),a(Gt),a(Rt),a(we),a(qt),a(Pt),a(Te),a(zt),a(Yt),a(_e),a(It),a(Ce),a(Et),a(Vt),a(je),a(Bt),a(ke),a(Qt),a(Je),a(St),a(We),a(At),a(Ze),a(Nt),a(Le),a(Dt),a(Kt),a(Ue),a(Ot),a(Fe),a(ea),a(Xe),a(ta),a(Re)),a(b),f(y,e),f(w,e),f(j,e),f(Z,e),f(U,e),f(X,e),f(R,e),f(P,e),f(z,e),f(V,e),f(Q,e),f(A,e),f(D,e),f(K,e),f(O,e),f(te,e),f(le,e),f(ne,e),f(oe,e),f(pe,e),f(ue,e),f(de,e),f(ge,e),f(he,e),f(ve,e),f(Me,e),f(ye,e),f(He,e),f(xe,e)}}}const sl='{"title":"Compartir un modelo","local":"compartir-un-modelo","sections":[{"title":"Caracter√≠sticas de los repositorios","local":"caracter√≠sticas-de-los-repositorios","sections":[],"depth":2},{"title":"Configuraci√≥n inicial","local":"configuraci√≥n-inicial","sections":[],"depth":2},{"title":"Convertir un modelo para todos los Frameworks","local":"convertir-un-modelo-para-todos-los-frameworks","sections":[],"depth":2},{"title":"Compartir un modelo con Trainer","local":"compartir-un-modelo-con-trainer","sections":[],"depth":2},{"title":"Compartir un modelo con PushToHubCallback","local":"compartir-un-modelo-con-pushtohubcallback","sections":[],"depth":2},{"title":"Usando la funci√≥n push_to_hub","local":"usando-la-funci√≥n-pushtohub","sections":[],"depth":2},{"title":"Compartir con la interfaz web","local":"compartir-con-la-interfaz-web","sections":[],"depth":2},{"title":"A√±adiendo una tarjeta de modelo","local":"a√±adiendo-una-tarjeta-de-modelo","sections":[],"depth":2}],"depth":1}';function nl(qe){return Sa(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class dl extends Na{constructor(b){super(),Da(this,b,nl,ll,Ba,{})}}export{dl as component};
