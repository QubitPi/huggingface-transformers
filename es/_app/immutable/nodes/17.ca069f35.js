import{s as O,n as Q,o as V}from"../chunks/scheduler.36a0863c.js";import{S as W,i as X,g as o,s as d,r as Y,A as Z,h as l,f as n,c,j as J,u as ee,x as i,k as K,y as te,a,v as ne,d as ae,t as oe,w as de}from"../chunks/index.f891bdb2.js";import{H as le}from"../chunks/Heading.3fb90772.js";function ce($){let r,v,b,y,s,L,u,w="Las entradas agrupadas por lotes (batched) suelen tener longitudes diferentes, por lo que no se pueden convertir en tensores de tamaño fijo. El relleno (también conocido como “Padding”) y el truncamiento (conocido como “Truncation”) son estrategias para abordar este problema y crear tensores rectangulares a partir de lotes de longitudes variables. El relleno agrega un <strong>padding token</strong> especial para garantizar que las secuencias más cortas tengan la misma longitud que la secuencia más larga en un lote o la longitud máxima aceptada por el modelo. El truncamiento funciona en la otra dirección al truncar secuencias largas.",z,m,I="En la mayoría de los casos, es bastante eficaz rellenar el lote hasta la longitud de la secuencia más larga y truncar hasta la longitud máxima que un modelo puede aceptar. Sin embargo, la API admite más estrategias si las necesitas. Los tres argumentos que necesitas son: <code>padding</code>, <code>truncation</code> y <code>max_length</code>.",k,p,G="El argumento <code>padding</code> controla el relleno. Puede ser un booleano o una cadena:",H,g,N=`<li><code>True</code> o <code>&#39;longest&#39;</code>: rellena hasta la longitud de la secuencia más larga en el lote (no se aplica relleno si solo proporcionas una única secuencia).</li> <li><code>&#39;max_length&#39;</code>: rellena hasta una longitud especificada por el argumento <code>max_length</code> o la longitud máxima aceptada
por el modelo si no se proporciona <code>max_length</code> (<code>max_length=None</code>). El relleno se aplicará incluso si solo proporcionas una única secuencia.</li> <li><code>False</code> o <code>&#39;do_not_pad&#39;</code>: no se aplica relleno. Este es el comportamiento predeterminado.</li>`,M,h,j="El argumento <code>truncation</code> controla el truncamiento. Puede ser un booleano o una cadena:",A,_,U=`<li><code>True</code> o <code>&#39;longest_first&#39;</code>: trunca hasta una longitud máxima especificada por el argumento <code>max_length</code> o
la longitud máxima aceptada por el modelo si no se proporciona <code>max_length</code> (<code>max_length=None</code>). Esto
truncará token por token, eliminando un token de la secuencia más larga en el par hasta alcanzar la longitud adecuada.</li> <li><code>&#39;only_second&#39;</code>: trunca hasta una longitud máxima especificada por el argumento <code>max_length</code> o la longitud máxima
aceptada por el modelo si no se proporciona <code>max_length</code> (<code>max_length=None</code>). Esto solo truncará
la segunda oración de un par si se proporciona un par de secuencias (o un lote de pares de secuencias).</li> <li><code>&#39;only_first&#39;</code>: trunca hasta una longitud máxima especificada por el argumento <code>max_length</code> o la longitud máxima
aceptada por el modelo si no se proporciona <code>max_length</code> (<code>max_length=None</code>). Esto solo truncará
la primera oración de un par si se proporciona un par de secuencias (o un lote de pares de secuencias).</li> <li><code>False</code> o <code>&#39;do_not_truncate&#39;</code>: no se aplica truncamiento. Este es el comportamiento predeterminado.</li>`,P,x,F="El argumento <code>max_length</code> controla la longitud del relleno y del truncamiento. Puede ser un número entero o <code>None</code>, en cuyo caso se establecerá automáticamente en la longitud máxima que el modelo puede aceptar. Si el modelo no tiene una longitud máxima de entrada específica, se desactiva el truncamiento o el relleno hasta <code>max_length</code>.",S,f,B=`La siguiente tabla resume la forma recomendada de configurar el relleno y el truncamiento. Si usas pares de secuencias de entrada en alguno de los siguientes ejemplos, puedes reemplazar <code>truncation=True</code> por una <code>ESTRATEGIA</code> seleccionada en
<code>[&#39;only_first&#39;, &#39;only_second&#39;, &#39;longest_first&#39;]</code>, es decir, <code>truncation=&#39;only_second&#39;</code> o <code>truncation=&#39;longest_first&#39;</code> para controlar cómo se truncan ambas secuencias en el par, como se detalló anteriormente.`,q,T,D="<thead><tr><th>Truncation</th> <th>Padding</th> <th>Instrucción</th></tr></thead> <tbody><tr><td>sin truncamiento</td> <td>sin relleno</td> <td><code>tokenizer(batch_sentences)</code></td></tr> <tr><td></td> <td>relleno hasta la longitud máxima del lote</td> <td><code>tokenizer(batch_sentences, padding=True)</code> o</td></tr> <tr><td></td> <td></td> <td><code>tokenizer(batch_sentences, padding=&#39;longest&#39;)</code></td></tr> <tr><td></td> <td>relleno hasta la longitud máxima del modelo</td> <td><code>tokenizer(batch_sentences, padding=&#39;max_length&#39;)</code></td></tr> <tr><td></td> <td>relleno hasta una longitud específica</td> <td><code>tokenizer(batch_sentences, padding=&#39;max_length&#39;, max_length=42)</code></td></tr> <tr><td></td> <td>relleno hasta un múltiplo de un valor</td> <td><code>tokenizer(batch_sentences, padding=True, pad_to_multiple_of=8)</code></td></tr> <tr><td>truncamiento hasta la longitud máxima del modelo</td> <td>sin relleno</td> <td><code>tokenizer(batch_sentences, truncation=True)</code> o</td></tr> <tr><td></td> <td></td> <td><code>tokenizer(batch_sentences, truncation=ESTRATEGIA)</code></td></tr> <tr><td></td> <td>relleno hasta la longitud máxima del lote</td> <td><code>tokenizer(batch_sentences, padding=True, truncation=True)</code> o</td></tr> <tr><td></td> <td></td> <td><code>tokenizer(batch_sentences, padding=True, truncation=ESTRATEGIA)</code></td></tr> <tr><td></td> <td>relleno hasta la longitud máxima del modelo</td> <td><code>tokenizer(batch_sentences, padding=&#39;max_length&#39;, truncation=True)</code> o</td></tr> <tr><td></td> <td></td> <td><code>tokenizer(batch_sentences, padding=&#39;max_length&#39;, truncation=ESTRATEGIA)</code></td></tr> <tr><td></td> <td>relleno hasta una longitud específica</td> <td>No es posible</td></tr> <tr><td>truncamiento hasta una longitud específica</td> <td>sin relleno</td> <td><code>tokenizer(batch_sentences, truncation=True, max_length=42)</code> o</td></tr> <tr><td></td> <td></td> <td><code>tokenizer(batch_sentences, truncation=ESTRATEGIA, max_length=42)</code></td></tr> <tr><td></td> <td>relleno hasta la longitud máxima del lote</td> <td><code>tokenizer(batch_sentences, padding=True, truncation=True, max_length=42)</code> o</td></tr> <tr><td></td> <td></td> <td><code>tokenizer(batch_sentences, padding=True, truncation=ESTRATEGIA, max_length=42)</code></td></tr> <tr><td></td> <td>relleno hasta la longitud máxima del modelo</td> <td>No es posible</td></tr> <tr><td></td> <td>relleno hasta una longitud específica</td> <td><code>tokenizer(batch_sentences, padding=&#39;max_length&#39;, truncation=True, max_length=42)</code> o</td></tr> <tr><td></td> <td></td> <td><code>tokenizer(batch_sentences, padding=&#39;max_length&#39;, truncation=ESTRATEGIA, max_length=42)</code></td></tr></tbody>",C,E,R;return s=new le({props:{title:"Relleno y truncamiento",local:"relleno-y-truncamiento",headingTag:"h1"}}),{c(){r=o("meta"),v=d(),b=o("p"),y=d(),Y(s.$$.fragment),L=d(),u=o("p"),u.innerHTML=w,z=d(),m=o("p"),m.innerHTML=I,k=d(),p=o("p"),p.innerHTML=G,H=d(),g=o("ul"),g.innerHTML=N,M=d(),h=o("p"),h.innerHTML=j,A=d(),_=o("ul"),_.innerHTML=U,P=d(),x=o("p"),x.innerHTML=F,S=d(),f=o("p"),f.innerHTML=B,q=d(),T=o("table"),T.innerHTML=D,C=d(),E=o("p"),this.h()},l(e){const t=Z("svelte-u9bgzb",document.head);r=l(t,"META",{name:!0,content:!0}),t.forEach(n),v=c(e),b=l(e,"P",{}),J(b).forEach(n),y=c(e),ee(s.$$.fragment,e),L=c(e),u=l(e,"P",{"data-svelte-h":!0}),i(u)!=="svelte-9hx8pb"&&(u.innerHTML=w),z=c(e),m=l(e,"P",{"data-svelte-h":!0}),i(m)!=="svelte-ngwi70"&&(m.innerHTML=I),k=c(e),p=l(e,"P",{"data-svelte-h":!0}),i(p)!=="svelte-foyeqf"&&(p.innerHTML=G),H=c(e),g=l(e,"UL",{"data-svelte-h":!0}),i(g)!=="svelte-41rrjh"&&(g.innerHTML=N),M=c(e),h=l(e,"P",{"data-svelte-h":!0}),i(h)!=="svelte-18gv4er"&&(h.innerHTML=j),A=c(e),_=l(e,"UL",{"data-svelte-h":!0}),i(_)!=="svelte-1aqpvyz"&&(_.innerHTML=U),P=c(e),x=l(e,"P",{"data-svelte-h":!0}),i(x)!=="svelte-bue988"&&(x.innerHTML=F),S=c(e),f=l(e,"P",{"data-svelte-h":!0}),i(f)!=="svelte-1aww64m"&&(f.innerHTML=B),q=c(e),T=l(e,"TABLE",{"data-svelte-h":!0}),i(T)!=="svelte-bel3vq"&&(T.innerHTML=D),C=c(e),E=l(e,"P",{}),J(E).forEach(n),this.h()},h(){K(r,"name","hf:doc:metadata"),K(r,"content",re)},m(e,t){te(document.head,r),a(e,v,t),a(e,b,t),a(e,y,t),ne(s,e,t),a(e,L,t),a(e,u,t),a(e,z,t),a(e,m,t),a(e,k,t),a(e,p,t),a(e,H,t),a(e,g,t),a(e,M,t),a(e,h,t),a(e,A,t),a(e,_,t),a(e,P,t),a(e,x,t),a(e,S,t),a(e,f,t),a(e,q,t),a(e,T,t),a(e,C,t),a(e,E,t),R=!0},p:Q,i(e){R||(ae(s.$$.fragment,e),R=!0)},o(e){oe(s.$$.fragment,e),R=!1},d(e){e&&(n(v),n(b),n(y),n(L),n(u),n(z),n(m),n(k),n(p),n(H),n(g),n(M),n(h),n(A),n(_),n(P),n(x),n(S),n(f),n(q),n(T),n(C),n(E)),n(r),de(s,e)}}}const re='{"title":"Relleno y truncamiento","local":"relleno-y-truncamiento","sections":[],"depth":1}';function ie($){return V(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class pe extends W{constructor(r){super(),X(this,r,ie,ce,O,{})}}export{pe as component};
