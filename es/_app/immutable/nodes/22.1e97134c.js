import{s as _t,n as yt,o as Ct}from"../chunks/scheduler.36a0863c.js";import{S as xt,i as gt,g as n,s as l,r,A as Tt,h as o,f as a,c as s,j as vt,u as d,x as c,k as bt,y as ht,a as i,v as u,d as p,t as m,w as f}from"../chunks/index.f891bdb2.js";import{C as v}from"../chunks/CodeBlock.3ec784ea.js";import{H as ie}from"../chunks/Heading.3fb90772.js";function qt(Be){let $,le,te,se,b,ne,_,Ve="Cuando abres un <em>pull request</em> en ü§ó Transformers, se ejecutar√°n una serie de verificaciones para asegurarte de que el <em>patch</em> que est√°s agregando no rompa nada existente. Estas verificaciones son de cuatro tipos:",oe,y,Qe="<li>pruebas regulares</li> <li>creaci√≥n de la documentaci√≥n</li> <li>estilo del c√≥digo y documentaci√≥n</li> <li>consistencia del repositorio</li>",ce,C,De="En este documento, intentaremos explicar cu√°les son esas diferentes verificaciones y el motivo detr√°s de ellas, as√≠ como tambi√©n c√≥mo depurarlas localmente si una falla en tu PR.",re,x,Xe="Recuerda que todas las verificaciones requieren que tengas una instalaci√≥n de desarrollo:",de,g,ue,T,Ye="o una instalaci√≥n editable:",pe,h,me,q,Ne="del repositorio de Transformers.",fe,M,$e,j,Ke="Todos los procesos que comienzan con <code>ci/circleci: run_tests_</code> ejecutan partes del conjunto de pruebas de Transformers. Cada uno de esos procesos se enfoca en una parte de la biblioteca en un entorno determinado: por ejemplo, <code>ci/circleci: run_tests_pipelines_tf</code> ejecuta la prueba de <em>pipelines</em> en un entorno donde solo est√° instalado TensorFlow.",ve,w,Oe="Ten en cuenta que para evitar ejecutar pruebas cuando no hay un cambio real en los m√≥dulos que est√°s probando, solo se ejecuta una parte del conjunto de pruebas: se ejecuta una tarea auxiliar para determinar las diferencias en la biblioteca antes y despu√©s del PR (lo que GitHub te muestra en la pesta√±a ‚ÄúFiles changes‚Äù) y selecciona las pruebas afectadas por esa diferencia. Este auxiliar se puede ejecutar localmente usando:",be,P,_e,H,et="desde el directorio raiz del repositorio de Transformers. Se ejecutar√° lo siguiente:",ye,L,tt="<li>Verificaci√≥n para cada archivo en el <em>diff</em> si los cambios est√°n en el c√≥digo, solo en comentarios o <em>docstrings</em>. Solo los archivos con cambios reales de c√≥digo se conservan.</li> <li>Creaci√≥n de un mapa interno que proporciona para cada archivo del c√≥digo fuente de la biblioteca todos los archivos a los que impacta recursivamente. Se dice que el m√≥dulo A impacta al m√≥dulo B si el m√≥dulo B importa el m√≥dulo A. Para el impacto recursivo, necesitamos una cadena de m√≥dulos que va del m√≥dulo A al m√≥dulo B en la que cada m√≥dulo importa el anterior.</li> <li>Aplicaci√≥n de este mapa en los archivos recopilados en el paso 1, lo que nos da una lista de archivos modelo afectados por el PR.</li> <li>Asignaci√≥n de cada uno de esos archivos a sus archivos de prueba correspondientes y para obtener una la lista de pruebas a ejecutar.</li>",Ce,k,at="Al ejecutar el <em>script</em> localmente, debes obtener los resultados de los pasos 1, 3 y 4 impresos y as√≠ saber qu√© pruebas se ejecutar√°n. El <em>script</em> tambi√©n crear√° un archivo llamado <code>test_list.txt</code> que contiene la lista de pruebas para ejecutar, y puede ejecutarlas localmente con el siguiente comando:",xe,z,ge,R,it="En caso de que se te escape algo, el conjunto completo de pruebas tambi√©n se ejecuta a diario.",Te,E,he,U,lt="El proceso <code>build_pr_documentation</code> compila y genera una vista previa de la documentaci√≥n para asegurarse de que todo se vea bien una vez que se fusione tu PR. Un bot agregar√° un enlace para obtener una vista previa de la documentaci√≥n en tu PR. Cualquier cambio que realices en el PR se actualiza autom√°ticamente en la vista previa. Si la documentaci√≥n no se genera, haz clic en <strong>Detalles</strong> junto al proceso fallido para ver d√≥nde sali√≥ mal. A menudo, el error es tan simple como que falta un archivo en <code>toctree</code>.",qe,A,st='Si est√°s interesado en compilar u obtener una vista previa de la documentaci√≥n localmente, echa un vistazo al <a href="https://github.com/huggingface/transformers/tree/main/docs" rel="nofollow"><code>README.md</code></a> en la carpeta <code>docs</code>.',Me,S,je,G,nt="El formato de c√≥digo se aplica a todos los archivos fuente, los ejemplos y las pruebas utilizando <code>black</code> e <code>ruff</code>. Tambi√©n tenemos una herramienta personalizada que se ocupa del formato de los <em>docstrings</em> y archivos <code>rst</code> (<code>utils/style_doc.py</code>), as√≠ como del orden de las importaciones <em>lazy</em> realizadas en los archivos <code>__init__.py</code> de Transformers (<code>utils /custom_init_isort.py</code>). Todo esto se puede probar ejecutando",we,Z,Pe,W,ot="CI verifica que se hayan aplicado dentro de la verificaci√≥n <code>ci/circleci: check_code_quality</code>. Tambi√©n se ejecuta <code>ruff</code>, que har√° una verificaci√≥n b√°sica a tu c√≥digo y te har√° saber si encuentra una variable no definida, o una que no se usa. Para ejecutar esa verificaci√≥n localmente, usa",He,F,Le,I,ct="Esto puede llevar mucho tiempo, as√≠ que para ejecutar lo mismo solo en los archivos que modificaste en la rama actual, ejecuta",ke,J,ze,B,rt="Este √∫ltimo comando tambi√©n ejecutar√° todas las verificaciones adicionales para la consistencia del repositorio. Echemos un vistazo a estas pruebas.",Re,V,Ee,Q,dt="Esta verificaci√≥n reagrupa todas las pruebas para asegurarse de que tu PR deja el repositorio en buen estado, y se realiza mediante <code>ci/circleci: check_repository_consistency</code>. Puedes ejecutar localmente esta verificaci√≥n ejecutando lo siguiente:",Ue,D,Ae,X,ut="Esta instrucci√≥n verifica que:",Se,Y,pt="<li>Todos los objetos agregados al <em>init</em> est√°n documentados (realizados por <code>utils/check_repo.py</code>)</li> <li>Todos los archivos <code>__init__.py</code> tienen el mismo contenido en sus dos secciones (realizado por <code>utils/check_inits.py</code>)</li> <li>Todo el c√≥digo identificado como una copia de otro m√≥dulo es consistente con el original (realizado por <code>utils/check_copies.py</code>)</li> <li>Todas las clases de configuraci√≥n tienen al menos <em>checkpoint</em> v√°lido mencionado en sus <em>docstrings</em> (realizado por <code>utils/check_config_docstrings.py</code>)</li> <li>Las traducciones de los README y el √≠ndice del documento tienen la misma lista de modelos que el README principal (realizado por <code>utils/check_copies.py</code>)</li> <li>Las tablas generadas automaticamente en la documentaci√≥n est√°n actualizadas (realizadas por <code>utils/check_table.py</code>)</li> <li>La biblioteca tiene todos los objetos disponibles incluso si no est√°n instaladas todas las dependencias opcionales (realizadas por <code>utils/check_dummies.py</code>)</li>",Ge,N,mt="Si esta verificaci√≥n falla, los primeros dos elementos requieren una reparaci√≥n manual, los √∫ltimos cuatro pueden repararse autom√°ticamente ejecutando el comando",Ze,K,We,O,ft="Las verificaciones adicionales se refieren a los PRs que agregan nuevos modelos, principalmente que:",Fe,ee,$t="<li>Todos los modelos agregados est√°n en un Auto-mapping (realizado por <code>utils/check_repo.py</code>)</li> <li>Todos los modelos se verifican correctamente (realizados por <code>utils/check_repo.py</code>)</li>",Ie,ae,Je;return b=new ie({props:{title:"Verificaciones en un Pull Request",local:"verificaciones-en-un-pull-request",headingTag:"h1"}}),g=new v({props:{code:"cGlwJTIwaW5zdGFsbCUyMHRyYW5zZm9ybWVycyU1QmRldiU1RA==",highlighted:"pip install transformers[dev]",wrap:!1}}),h=new v({props:{code:"cGlwJTIwaW5zdGFsbCUyMC1lJTIwLiU1QmRldiU1RA==",highlighted:"pip install -e .[dev]",wrap:!1}}),M=new ie({props:{title:"Pruebas",local:"pruebas",headingTag:"h2"}}),P=new v({props:{code:"cHl0aG9uJTIwdXRpbHMlMkZ0ZXN0c19mZXRjaGVyLnB5",highlighted:"python utils/tests_fetcher.py",wrap:!1}}),z=new v({props:{code:"cHl0aG9uJTIwLW0lMjBweXRlc3QlMjAtbiUyMDglMjAtLWRpc3QlM0Rsb2FkZmlsZSUyMC1yQSUyMC1zJTIwJTI0KGNhdCUyMHRlc3RfbGlzdC50eHQp",highlighted:'python -m pytest -n 8 --dist=loadfile -rA -s $(<span class="hljs-built_in">cat</span> test_list.txt)',wrap:!1}}),E=new ie({props:{title:"Creaci√≥n de la documentaci√≥n",local:"creaci√≥n-de-la-documentaci√≥n",headingTag:"h2"}}),S=new ie({props:{title:"Estilo de c√≥digo y documentaci√≥n.",local:"estilo-de-c√≥digo-y-documentaci√≥n",headingTag:"h2"}}),Z=new v({props:{code:"bWFrZSUyMHN0eWxl",highlighted:"make style",wrap:!1}}),F=new v({props:{code:"bWFrZSUyMHF1YWxpdHk=",highlighted:"make quality",wrap:!1}}),J=new v({props:{code:"bWFrZSUyMGZpeHVw",highlighted:"make fixup",wrap:!1}}),V=new ie({props:{title:"Consistencia del repositorio",local:"consistencia-del-repositorio",headingTag:"h2"}}),D=new v({props:{code:"bWFrZSUyMHJlcG8tY29uc2lzdGVuY3k=",highlighted:"make repo-consistency",wrap:!1}}),K=new v({props:{code:"bWFrZSUyMGZpeC1jb3BpZXM=",highlighted:"make fix-copies",wrap:!1}}),{c(){$=n("meta"),le=l(),te=n("p"),se=l(),r(b.$$.fragment),ne=l(),_=n("p"),_.innerHTML=Ve,oe=l(),y=n("ul"),y.innerHTML=Qe,ce=l(),C=n("p"),C.textContent=De,re=l(),x=n("p"),x.textContent=Xe,de=l(),r(g.$$.fragment),ue=l(),T=n("p"),T.textContent=Ye,pe=l(),r(h.$$.fragment),me=l(),q=n("p"),q.textContent=Ne,fe=l(),r(M.$$.fragment),$e=l(),j=n("p"),j.innerHTML=Ke,ve=l(),w=n("p"),w.textContent=Oe,be=l(),r(P.$$.fragment),_e=l(),H=n("p"),H.textContent=et,ye=l(),L=n("ol"),L.innerHTML=tt,Ce=l(),k=n("p"),k.innerHTML=at,xe=l(),r(z.$$.fragment),ge=l(),R=n("p"),R.textContent=it,Te=l(),r(E.$$.fragment),he=l(),U=n("p"),U.innerHTML=lt,qe=l(),A=n("p"),A.innerHTML=st,Me=l(),r(S.$$.fragment),je=l(),G=n("p"),G.innerHTML=nt,we=l(),r(Z.$$.fragment),Pe=l(),W=n("p"),W.innerHTML=ot,He=l(),r(F.$$.fragment),Le=l(),I=n("p"),I.textContent=ct,ke=l(),r(J.$$.fragment),ze=l(),B=n("p"),B.textContent=rt,Re=l(),r(V.$$.fragment),Ee=l(),Q=n("p"),Q.innerHTML=dt,Ue=l(),r(D.$$.fragment),Ae=l(),X=n("p"),X.textContent=ut,Se=l(),Y=n("ul"),Y.innerHTML=pt,Ge=l(),N=n("p"),N.textContent=mt,Ze=l(),r(K.$$.fragment),We=l(),O=n("p"),O.textContent=ft,Fe=l(),ee=n("ul"),ee.innerHTML=$t,Ie=l(),ae=n("p"),this.h()},l(e){const t=Tt("svelte-u9bgzb",document.head);$=o(t,"META",{name:!0,content:!0}),t.forEach(a),le=s(e),te=o(e,"P",{}),vt(te).forEach(a),se=s(e),d(b.$$.fragment,e),ne=s(e),_=o(e,"P",{"data-svelte-h":!0}),c(_)!=="svelte-10sxvm5"&&(_.innerHTML=Ve),oe=s(e),y=o(e,"UL",{"data-svelte-h":!0}),c(y)!=="svelte-170c76u"&&(y.innerHTML=Qe),ce=s(e),C=o(e,"P",{"data-svelte-h":!0}),c(C)!=="svelte-1vh66ha"&&(C.textContent=De),re=s(e),x=o(e,"P",{"data-svelte-h":!0}),c(x)!=="svelte-zqxh1t"&&(x.textContent=Xe),de=s(e),d(g.$$.fragment,e),ue=s(e),T=o(e,"P",{"data-svelte-h":!0}),c(T)!=="svelte-1d9dbgk"&&(T.textContent=Ye),pe=s(e),d(h.$$.fragment,e),me=s(e),q=o(e,"P",{"data-svelte-h":!0}),c(q)!=="svelte-1g7t34v"&&(q.textContent=Ne),fe=s(e),d(M.$$.fragment,e),$e=s(e),j=o(e,"P",{"data-svelte-h":!0}),c(j)!=="svelte-m8gqwd"&&(j.innerHTML=Ke),ve=s(e),w=o(e,"P",{"data-svelte-h":!0}),c(w)!=="svelte-bm0d2q"&&(w.textContent=Oe),be=s(e),d(P.$$.fragment,e),_e=s(e),H=o(e,"P",{"data-svelte-h":!0}),c(H)!=="svelte-1qda7b"&&(H.textContent=et),ye=s(e),L=o(e,"OL",{"data-svelte-h":!0}),c(L)!=="svelte-a4by2f"&&(L.innerHTML=tt),Ce=s(e),k=o(e,"P",{"data-svelte-h":!0}),c(k)!=="svelte-w2gy5t"&&(k.innerHTML=at),xe=s(e),d(z.$$.fragment,e),ge=s(e),R=o(e,"P",{"data-svelte-h":!0}),c(R)!=="svelte-1lrxgkz"&&(R.textContent=it),Te=s(e),d(E.$$.fragment,e),he=s(e),U=o(e,"P",{"data-svelte-h":!0}),c(U)!=="svelte-e5r0b5"&&(U.innerHTML=lt),qe=s(e),A=o(e,"P",{"data-svelte-h":!0}),c(A)!=="svelte-11n5p9b"&&(A.innerHTML=st),Me=s(e),d(S.$$.fragment,e),je=s(e),G=o(e,"P",{"data-svelte-h":!0}),c(G)!=="svelte-1c7tdat"&&(G.innerHTML=nt),we=s(e),d(Z.$$.fragment,e),Pe=s(e),W=o(e,"P",{"data-svelte-h":!0}),c(W)!=="svelte-1agudf6"&&(W.innerHTML=ot),He=s(e),d(F.$$.fragment,e),Le=s(e),I=o(e,"P",{"data-svelte-h":!0}),c(I)!=="svelte-1uchjdn"&&(I.textContent=ct),ke=s(e),d(J.$$.fragment,e),ze=s(e),B=o(e,"P",{"data-svelte-h":!0}),c(B)!=="svelte-1l7xjfg"&&(B.textContent=rt),Re=s(e),d(V.$$.fragment,e),Ee=s(e),Q=o(e,"P",{"data-svelte-h":!0}),c(Q)!=="svelte-xjnv5b"&&(Q.innerHTML=dt),Ue=s(e),d(D.$$.fragment,e),Ae=s(e),X=o(e,"P",{"data-svelte-h":!0}),c(X)!=="svelte-1iit832"&&(X.textContent=ut),Se=s(e),Y=o(e,"UL",{"data-svelte-h":!0}),c(Y)!=="svelte-qns2s7"&&(Y.innerHTML=pt),Ge=s(e),N=o(e,"P",{"data-svelte-h":!0}),c(N)!=="svelte-1q8eth9"&&(N.textContent=mt),Ze=s(e),d(K.$$.fragment,e),We=s(e),O=o(e,"P",{"data-svelte-h":!0}),c(O)!=="svelte-125r217"&&(O.textContent=ft),Fe=s(e),ee=o(e,"UL",{"data-svelte-h":!0}),c(ee)!=="svelte-v1zopd"&&(ee.innerHTML=$t),Ie=s(e),ae=o(e,"P",{}),vt(ae).forEach(a),this.h()},h(){bt($,"name","hf:doc:metadata"),bt($,"content",Mt)},m(e,t){ht(document.head,$),i(e,le,t),i(e,te,t),i(e,se,t),u(b,e,t),i(e,ne,t),i(e,_,t),i(e,oe,t),i(e,y,t),i(e,ce,t),i(e,C,t),i(e,re,t),i(e,x,t),i(e,de,t),u(g,e,t),i(e,ue,t),i(e,T,t),i(e,pe,t),u(h,e,t),i(e,me,t),i(e,q,t),i(e,fe,t),u(M,e,t),i(e,$e,t),i(e,j,t),i(e,ve,t),i(e,w,t),i(e,be,t),u(P,e,t),i(e,_e,t),i(e,H,t),i(e,ye,t),i(e,L,t),i(e,Ce,t),i(e,k,t),i(e,xe,t),u(z,e,t),i(e,ge,t),i(e,R,t),i(e,Te,t),u(E,e,t),i(e,he,t),i(e,U,t),i(e,qe,t),i(e,A,t),i(e,Me,t),u(S,e,t),i(e,je,t),i(e,G,t),i(e,we,t),u(Z,e,t),i(e,Pe,t),i(e,W,t),i(e,He,t),u(F,e,t),i(e,Le,t),i(e,I,t),i(e,ke,t),u(J,e,t),i(e,ze,t),i(e,B,t),i(e,Re,t),u(V,e,t),i(e,Ee,t),i(e,Q,t),i(e,Ue,t),u(D,e,t),i(e,Ae,t),i(e,X,t),i(e,Se,t),i(e,Y,t),i(e,Ge,t),i(e,N,t),i(e,Ze,t),u(K,e,t),i(e,We,t),i(e,O,t),i(e,Fe,t),i(e,ee,t),i(e,Ie,t),i(e,ae,t),Je=!0},p:yt,i(e){Je||(p(b.$$.fragment,e),p(g.$$.fragment,e),p(h.$$.fragment,e),p(M.$$.fragment,e),p(P.$$.fragment,e),p(z.$$.fragment,e),p(E.$$.fragment,e),p(S.$$.fragment,e),p(Z.$$.fragment,e),p(F.$$.fragment,e),p(J.$$.fragment,e),p(V.$$.fragment,e),p(D.$$.fragment,e),p(K.$$.fragment,e),Je=!0)},o(e){m(b.$$.fragment,e),m(g.$$.fragment,e),m(h.$$.fragment,e),m(M.$$.fragment,e),m(P.$$.fragment,e),m(z.$$.fragment,e),m(E.$$.fragment,e),m(S.$$.fragment,e),m(Z.$$.fragment,e),m(F.$$.fragment,e),m(J.$$.fragment,e),m(V.$$.fragment,e),m(D.$$.fragment,e),m(K.$$.fragment,e),Je=!1},d(e){e&&(a(le),a(te),a(se),a(ne),a(_),a(oe),a(y),a(ce),a(C),a(re),a(x),a(de),a(ue),a(T),a(pe),a(me),a(q),a(fe),a($e),a(j),a(ve),a(w),a(be),a(_e),a(H),a(ye),a(L),a(Ce),a(k),a(xe),a(ge),a(R),a(Te),a(he),a(U),a(qe),a(A),a(Me),a(je),a(G),a(we),a(Pe),a(W),a(He),a(Le),a(I),a(ke),a(ze),a(B),a(Re),a(Ee),a(Q),a(Ue),a(Ae),a(X),a(Se),a(Y),a(Ge),a(N),a(Ze),a(We),a(O),a(Fe),a(ee),a(Ie),a(ae)),a($),f(b,e),f(g,e),f(h,e),f(M,e),f(P,e),f(z,e),f(E,e),f(S,e),f(Z,e),f(F,e),f(J,e),f(V,e),f(D,e),f(K,e)}}}const Mt='{"title":"Verificaciones en un Pull Request","local":"verificaciones-en-un-pull-request","sections":[{"title":"Pruebas","local":"pruebas","sections":[],"depth":2},{"title":"Creaci√≥n de la documentaci√≥n","local":"creaci√≥n-de-la-documentaci√≥n","sections":[],"depth":2},{"title":"Estilo de c√≥digo y documentaci√≥n.","local":"estilo-de-c√≥digo-y-documentaci√≥n","sections":[],"depth":2},{"title":"Consistencia del repositorio","local":"consistencia-del-repositorio","sections":[],"depth":2}],"depth":1}';function jt(Be){return Ct(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class kt extends xt{constructor($){super(),gt(this,$,jt,qt,_t,{})}}export{kt as component};
