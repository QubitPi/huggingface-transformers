import{s as dn,n as un,o as mn}from"../chunks/scheduler.36a0863c.js";import{S as gn,i as jn,g as i,s as t,r as o,A as yn,h as p,f as a,c as l,j as Ls,u as c,x as r,k as cn,y as J,a as n,v as d,d as u,t as m,w as g}from"../chunks/index.f891bdb2.js";import{C as y}from"../chunks/CodeBlock.3ec784ea.js";import{H as j}from"../chunks/Heading.3fb90772.js";function hn(Ja){let h,Fs,Es,Ss,b,_s,x,ba="ü§ó Transformers es una biblioteca de modelos preentrenados de √∫ltima generaci√≥n para procesamiento del lenguaje natural (NLP, por sus siglas en ingl√©s), visi√≥n por computadora y tareas de procesamiento de audio y voz. No solo contiene modelos Transformer, sino tambi√©n modelos no Transformer como redes convolucionales modernas para tareas de visi√≥n por computadora. Si observas algunos de los productos de consumo m√°s populares hoy en d√≠a, como tel√©fonos inteligentes, aplicaciones y televisores, es probable que haya alguna tecnolog√≠a de aprendizaje profundo detr√°s. ¬øQuieres quitar un objeto de fondo de una foto tomada por tu tel√©fono inteligente? Este es un ejemplo de una tarea de segmentaci√≥n pan√≥ptica (no te preocupes si a√∫n no sabes qu√© significa, ¬°lo describiremos en las siguientes secciones!).",As,f,xa="Esta p√°gina proporciona una descripci√≥n general de las diferentes tareas de procesamiento de audio y voz, visi√≥n por computadora y NLP que se pueden resolver con la biblioteca ü§ó Transformers en solo tres l√≠neas de c√≥digo.",Ps,U,Ks,T,fa="Las tareas de procesamiento de audio y voz son un poco diferentes de las otras modalidades principalmente porque el audio como entrada es una se√±al continua. A diferencia del texto, una forma de onda de audio cruda no se puede dividir ordenadamente en fragmentos discretos de la misma manera en que una oraci√≥n puede dividirse en palabras. Para superar esto, la se√±al de audio cruda generalmente se muestrea a intervalos regulares. Si tomas m√°s muestras dentro de un intervalo, la tasa de muestreo es mayor y el audio se asemeja m√°s a la fuente de audio original.",Ds,w,Ua="Enfoques anteriores preprocesaban el audio para extraer caracter√≠sticas √∫tiles. Ahora es m√°s com√∫n comenzar las tareas de procesamiento de audio y voz alimentando directamente la forma de onda de audio cruda a un codificador de caracter√≠sticas para extraer una representaci√≥n de audio. Esto simplifica el paso de preprocesamiento y permite que el modelo aprenda las caracter√≠sticas m√°s esenciales.",Os,C,se,v,Ta="La clasificaci√≥n de audio es una tarea que etiqueta datos de audio con un conjunto predefinido de clases. Es una categor√≠a amplia con muchas aplicaciones espec√≠ficas, algunas de las cuales incluyen:",ee,Z,wa="<li>clasificaci√≥n de escena ac√∫stica: etiquetar audio con una etiqueta de escena (‚Äúoficina‚Äù, ‚Äúplaya‚Äù, ‚Äúestadio‚Äù)</li> <li>detecci√≥n de eventos ac√∫sticos: etiquetar audio con una etiqueta de evento de sonido (‚Äúbocina de autom√≥vil‚Äù, ‚Äúllamada de ballena‚Äù, ‚Äúcristal rompi√©ndose‚Äù)</li> <li>etiquetado: etiquetar audio que contiene varios sonidos (canto de p√°jaros, identificaci√≥n de altavoces en una reuni√≥n)</li> <li>clasificaci√≥n de m√∫sica: etiquetar m√∫sica con una etiqueta de g√©nero (‚Äúmetal‚Äù, ‚Äúhip-hop‚Äù, ‚Äúcountry‚Äù)</li>",ae,q,ne,I,te,B,Ca="El reconocimiento autom√°tico del habla (ASR, por sus siglas en ingl√©s) transcribe el habla a texto. Es una de las tareas de audio m√°s comunes, en parte debido a que el habla es una forma natural de comunicaci√≥n humana. Hoy en d√≠a, los sistemas ASR est√°n integrados en productos de tecnolog√≠a ‚Äúinteligente‚Äù como altavoces, tel√©fonos y autom√≥viles. Podemos pedirle a nuestros asistentes virtuales que reproduzcan m√∫sica, establezcan recordatorios y nos informen sobre el clima.",le,W,va="Pero uno de los desaf√≠os clave que las arquitecturas Transformer han ayudado a superar es en los idiomas con recursos limitados. Al preentrenar con grandes cantidades de datos de habla, afinar el modelo solo con una hora de datos de habla etiquetados en un idioma con recursos limitados a√∫n puede producir resultados de alta calidad en comparaci√≥n con los sistemas ASR anteriores entrenados con 100 veces m√°s datos etiquetados.",ie,$,pe,k,re,G,Za='Una de las primeras y exitosas tareas de visi√≥n por computadora fue reconocer im√°genes de n√∫meros de c√≥digo postal utilizando una <a href="glossary#convolution">red neuronal convolucional</a> (CNN, por sus siglas en ingl√©s). Una imagen est√° compuesta por p√≠xeles, y cada p√≠xel tiene un valor num√©rico. Esto facilita representar una imagen como una matriz de valores de p√≠xeles. Cada combinaci√≥n particular de valores de p√≠xeles describe los colores de una imagen.',oe,H,qa="Dos formas generales en las que se pueden resolver las tareas de visi√≥n por computadora son:",ce,V,Ia="<li>Utilizar convoluciones para aprender las caracter√≠sticas jer√°rquicas de una imagen, desde caracter√≠sticas de bajo nivel hasta cosas abstractas de alto nivel.</li> <li>Dividir una imagen en parches y utilizar un Transformer para aprender gradualmente c√≥mo cada parche de imagen se relaciona entre s√≠ para formar una imagen. A diferencia del enfoque ascendente preferido por una CNN, esto es como comenzar con una imagen borrosa y luego enfocarla gradualmente.</li>",de,N,ue,R,Ba="La clasificaci√≥n de im√°genes etiqueta una imagen completa con un conjunto predefinido de clases. Como la mayor√≠a de las tareas de clasificaci√≥n, hay muchos casos pr√°cticos para la clasificaci√≥n de im√°genes, algunos de los cuales incluyen:",me,z,Wa="<li>salud: etiquetar im√°genes m√©dicas para detectar enfermedades o monitorear la salud del paciente</li> <li>medio ambiente: etiquetar im√°genes de sat√©lite para monitorear la deforestaci√≥n, informar la gesti√≥n de √°reas silvestres o detectar incendios forestales</li> <li>agricultura: etiquetar im√°genes de cultivos para monitorear la salud de las plantas o im√°genes de sat√©lite para el monitoreo del uso del suelo</li> <li>ecolog√≠a: etiquetar im√°genes de especies animales o vegetales para monitorear poblaciones de vida silvestre o rastrear especies en peligro de extinci√≥n</li>",ge,Q,je,Y,ye,E,$a="A diferencia de la clasificaci√≥n de im√°genes, la detecci√≥n de objetos identifica m√∫ltiples objetos dentro de una imagen y las posiciones de los objetos en la imagen (definidas por el cuadro delimitador). Algunas aplicaciones ejemplares de la detecci√≥n de objetos incluyen:",he,X,ka="<li>veh√≠culos aut√≥nomos: detectar objetos de tr√°fico cotidianos como otros veh√≠culos, peatones y sem√°foros</li> <li>teledetecci√≥n: monitoreo de desastres, planificaci√≥n urbana y pron√≥stico del tiempo</li> <li>detecci√≥n de defectos: detectar grietas o da√±os estructurales en edificios y defectos de fabricaci√≥n</li>",Me,L,Je,F,be,S,Ga="La segmentaci√≥n de im√°genes es una tarea a nivel de p√≠xeles que asigna cada p√≠xel en una imagen a una clase. A diferencia de la detecci√≥n de objetos, que utiliza cuadros delimitadores para etiquetar y predecir objetos en una imagen, la segmentaci√≥n es m√°s granular. La segmentaci√≥n puede detectar objetos a nivel de p√≠xeles. Hay varios tipos de segmentaci√≥n de im√°genes:",xe,_,Ha="<li>segmentaci√≥n de instancias: adem√°s de etiquetar la clase de un objeto, tambi√©n etiqueta cada instancia distinta de un objeto (‚Äúperro-1‚Äù, ‚Äúperro-2‚Äù)</li> <li>segmentaci√≥n pan√≥ptica: una combinaci√≥n de segmentaci√≥n sem√°ntica y de instancias; etiqueta cada p√≠xel con una clase sem√°ntica <strong>y</strong> cada instancia distinta de un objeto</li>",fe,A,Va="Las tareas de segmentaci√≥n son √∫tiles en veh√≠culos aut√≥nomos para crear un mapa a nivel de p√≠xeles del mundo que los rodea para que puedan navegar de manera segura alrededor de peatones y otros veh√≠culos. Tambi√©n es √∫til en im√°genes m√©dicas, donde la mayor granularidad de la tarea puede ayudar a identificar c√©lulas anormales o caracter√≠sticas de √≥rganos. La segmentaci√≥n de im√°genes tambi√©n se puede utilizar en comercio electr√≥nico para probar virtualmente la ropa o crear experiencias de realidad aumentada superponiendo objetos en el mundo real a trav√©s de tu c√°mara.",Ue,P,Te,K,we,D,Na="La estimaci√≥n de profundidad predice la distancia de cada p√≠xel en una imagen desde la c√°mara. Esta tarea de visi√≥n por computadora es especialmente importante para la comprensi√≥n y reconstrucci√≥n de escenas. Por ejemplo, en los veh√≠culos aut√≥nomos, es necesario entender qu√© tan lejos est√°n los objetos como peatones, se√±ales de tr√°fico y otros veh√≠culos para evitar obst√°culos y colisiones. La informaci√≥n de profundidad tambi√©n es √∫til para construir representaciones 3D a partir de im√°genes 2D y se puede utilizar para crear representaciones 3D de alta calidad de estructuras biol√≥gicas o edificios.",Ce,O,Ra="Hay dos enfoques para la estimaci√≥n de profundidad:",ve,ss,za="<li>est√©reo: las profundidades se estiman comparando dos im√°genes de la misma escena desde √°ngulos ligeramente diferentes</li> <li>monocular: las profundidades se estiman a partir de una sola imagen</li>",Ze,es,qe,as,Ie,ns,Qa="Las tareas de procesamiento del lenguaje natural (NLP, por sus siglas en ingl√©s) est√°n entre los tipos de tareas m√°s comunes porque el texto es una forma natural de comunicaci√≥n para nosotros. Para convertir el texto en un formato reconocido por un modelo, es necesario tokenizarlo. Esto significa dividir una secuencia de texto en palabras o subpalabras separadas (tokens) y luego convertir estos tokens en n√∫meros. Como resultado, puedes representar una secuencia de texto como una secuencia de n√∫meros, y una vez que tienes una secuencia de n√∫meros, se puede ingresar a un modelo para resolver todo tipo de tareas de NLP.",Be,ts,We,ls,Ya="Al igual que las tareas de clasificaci√≥n en cualquier modalidad, la clasificaci√≥n de texto etiqueta una secuencia de texto (puede ser a nivel de oraci√≥n, p√°rrafo o documento) de un conjunto predefinido de clases. Hay muchas aplicaciones pr√°cticas para la clasificaci√≥n de texto, algunas de las cuales incluyen:",$e,is,Ea="<li>an√°lisis de sentimientos: etiquetar texto seg√∫n alguna polaridad como <code>positivo</code> o <code>negativo</code>, lo que puede informar y respaldar la toma de decisiones en campos como pol√≠tica, finanzas y marketing</li> <li>clasificaci√≥n de contenido: etiquetar texto seg√∫n alg√∫n tema para ayudar a organizar y filtrar informaci√≥n en noticias y feeds de redes sociales (<code>clima</code>, <code>deportes</code>, <code>finanzas</code>, etc.)</li>",ke,ps,Ge,rs,He,os,Xa='En cualquier tarea de NLP, el texto se procesa separando la secuencia de texto en palabras o subpalabras individuales. Estas se conocen como <a href="glossary#token">tokens</a>. La clasificaci√≥n de tokens asigna a cada token una etiqueta de un conjunto predefinido de clases.',Ve,cs,La="Dos tipos comunes de clasificaci√≥n de tokens son:",Ne,ds,Fa="<li>reconocimiento de entidades nombradas (NER, por sus siglas en ingl√©s): etiquetar un token seg√∫n una categor√≠a de entidad como organizaci√≥n, persona, ubicaci√≥n o fecha. NER es especialmente popular en entornos biom√©dicos, donde puede etiquetar genes, prote√≠nas y nombres de medicamentos</li> <li>etiquetado de partes del discurso (POS, por sus siglas en ingl√©s): etiquetar un token seg√∫n su parte del discurso, como sustantivo, verbo o adjetivo. POS es √∫til para ayudar a los sistemas de traducci√≥n a comprender c√≥mo dos palabras id√©nticas son gramaticalmente diferentes (por ejemplo, ‚Äúcorte‚Äù como sustantivo versus ‚Äúcorte‚Äù como verbo)</li>",Re,us,ze,ms,Qe,gs,Sa="Responder preguntas es otra tarea a nivel de tokens que devuelve una respuesta a una pregunta, a veces con contexto (dominio abierto) y otras veces sin contexto (dominio cerrado). Esta tarea ocurre cuando le preguntamos algo a un asistente virtual, como si un restaurante est√° abierto. Tambi√©n puede proporcionar soporte al cliente o t√©cnico y ayudar a los motores de b√∫squeda a recuperar la informaci√≥n relevante que est√°s buscando.",Ye,js,_a="Hay dos tipos comunes de respuestas a preguntas:",Ee,ys,Aa="<li>extractivas: dada una pregunta y alg√∫n contexto, la respuesta es un fragmento de texto del contexto que el modelo debe extraer</li> <li>abstractivas: dada una pregunta y alg√∫n contexto, la respuesta se genera a partir del contexto; este enfoque lo maneja la <code>Text2TextGenerationPipeline</code> en lugar del <code>QuestionAnsweringPipeline</code> que se muestra a continuaci√≥n</li>",Xe,hs,Le,Ms,Fe,Js,Pa="Al resumir se crea una versi√≥n m√°s corta de un texto m√°s largo mientras intenta preservar la mayor parte del significado del documento original. Resumir es una tarea de secuencia a secuencia; produce una secuencia de texto m√°s corta que la entrada. Hay muchos documentos de formato largo que se pueden resumir para ayudar a los lectores a comprender r√°pidamente los puntos principales. Proyectos de ley legislativos, documentos legales y financieros, patentes y art√≠culos cient√≠ficos son algunos ejemplos de documentos que podr√≠an resumirse para ahorrar tiempo a los lectores y servir como ayuda para la lectura.",Se,bs,Ka="Al igual que en las respuestas a preguntas, hay dos tipos de resumen:",_e,xs,Da="<li>extractiva: identifica y extrae las oraciones m√°s importantes del texto original</li> <li>abstractiva: genera el resumen objetivo (que puede incluir nuevas palabras no presentes en el documento de entrada) a partir del texto original; el <code>SummarizationPipeline</code> utiliza el enfoque abstractivo</li>",Ae,fs,Pe,Us,Ke,Ts,Oa="La traducci√≥n convierte una secuencia de texto en un idioma a otro. Es importante para ayudar a personas de diferentes or√≠genes a comunicarse entre s√≠, traducir contenido para llegar a audiencias m√°s amplias e incluso ser una herramienta de aprendizaje para ayudar a las personas a aprender un nuevo idioma. Al igual que resumir, la traducci√≥n es una tarea de secuencia a secuencia, lo que significa que el modelo recibe una secuencia de entrada y devuelve una secuencia de salida objetivo.",De,ws,sn="En sus primeros d√≠as, los modelos de traducci√≥n eran principalmente monoling√ºes, pero recientemente ha habido un creciente inter√©s en modelos multiling√ºes que pueden traducir entre muchas combinaciones de idiomas.",Oe,Cs,sa,vs,ea,Zs,en="El modelado de lenguaje es una tarea que predice una palabra en una secuencia de texto. Se ha vuelto una tarea de NLP muy popular porque un modelo de lenguaje preentrenado puede ser afinado para muchas otras tareas secundarias. √öltimamente, ha habido mucho inter√©s en modelos de lenguaje grandes (LLM, por sus siglas en ingl√©s) que demuestran aprendizaje de cero o con pocas muestras (zero- or few-shot learning). ¬°Esto significa que el modelo puede resolver tareas para las cuales no fue entrenado expl√≠citamente! Los modelos de lenguaje se pueden utilizar para generar texto fluido y convincente, aunque debes tener cuidado, ya que el texto no siempre puede ser preciso.",aa,qs,an="Hay dos tipos de modelado de lenguaje:",na,M,Is,Qs,nn="causal: el objetivo del modelo es predecir el pr√≥ximo token en una secuencia, y los tokens futuros est√°n enmascarados",ya,Bs,ha,Ws,Ys,tn="enmascarado: el objetivo del modelo es predecir un token enmascarado en una secuencia con acceso completo a los tokens en la secuencia",Ma,$s,ta,ks,la,Gs,ln="Las tareas multimodales requieren que un modelo procese m√∫ltiples modalidades de datos (texto, imagen, audio, video) para resolver un problema particular. La descripci√≥n de im√°genes es un ejemplo de una tarea multimodal en la que el modelo toma una imagen como entrada y produce una secuencia de texto que describe la imagen o algunas propiedades de la imagen.",ia,Hs,pn="Aunque los modelos multimodales trabajan con diferentes tipos de datos o modalidades, internamente, los pasos de preprocesamiento ayudan al modelo a convertir todos los tipos de datos en embeddings (vectores o listas de n√∫meros que contienen informaci√≥n significativa sobre los datos). Para una tarea como la descripci√≥n de im√°genes, el modelo aprende las relaciones entre los embeddings de im√°genes y los embeddings de texto.",pa,Vs,ra,Ns,rn="Las respuestas a preguntas de documentos es una tarea que responde preguntas en lenguaje natural a partir de un documento. A diferencia de una tarea de respuestas a preguntas a nivel de token que toma texto como entrada, las respuestas a preguntas de documentos toman una imagen de un documento como entrada junto con una pregunta sobre el documento y devuelven una respuesta. Las respuestas a preguntas de documentos pueden usarse para analizar documentos estructurados y extraer informaci√≥n clave de ellos. En el ejemplo a continuaci√≥n, el monto total y el cambio debido se pueden extraer de un recibo.",oa,Rs,ca,zs,on='Con suerte, esta p√°gina te ha proporcionado m√°s informaci√≥n de fondo sobre todos los tipos de tareas en cada modalidad y la importancia pr√°ctica de cada una. En la pr√≥xima <a href="https://huggingface.co/docs/transformers/tasks_explained" rel="nofollow">secci√≥n</a>, aprender√°s <strong>c√≥mo</strong> ü§ó Transformers trabaja para resolver estas tareas.',da,Xs,ua;return b=new j({props:{title:"Lo que ü§ó Transformers puede hacer",local:"lo-que--transformers-puede-hacer",headingTag:"h1"}}),U=new j({props:{title:"Audio",local:"audio",headingTag:"h2"}}),C=new j({props:{title:"Clasificaci√≥n de audio",local:"clasificaci√≥n-de-audio",headingTag:"h3"}}),q=new y({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMHBpcGVsaW5lJTBBJTBBY2xhc3NpZmllciUyMCUzRCUyMHBpcGVsaW5lKHRhc2slM0QlMjJhdWRpby1jbGFzc2lmaWNhdGlvbiUyMiUyQyUyMG1vZGVsJTNEJTIyc3VwZXJiJTJGaHViZXJ0LWJhc2Utc3VwZXJiLWVyJTIyKSUwQXByZWRzJTIwJTNEJTIwY2xhc3NpZmllciglMjJodHRwcyUzQSUyRiUyRmh1Z2dpbmdmYWNlLmNvJTJGZGF0YXNldHMlMkZOYXJzaWwlMkZhc3JfZHVtbXklMkZyZXNvbHZlJTJGbWFpbiUyRm1say5mbGFjJTIyKSUwQXByZWRzJTIwJTNEJTIwJTVCJTdCJTIyc2NvcmUlMjIlM0ElMjByb3VuZChwcmVkJTVCJTIyc2NvcmUlMjIlNUQlMkMlMjA0KSUyQyUyMCUyMmxhYmVsJTIyJTNBJTIwcHJlZCU1QiUyMmxhYmVsJTIyJTVEJTdEJTIwZm9yJTIwcHJlZCUyMGluJTIwcHJlZHMlNUQlMEFwcmVkcw==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline

<span class="hljs-meta">&gt;&gt;&gt; </span>classifier = pipeline(task=<span class="hljs-string">&quot;audio-classification&quot;</span>, model=<span class="hljs-string">&quot;superb/hubert-base-superb-er&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>preds = classifier(<span class="hljs-string">&quot;https://huggingface.co/datasets/Narsil/asr_dummy/resolve/main/mlk.flac&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>preds = [{<span class="hljs-string">&quot;score&quot;</span>: <span class="hljs-built_in">round</span>(pred[<span class="hljs-string">&quot;score&quot;</span>], <span class="hljs-number">4</span>), <span class="hljs-string">&quot;label&quot;</span>: pred[<span class="hljs-string">&quot;label&quot;</span>]} <span class="hljs-keyword">for</span> pred <span class="hljs-keyword">in</span> preds]
<span class="hljs-meta">&gt;&gt;&gt; </span>preds
[{<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.4532</span>, <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;hap&#x27;</span>},
 {<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.3622</span>, <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;sad&#x27;</span>},
 {<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.0943</span>, <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;neu&#x27;</span>},
 {<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.0903</span>, <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;ang&#x27;</span>}]`,wrap:!1}}),I=new j({props:{title:"Reconocimiento autom√°tico del habla",local:"reconocimiento-autom√°tico-del-habla",headingTag:"h3"}}),$=new y({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMHBpcGVsaW5lJTBBJTBBdHJhbnNjcmliZXIlMjAlM0QlMjBwaXBlbGluZSh0YXNrJTNEJTIyYXV0b21hdGljLXNwZWVjaC1yZWNvZ25pdGlvbiUyMiUyQyUyMG1vZGVsJTNEJTIyb3BlbmFpJTJGd2hpc3Blci1zbWFsbCUyMiklMEF0cmFuc2NyaWJlciglMjJodHRwcyUzQSUyRiUyRmh1Z2dpbmdmYWNlLmNvJTJGZGF0YXNldHMlMkZOYXJzaWwlMkZhc3JfZHVtbXklMkZyZXNvbHZlJTJGbWFpbiUyRm1say5mbGFjJTIyKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline

<span class="hljs-meta">&gt;&gt;&gt; </span>transcriber = pipeline(task=<span class="hljs-string">&quot;automatic-speech-recognition&quot;</span>, model=<span class="hljs-string">&quot;openai/whisper-small&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>transcriber(<span class="hljs-string">&quot;https://huggingface.co/datasets/Narsil/asr_dummy/resolve/main/mlk.flac&quot;</span>)
{<span class="hljs-string">&#x27;text&#x27;</span>: <span class="hljs-string">&#x27; I have a dream that one day this nation will rise up and live out the true meaning of its creed.&#x27;</span>}`,wrap:!1}}),k=new j({props:{title:"Visi√≥n por computadora",local:"visi√≥n-por-computadora",headingTag:"h2"}}),N=new j({props:{title:"Clasificaci√≥n de im√°genes",local:"clasificaci√≥n-de-im√°genes",headingTag:"h3"}}),Q=new y({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMHBpcGVsaW5lJTBBJTBBY2xhc3NpZmllciUyMCUzRCUyMHBpcGVsaW5lKHRhc2slM0QlMjJpbWFnZS1jbGFzc2lmaWNhdGlvbiUyMiklMEFwcmVkcyUyMCUzRCUyMGNsYXNzaWZpZXIoJTBBJTIwJTIwJTIwJTIwJTIyaHR0cHMlM0ElMkYlMkZodWdnaW5nZmFjZS5jbyUyRmRhdGFzZXRzJTJGaHVnZ2luZ2ZhY2UlMkZkb2N1bWVudGF0aW9uLWltYWdlcyUyRnJlc29sdmUlMkZtYWluJTJGcGlwZWxpbmUtY2F0LWNob25rLmpwZWclMjIlMEEpJTBBcHJlZHMlMjAlM0QlMjAlNUIlN0IlMjJzY29yZSUyMiUzQSUyMHJvdW5kKHByZWQlNUIlMjJzY29yZSUyMiU1RCUyQyUyMDQpJTJDJTIwJTIybGFiZWwlMjIlM0ElMjBwcmVkJTVCJTIybGFiZWwlMjIlNUQlN0QlMjBmb3IlMjBwcmVkJTIwaW4lMjBwcmVkcyU1RCUwQXByaW50KCpwcmVkcyUyQyUyMHNlcCUzRCUyMiU1Q24lMjIp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline

<span class="hljs-meta">&gt;&gt;&gt; </span>classifier = pipeline(task=<span class="hljs-string">&quot;image-classification&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>preds = classifier(
<span class="hljs-meta">... </span>    <span class="hljs-string">&quot;https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/pipeline-cat-chonk.jpeg&quot;</span>
<span class="hljs-meta">... </span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>preds = [{<span class="hljs-string">&quot;score&quot;</span>: <span class="hljs-built_in">round</span>(pred[<span class="hljs-string">&quot;score&quot;</span>], <span class="hljs-number">4</span>), <span class="hljs-string">&quot;label&quot;</span>: pred[<span class="hljs-string">&quot;label&quot;</span>]} <span class="hljs-keyword">for</span> pred <span class="hljs-keyword">in</span> preds]
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(*preds, sep=<span class="hljs-string">&quot;\\n&quot;</span>)
{<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.4335</span>, <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;lynx, catamount&#x27;</span>}
{<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.0348</span>, <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;cougar, puma, catamount, mountain lion, painter, panther, Felis concolor&#x27;</span>}
{<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.0324</span>, <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;snow leopard, ounce, Panthera uncia&#x27;</span>}
{<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.0239</span>, <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;Egyptian cat&#x27;</span>}
{<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.0229</span>, <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;tiger cat&#x27;</span>}`,wrap:!1}}),Y=new j({props:{title:"Detecci√≥n de objetos",local:"detecci√≥n-de-objetos",headingTag:"h3"}}),L=new y({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMHBpcGVsaW5lJTBBJTBBZGV0ZWN0b3IlMjAlM0QlMjBwaXBlbGluZSh0YXNrJTNEJTIyb2JqZWN0LWRldGVjdGlvbiUyMiklMEFwcmVkcyUyMCUzRCUyMGRldGVjdG9yKCUwQSUyMCUyMCUyMCUyMCUyMmh0dHBzJTNBJTJGJTJGaHVnZ2luZ2ZhY2UuY28lMkZkYXRhc2V0cyUyRmh1Z2dpbmdmYWNlJTJGZG9jdW1lbnRhdGlvbi1pbWFnZXMlMkZyZXNvbHZlJTJGbWFpbiUyRnBpcGVsaW5lLWNhdC1jaG9uay5qcGVnJTIyJTBBKSUwQXByZWRzJTIwJTNEJTIwJTVCJTdCJTIyc2NvcmUlMjIlM0ElMjByb3VuZChwcmVkJTVCJTIyc2NvcmUlMjIlNUQlMkMlMjA0KSUyQyUyMCUyMmxhYmVsJTIyJTNBJTIwcHJlZCU1QiUyMmxhYmVsJTIyJTVEJTJDJTIwJTIyYm94JTIyJTNBJTIwcHJlZCU1QiUyMmJveCUyMiU1RCU3RCUyMGZvciUyMHByZWQlMjBpbiUyMHByZWRzJTVEJTBBcHJlZHM=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline

<span class="hljs-meta">&gt;&gt;&gt; </span>detector = pipeline(task=<span class="hljs-string">&quot;object-detection&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>preds = detector(
<span class="hljs-meta">... </span>    <span class="hljs-string">&quot;https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/pipeline-cat-chonk.jpeg&quot;</span>
<span class="hljs-meta">... </span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>preds = [{<span class="hljs-string">&quot;score&quot;</span>: <span class="hljs-built_in">round</span>(pred[<span class="hljs-string">&quot;score&quot;</span>], <span class="hljs-number">4</span>), <span class="hljs-string">&quot;label&quot;</span>: pred[<span class="hljs-string">&quot;label&quot;</span>], <span class="hljs-string">&quot;box&quot;</span>: pred[<span class="hljs-string">&quot;box&quot;</span>]} <span class="hljs-keyword">for</span> pred <span class="hljs-keyword">in</span> preds]
<span class="hljs-meta">&gt;&gt;&gt; </span>preds
[{<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.9865</span>,
  <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;cat&#x27;</span>,
  <span class="hljs-string">&#x27;box&#x27;</span>: {<span class="hljs-string">&#x27;xmin&#x27;</span>: <span class="hljs-number">178</span>, <span class="hljs-string">&#x27;ymin&#x27;</span>: <span class="hljs-number">154</span>, <span class="hljs-string">&#x27;xmax&#x27;</span>: <span class="hljs-number">882</span>, <span class="hljs-string">&#x27;ymax&#x27;</span>: <span class="hljs-number">598</span>}}]`,wrap:!1}}),F=new j({props:{title:"Segmentaci√≥n de im√°genes",local:"segmentaci√≥n-de-im√°genes",headingTag:"h3"}}),P=new y({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMHBpcGVsaW5lJTBBJTBBc2VnbWVudGVyJTIwJTNEJTIwcGlwZWxpbmUodGFzayUzRCUyMmltYWdlLXNlZ21lbnRhdGlvbiUyMiklMEFwcmVkcyUyMCUzRCUyMHNlZ21lbnRlciglMEElMjAlMjAlMjAlMjAlMjJodHRwcyUzQSUyRiUyRmh1Z2dpbmdmYWNlLmNvJTJGZGF0YXNldHMlMkZodWdnaW5nZmFjZSUyRmRvY3VtZW50YXRpb24taW1hZ2VzJTJGcmVzb2x2ZSUyRm1haW4lMkZwaXBlbGluZS1jYXQtY2hvbmsuanBlZyUyMiUwQSklMEFwcmVkcyUyMCUzRCUyMCU1QiU3QiUyMnNjb3JlJTIyJTNBJTIwcm91bmQocHJlZCU1QiUyMnNjb3JlJTIyJTVEJTJDJTIwNCklMkMlMjAlMjJsYWJlbCUyMiUzQSUyMHByZWQlNUIlMjJsYWJlbCUyMiU1RCU3RCUyMGZvciUyMHByZWQlMjBpbiUyMHByZWRzJTVEJTBBcHJpbnQoKnByZWRzJTJDJTIwc2VwJTNEJTIyJTVDbiUyMik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline

<span class="hljs-meta">&gt;&gt;&gt; </span>segmenter = pipeline(task=<span class="hljs-string">&quot;image-segmentation&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>preds = segmenter(
<span class="hljs-meta">... </span>    <span class="hljs-string">&quot;https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/pipeline-cat-chonk.jpeg&quot;</span>
<span class="hljs-meta">... </span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>preds = [{<span class="hljs-string">&quot;score&quot;</span>: <span class="hljs-built_in">round</span>(pred[<span class="hljs-string">&quot;score&quot;</span>], <span class="hljs-number">4</span>), <span class="hljs-string">&quot;label&quot;</span>: pred[<span class="hljs-string">&quot;label&quot;</span>]} <span class="hljs-keyword">for</span> pred <span class="hljs-keyword">in</span> preds]
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(*preds, sep=<span class="hljs-string">&quot;\\n&quot;</span>)
{<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.9879</span>, <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;LABEL_184&#x27;</span>}
{<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.9973</span>, <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;snow&#x27;</span>}
{<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.9972</span>, <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;cat&#x27;</span>}`,wrap:!1}}),K=new j({props:{title:"Estimaci√≥n de profundidad",local:"estimaci√≥n-de-profundidad",headingTag:"h3"}}),es=new y({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMHBpcGVsaW5lJTBBJTBBZGVwdGhfZXN0aW1hdG9yJTIwJTNEJTIwcGlwZWxpbmUodGFzayUzRCUyMmRlcHRoLWVzdGltYXRpb24lMjIpJTBBcHJlZHMlMjAlM0QlMjBkZXB0aF9lc3RpbWF0b3IoJTBBJTIwJTIwJTIwJTIwJTIyaHR0cHMlM0ElMkYlMkZodWdnaW5nZmFjZS5jbyUyRmRhdGFzZXRzJTJGaHVnZ2luZ2ZhY2UlMkZkb2N1bWVudGF0aW9uLWltYWdlcyUyRnJlc29sdmUlMkZtYWluJTJGcGlwZWxpbmUtY2F0LWNob25rLmpwZWclMjIlMEEp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline

<span class="hljs-meta">&gt;&gt;&gt; </span>depth_estimator = pipeline(task=<span class="hljs-string">&quot;depth-estimation&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>preds = depth_estimator(
<span class="hljs-meta">... </span>    <span class="hljs-string">&quot;https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/pipeline-cat-chonk.jpeg&quot;</span>
<span class="hljs-meta">... </span>)`,wrap:!1}}),as=new j({props:{title:"Procesamiento del lenguaje natural",local:"procesamiento-del-lenguaje-natural",headingTag:"h2"}}),ts=new j({props:{title:"Clasificaci√≥n de texto",local:"clasificaci√≥n-de-texto",headingTag:"h3"}}),ps=new y({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMHBpcGVsaW5lJTBBJTBBY2xhc3NpZmllciUyMCUzRCUyMHBpcGVsaW5lKHRhc2slM0QlMjJzZW50aW1lbnQtYW5hbHlzaXMlMjIpJTBBcHJlZHMlMjAlM0QlMjBjbGFzc2lmaWVyKCUyMkh1Z2dpbmclMjBGYWNlJTIwaXMlMjB0aGUlMjBiZXN0JTIwdGhpbmclMjBzaW5jZSUyMHNsaWNlZCUyMGJyZWFkISUyMiklMEFwcmVkcyUyMCUzRCUyMCU1QiU3QiUyMnNjb3JlJTIyJTNBJTIwcm91bmQocHJlZCU1QiUyMnNjb3JlJTIyJTVEJTJDJTIwNCklMkMlMjAlMjJsYWJlbCUyMiUzQSUyMHByZWQlNUIlMjJsYWJlbCUyMiU1RCU3RCUyMGZvciUyMHByZWQlMjBpbiUyMHByZWRzJTVEJTBBcHJlZHM=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline

<span class="hljs-meta">&gt;&gt;&gt; </span>classifier = pipeline(task=<span class="hljs-string">&quot;sentiment-analysis&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>preds = classifier(<span class="hljs-string">&quot;Hugging Face is the best thing since sliced bread!&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>preds = [{<span class="hljs-string">&quot;score&quot;</span>: <span class="hljs-built_in">round</span>(pred[<span class="hljs-string">&quot;score&quot;</span>], <span class="hljs-number">4</span>), <span class="hljs-string">&quot;label&quot;</span>: pred[<span class="hljs-string">&quot;label&quot;</span>]} <span class="hljs-keyword">for</span> pred <span class="hljs-keyword">in</span> preds]
<span class="hljs-meta">&gt;&gt;&gt; </span>preds
[{<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.9991</span>, <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;POSITIVE&#x27;</span>}]`,wrap:!1}}),rs=new j({props:{title:"Clasificaci√≥n de tokens",local:"clasificaci√≥n-de-tokens",headingTag:"h3"}}),us=new y({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMHBpcGVsaW5lJTBBJTBBY2xhc3NpZmllciUyMCUzRCUyMHBpcGVsaW5lKHRhc2slM0QlMjJuZXIlMjIpJTBBcHJlZHMlMjAlM0QlMjBjbGFzc2lmaWVyKCUyMkh1Z2dpbmclMjBGYWNlJTIwaXMlMjBhJTIwRnJlbmNoJTIwY29tcGFueSUyMGJhc2VkJTIwaW4lMjBOZXclMjBZb3JrJTIwQ2l0eS4lMjIpJTBBcHJlZHMlMjAlM0QlMjAlNUIlMEElMjAlMjAlMjAlMjAlN0IlMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjJlbnRpdHklMjIlM0ElMjBwcmVkJTVCJTIyZW50aXR5JTIyJTVEJTJDJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIyc2NvcmUlMjIlM0ElMjByb3VuZChwcmVkJTVCJTIyc2NvcmUlMjIlNUQlMkMlMjA0KSUyQyUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMmluZGV4JTIyJTNBJTIwcHJlZCU1QiUyMmluZGV4JTIyJTVEJTJDJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIyd29yZCUyMiUzQSUyMHByZWQlNUIlMjJ3b3JkJTIyJTVEJTJDJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIyc3RhcnQlMjIlM0ElMjBwcmVkJTVCJTIyc3RhcnQlMjIlNUQlMkMlMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjJlbmQlMjIlM0ElMjBwcmVkJTVCJTIyZW5kJTIyJTVEJTJDJTBBJTIwJTIwJTIwJTIwJTdEJTBBJTIwJTIwJTIwJTIwZm9yJTIwcHJlZCUyMGluJTIwcHJlZHMlMEElNUQlMEFwcmludCgqcHJlZHMlMkMlMjBzZXAlM0QlMjIlNUNuJTIyKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline

<span class="hljs-meta">&gt;&gt;&gt; </span>classifier = pipeline(task=<span class="hljs-string">&quot;ner&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>preds = classifier(<span class="hljs-string">&quot;Hugging Face is a French company based in New York City.&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>preds = [
<span class="hljs-meta">... </span>    {
<span class="hljs-meta">... </span>        <span class="hljs-string">&quot;entity&quot;</span>: pred[<span class="hljs-string">&quot;entity&quot;</span>],
<span class="hljs-meta">... </span>        <span class="hljs-string">&quot;score&quot;</span>: <span class="hljs-built_in">round</span>(pred[<span class="hljs-string">&quot;score&quot;</span>], <span class="hljs-number">4</span>),
<span class="hljs-meta">... </span>        <span class="hljs-string">&quot;index&quot;</span>: pred[<span class="hljs-string">&quot;index&quot;</span>],
<span class="hljs-meta">... </span>        <span class="hljs-string">&quot;word&quot;</span>: pred[<span class="hljs-string">&quot;word&quot;</span>],
<span class="hljs-meta">... </span>        <span class="hljs-string">&quot;start&quot;</span>: pred[<span class="hljs-string">&quot;start&quot;</span>],
<span class="hljs-meta">... </span>        <span class="hljs-string">&quot;end&quot;</span>: pred[<span class="hljs-string">&quot;end&quot;</span>],
<span class="hljs-meta">... </span>    }
<span class="hljs-meta">... </span>    <span class="hljs-keyword">for</span> pred <span class="hljs-keyword">in</span> preds
<span class="hljs-meta">... </span>]
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(*preds, sep=<span class="hljs-string">&quot;\\n&quot;</span>)
{<span class="hljs-string">&#x27;entity&#x27;</span>: <span class="hljs-string">&#x27;I-ORG&#x27;</span>, <span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.9968</span>, <span class="hljs-string">&#x27;index&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;word&#x27;</span>: <span class="hljs-string">&#x27;Hu&#x27;</span>, <span class="hljs-string">&#x27;start&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;end&#x27;</span>: <span class="hljs-number">2</span>}
{<span class="hljs-string">&#x27;entity&#x27;</span>: <span class="hljs-string">&#x27;I-ORG&#x27;</span>, <span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.9293</span>, <span class="hljs-string">&#x27;index&#x27;</span>: <span class="hljs-number">2</span>, <span class="hljs-string">&#x27;word&#x27;</span>: <span class="hljs-string">&#x27;##gging&#x27;</span>, <span class="hljs-string">&#x27;start&#x27;</span>: <span class="hljs-number">2</span>, <span class="hljs-string">&#x27;end&#x27;</span>: <span class="hljs-number">7</span>}
{<span class="hljs-string">&#x27;entity&#x27;</span>: <span class="hljs-string">&#x27;I-ORG&#x27;</span>, <span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.9763</span>, <span class="hljs-string">&#x27;index&#x27;</span>: <span class="hljs-number">3</span>, <span class="hljs-string">&#x27;word&#x27;</span>: <span class="hljs-string">&#x27;Face&#x27;</span>, <span class="hljs-string">&#x27;start&#x27;</span>: <span class="hljs-number">8</span>, <span class="hljs-string">&#x27;end&#x27;</span>: <span class="hljs-number">12</span>}
{<span class="hljs-string">&#x27;entity&#x27;</span>: <span class="hljs-string">&#x27;I-MISC&#x27;</span>, <span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.9983</span>, <span class="hljs-string">&#x27;index&#x27;</span>: <span class="hljs-number">6</span>, <span class="hljs-string">&#x27;word&#x27;</span>: <span class="hljs-string">&#x27;French&#x27;</span>, <span class="hljs-string">&#x27;start&#x27;</span>: <span class="hljs-number">18</span>, <span class="hljs-string">&#x27;end&#x27;</span>: <span class="hljs-number">24</span>}
{<span class="hljs-string">&#x27;entity&#x27;</span>: <span class="hljs-string">&#x27;I-LOC&#x27;</span>, <span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.999</span>, <span class="hljs-string">&#x27;index&#x27;</span>: <span class="hljs-number">10</span>, <span class="hljs-string">&#x27;word&#x27;</span>: <span class="hljs-string">&#x27;New&#x27;</span>, <span class="hljs-string">&#x27;start&#x27;</span>: <span class="hljs-number">42</span>, <span class="hljs-string">&#x27;end&#x27;</span>: <span class="hljs-number">45</span>}
{<span class="hljs-string">&#x27;entity&#x27;</span>: <span class="hljs-string">&#x27;I-LOC&#x27;</span>, <span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.9987</span>, <span class="hljs-string">&#x27;index&#x27;</span>: <span class="hljs-number">11</span>, <span class="hljs-string">&#x27;word&#x27;</span>: <span class="hljs-string">&#x27;York&#x27;</span>, <span class="hljs-string">&#x27;start&#x27;</span>: <span class="hljs-number">46</span>, <span class="hljs-string">&#x27;end&#x27;</span>: <span class="hljs-number">50</span>}
{<span class="hljs-string">&#x27;entity&#x27;</span>: <span class="hljs-string">&#x27;I-LOC&#x27;</span>, <span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.9992</span>, <span class="hljs-string">&#x27;index&#x27;</span>: <span class="hljs-number">12</span>, <span class="hljs-string">&#x27;word&#x27;</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-string">&#x27;start&#x27;</span>: <span class="hljs-number">51</span>, <span class="hljs-string">&#x27;end&#x27;</span>: <span class="hljs-number">55</span>}`,wrap:!1}}),ms=new j({props:{title:"Respuestas a preguntas",local:"respuestas-a-preguntas",headingTag:"h3"}}),hs=new y({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMHBpcGVsaW5lJTBBJTBBcXVlc3Rpb25fYW5zd2VyZXIlMjAlM0QlMjBwaXBlbGluZSh0YXNrJTNEJTIycXVlc3Rpb24tYW5zd2VyaW5nJTIyKSUwQXByZWRzJTIwJTNEJTIwcXVlc3Rpb25fYW5zd2VyZXIoJTBBJTIwJTIwJTIwJTIwcXVlc3Rpb24lM0QlMjJXaGF0JTIwaXMlMjB0aGUlMjBuYW1lJTIwb2YlMjB0aGUlMjByZXBvc2l0b3J5JTNGJTIyJTJDJTBBJTIwJTIwJTIwJTIwY29udGV4dCUzRCUyMlRoZSUyMG5hbWUlMjBvZiUyMHRoZSUyMHJlcG9zaXRvcnklMjBpcyUyMGh1Z2dpbmdmYWNlJTJGdHJhbnNmb3JtZXJzJTIyJTJDJTBBKSUwQXByaW50KCUwQSUyMCUyMCUyMCUyMGYlMjJzY29yZSUzQSUyMCU3QnJvdW5kKHByZWRzJTVCJ3Njb3JlJyU1RCUyQyUyMDQpJTdEJTJDJTIwc3RhcnQlM0ElMjAlN0JwcmVkcyU1QidzdGFydCclNUQlN0QlMkMlMjBlbmQlM0ElMjAlN0JwcmVkcyU1QidlbmQnJTVEJTdEJTJDJTIwYW5zd2VyJTNBJTIwJTdCcHJlZHMlNUInYW5zd2VyJyU1RCU3RCUyMiUwQSk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline

<span class="hljs-meta">&gt;&gt;&gt; </span>question_answerer = pipeline(task=<span class="hljs-string">&quot;question-answering&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>preds = question_answerer(
<span class="hljs-meta">... </span>    question=<span class="hljs-string">&quot;What is the name of the repository?&quot;</span>,
<span class="hljs-meta">... </span>    context=<span class="hljs-string">&quot;The name of the repository is huggingface/transformers&quot;</span>,
<span class="hljs-meta">... </span>)
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(
<span class="hljs-meta">... </span>    <span class="hljs-string">f&quot;score: <span class="hljs-subst">{<span class="hljs-built_in">round</span>(preds[<span class="hljs-string">&#x27;score&#x27;</span>], <span class="hljs-number">4</span>)}</span>, start: <span class="hljs-subst">{preds[<span class="hljs-string">&#x27;start&#x27;</span>]}</span>, end: <span class="hljs-subst">{preds[<span class="hljs-string">&#x27;end&#x27;</span>]}</span>, answer: <span class="hljs-subst">{preds[<span class="hljs-string">&#x27;answer&#x27;</span>]}</span>&quot;</span>
<span class="hljs-meta">... </span>)
score: <span class="hljs-number">0.9327</span>, start: <span class="hljs-number">30</span>, end: <span class="hljs-number">54</span>, answer: huggingface/transformers`,wrap:!1}}),Ms=new j({props:{title:"Resumir",local:"resumir",headingTag:"h3"}}),fs=new y({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMHBpcGVsaW5lJTBBJTBBc3VtbWFyaXplciUyMCUzRCUyMHBpcGVsaW5lKHRhc2slM0QlMjJzdW1tYXJpemF0aW9uJTIyKSUwQXN1bW1hcml6ZXIoJTBBJTIwJTIwJTIwJTIwJTIySW4lMjB0aGlzJTIwd29yayUyQyUyMHdlJTIwcHJlc2VudGVkJTIwdGhlJTIwVHJhbnNmb3JtZXIlMkMlMjB0aGUlMjBmaXJzdCUyMHNlcXVlbmNlJTIwdHJhbnNkdWN0aW9uJTIwbW9kZWwlMjBiYXNlZCUyMGVudGlyZWx5JTIwb24lMjBhdHRlbnRpb24lMkMlMjByZXBsYWNpbmclMjB0aGUlMjByZWN1cnJlbnQlMjBsYXllcnMlMjBtb3N0JTIwY29tbW9ubHklMjB1c2VkJTIwaW4lMjBlbmNvZGVyLWRlY29kZXIlMjBhcmNoaXRlY3R1cmVzJTIwd2l0aCUyMG11bHRpLWhlYWRlZCUyMHNlbGYtYXR0ZW50aW9uLiUyMEZvciUyMHRyYW5zbGF0aW9uJTIwdGFza3MlMkMlMjB0aGUlMjBUcmFuc2Zvcm1lciUyMGNhbiUyMGJlJTIwdHJhaW5lZCUyMHNpZ25pZmljYW50bHklMjBmYXN0ZXIlMjB0aGFuJTIwYXJjaGl0ZWN0dXJlcyUyMGJhc2VkJTIwb24lMjByZWN1cnJlbnQlMjBvciUyMGNvbnZvbHV0aW9uYWwlMjBsYXllcnMuJTIwT24lMjBib3RoJTIwV01UJTIwMjAxNCUyMEVuZ2xpc2gtdG8tR2VybWFuJTIwYW5kJTIwV01UJTIwMjAxNCUyMEVuZ2xpc2gtdG8tRnJlbmNoJTIwdHJhbnNsYXRpb24lMjB0YXNrcyUyQyUyMHdlJTIwYWNoaWV2ZSUyMGElMjBuZXclMjBzdGF0ZSUyMG9mJTIwdGhlJTIwYXJ0LiUyMEluJTIwdGhlJTIwZm9ybWVyJTIwdGFzayUyMG91ciUyMGJlc3QlMjBtb2RlbCUyMG91dHBlcmZvcm1zJTIwZXZlbiUyMGFsbCUyMHByZXZpb3VzbHklMjByZXBvcnRlZCUyMGVuc2VtYmxlcy4lMjIlMEEp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline

<span class="hljs-meta">&gt;&gt;&gt; </span>summarizer = pipeline(task=<span class="hljs-string">&quot;summarization&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>summarizer(
<span class="hljs-meta">... </span>    <span class="hljs-string">&quot;In this work, we presented the Transformer, the first sequence transduction model based entirely on attention, replacing the recurrent layers most commonly used in encoder-decoder architectures with multi-headed self-attention. For translation tasks, the Transformer can be trained significantly faster than architectures based on recurrent or convolutional layers. On both WMT 2014 English-to-German and WMT 2014 English-to-French translation tasks, we achieve a new state of the art. In the former task our best model outperforms even all previously reported ensembles.&quot;</span>
<span class="hljs-meta">... </span>)
[{<span class="hljs-string">&#x27;summary_text&#x27;</span>: <span class="hljs-string">&#x27; The Transformer is the first sequence transduction model based entirely on attention . It replaces the recurrent layers most commonly used in encoder-decoder architectures with multi-headed self-attention . For translation tasks, the Transformer can be trained significantly faster than architectures based on recurrent or convolutional layers .&#x27;</span>}]`,wrap:!1}}),Us=new j({props:{title:"Traducci√≥n",local:"traducci√≥n",headingTag:"h3"}}),Cs=new y({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMHBpcGVsaW5lJTBBJTBBdGV4dCUyMCUzRCUyMCUyMnRyYW5zbGF0ZSUyMEVuZ2xpc2glMjB0byUyMEZyZW5jaCUzQSUyMEh1Z2dpbmclMjBGYWNlJTIwaXMlMjBhJTIwY29tbXVuaXR5LWJhc2VkJTIwb3Blbi1zb3VyY2UlMjBwbGF0Zm9ybSUyMGZvciUyMG1hY2hpbmUlMjBsZWFybmluZy4lMjIlMEF0cmFuc2xhdG9yJTIwJTNEJTIwcGlwZWxpbmUodGFzayUzRCUyMnRyYW5zbGF0aW9uJTIyJTJDJTIwbW9kZWwlM0QlMjJ0NS1zbWFsbCUyMiklMEF0cmFuc2xhdG9yKHRleHQp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline

<span class="hljs-meta">&gt;&gt;&gt; </span>text = <span class="hljs-string">&quot;translate English to French: Hugging Face is a community-based open-source platform for machine learning.&quot;</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>translator = pipeline(task=<span class="hljs-string">&quot;translation&quot;</span>, model=<span class="hljs-string">&quot;t5-small&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>translator(text)
[{<span class="hljs-string">&#x27;translation_text&#x27;</span>: <span class="hljs-string">&quot;Hugging Face est une tribune communautaire de l&#x27;apprentissage des machines.&quot;</span>}]`,wrap:!1}}),vs=new j({props:{title:"Modelado de lenguaje",local:"modelado-de-lenguaje",headingTag:"h3"}}),Bs=new y({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMHBpcGVsaW5lJTBBJTBBcHJvbXB0JTIwJTNEJTIwJTIySHVnZ2luZyUyMEZhY2UlMjBpcyUyMGElMjBjb21tdW5pdHktYmFzZWQlMjBvcGVuLXNvdXJjZSUyMHBsYXRmb3JtJTIwZm9yJTIwbWFjaGluZSUyMGxlYXJuaW5nLiUyMiUwQWdlbmVyYXRvciUyMCUzRCUyMHBpcGVsaW5lKHRhc2slM0QlMjJ0ZXh0LWdlbmVyYXRpb24lMjIpJTBBZ2VuZXJhdG9yKHByb21wdCklMjAlMjAlMjMlMjBkb2N0ZXN0JTNBJTIwJTJCU0tJUA==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline

<span class="hljs-meta">&gt;&gt;&gt; </span>prompt = <span class="hljs-string">&quot;Hugging Face is a community-based open-source platform for machine learning.&quot;</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>generator = pipeline(task=<span class="hljs-string">&quot;text-generation&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>generator(prompt)  <span class="hljs-comment"># doctest: +SKIP</span>`,wrap:!1}}),$s=new y({props:{code:"dGV4dCUyMCUzRCUyMCUyMkh1Z2dpbmclMjBGYWNlJTIwaXMlMjBhJTIwY29tbXVuaXR5LWJhc2VkJTIwb3Blbi1zb3VyY2UlMjAlM0NtYXNrJTNFJTIwZm9yJTIwbWFjaGluZSUyMGxlYXJuaW5nLiUyMiUwQWZpbGxfbWFzayUyMCUzRCUyMHBpcGVsaW5lKHRhc2slM0QlMjJmaWxsLW1hc2slMjIpJTBBcHJlZHMlMjAlM0QlMjBmaWxsX21hc2sodGV4dCUyQyUyMHRvcF9rJTNEMSklMEFwcmVkcyUyMCUzRCUyMCU1QiUwQSUyMCUyMCUyMCUyMCU3QiUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMnNjb3JlJTIyJTNBJTIwcm91bmQocHJlZCU1QiUyMnNjb3JlJTIyJTVEJTJDJTIwNCklMkMlMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjJ0b2tlbiUyMiUzQSUyMHByZWQlNUIlMjJ0b2tlbiUyMiU1RCUyQyUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMnRva2VuX3N0ciUyMiUzQSUyMHByZWQlNUIlMjJ0b2tlbl9zdHIlMjIlNUQlMkMlMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjJzZXF1ZW5jZSUyMiUzQSUyMHByZWQlNUIlMjJzZXF1ZW5jZSUyMiU1RCUyQyUwQSUyMCUyMCUyMCUyMCU3RCUwQSUyMCUyMCUyMCUyMGZvciUyMHByZWQlMjBpbiUyMHByZWRzJTBBJTVEJTBBcHJlZHM=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>text = <span class="hljs-string">&quot;Hugging Face is a community-based open-source &lt;mask&gt; for machine learning.&quot;</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>fill_mask = pipeline(task=<span class="hljs-string">&quot;fill-mask&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>preds = fill_mask(text, top_k=<span class="hljs-number">1</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>preds = [
<span class="hljs-meta">... </span>    {
<span class="hljs-meta">... </span>        <span class="hljs-string">&quot;score&quot;</span>: <span class="hljs-built_in">round</span>(pred[<span class="hljs-string">&quot;score&quot;</span>], <span class="hljs-number">4</span>),
<span class="hljs-meta">... </span>        <span class="hljs-string">&quot;token&quot;</span>: pred[<span class="hljs-string">&quot;token&quot;</span>],
<span class="hljs-meta">... </span>        <span class="hljs-string">&quot;token_str&quot;</span>: pred[<span class="hljs-string">&quot;token_str&quot;</span>],
<span class="hljs-meta">... </span>        <span class="hljs-string">&quot;sequence&quot;</span>: pred[<span class="hljs-string">&quot;sequence&quot;</span>],
<span class="hljs-meta">... </span>    }
<span class="hljs-meta">... </span>    <span class="hljs-keyword">for</span> pred <span class="hljs-keyword">in</span> preds
<span class="hljs-meta">... </span>]
<span class="hljs-meta">&gt;&gt;&gt; </span>preds
[{<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.2236</span>,
  <span class="hljs-string">&#x27;token&#x27;</span>: <span class="hljs-number">1761</span>,
  <span class="hljs-string">&#x27;token_str&#x27;</span>: <span class="hljs-string">&#x27; platform&#x27;</span>,
  <span class="hljs-string">&#x27;sequence&#x27;</span>: <span class="hljs-string">&#x27;Hugging Face is a community-based open-source platform for machine learning.&#x27;</span>}]`,wrap:!1}}),ks=new j({props:{title:"Multimodal",local:"multimodal",headingTag:"h2"}}),Vs=new j({props:{title:"Respuestas a preguntas de documentos",local:"respuestas-a-preguntas-de-documentos",headingTag:"h3"}}),Rs=new y({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMHBpcGVsaW5lJTBBZnJvbSUyMFBJTCUyMGltcG9ydCUyMEltYWdlJTBBaW1wb3J0JTIwcmVxdWVzdHMlMEElMEF1cmwlMjAlM0QlMjAlMjJodHRwcyUzQSUyRiUyRmRhdGFzZXRzLXNlcnZlci5odWdnaW5nZmFjZS5jbyUyRmFzc2V0cyUyRmhmLWludGVybmFsLXRlc3RpbmclMkZleGFtcGxlLWRvY3VtZW50cyUyRi0tJTJGaGYtaW50ZXJuYWwtdGVzdGluZy0tZXhhbXBsZS1kb2N1bWVudHMlMkZ0ZXN0JTJGMiUyRmltYWdlJTJGaW1hZ2UuanBnJTIyJTBBaW1hZ2UlMjAlM0QlMjBJbWFnZS5vcGVuKHJlcXVlc3RzLmdldCh1cmwlMkMlMjBzdHJlYW0lM0RUcnVlKS5yYXcpJTBBJTBBZG9jX3F1ZXN0aW9uX2Fuc3dlcmVyJTIwJTNEJTIwcGlwZWxpbmUoJTIyZG9jdW1lbnQtcXVlc3Rpb24tYW5zd2VyaW5nJTIyJTJDJTIwbW9kZWwlM0QlMjJtYWdvcnNodW5vdiUyRmxheW91dGxtLWludm9pY2VzJTIyKSUwQXByZWRzJTIwJTNEJTIwZG9jX3F1ZXN0aW9uX2Fuc3dlcmVyKCUwQSUyMCUyMCUyMCUyMHF1ZXN0aW9uJTNEJTIyV2hhdCUyMGlzJTIwdGhlJTIwdG90YWwlMjBhbW91bnQlM0YlMjIlMkMlMEElMjAlMjAlMjAlMjBpbWFnZSUzRGltYWdlJTJDJTBBKSUwQXByZWRz",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> requests

<span class="hljs-meta">&gt;&gt;&gt; </span>url = <span class="hljs-string">&quot;https://datasets-server.huggingface.co/assets/hf-internal-testing/example-documents/--/hf-internal-testing--example-documents/test/2/image/image.jpg&quot;</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>image = Image.<span class="hljs-built_in">open</span>(requests.get(url, stream=<span class="hljs-literal">True</span>).raw)

<span class="hljs-meta">&gt;&gt;&gt; </span>doc_question_answerer = pipeline(<span class="hljs-string">&quot;document-question-answering&quot;</span>, model=<span class="hljs-string">&quot;magorshunov/layoutlm-invoices&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>preds = doc_question_answerer(
<span class="hljs-meta">... </span>    question=<span class="hljs-string">&quot;What is the total amount?&quot;</span>,
<span class="hljs-meta">... </span>    image=image,
<span class="hljs-meta">... </span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>preds
[{<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.8531</span>, <span class="hljs-string">&#x27;answer&#x27;</span>: <span class="hljs-string">&#x27;17,000&#x27;</span>, <span class="hljs-string">&#x27;start&#x27;</span>: <span class="hljs-number">4</span>, <span class="hljs-string">&#x27;end&#x27;</span>: <span class="hljs-number">4</span>}]`,wrap:!1}}),{c(){h=i("meta"),Fs=t(),Es=i("p"),Ss=t(),o(b.$$.fragment),_s=t(),x=i("p"),x.textContent=ba,As=t(),f=i("p"),f.textContent=xa,Ps=t(),o(U.$$.fragment),Ks=t(),T=i("p"),T.textContent=fa,Ds=t(),w=i("p"),w.textContent=Ua,Os=t(),o(C.$$.fragment),se=t(),v=i("p"),v.textContent=Ta,ee=t(),Z=i("ul"),Z.innerHTML=wa,ae=t(),o(q.$$.fragment),ne=t(),o(I.$$.fragment),te=t(),B=i("p"),B.textContent=Ca,le=t(),W=i("p"),W.textContent=va,ie=t(),o($.$$.fragment),pe=t(),o(k.$$.fragment),re=t(),G=i("p"),G.innerHTML=Za,oe=t(),H=i("p"),H.textContent=qa,ce=t(),V=i("ol"),V.innerHTML=Ia,de=t(),o(N.$$.fragment),ue=t(),R=i("p"),R.textContent=Ba,me=t(),z=i("ul"),z.innerHTML=Wa,ge=t(),o(Q.$$.fragment),je=t(),o(Y.$$.fragment),ye=t(),E=i("p"),E.textContent=$a,he=t(),X=i("ul"),X.innerHTML=ka,Me=t(),o(L.$$.fragment),Je=t(),o(F.$$.fragment),be=t(),S=i("p"),S.textContent=Ga,xe=t(),_=i("ul"),_.innerHTML=Ha,fe=t(),A=i("p"),A.textContent=Va,Ue=t(),o(P.$$.fragment),Te=t(),o(K.$$.fragment),we=t(),D=i("p"),D.textContent=Na,Ce=t(),O=i("p"),O.textContent=Ra,ve=t(),ss=i("ul"),ss.innerHTML=za,Ze=t(),o(es.$$.fragment),qe=t(),o(as.$$.fragment),Ie=t(),ns=i("p"),ns.textContent=Qa,Be=t(),o(ts.$$.fragment),We=t(),ls=i("p"),ls.textContent=Ya,$e=t(),is=i("ul"),is.innerHTML=Ea,ke=t(),o(ps.$$.fragment),Ge=t(),o(rs.$$.fragment),He=t(),os=i("p"),os.innerHTML=Xa,Ve=t(),cs=i("p"),cs.textContent=La,Ne=t(),ds=i("ul"),ds.innerHTML=Fa,Re=t(),o(us.$$.fragment),ze=t(),o(ms.$$.fragment),Qe=t(),gs=i("p"),gs.textContent=Sa,Ye=t(),js=i("p"),js.textContent=_a,Ee=t(),ys=i("ul"),ys.innerHTML=Aa,Xe=t(),o(hs.$$.fragment),Le=t(),o(Ms.$$.fragment),Fe=t(),Js=i("p"),Js.textContent=Pa,Se=t(),bs=i("p"),bs.textContent=Ka,_e=t(),xs=i("ul"),xs.innerHTML=Da,Ae=t(),o(fs.$$.fragment),Pe=t(),o(Us.$$.fragment),Ke=t(),Ts=i("p"),Ts.textContent=Oa,De=t(),ws=i("p"),ws.textContent=sn,Oe=t(),o(Cs.$$.fragment),sa=t(),o(vs.$$.fragment),ea=t(),Zs=i("p"),Zs.textContent=en,aa=t(),qs=i("p"),qs.textContent=an,na=t(),M=i("ul"),Is=i("li"),Qs=i("p"),Qs.textContent=nn,ya=t(),o(Bs.$$.fragment),ha=t(),Ws=i("li"),Ys=i("p"),Ys.textContent=tn,Ma=t(),o($s.$$.fragment),ta=t(),o(ks.$$.fragment),la=t(),Gs=i("p"),Gs.textContent=ln,ia=t(),Hs=i("p"),Hs.textContent=pn,pa=t(),o(Vs.$$.fragment),ra=t(),Ns=i("p"),Ns.textContent=rn,oa=t(),o(Rs.$$.fragment),ca=t(),zs=i("p"),zs.innerHTML=on,da=t(),Xs=i("p"),this.h()},l(s){const e=yn("svelte-u9bgzb",document.head);h=p(e,"META",{name:!0,content:!0}),e.forEach(a),Fs=l(s),Es=p(s,"P",{}),Ls(Es).forEach(a),Ss=l(s),c(b.$$.fragment,s),_s=l(s),x=p(s,"P",{"data-svelte-h":!0}),r(x)!=="svelte-wrov2v"&&(x.textContent=ba),As=l(s),f=p(s,"P",{"data-svelte-h":!0}),r(f)!=="svelte-ugqvf2"&&(f.textContent=xa),Ps=l(s),c(U.$$.fragment,s),Ks=l(s),T=p(s,"P",{"data-svelte-h":!0}),r(T)!=="svelte-t6wlqa"&&(T.textContent=fa),Ds=l(s),w=p(s,"P",{"data-svelte-h":!0}),r(w)!=="svelte-3l7d80"&&(w.textContent=Ua),Os=l(s),c(C.$$.fragment,s),se=l(s),v=p(s,"P",{"data-svelte-h":!0}),r(v)!=="svelte-1yxh2g8"&&(v.textContent=Ta),ee=l(s),Z=p(s,"UL",{"data-svelte-h":!0}),r(Z)!=="svelte-17p9ds6"&&(Z.innerHTML=wa),ae=l(s),c(q.$$.fragment,s),ne=l(s),c(I.$$.fragment,s),te=l(s),B=p(s,"P",{"data-svelte-h":!0}),r(B)!=="svelte-ccqudd"&&(B.textContent=Ca),le=l(s),W=p(s,"P",{"data-svelte-h":!0}),r(W)!=="svelte-1e2na1v"&&(W.textContent=va),ie=l(s),c($.$$.fragment,s),pe=l(s),c(k.$$.fragment,s),re=l(s),G=p(s,"P",{"data-svelte-h":!0}),r(G)!=="svelte-1pw1pju"&&(G.innerHTML=Za),oe=l(s),H=p(s,"P",{"data-svelte-h":!0}),r(H)!=="svelte-1j2cqc"&&(H.textContent=qa),ce=l(s),V=p(s,"OL",{"data-svelte-h":!0}),r(V)!=="svelte-qy24n8"&&(V.innerHTML=Ia),de=l(s),c(N.$$.fragment,s),ue=l(s),R=p(s,"P",{"data-svelte-h":!0}),r(R)!=="svelte-1wm6rmp"&&(R.textContent=Ba),me=l(s),z=p(s,"UL",{"data-svelte-h":!0}),r(z)!=="svelte-53djgi"&&(z.innerHTML=Wa),ge=l(s),c(Q.$$.fragment,s),je=l(s),c(Y.$$.fragment,s),ye=l(s),E=p(s,"P",{"data-svelte-h":!0}),r(E)!=="svelte-7ee2c8"&&(E.textContent=$a),he=l(s),X=p(s,"UL",{"data-svelte-h":!0}),r(X)!=="svelte-r9s62m"&&(X.innerHTML=ka),Me=l(s),c(L.$$.fragment,s),Je=l(s),c(F.$$.fragment,s),be=l(s),S=p(s,"P",{"data-svelte-h":!0}),r(S)!=="svelte-umk665"&&(S.textContent=Ga),xe=l(s),_=p(s,"UL",{"data-svelte-h":!0}),r(_)!=="svelte-471xgq"&&(_.innerHTML=Ha),fe=l(s),A=p(s,"P",{"data-svelte-h":!0}),r(A)!=="svelte-1rvyh07"&&(A.textContent=Va),Ue=l(s),c(P.$$.fragment,s),Te=l(s),c(K.$$.fragment,s),we=l(s),D=p(s,"P",{"data-svelte-h":!0}),r(D)!=="svelte-1araow4"&&(D.textContent=Na),Ce=l(s),O=p(s,"P",{"data-svelte-h":!0}),r(O)!=="svelte-1ul6ize"&&(O.textContent=Ra),ve=l(s),ss=p(s,"UL",{"data-svelte-h":!0}),r(ss)!=="svelte-1urr7zw"&&(ss.innerHTML=za),Ze=l(s),c(es.$$.fragment,s),qe=l(s),c(as.$$.fragment,s),Ie=l(s),ns=p(s,"P",{"data-svelte-h":!0}),r(ns)!=="svelte-1bszmd1"&&(ns.textContent=Qa),Be=l(s),c(ts.$$.fragment,s),We=l(s),ls=p(s,"P",{"data-svelte-h":!0}),r(ls)!=="svelte-9ss1nd"&&(ls.textContent=Ya),$e=l(s),is=p(s,"UL",{"data-svelte-h":!0}),r(is)!=="svelte-1qkjwt4"&&(is.innerHTML=Ea),ke=l(s),c(ps.$$.fragment,s),Ge=l(s),c(rs.$$.fragment,s),He=l(s),os=p(s,"P",{"data-svelte-h":!0}),r(os)!=="svelte-i2csfh"&&(os.innerHTML=Xa),Ve=l(s),cs=p(s,"P",{"data-svelte-h":!0}),r(cs)!=="svelte-1b0d6b"&&(cs.textContent=La),Ne=l(s),ds=p(s,"UL",{"data-svelte-h":!0}),r(ds)!=="svelte-sj8n4u"&&(ds.innerHTML=Fa),Re=l(s),c(us.$$.fragment,s),ze=l(s),c(ms.$$.fragment,s),Qe=l(s),gs=p(s,"P",{"data-svelte-h":!0}),r(gs)!=="svelte-12fjabo"&&(gs.textContent=Sa),Ye=l(s),js=p(s,"P",{"data-svelte-h":!0}),r(js)!=="svelte-yahlih"&&(js.textContent=_a),Ee=l(s),ys=p(s,"UL",{"data-svelte-h":!0}),r(ys)!=="svelte-2kfb6v"&&(ys.innerHTML=Aa),Xe=l(s),c(hs.$$.fragment,s),Le=l(s),c(Ms.$$.fragment,s),Fe=l(s),Js=p(s,"P",{"data-svelte-h":!0}),r(Js)!=="svelte-sdy6sp"&&(Js.textContent=Pa),Se=l(s),bs=p(s,"P",{"data-svelte-h":!0}),r(bs)!=="svelte-17k9bdx"&&(bs.textContent=Ka),_e=l(s),xs=p(s,"UL",{"data-svelte-h":!0}),r(xs)!=="svelte-1dcb4tb"&&(xs.innerHTML=Da),Ae=l(s),c(fs.$$.fragment,s),Pe=l(s),c(Us.$$.fragment,s),Ke=l(s),Ts=p(s,"P",{"data-svelte-h":!0}),r(Ts)!=="svelte-w9yj0m"&&(Ts.textContent=Oa),De=l(s),ws=p(s,"P",{"data-svelte-h":!0}),r(ws)!=="svelte-12c54pg"&&(ws.textContent=sn),Oe=l(s),c(Cs.$$.fragment,s),sa=l(s),c(vs.$$.fragment,s),ea=l(s),Zs=p(s,"P",{"data-svelte-h":!0}),r(Zs)!=="svelte-9rwjil"&&(Zs.textContent=en),aa=l(s),qs=p(s,"P",{"data-svelte-h":!0}),r(qs)!=="svelte-1m2onmr"&&(qs.textContent=an),na=l(s),M=p(s,"UL",{});var ma=Ls(M);Is=p(ma,"LI",{});var ga=Ls(Is);Qs=p(ga,"P",{"data-svelte-h":!0}),r(Qs)!=="svelte-ibingj"&&(Qs.textContent=nn),ya=l(ga),c(Bs.$$.fragment,ga),ga.forEach(a),ha=l(ma),Ws=p(ma,"LI",{});var ja=Ls(Ws);Ys=p(ja,"P",{"data-svelte-h":!0}),r(Ys)!=="svelte-qp63kz"&&(Ys.textContent=tn),Ma=l(ja),c($s.$$.fragment,ja),ja.forEach(a),ma.forEach(a),ta=l(s),c(ks.$$.fragment,s),la=l(s),Gs=p(s,"P",{"data-svelte-h":!0}),r(Gs)!=="svelte-rd5dr6"&&(Gs.textContent=ln),ia=l(s),Hs=p(s,"P",{"data-svelte-h":!0}),r(Hs)!=="svelte-tzxech"&&(Hs.textContent=pn),pa=l(s),c(Vs.$$.fragment,s),ra=l(s),Ns=p(s,"P",{"data-svelte-h":!0}),r(Ns)!=="svelte-zqriyx"&&(Ns.textContent=rn),oa=l(s),c(Rs.$$.fragment,s),ca=l(s),zs=p(s,"P",{"data-svelte-h":!0}),r(zs)!=="svelte-52lbq3"&&(zs.innerHTML=on),da=l(s),Xs=p(s,"P",{}),Ls(Xs).forEach(a),this.h()},h(){cn(h,"name","hf:doc:metadata"),cn(h,"content",Mn)},m(s,e){J(document.head,h),n(s,Fs,e),n(s,Es,e),n(s,Ss,e),d(b,s,e),n(s,_s,e),n(s,x,e),n(s,As,e),n(s,f,e),n(s,Ps,e),d(U,s,e),n(s,Ks,e),n(s,T,e),n(s,Ds,e),n(s,w,e),n(s,Os,e),d(C,s,e),n(s,se,e),n(s,v,e),n(s,ee,e),n(s,Z,e),n(s,ae,e),d(q,s,e),n(s,ne,e),d(I,s,e),n(s,te,e),n(s,B,e),n(s,le,e),n(s,W,e),n(s,ie,e),d($,s,e),n(s,pe,e),d(k,s,e),n(s,re,e),n(s,G,e),n(s,oe,e),n(s,H,e),n(s,ce,e),n(s,V,e),n(s,de,e),d(N,s,e),n(s,ue,e),n(s,R,e),n(s,me,e),n(s,z,e),n(s,ge,e),d(Q,s,e),n(s,je,e),d(Y,s,e),n(s,ye,e),n(s,E,e),n(s,he,e),n(s,X,e),n(s,Me,e),d(L,s,e),n(s,Je,e),d(F,s,e),n(s,be,e),n(s,S,e),n(s,xe,e),n(s,_,e),n(s,fe,e),n(s,A,e),n(s,Ue,e),d(P,s,e),n(s,Te,e),d(K,s,e),n(s,we,e),n(s,D,e),n(s,Ce,e),n(s,O,e),n(s,ve,e),n(s,ss,e),n(s,Ze,e),d(es,s,e),n(s,qe,e),d(as,s,e),n(s,Ie,e),n(s,ns,e),n(s,Be,e),d(ts,s,e),n(s,We,e),n(s,ls,e),n(s,$e,e),n(s,is,e),n(s,ke,e),d(ps,s,e),n(s,Ge,e),d(rs,s,e),n(s,He,e),n(s,os,e),n(s,Ve,e),n(s,cs,e),n(s,Ne,e),n(s,ds,e),n(s,Re,e),d(us,s,e),n(s,ze,e),d(ms,s,e),n(s,Qe,e),n(s,gs,e),n(s,Ye,e),n(s,js,e),n(s,Ee,e),n(s,ys,e),n(s,Xe,e),d(hs,s,e),n(s,Le,e),d(Ms,s,e),n(s,Fe,e),n(s,Js,e),n(s,Se,e),n(s,bs,e),n(s,_e,e),n(s,xs,e),n(s,Ae,e),d(fs,s,e),n(s,Pe,e),d(Us,s,e),n(s,Ke,e),n(s,Ts,e),n(s,De,e),n(s,ws,e),n(s,Oe,e),d(Cs,s,e),n(s,sa,e),d(vs,s,e),n(s,ea,e),n(s,Zs,e),n(s,aa,e),n(s,qs,e),n(s,na,e),n(s,M,e),J(M,Is),J(Is,Qs),J(Is,ya),d(Bs,Is,null),J(M,ha),J(M,Ws),J(Ws,Ys),J(Ws,Ma),d($s,Ws,null),n(s,ta,e),d(ks,s,e),n(s,la,e),n(s,Gs,e),n(s,ia,e),n(s,Hs,e),n(s,pa,e),d(Vs,s,e),n(s,ra,e),n(s,Ns,e),n(s,oa,e),d(Rs,s,e),n(s,ca,e),n(s,zs,e),n(s,da,e),n(s,Xs,e),ua=!0},p:un,i(s){ua||(u(b.$$.fragment,s),u(U.$$.fragment,s),u(C.$$.fragment,s),u(q.$$.fragment,s),u(I.$$.fragment,s),u($.$$.fragment,s),u(k.$$.fragment,s),u(N.$$.fragment,s),u(Q.$$.fragment,s),u(Y.$$.fragment,s),u(L.$$.fragment,s),u(F.$$.fragment,s),u(P.$$.fragment,s),u(K.$$.fragment,s),u(es.$$.fragment,s),u(as.$$.fragment,s),u(ts.$$.fragment,s),u(ps.$$.fragment,s),u(rs.$$.fragment,s),u(us.$$.fragment,s),u(ms.$$.fragment,s),u(hs.$$.fragment,s),u(Ms.$$.fragment,s),u(fs.$$.fragment,s),u(Us.$$.fragment,s),u(Cs.$$.fragment,s),u(vs.$$.fragment,s),u(Bs.$$.fragment,s),u($s.$$.fragment,s),u(ks.$$.fragment,s),u(Vs.$$.fragment,s),u(Rs.$$.fragment,s),ua=!0)},o(s){m(b.$$.fragment,s),m(U.$$.fragment,s),m(C.$$.fragment,s),m(q.$$.fragment,s),m(I.$$.fragment,s),m($.$$.fragment,s),m(k.$$.fragment,s),m(N.$$.fragment,s),m(Q.$$.fragment,s),m(Y.$$.fragment,s),m(L.$$.fragment,s),m(F.$$.fragment,s),m(P.$$.fragment,s),m(K.$$.fragment,s),m(es.$$.fragment,s),m(as.$$.fragment,s),m(ts.$$.fragment,s),m(ps.$$.fragment,s),m(rs.$$.fragment,s),m(us.$$.fragment,s),m(ms.$$.fragment,s),m(hs.$$.fragment,s),m(Ms.$$.fragment,s),m(fs.$$.fragment,s),m(Us.$$.fragment,s),m(Cs.$$.fragment,s),m(vs.$$.fragment,s),m(Bs.$$.fragment,s),m($s.$$.fragment,s),m(ks.$$.fragment,s),m(Vs.$$.fragment,s),m(Rs.$$.fragment,s),ua=!1},d(s){s&&(a(Fs),a(Es),a(Ss),a(_s),a(x),a(As),a(f),a(Ps),a(Ks),a(T),a(Ds),a(w),a(Os),a(se),a(v),a(ee),a(Z),a(ae),a(ne),a(te),a(B),a(le),a(W),a(ie),a(pe),a(re),a(G),a(oe),a(H),a(ce),a(V),a(de),a(ue),a(R),a(me),a(z),a(ge),a(je),a(ye),a(E),a(he),a(X),a(Me),a(Je),a(be),a(S),a(xe),a(_),a(fe),a(A),a(Ue),a(Te),a(we),a(D),a(Ce),a(O),a(ve),a(ss),a(Ze),a(qe),a(Ie),a(ns),a(Be),a(We),a(ls),a($e),a(is),a(ke),a(Ge),a(He),a(os),a(Ve),a(cs),a(Ne),a(ds),a(Re),a(ze),a(Qe),a(gs),a(Ye),a(js),a(Ee),a(ys),a(Xe),a(Le),a(Fe),a(Js),a(Se),a(bs),a(_e),a(xs),a(Ae),a(Pe),a(Ke),a(Ts),a(De),a(ws),a(Oe),a(sa),a(ea),a(Zs),a(aa),a(qs),a(na),a(M),a(ta),a(la),a(Gs),a(ia),a(Hs),a(pa),a(ra),a(Ns),a(oa),a(ca),a(zs),a(da),a(Xs)),a(h),g(b,s),g(U,s),g(C,s),g(q,s),g(I,s),g($,s),g(k,s),g(N,s),g(Q,s),g(Y,s),g(L,s),g(F,s),g(P,s),g(K,s),g(es,s),g(as,s),g(ts,s),g(ps,s),g(rs,s),g(us,s),g(ms,s),g(hs,s),g(Ms,s),g(fs,s),g(Us,s),g(Cs,s),g(vs,s),g(Bs),g($s),g(ks,s),g(Vs,s),g(Rs,s)}}}const Mn='{"title":"Lo que ü§ó Transformers puede hacer","local":"lo-que--transformers-puede-hacer","sections":[{"title":"Audio","local":"audio","sections":[{"title":"Clasificaci√≥n de audio","local":"clasificaci√≥n-de-audio","sections":[],"depth":3},{"title":"Reconocimiento autom√°tico del habla","local":"reconocimiento-autom√°tico-del-habla","sections":[],"depth":3}],"depth":2},{"title":"Visi√≥n por computadora","local":"visi√≥n-por-computadora","sections":[{"title":"Clasificaci√≥n de im√°genes","local":"clasificaci√≥n-de-im√°genes","sections":[],"depth":3},{"title":"Detecci√≥n de objetos","local":"detecci√≥n-de-objetos","sections":[],"depth":3},{"title":"Segmentaci√≥n de im√°genes","local":"segmentaci√≥n-de-im√°genes","sections":[],"depth":3},{"title":"Estimaci√≥n de profundidad","local":"estimaci√≥n-de-profundidad","sections":[],"depth":3}],"depth":2},{"title":"Procesamiento del lenguaje natural","local":"procesamiento-del-lenguaje-natural","sections":[{"title":"Clasificaci√≥n de texto","local":"clasificaci√≥n-de-texto","sections":[],"depth":3},{"title":"Clasificaci√≥n de tokens","local":"clasificaci√≥n-de-tokens","sections":[],"depth":3},{"title":"Respuestas a preguntas","local":"respuestas-a-preguntas","sections":[],"depth":3},{"title":"Resumir","local":"resumir","sections":[],"depth":3},{"title":"Traducci√≥n","local":"traducci√≥n","sections":[],"depth":3},{"title":"Modelado de lenguaje","local":"modelado-de-lenguaje","sections":[],"depth":3}],"depth":2},{"title":"Multimodal","local":"multimodal","sections":[{"title":"Respuestas a preguntas de documentos","local":"respuestas-a-preguntas-de-documentos","sections":[],"depth":3}],"depth":2}],"depth":1}';function Jn(Ja){return mn(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Tn extends gn{constructor(h){super(),jn(this,h,Jn,hn,dn,{})}}export{Tn as component};
