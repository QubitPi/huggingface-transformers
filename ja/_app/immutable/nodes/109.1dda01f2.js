import{s as St,n as Kt,o as Ot}from"../chunks/scheduler.9bc65507.js";import{S as el,i as tl,g as i,s as a,r as p,A as ll,h as m,f as l,c as n,j as Dt,u as r,x as o,k as Pt,y as sl,a as s,v as M,d as c,t as u,w as g}from"../chunks/index.707bf1b6.js";import{C as b}from"../chunks/CodeBlock.54a9f38d.js";import{D as al}from"../chunks/DocNotebookDropdown.41f65cb5.js";import{H as J}from"../chunks/Heading.342b1fa6.js";function nl(Jt){let f,Je,be,de,d,ye,y,Te,T,dt='🤗 Transformers にはいくつかの多言語モデルがあり、それらの推論の使用方法は単一言語モデルとは異なります。ただし、多言語モデルの使用方法がすべて異なるわけではありません。 <a href="https://huggingface.co/google-bert/bert-base-multilingual-uncased" rel="nofollow">google-bert/bert-base-multilingual-uncased</a> などの一部のモデルは、単一言語モデルと同様に使用できます。 このガイドでは、推論のために使用方法が異なる多言語モデルをどのように使うかを示します。',Ue,U,he,h,yt="XLM には10の異なるチェックポイントがあり、そのうちの1つだけが単一言語です。 残りの9つのモデルチェックポイントは、言語埋め込みを使用するチェックポイントと使用しないチェックポイントの2つのカテゴリに分けることができます。",$e,$,je,j,Tt="次の XLM モデルは、言語の埋め込みを使用して、推論で使用される言語を指定します。",ke,k,Ut="<li><code>FacebookAI/xlm-mlm-ende-1024</code> (マスク化された言語モデリング、英語-ドイツ語)</li> <li><code>FacebookAI/xlm-mlm-enfr-1024</code> (マスク化された言語モデリング、英語-フランス語)</li> <li><code>FacebookAI/xlm-mlm-enro-1024</code> (マスク化された言語モデリング、英語-ルーマニア語)</li> <li><code>FacebookAI/xlm-mlm-xnli15-1024</code> (マスク化された言語モデリング、XNLI 言語)</li> <li><code>FacebookAI/xlm-mlm-tlm-xnli15-1024</code> (マスク化された言語モデリング + 翻訳 + XNLI 言語)</li> <li><code>FacebookAI/xlm-clm-enfr-1024</code> (因果言語モデリング、英語-フランス語)</li> <li><code>FacebookAI/xlm-clm-ende-1024</code> (因果言語モデリング、英語-ドイツ語)</li>",we,w,ht="言語の埋め込みは、モデルに渡される <code>input_ids</code> と同じ形状のテンソルとして表されます。 これらのテンソルの値は、使用される言語に依存し、トークナイザーの <code>lang2id</code> および <code>id2lang</code> 属性によって識別されます。",xe,x,$t="この例では、<code>FacebookAI/xlm-clm-enfr-1024</code> チェックポイントをロードします (因果言語モデリング、英語-フランス語)。",ve,v,Ze,Z,jt="トークナイザーの <code>lang2id</code> 属性は、このモデルの言語とその ID を表示します。",_e,_,Ce,C,kt="次に、入力例を作成します。",Ie,I,Xe,X,wt="言語 ID を <code>en</code> に設定し、それを使用して言語の埋め込みを定義します。 言語の埋め込みは、英語の言語 ID であるため、<code>0</code> で埋められたテンソルです。 このテンソルは <code>input_ids</code> と同じサイズにする必要があります。",Ge,G,We,W,xt="これで、<code>input_ids</code> と言語の埋め込みをモデルに渡すことができます。",Ve,V,Le,L,vt='<a href="https://github.com/huggingface/transformers/tree/main/examples/pytorch/text-generation/run_generation.py" rel="nofollow">run_generation.py</a> スクリプトは、<code>xlm-clm</code> チェックポイントを使用して、言語が埋め込まれたテキストを生成できます。',Re,R,Be,B,Zt="次の XLM モデルは、推論中に言語の埋め込みを必要としません。",Fe,F,_t="<li><code>FacebookAI/xlm-mlm-17-1280</code> (マスク化された言語モデリング、17の言語)</li> <li><code>FacebookAI/xlm-mlm-100-1280</code> (マスク化された言語モデリング、100の言語)</li>",ze,z,Ct="これらのモデルは、以前の XLM チェックポイントとは異なり、一般的な文の表現に使用されます。",Ee,E,He,H,It="以下の BERT モデルは、多言語タスクに使用できます。",qe,q,Xt="<li><code>google-bert/bert-base-multilingual-uncased</code> (マスク化された言語モデリング + 次の文の予測、102の言語)</li> <li><code>google-bert/bert-base-multilingual-cased</code> (マスク化された言語モデリング + 次の文の予測、104の言語)</li>",Qe,Q,Gt="これらのモデルは、推論中に言語の埋め込みを必要としません。 文脈から言語を識別し、それに応じて推測する必要があります。",Ye,Y,Ne,N,Wt="次の XLM-RoBERTa モデルは、多言語タスクに使用できます。",Ae,A,Vt="<li><code>FacebookAI/xlm-roberta-base</code> (マスク化された言語モデリング、100の言語)</li> <li><code>FacebookAI/xlm-roberta-large</code> (マスク化された言語モデリング、100の言語)</li>",De,D,Lt="XLM-RoBERTa は、100の言語で新しく作成およびクリーニングされた2.5 TB の CommonCrawl データでトレーニングされました。 これは、分類、シーケンスのラベル付け、質問応答などのダウンストリームタスクで、mBERT や XLM などの以前にリリースされた多言語モデルを大幅に改善します。",Pe,P,Se,S,Rt="次の M2M100 モデルは、多言語翻訳に使用できます。",Ke,K,Bt="<li><code>facebook/m2m100_418M</code> (翻訳)</li> <li><code>facebook/m2m100_1.2B</code> (翻訳)</li>",Oe,O,Ft="この例では、<code>facebook/m2m100_418M</code> チェックポイントをロードして、中国語から英語に翻訳します。 トークナイザーでソース言語を設定できます。",et,ee,tt,te,zt="テキストをトークン化します。",lt,le,st,se,Et="M2M100 は、最初に生成されたトークンとしてターゲット言語 ID を強制的にターゲット言語に翻訳します。 英語に翻訳するには、<code>generate</code> メソッドで <code>forced_bos_token_id</code> を <code>en</code> に設定します。",at,ae,nt,ne,it,ie,Ht="多言語翻訳には、次の MBart モデルを使用できます。",mt,me,qt="<li><code>facebook/mbart-large-50-one-to-many-mmt</code> (One-to-many multilingual machine translation, 50 languages)</li> <li><code>facebook/mbart-large-50-many-to-many-mmt</code> (Many-to-many multilingual machine translation, 50 languages)</li> <li><code>facebook/mbart-large-50-many-to-one-mmt</code> (Many-to-one multilingual machine translation, 50 languages)</li> <li><code>facebook/mbart-large-50</code> (Multilingual translation, 50 languages)</li> <li><code>facebook/mbart-large-cc25</code></li>",ot,oe,Qt="この例では、<code>facebook/mbart-large-50-many-to-many-mmt</code> チェックポイントをロードして、フィンランド語を英語に翻訳します。トークナイザーでソース言語を設定できます。",pt,pe,rt,re,Yt="テキストをトークン化します。",Mt,Me,ct,ce,Nt="MBart は、最初に生成されたトークンとしてターゲット言語 ID を強制的にターゲット言語に翻訳します。 英語に翻訳するには、<code>generate</code> メソッドで <code>forced_bos_token_id</code> を <code>en</code> に設定します。",ut,ue,gt,ge,At="<code>facebook/mbart-large-50-many-to-one-mmt</code> チェックポイントを使用している場合、最初に生成されたトークンとしてターゲット言語 ID を強制する必要はありません。それ以外の場合、使用方法は同じです。",bt,fe,ft;return d=new J({props:{title:"推論のための多言語モデル",local:"推論のための多言語モデル",headingTag:"h1"}}),y=new al({props:{classNames:"absolute z-10 right-0 top-0",options:[{label:"Mixed",value:"https://colab.research.google.com/github/huggingface/notebooks/blob/main/transformers_doc/ja/multilingual.ipynb"},{label:"PyTorch",value:"https://colab.research.google.com/github/huggingface/notebooks/blob/main/transformers_doc/ja/pytorch/multilingual.ipynb"},{label:"TensorFlow",value:"https://colab.research.google.com/github/huggingface/notebooks/blob/main/transformers_doc/ja/tensorflow/multilingual.ipynb"},{label:"Mixed",value:"https://studiolab.sagemaker.aws/import/github/huggingface/notebooks/blob/main/transformers_doc/ja/multilingual.ipynb"},{label:"PyTorch",value:"https://studiolab.sagemaker.aws/import/github/huggingface/notebooks/blob/main/transformers_doc/ja/pytorch/multilingual.ipynb"},{label:"TensorFlow",value:"https://studiolab.sagemaker.aws/import/github/huggingface/notebooks/blob/main/transformers_doc/ja/tensorflow/multilingual.ipynb"}]}}),U=new J({props:{title:"XLM",local:"xlm",headingTag:"h2"}}),$=new J({props:{title:"言語の埋め込みがある XLM",local:"言語の埋め込みがある-xlm",headingTag:"h3"}}),v=new b({props:{code:"aW1wb3J0JTIwdG9yY2glMEFmcm9tJTIwdHJhbnNmb3JtZXJzJTIwaW1wb3J0JTIwWExNVG9rZW5pemVyJTJDJTIwWExNV2l0aExNSGVhZE1vZGVsJTBBJTBBdG9rZW5pemVyJTIwJTNEJTIwWExNVG9rZW5pemVyLmZyb21fcHJldHJhaW5lZCglMjJGYWNlYm9va0FJJTJGeGxtLWNsbS1lbmZyLTEwMjQlMjIpJTBBbW9kZWwlMjAlM0QlMjBYTE1XaXRoTE1IZWFkTW9kZWwuZnJvbV9wcmV0cmFpbmVkKCUyMkZhY2Vib29rQUklMkZ4bG0tY2xtLWVuZnItMTAyNCUyMik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> torch
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> XLMTokenizer, XLMWithLMHeadModel

<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer = XLMTokenizer.from_pretrained(<span class="hljs-string">&quot;FacebookAI/xlm-clm-enfr-1024&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>model = XLMWithLMHeadModel.from_pretrained(<span class="hljs-string">&quot;FacebookAI/xlm-clm-enfr-1024&quot;</span>)`,wrap:!1}}),_=new b({props:{code:"cHJpbnQodG9rZW5pemVyLmxhbmcyaWQp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(tokenizer.lang2id)
{<span class="hljs-string">&#x27;en&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;fr&#x27;</span>: <span class="hljs-number">1</span>}`,wrap:!1}}),I=new b({props:{code:"aW5wdXRfaWRzJTIwJTNEJTIwdG9yY2gudGVuc29yKCU1QnRva2VuaXplci5lbmNvZGUoJTIyV2lraXBlZGlhJTIwd2FzJTIwdXNlZCUyMHRvJTIyKSU1RCklMjAlMjAlMjMlMjBiYXRjaCUyMHNpemUlMjBvZiUyMDE=",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>input_ids = torch.tensor([tokenizer.encode(<span class="hljs-string">&quot;Wikipedia was used to&quot;</span>)])  <span class="hljs-comment"># batch size of 1</span>',wrap:!1}}),G=new b({props:{code:"bGFuZ3VhZ2VfaWQlMjAlM0QlMjB0b2tlbml6ZXIubGFuZzJpZCU1QiUyMmVuJTIyJTVEJTIwJTIwJTIzJTIwMCUwQWxhbmdzJTIwJTNEJTIwdG9yY2gudGVuc29yKCU1Qmxhbmd1YWdlX2lkJTVEJTIwKiUyMGlucHV0X2lkcy5zaGFwZSU1QjElNUQpJTIwJTIwJTIzJTIwdG9yY2gudGVuc29yKCU1QjAlMkMlMjAwJTJDJTIwMCUyQyUyMC4uLiUyQyUyMDAlNUQpJTBBJTBBJTIzJTIwV2UlMjByZXNoYXBlJTIwaXQlMjB0byUyMGJlJTIwb2YlMjBzaXplJTIwKGJhdGNoX3NpemUlMkMlMjBzZXF1ZW5jZV9sZW5ndGgpJTBBbGFuZ3MlMjAlM0QlMjBsYW5ncy52aWV3KDElMkMlMjAtMSklMjAlMjAlMjMlMjBpcyUyMG5vdyUyMG9mJTIwc2hhcGUlMjAlNUIxJTJDJTIwc2VxdWVuY2VfbGVuZ3RoJTVEJTIwKHdlJTIwaGF2ZSUyMGElMjBiYXRjaCUyMHNpemUlMjBvZiUyMDEp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>language_id = tokenizer.lang2id[<span class="hljs-string">&quot;en&quot;</span>]  <span class="hljs-comment"># 0</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>langs = torch.tensor([language_id] * input_ids.shape[<span class="hljs-number">1</span>])  <span class="hljs-comment"># torch.tensor([0, 0, 0, ..., 0])</span>

<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-comment"># We reshape it to be of size (batch_size, sequence_length)</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>langs = langs.view(<span class="hljs-number">1</span>, -<span class="hljs-number">1</span>)  <span class="hljs-comment"># is now of shape [1, sequence_length] (we have a batch size of 1)</span>`,wrap:!1}}),V=new b({props:{code:"b3V0cHV0cyUyMCUzRCUyMG1vZGVsKGlucHV0X2lkcyUyQyUyMGxhbmdzJTNEbGFuZ3Mp",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>outputs = model(input_ids, langs=langs)',wrap:!1}}),R=new J({props:{title:"言語の埋め込みがないXLM",local:"言語の埋め込みがないxlm",headingTag:"h3"}}),E=new J({props:{title:"BERT",local:"bert",headingTag:"h2"}}),Y=new J({props:{title:"XLM-RoBERTa",local:"xlm-roberta",headingTag:"h2"}}),P=new J({props:{title:"M2M100",local:"m2m100",headingTag:"h2"}}),ee=new b({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyME0yTTEwMEZvckNvbmRpdGlvbmFsR2VuZXJhdGlvbiUyQyUyME0yTTEwMFRva2VuaXplciUwQSUwQWVuX3RleHQlMjAlM0QlMjAlMjJEbyUyMG5vdCUyMG1lZGRsZSUyMGluJTIwdGhlJTIwYWZmYWlycyUyMG9mJTIwd2l6YXJkcyUyQyUyMGZvciUyMHRoZXklMjBhcmUlMjBzdWJ0bGUlMjBhbmQlMjBxdWljayUyMHRvJTIwYW5nZXIuJTIyJTBBY2hpbmVzZV90ZXh0JTIwJTNEJTIwJTIyJUU0JUI4JThEJUU4JUE2JTgxJUU2JThGJTkyJUU2JTg5JThCJUU1JUI3JUFCJUU1JUI4JUFCJUU3JTlBJTg0JUU0JUJBJThCJUU1JThCJTk5JTJDJTIwJUU1JTlCJUEwJUU3JTgyJUJBJUU0JUJCJTk2JUU1JTgwJTkxJUU2JTk4JUFGJUU1JUJFJUFFJUU1JUE2JTk5JUU3JTlBJTg0JTJDJTIwJUU1JUJFJTg4JUU1JUJGJUFCJUU1JUIwJUIxJUU2JTlDJTgzJUU3JTk5JUJDJUU2JTgwJTkyLiUyMiUwQSUwQXRva2VuaXplciUyMCUzRCUyME0yTTEwMFRva2VuaXplci5mcm9tX3ByZXRyYWluZWQoJTIyZmFjZWJvb2slMkZtMm0xMDBfNDE4TSUyMiUyQyUyMHNyY19sYW5nJTNEJTIyemglMjIpJTBBbW9kZWwlMjAlM0QlMjBNMk0xMDBGb3JDb25kaXRpb25hbEdlbmVyYXRpb24uZnJvbV9wcmV0cmFpbmVkKCUyMmZhY2Vib29rJTJGbTJtMTAwXzQxOE0lMjIp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> M2M100ForConditionalGeneration, M2M100Tokenizer

<span class="hljs-meta">&gt;&gt;&gt; </span>en_text = <span class="hljs-string">&quot;Do not meddle in the affairs of wizards, for they are subtle and quick to anger.&quot;</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>chinese_text = <span class="hljs-string">&quot;不要插手巫師的事務, 因為他們是微妙的, 很快就會發怒.&quot;</span>

<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer = M2M100Tokenizer.from_pretrained(<span class="hljs-string">&quot;facebook/m2m100_418M&quot;</span>, src_lang=<span class="hljs-string">&quot;zh&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>model = M2M100ForConditionalGeneration.from_pretrained(<span class="hljs-string">&quot;facebook/m2m100_418M&quot;</span>)`,wrap:!1}}),le=new b({props:{code:"ZW5jb2RlZF96aCUyMCUzRCUyMHRva2VuaXplcihjaGluZXNlX3RleHQlMkMlMjByZXR1cm5fdGVuc29ycyUzRCUyMnB0JTIyKQ==",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>encoded_zh = tokenizer(chinese_text, return_tensors=<span class="hljs-string">&quot;pt&quot;</span>)',wrap:!1}}),ae=new b({props:{code:"Z2VuZXJhdGVkX3Rva2VucyUyMCUzRCUyMG1vZGVsLmdlbmVyYXRlKCoqZW5jb2RlZF96aCUyQyUyMGZvcmNlZF9ib3NfdG9rZW5faWQlM0R0b2tlbml6ZXIuZ2V0X2xhbmdfaWQoJTIyZW4lMjIpKSUwQXRva2VuaXplci5iYXRjaF9kZWNvZGUoZ2VuZXJhdGVkX3Rva2VucyUyQyUyMHNraXBfc3BlY2lhbF90b2tlbnMlM0RUcnVlKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>generated_tokens = model.generate(**encoded_zh, forced_bos_token_id=tokenizer.get_lang_id(<span class="hljs-string">&quot;en&quot;</span>))
<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer.batch_decode(generated_tokens, skip_special_tokens=<span class="hljs-literal">True</span>)
<span class="hljs-string">&#x27;Do not interfere with the matters of the witches, because they are delicate and will soon be angry.&#x27;</span>`,wrap:!1}}),ne=new J({props:{title:"MBart",local:"mbart",headingTag:"h2"}}),pe=new b({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMEF1dG9Ub2tlbml6ZXIlMkMlMjBBdXRvTW9kZWxGb3JTZXEyU2VxTE0lMEElMEFlbl90ZXh0JTIwJTNEJTIwJTIyRG8lMjBub3QlMjBtZWRkbGUlMjBpbiUyMHRoZSUyMGFmZmFpcnMlMjBvZiUyMHdpemFyZHMlMkMlMjBmb3IlMjB0aGV5JTIwYXJlJTIwc3VidGxlJTIwYW5kJTIwcXVpY2slMjB0byUyMGFuZ2VyLiUyMiUwQWZpX3RleHQlMjAlM0QlMjAlMjIlQzMlODRsJUMzJUE0JTIwc2VrYWFubnUlMjB2ZWxob2plbiUyMGFzaW9paGluJTJDJTIwc2lsbCVDMyVBNCUyMG5lJTIwb3ZhdCUyMGhpZW5vdmFyYWlzaWElMjBqYSUyMG5vcGVhc3RpJTIwdmloYWlzaWEuJTIyJTBBJTBBdG9rZW5pemVyJTIwJTNEJTIwQXV0b1Rva2VuaXplci5mcm9tX3ByZXRyYWluZWQoJTIyZmFjZWJvb2slMkZtYmFydC1sYXJnZS01MC1tYW55LXRvLW1hbnktbW10JTIyJTJDJTIwc3JjX2xhbmclM0QlMjJmaV9GSSUyMiklMEFtb2RlbCUyMCUzRCUyMEF1dG9Nb2RlbEZvclNlcTJTZXFMTS5mcm9tX3ByZXRyYWluZWQoJTIyZmFjZWJvb2slMkZtYmFydC1sYXJnZS01MC1tYW55LXRvLW1hbnktbW10JTIyKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoTokenizer, AutoModelForSeq2SeqLM

<span class="hljs-meta">&gt;&gt;&gt; </span>en_text = <span class="hljs-string">&quot;Do not meddle in the affairs of wizards, for they are subtle and quick to anger.&quot;</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>fi_text = <span class="hljs-string">&quot;Älä sekaannu velhojen asioihin, sillä ne ovat hienovaraisia ja nopeasti vihaisia.&quot;</span>

<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer = AutoTokenizer.from_pretrained(<span class="hljs-string">&quot;facebook/mbart-large-50-many-to-many-mmt&quot;</span>, src_lang=<span class="hljs-string">&quot;fi_FI&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>model = AutoModelForSeq2SeqLM.from_pretrained(<span class="hljs-string">&quot;facebook/mbart-large-50-many-to-many-mmt&quot;</span>)`,wrap:!1}}),Me=new b({props:{code:"ZW5jb2RlZF9lbiUyMCUzRCUyMHRva2VuaXplcihlbl90ZXh0JTJDJTIwcmV0dXJuX3RlbnNvcnMlM0QlMjJwdCUyMik=",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>encoded_en = tokenizer(en_text, return_tensors=<span class="hljs-string">&quot;pt&quot;</span>)',wrap:!1}}),ue=new b({props:{code:"Z2VuZXJhdGVkX3Rva2VucyUyMCUzRCUyMG1vZGVsLmdlbmVyYXRlKCoqZW5jb2RlZF9lbiUyQyUyMGZvcmNlZF9ib3NfdG9rZW5faWQlM0R0b2tlbml6ZXIubGFuZ19jb2RlX3RvX2lkKCUyMmVuX1hYJTIyKSklMEF0b2tlbml6ZXIuYmF0Y2hfZGVjb2RlKGdlbmVyYXRlZF90b2tlbnMlMkMlMjBza2lwX3NwZWNpYWxfdG9rZW5zJTNEVHJ1ZSk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>generated_tokens = model.generate(**encoded_en, forced_bos_token_id=tokenizer.lang_code_to_id(<span class="hljs-string">&quot;en_XX&quot;</span>))
<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer.batch_decode(generated_tokens, skip_special_tokens=<span class="hljs-literal">True</span>)
<span class="hljs-string">&quot;Don&#x27;t interfere with the wizard&#x27;s affairs, because they are subtle, will soon get angry.&quot;</span>`,wrap:!1}}),{c(){f=i("meta"),Je=a(),be=i("p"),de=a(),p(d.$$.fragment),ye=a(),p(y.$$.fragment),Te=a(),T=i("p"),T.innerHTML=dt,Ue=a(),p(U.$$.fragment),he=a(),h=i("p"),h.textContent=yt,$e=a(),p($.$$.fragment),je=a(),j=i("p"),j.textContent=Tt,ke=a(),k=i("ul"),k.innerHTML=Ut,we=a(),w=i("p"),w.innerHTML=ht,xe=a(),x=i("p"),x.innerHTML=$t,ve=a(),p(v.$$.fragment),Ze=a(),Z=i("p"),Z.innerHTML=jt,_e=a(),p(_.$$.fragment),Ce=a(),C=i("p"),C.textContent=kt,Ie=a(),p(I.$$.fragment),Xe=a(),X=i("p"),X.innerHTML=wt,Ge=a(),p(G.$$.fragment),We=a(),W=i("p"),W.innerHTML=xt,Ve=a(),p(V.$$.fragment),Le=a(),L=i("p"),L.innerHTML=vt,Re=a(),p(R.$$.fragment),Be=a(),B=i("p"),B.textContent=Zt,Fe=a(),F=i("ul"),F.innerHTML=_t,ze=a(),z=i("p"),z.textContent=Ct,Ee=a(),p(E.$$.fragment),He=a(),H=i("p"),H.textContent=It,qe=a(),q=i("ul"),q.innerHTML=Xt,Qe=a(),Q=i("p"),Q.textContent=Gt,Ye=a(),p(Y.$$.fragment),Ne=a(),N=i("p"),N.textContent=Wt,Ae=a(),A=i("ul"),A.innerHTML=Vt,De=a(),D=i("p"),D.textContent=Lt,Pe=a(),p(P.$$.fragment),Se=a(),S=i("p"),S.textContent=Rt,Ke=a(),K=i("ul"),K.innerHTML=Bt,Oe=a(),O=i("p"),O.innerHTML=Ft,et=a(),p(ee.$$.fragment),tt=a(),te=i("p"),te.textContent=zt,lt=a(),p(le.$$.fragment),st=a(),se=i("p"),se.innerHTML=Et,at=a(),p(ae.$$.fragment),nt=a(),p(ne.$$.fragment),it=a(),ie=i("p"),ie.textContent=Ht,mt=a(),me=i("ul"),me.innerHTML=qt,ot=a(),oe=i("p"),oe.innerHTML=Qt,pt=a(),p(pe.$$.fragment),rt=a(),re=i("p"),re.textContent=Yt,Mt=a(),p(Me.$$.fragment),ct=a(),ce=i("p"),ce.innerHTML=Nt,ut=a(),p(ue.$$.fragment),gt=a(),ge=i("p"),ge.innerHTML=At,bt=a(),fe=i("p"),this.h()},l(e){const t=ll("svelte-u9bgzb",document.head);f=m(t,"META",{name:!0,content:!0}),t.forEach(l),Je=n(e),be=m(e,"P",{}),Dt(be).forEach(l),de=n(e),r(d.$$.fragment,e),ye=n(e),r(y.$$.fragment,e),Te=n(e),T=m(e,"P",{"data-svelte-h":!0}),o(T)!=="svelte-musjo"&&(T.innerHTML=dt),Ue=n(e),r(U.$$.fragment,e),he=n(e),h=m(e,"P",{"data-svelte-h":!0}),o(h)!=="svelte-16kw3l0"&&(h.textContent=yt),$e=n(e),r($.$$.fragment,e),je=n(e),j=m(e,"P",{"data-svelte-h":!0}),o(j)!=="svelte-1unugdl"&&(j.textContent=Tt),ke=n(e),k=m(e,"UL",{"data-svelte-h":!0}),o(k)!=="svelte-1yybanz"&&(k.innerHTML=Ut),we=n(e),w=m(e,"P",{"data-svelte-h":!0}),o(w)!=="svelte-z4izpz"&&(w.innerHTML=ht),xe=n(e),x=m(e,"P",{"data-svelte-h":!0}),o(x)!=="svelte-1eddn2l"&&(x.innerHTML=$t),ve=n(e),r(v.$$.fragment,e),Ze=n(e),Z=m(e,"P",{"data-svelte-h":!0}),o(Z)!=="svelte-c6z389"&&(Z.innerHTML=jt),_e=n(e),r(_.$$.fragment,e),Ce=n(e),C=m(e,"P",{"data-svelte-h":!0}),o(C)!=="svelte-1ukrsm4"&&(C.textContent=kt),Ie=n(e),r(I.$$.fragment,e),Xe=n(e),X=m(e,"P",{"data-svelte-h":!0}),o(X)!=="svelte-7x8i77"&&(X.innerHTML=wt),Ge=n(e),r(G.$$.fragment,e),We=n(e),W=m(e,"P",{"data-svelte-h":!0}),o(W)!=="svelte-134ne8t"&&(W.innerHTML=xt),Ve=n(e),r(V.$$.fragment,e),Le=n(e),L=m(e,"P",{"data-svelte-h":!0}),o(L)!=="svelte-1x5zrn3"&&(L.innerHTML=vt),Re=n(e),r(R.$$.fragment,e),Be=n(e),B=m(e,"P",{"data-svelte-h":!0}),o(B)!=="svelte-mhedz6"&&(B.textContent=Zt),Fe=n(e),F=m(e,"UL",{"data-svelte-h":!0}),o(F)!=="svelte-rxha2m"&&(F.innerHTML=_t),ze=n(e),z=m(e,"P",{"data-svelte-h":!0}),o(z)!=="svelte-116g2ze"&&(z.textContent=Ct),Ee=n(e),r(E.$$.fragment,e),He=n(e),H=m(e,"P",{"data-svelte-h":!0}),o(H)!=="svelte-n4w0xx"&&(H.textContent=It),qe=n(e),q=m(e,"UL",{"data-svelte-h":!0}),o(q)!=="svelte-1pgbgt9"&&(q.innerHTML=Xt),Qe=n(e),Q=m(e,"P",{"data-svelte-h":!0}),o(Q)!=="svelte-5jar7r"&&(Q.textContent=Gt),Ye=n(e),r(Y.$$.fragment,e),Ne=n(e),N=m(e,"P",{"data-svelte-h":!0}),o(N)!=="svelte-1x9aut0"&&(N.textContent=Wt),Ae=n(e),A=m(e,"UL",{"data-svelte-h":!0}),o(A)!=="svelte-1j9wlxw"&&(A.innerHTML=Vt),De=n(e),D=m(e,"P",{"data-svelte-h":!0}),o(D)!=="svelte-16ii0e0"&&(D.textContent=Lt),Pe=n(e),r(P.$$.fragment,e),Se=n(e),S=m(e,"P",{"data-svelte-h":!0}),o(S)!=="svelte-tg6d1v"&&(S.textContent=Rt),Ke=n(e),K=m(e,"UL",{"data-svelte-h":!0}),o(K)!=="svelte-13rkqkl"&&(K.innerHTML=Bt),Oe=n(e),O=m(e,"P",{"data-svelte-h":!0}),o(O)!=="svelte-6c9kxb"&&(O.innerHTML=Ft),et=n(e),r(ee.$$.fragment,e),tt=n(e),te=m(e,"P",{"data-svelte-h":!0}),o(te)!=="svelte-kvi194"&&(te.textContent=zt),lt=n(e),r(le.$$.fragment,e),st=n(e),se=m(e,"P",{"data-svelte-h":!0}),o(se)!=="svelte-flb234"&&(se.innerHTML=Et),at=n(e),r(ae.$$.fragment,e),nt=n(e),r(ne.$$.fragment,e),it=n(e),ie=m(e,"P",{"data-svelte-h":!0}),o(ie)!=="svelte-1o3o96m"&&(ie.textContent=Ht),mt=n(e),me=m(e,"UL",{"data-svelte-h":!0}),o(me)!=="svelte-xa5lcq"&&(me.innerHTML=qt),ot=n(e),oe=m(e,"P",{"data-svelte-h":!0}),o(oe)!=="svelte-1kzalqu"&&(oe.innerHTML=Qt),pt=n(e),r(pe.$$.fragment,e),rt=n(e),re=m(e,"P",{"data-svelte-h":!0}),o(re)!=="svelte-kvi194"&&(re.textContent=Yt),Mt=n(e),r(Me.$$.fragment,e),ct=n(e),ce=m(e,"P",{"data-svelte-h":!0}),o(ce)!=="svelte-xg0wbp"&&(ce.innerHTML=Nt),ut=n(e),r(ue.$$.fragment,e),gt=n(e),ge=m(e,"P",{"data-svelte-h":!0}),o(ge)!=="svelte-1cqvyh4"&&(ge.innerHTML=At),bt=n(e),fe=m(e,"P",{}),Dt(fe).forEach(l),this.h()},h(){Pt(f,"name","hf:doc:metadata"),Pt(f,"content",il)},m(e,t){sl(document.head,f),s(e,Je,t),s(e,be,t),s(e,de,t),M(d,e,t),s(e,ye,t),M(y,e,t),s(e,Te,t),s(e,T,t),s(e,Ue,t),M(U,e,t),s(e,he,t),s(e,h,t),s(e,$e,t),M($,e,t),s(e,je,t),s(e,j,t),s(e,ke,t),s(e,k,t),s(e,we,t),s(e,w,t),s(e,xe,t),s(e,x,t),s(e,ve,t),M(v,e,t),s(e,Ze,t),s(e,Z,t),s(e,_e,t),M(_,e,t),s(e,Ce,t),s(e,C,t),s(e,Ie,t),M(I,e,t),s(e,Xe,t),s(e,X,t),s(e,Ge,t),M(G,e,t),s(e,We,t),s(e,W,t),s(e,Ve,t),M(V,e,t),s(e,Le,t),s(e,L,t),s(e,Re,t),M(R,e,t),s(e,Be,t),s(e,B,t),s(e,Fe,t),s(e,F,t),s(e,ze,t),s(e,z,t),s(e,Ee,t),M(E,e,t),s(e,He,t),s(e,H,t),s(e,qe,t),s(e,q,t),s(e,Qe,t),s(e,Q,t),s(e,Ye,t),M(Y,e,t),s(e,Ne,t),s(e,N,t),s(e,Ae,t),s(e,A,t),s(e,De,t),s(e,D,t),s(e,Pe,t),M(P,e,t),s(e,Se,t),s(e,S,t),s(e,Ke,t),s(e,K,t),s(e,Oe,t),s(e,O,t),s(e,et,t),M(ee,e,t),s(e,tt,t),s(e,te,t),s(e,lt,t),M(le,e,t),s(e,st,t),s(e,se,t),s(e,at,t),M(ae,e,t),s(e,nt,t),M(ne,e,t),s(e,it,t),s(e,ie,t),s(e,mt,t),s(e,me,t),s(e,ot,t),s(e,oe,t),s(e,pt,t),M(pe,e,t),s(e,rt,t),s(e,re,t),s(e,Mt,t),M(Me,e,t),s(e,ct,t),s(e,ce,t),s(e,ut,t),M(ue,e,t),s(e,gt,t),s(e,ge,t),s(e,bt,t),s(e,fe,t),ft=!0},p:Kt,i(e){ft||(c(d.$$.fragment,e),c(y.$$.fragment,e),c(U.$$.fragment,e),c($.$$.fragment,e),c(v.$$.fragment,e),c(_.$$.fragment,e),c(I.$$.fragment,e),c(G.$$.fragment,e),c(V.$$.fragment,e),c(R.$$.fragment,e),c(E.$$.fragment,e),c(Y.$$.fragment,e),c(P.$$.fragment,e),c(ee.$$.fragment,e),c(le.$$.fragment,e),c(ae.$$.fragment,e),c(ne.$$.fragment,e),c(pe.$$.fragment,e),c(Me.$$.fragment,e),c(ue.$$.fragment,e),ft=!0)},o(e){u(d.$$.fragment,e),u(y.$$.fragment,e),u(U.$$.fragment,e),u($.$$.fragment,e),u(v.$$.fragment,e),u(_.$$.fragment,e),u(I.$$.fragment,e),u(G.$$.fragment,e),u(V.$$.fragment,e),u(R.$$.fragment,e),u(E.$$.fragment,e),u(Y.$$.fragment,e),u(P.$$.fragment,e),u(ee.$$.fragment,e),u(le.$$.fragment,e),u(ae.$$.fragment,e),u(ne.$$.fragment,e),u(pe.$$.fragment,e),u(Me.$$.fragment,e),u(ue.$$.fragment,e),ft=!1},d(e){e&&(l(Je),l(be),l(de),l(ye),l(Te),l(T),l(Ue),l(he),l(h),l($e),l(je),l(j),l(ke),l(k),l(we),l(w),l(xe),l(x),l(ve),l(Ze),l(Z),l(_e),l(Ce),l(C),l(Ie),l(Xe),l(X),l(Ge),l(We),l(W),l(Ve),l(Le),l(L),l(Re),l(Be),l(B),l(Fe),l(F),l(ze),l(z),l(Ee),l(He),l(H),l(qe),l(q),l(Qe),l(Q),l(Ye),l(Ne),l(N),l(Ae),l(A),l(De),l(D),l(Pe),l(Se),l(S),l(Ke),l(K),l(Oe),l(O),l(et),l(tt),l(te),l(lt),l(st),l(se),l(at),l(nt),l(it),l(ie),l(mt),l(me),l(ot),l(oe),l(pt),l(rt),l(re),l(Mt),l(ct),l(ce),l(ut),l(gt),l(ge),l(bt),l(fe)),l(f),g(d,e),g(y,e),g(U,e),g($,e),g(v,e),g(_,e),g(I,e),g(G,e),g(V,e),g(R,e),g(E,e),g(Y,e),g(P,e),g(ee,e),g(le,e),g(ae,e),g(ne,e),g(pe,e),g(Me,e),g(ue,e)}}}const il='{"title":"推論のための多言語モデル","local":"推論のための多言語モデル","sections":[{"title":"XLM","local":"xlm","sections":[{"title":"言語の埋め込みがある XLM","local":"言語の埋め込みがある-xlm","sections":[],"depth":3},{"title":"言語の埋め込みがないXLM","local":"言語の埋め込みがないxlm","sections":[],"depth":3}],"depth":2},{"title":"BERT","local":"bert","sections":[],"depth":2},{"title":"XLM-RoBERTa","local":"xlm-roberta","sections":[],"depth":2},{"title":"M2M100","local":"m2m100","sections":[],"depth":2},{"title":"MBart","local":"mbart","sections":[],"depth":2}],"depth":1}';function ml(Jt){return Ot(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class ul extends el{constructor(f){super(),tl(this,f,ml,nl,St,{})}}export{ul as component};
