import{s as fn,o as mn,n as nt}from"../chunks/scheduler.9bc65507.js";import{S as pn,i as rn,g as a,s as n,r as $,A as on,h as f,f as l,c as s,j as an,u,x as m,k as g,y as $n,a as i,v,d as T,t as c,w as _}from"../chunks/index.707bf1b6.js";import{T as it}from"../chunks/Tip.c2ecdbf4.js";import{H as C}from"../chunks/Heading.342b1fa6.js";function un(L){let p,o='さらに進む前に、元のTransformerアーキテクチャの基本的な知識を持つと良いです。エンコーダ、デコーダ、および注意力がどのように動作するかを知っておくと、異なるTransformerモデルがどのように動作するかを理解するのに役立ちます。始めているか、リフレッシュが必要な場合は、詳細な情報については当社の<a href="https://huggingface.co/course/chapter1/4?fw=pt" rel="nofollow">コース</a>をチェックしてください！';return{c(){p=a("p"),p.innerHTML=o},l(r){p=f(r,"P",{"data-svelte-h":!0}),m(p)!=="svelte-15b81oo"&&(p.innerHTML=o)},m(r,x){i(r,p,x)},p:nt,d(r){r&&l(p)}}}function vn(L){let p,o='サードアプローチでは、Transformerと畳み込みを組み合わせたものもあります（例：<a href="model_doc/cvt">Convolutional Vision Transformer</a>または<a href="model_doc/levit">LeViT</a>）。これらについては議論しませんが、これらはここで調べる2つのアプローチを組み合わせています。';return{c(){p=a("p"),p.innerHTML=o},l(r){p=f(r,"P",{"data-svelte-h":!0}),m(p)!=="svelte-54f10y"&&(p.innerHTML=o)},m(r,x){i(r,p,x)},p:nt,d(r){r&&l(p)}}}function Tn(L){let p,o='このセクションでは畳み込みについて簡単に説明していますが、画像の形状とサイズがどのように変化するかを事前に理解していると役立ちます。畳み込みに慣れていない場合は、fastaiの書籍から<a href="https://github.com/fastai/fastbook/blob/master/13_convolutions.ipynb" rel="nofollow">Convolution Neural Networks chapter</a>をチェックしてみてください！';return{c(){p=a("p"),p.innerHTML=o},l(r){p=f(r,"P",{"data-svelte-h":!0}),m(p)!=="svelte-5c6nz9"&&(p.innerHTML=o)},m(r,x){i(r,p,x)},p:nt,d(r){r&&l(p)}}}function cn(L){let p,o="💡 注意してください。一度事前トレーニングが完了したBERTを使用してさまざまなタスクに簡単に適用できることに注目してください。必要なのは、事前トレーニング済みモデルに特定のヘッドを追加して、隠れた状態を所望の出力に変換することだけです！";return{c(){p=a("p"),p.textContent=o},l(r){p=f(r,"P",{"data-svelte-h":!0}),m(p)!=="svelte-a72i3v"&&(p.textContent=o)},m(r,x){i(r,p,x)},p:nt,d(r){r&&l(p)}}}function _n(L){let p,o='テキスト生成に関する詳細は、<a href="generation_strategies">テキスト生成戦略</a>ガイドをチェックしてみてください！';return{c(){p=a("p"),p.innerHTML=o},l(r){p=f(r,"P",{"data-svelte-h":!0}),m(p)!=="svelte-yx1k18"&&(p.innerHTML=o)},m(r,x){i(r,p,x)},p:nt,d(r){r&&l(p)}}}function xn(L){let p,o='テキスト生成に関する詳細は、<a href="generation_strategies">テキスト生成戦略</a>ガイドをチェックしてみてください！';return{c(){p=a("p"),p.innerHTML=o},l(r){p=f(r,"P",{"data-svelte-h":!0}),m(p)!=="svelte-yx1k18"&&(p.innerHTML=o)},m(r,x){i(r,p,x)},p:nt,d(r){r&&l(p)}}}function Cn(L){let p,o='テキスト生成に関する詳細は、<a href="generation_strategies">テキスト生成戦略</a>ガイドをチェックしてみてください！';return{c(){p=a("p"),p.innerHTML=o},l(r){p=f(r,"P",{"data-svelte-h":!0}),m(p)!=="svelte-yx1k18"&&(p.innerHTML=o)},m(r,x){i(r,p,x)},p:nt,d(r){r&&l(p)}}}function Ln(L){let p,o,r,x,A,at,z,Fl='<a href="task_summary">🤗 Transformersでできること</a>で、自然言語処理（NLP）、音声とオーディオ、コンピュータビジョンのタスク、それらの重要なアプリケーションについて学びました。このページでは、モデルがこれらのタスクをどのように解決するかを詳しく見て、モデルの内部で何が起こっているかを説明します。特定のタスクを解決するためには多くの方法があり、一部のモデルは特定のテクニックを実装するか、または新しい観点からタスクに取り組むかもしれませんが、Transformerモデルにとって、一般的なアイデアは同じです。柔軟なアーキテクチャのおかげで、ほとんどのモデルはエンコーダ、デコーダ、またはエンコーダ-デコーダ構造の変種です。Transformerモデル以外にも、当社のライブラリにはコンピュータビジョンタスクに今でも使用されているいくつかの畳み込みニューラルネットワーク（CNN）もあります。また、現代のCNNがどのように機能するかも説明します。',ft,S,Gl="タスクがどのように解決されるかを説明するために、モデル内部で有用な予測を出力するために何が起こるかについて説明します。",mt,q,Il='<li><a href="model_doc/wav2vec2">Wav2Vec2</a>：オーディオ分類および自動音声認識（ASR）向け</li> <li><a href="model_doc/vit">Vision Transformer（ViT）</a>および<a href="model_doc/convnext">ConvNeXT</a>：画像分類向け</li> <li><a href="model_doc/detr">DETR</a>：オブジェクト検出向け</li> <li><a href="model_doc/mask2former">Mask2Former</a>：画像セグメンテーション向け</li> <li><a href="model_doc/glpn">GLPN</a>：深度推定向け</li> <li><a href="model_doc/bert">BERT</a>：エンコーダを使用するテキスト分類、トークン分類、および質問応答などのNLPタスク向け</li> <li><a href="model_doc/gpt2">GPT2</a>：デコーダを使用するテキスト生成などのNLPタスク向け</li> <li><a href="model_doc/bart">BART</a>：エンコーダ-デコーダを使用する要約および翻訳などのNLPタスク向け</li>',pt,M,rt,F,ot,G,Ol='<a href="model_doc/wav2vec2">Wav2Vec2</a>は、未ラベルの音声データで事前トレーニングされ、オーディオ分類および自動音声認識のラベル付きデータでファインチューンされた自己教師モデルです。',$t,d,Xl='<img src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/wav2vec2_architecture.png"/>',ut,I,Wl="このモデルには主に次の4つのコンポーネントがあります。",vt,O,Ul="<li><p><em>特徴エンコーダ</em>：生の音声波形を受け取り、平均値をゼロに正規化し、単位分散に変換し、それを20msごとの特徴ベクトルのシーケンスに変換します。</p></li> <li><p>波形は自然に連続しているため、テキストのシーケンスを単語に分割できるようにできるように、特徴ベクトルは<em>量子化モジュール</em>に渡され、離散音声ユニットを学習しようとします。音声ユニットは<em>コードブック</em>（語彙と考えることができます）として知られるコードワードのコレクションから選択されます。コードブックから、連続したオーディオ入力を最もよく表すベクトルまたは音声ユニット（ターゲットラベルと考えることができます）が選択され、モデルを介して転送されます。</p></li> <li><p>特徴ベクトルの約半分はランダムにマスクされ、マスクされた特徴ベクトルは<em>コンテキストネットワーク</em>に供給されます。これは、相対的な位置エンベッディングも追加するTransformerエンコーダです。</p></li> <li><p>コンテキストネットワークの事前トレーニングの目的は<em>コントラスティブタスク</em>です。モデルはマスクされた予測の真の量子化音声表現を、偽の予測のセットから予測しなければならず、モデルは最も似たコンテキストベクトルと量子化音声ユニット（ターゲットラベル）を見つけるように促されます。</p></li>",Tt,X,Ql="今、Wav2Vec2は事前トレーニングされているので、オーディオ分類または自動音声認識のためにデータをファインチューンできます！",ct,W,_t,U,Jl="事前トレーニングされたモデルをオーディオ分類に使用するには、基本的なWav2Vec2モデルの上にシーケンス分類ヘッドを追加します。分類ヘッドはエンコーダの隠れた状態を受け入れる線形層で、各オーディオフレームから学習された特徴を表します。これらの隠れた状態は長さが異なる可能性があるため、最初に隠れた状態がプールされ、次にクラスラベルに対するロジットに変換されます。ロジットとターゲット間のクロスエントロピー損失が計算され、最も可能性の高いクラスを見つけるために使用されます。",xt,Q,Kl='オーディオ分類を試す準備はできましたか？Wav2Vec2をファインチューンして推論に使用する方法を学ぶための完全な<a href="tasks/audio_classification">オーディオ分類ガイド</a>をチェックしてください！',Ct,J,Lt,K,Yl='事前トレーニングされたモデルを自動音声認識に使用するには、<a href="glossary#connectionist-temporal-classification-ctc">connectionist temporal classification（CTC）</a>のための基本的なWav2Vec2モデルの上に言語モデリングヘッドを追加します。言語モデリングヘッドはエンコーダの隠れた状態を受け入れ、それらをロジットに変換します。各ロジットはトークンクラスを表し（トークン数はタスクの語彙から来ます）、ロジットとターゲット間のCTC損失が計算され、次に転写に変換されます。',gt,Y,Zl='自動音声認識を試す準備はできましたか？Wav2Vec2をファインチューンして推論に使用する方法を学ぶための完全な<a href="tasks/asr">自動音声認識ガイド</a>をチェックしてください！',Mt,Z,dt,ee,ei="コンピュータビジョンのタスクをアプローチする方法は2つあります。",Ht,te,ti='<li>画像をパッチのシーケンスに分割し、Transformerを使用して並列に処理します。</li> <li><a href="model_doc/convnext">ConvNeXT</a>などのモダンなCNNを使用します。これらは畳み込み層を使用しますが、モダンなネットワーク設計を採用しています。</li>',ht,H,Pt,le,li="ViTとConvNeXTは画像分類によく使用されますが、オブジェクト検出、セグメンテーション、深度推定などの他のビジョンタスクに対しては、DETR、Mask2Former、GLPNなどが適しています。",wt,ie,kt,ne,ii="ViTとConvNeXTの両方を画像分類に使用できます。主な違いは、ViTが注意メカニズムを使用し、ConvNeXTが畳み込みを使用することです。",Nt,se,Rt,ae,ni='<a href="model_doc/vit">ViT</a>は畳み込みを完全にTransformerアーキテクチャで置き換えます。元のTransformerに精通している場合、ViTの理解は既にほとんど完了しています。',Et,h,si='<img src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/transformers/model_doc/vit_architecture.jpg"/>',bt,fe,ai="ViTが導入した主な変更点は、画像をTransformerに供給する方法です。",Bt,me,fi="<li><p>画像は正方形で重ならないパッチのシーケンスに分割され、各パッチはベクトルまたは<em>パッチ埋め込み</em>に変換されます。パッチ埋め込みは、適切な入力次元を作成するために2D畳み込み層から生成されます（基本のTransformerの場合、各パッチ埋め込みに768の値があります）。224x224ピクセルの画像がある場合、それを16x16の画像パッチに分割できます。テキストが単語にトークン化されるように、画像はパッチのシーケンスに「トークン化」されます。</p></li> <li><p><em>学習埋め込み</em>、つまり特別な <code>[CLS]</code> トークンが、BERTのようにパッチ埋め込みの先頭に追加されます。 <code>[CLS]</code> トークンの最終的な隠れた状態は、付属の分類ヘッドの入力として使用されます。他の出力は無視されます。このトークンは、モデルが画像の表現をエンコードする方法を学ぶのに役立ちます。</p></li> <li><p>パッチと学習埋め込みに追加する最後の要素は<em>位置埋め込み</em>です。モデルは画像パッチがどのように並べられているかを知りませんので、位置埋め込みも学習可能で、パッチ埋め込みと同じサイズを持ちます。最後に、すべての埋め込みがTransformerエンコーダに渡されます。</p></li> <li><p>出力、具体的には <code>[CLS]</code> トークンの出力だけが、多層パーセプトロンヘッド（MLP）に渡されます。ViTの事前トレーニングの目的は単純に分類です。他の分類ヘッドと同様に、MLPヘッドは出力をクラスラベルに対するロジットに変換し、クロスエントロピー損失を計算して最も可能性の高いクラスを見つけます。</p></li>",jt,pe,mi='画像分類を試す準備はできましたか？ViTをファインチューンして推論に使用する方法を学ぶための完全な<a href="tasks/image_classification">画像分類ガイド</a>をチェックしてください！',Vt,re,Dt,P,yt,oe,pi='<a href="model_doc/convnext">ConvNeXT</a>は、性能を向上させるために新しいモダンなネットワーク設計を採用したCNNアーキテクチャです。ただし、畳み込みはモデルの中核にまだあります。高レベルから見た場合、<a href="glossary#convolution">畳み込み（convolution）</a>は、小さな行列（<em>カーネル</em>）が画像のピクセルの小さなウィンドウに乗算される操作です。それは特定のテクスチャや線の曲率などの特徴を計算します。その後、次のピクセルのウィンドウに移動します。畳み込みが移動する距離は<em>ストライド</em>として知られています。',At,w,ri='<img src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/convolution.gif"/>',zt,$e,oi="[Convolution Arithmetic for Deep Learning](https://arxiv.org/abs/1603.07285) からの基本的なパディングやストライドのない畳み込み。",St,ue,$i="この出力を別の畳み込み層に供給し、各連続した層ごとに、ネットワークはホットドッグやロケットのようなより複雑で抽象的なものを学習します。畳み込み層の間には、特徴の次元を削減し、特徴の位置の変動に対してモデルをより堅牢にするためにプーリング層を追加するのが一般的です。",qt,k,ui='<img src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/convnext_architecture.png"/>',Ft,ve,vi="ConvNeXTは、以下の5つの方法でCNNをモダン化しています。",Gt,Te,Ti="<li><p>各ステージのブロック数を変更し、画像をより大きなストライドと対応するカーネルサイズで<em>パッチ化</em>します。重ならないスライディングウィンドウは、これにより画像をパッチに分割するViTの戦略と似ています。</p></li> <li><p><em>ボトルネック</em> レイヤーはチャネル数を縮小し、それを復元します。1x1の畳み込みを実行するのは速く、深さを増やすことができます。逆ボトルネックは逆のことを行い、チャネル数を拡張し、それを縮小します。これはメモリ効率が高いです。</p></li> <li><p>ボトルネックレイヤー内の通常の3x3の畳み込み層を、<em>深度方向の畳み込み</em>で置き換えます。これは各入力チャネルに個別に畳み込みを適用し、最後にそれらを積み重ねる畳み込みです。これにより、性能向上のためにネットワーク幅が広がります。</p></li> <li><p>ViTはグローバル受容野を持っているため、その注意メカニズムのおかげで一度に画像の多くを見ることができます。ConvNeXTはこの効果を再現しようとし、カーネルサイズを7x7に増やします。</p></li> <li><p>ConvNeXTはまた、Transformerモデルを模倣するいくつかのレイヤーデザイン変更を行っています。アクティベーションと正規化レイヤーが少なく、活性化関数はReLUの代わりにGELUに切り替え、BatchNormの代わりにLayerNormを使用しています。</p></li>",It,ce,ci="畳み込みブロックからの出力は、分類ヘッドに渡され、出力をロジットに変換し、最も可能性の高いラベルを見つけるためにクロスエントロピー損失が計算されます。",Ot,_e,Xt,xe,_i='<a href="model_doc/detr">DETR</a>、<em>DEtection TRansformer</em>、はCNNとTransformerエンコーダーデコーダーを組み合わせたエンドツーエンドのオブジェクト検出モデルです。',Wt,N,xi='<img src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/detr_architecture.png"/>',Ut,Ce,Ci="<li><p>事前トレーニングされたCNN <em>バックボーン</em> は、ピクセル値で表される画像を受け取り、それの低解像度の特徴マップを作成します。特徴マップには次元削減のために1x1の畳み込みが適用され、高レベルの画像表現を持つ新しい特徴マップが作成されます。Transformerは連続モデルであるため、特徴マップは特徴ベクトルのシーケンスに平坦化され、位置エンベディングと組み合わせられます。</p></li> <li><p>特徴ベクトルはエンコーダーに渡され、その注意レイヤーを使用して画像表現を学習します。次に、エンコーダーの隠れ状態はデコーダーの<em>オブジェクトクエリ</em>と組み合わされます。オブジェクトクエリは、画像の異なる領域に焦点を当てる学習埋め込みで、各注意レイヤーを進行するにつれて更新されます。デコーダーの隠れ状態は、各オブジェクトクエリに対してバウンディングボックスの座標とクラスラベルを予測するフィードフォワードネットワークに渡されます。または、存在しない場合は <code>no object</code> が渡されます。</p> <p>DETRは各オブジェクトクエリを並行してデコードして、<em>N</em>の最終的な予測（<em>N</em>はクエリの数）を出力します。典型的な自己回帰モデルが1つの要素を1回ずつ予測するのとは異なり、オブジェクト検出はセット予測タスク（<code>バウンディングボックス</code>、<code>クラスラベル</code>）であり、1回のパスで<em>N</em>の予測を行います。</p></li> <li><p>訓練中、DETRは<em>二部マッチング損失</em>を使用して、固定された数の予測と固定された一連の正解ラベルを比較します。 <em>N</em>のラベルセットに正解ラベルが少ない場合、 <code>no object</code> クラスでパディングされます。この損失関数は、DETRに予測と正解ラベルとの間で1対1の割り当てを見つけるように促します。バウンディングボックスまたはクラスラベルのどちらかが正しくない場合、損失が発生します。同様に、DETRが存在しないオブジェクトを予測した場合、罰金が科せられます。これにより、DETRは1つの非常に顕著なオブジェクトに焦点を当てるのではなく、画像内の他のオブジェクトを見つけるように促されます。</p></li>",Qt,Le,Li="DETRの上にオブジェクト検出ヘッドを追加して、クラスラベルとバウンディングボックスの座標を見つけます。オブジェクト検出ヘッドには2つのコンポーネントがあります：デコーダーの隠れ状態をクラスラベルのロジットに変換するための線形層、およびバウンディングボックスを予測するためのMLPです。",Jt,ge,gi='オブジェクト検出を試す準備はできましたか？DETROの完全な<a href="tasks/object_detection">オブジェクト検出ガイド</a>をチェックして、DETROのファインチューニング方法と推論方法を学んでください！',Kt,Me,Yt,de,Mi='<a href="model_doc/mask2former">Mask2Former</a>は、すべての種類の画像セグメンテーションタスクを解決するためのユニバーサルアーキテクチャです。従来のセグメンテーションモデルは通常、インスタンス、セマンティック、またはパノプティックセグメンテーションの特定のサブタスクに合わせて設計されています。Mask2Formerは、それらのタスクのそれぞれを<em>マスク分類</em>の問題として捉えます。マスク分類はピクセルを<em>N</em>のセグメントにグループ化し、与えられた画像に対して<em>N</em>のマスクとそれに対応するクラスラベルを予測します。このセクションでは、Mask2Formerの動作方法を説明し、最後にSegFormerのファインチューニングを試すことができます。',Zt,R,di='<img src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/mask2former_architecture.png"/>',el,He,Hi="Mask2Formerの主要なコンポーネントは次の3つです。",tl,he,hi='<li><p><a href="model_doc/swin">Swin</a>バックボーンは画像を受け入れ、3つの連続する3x3の畳み込みから低解像度の画像特徴マップを作成します。</p></li> <li><p>特徴マップは<em>ピクセルデコーダー</em>に渡され、低解像度の特徴を高解像度のピクセル埋め込みに徐々にアップサンプリングします。ピクセルデコーダーは実際には解像度1/32、1/16、および1/8のオリジナル画像のマルチスケール特徴（低解像度と高解像度の特徴を含む）を生成します。</p></li> <li><p>これらの異なるスケールの特徴マップのそれぞれは、高解像度の特徴から小さいオブジェクトをキャプチャするために1回ずつトランスフォーマーデコーダーレイヤーに渡されます。Mask2Formerの要点は、デコーダーの<em>マスクアテンション</em>メカニズムです。クロスアテンションが画像全体に注意を向けることができるのに対し、マスクアテンションは画像の特定の領域にのみ焦点を当てます。これは速く、ローカルな画像特徴だけでもモデルが学習できるため、パフォーマンスが向上します。</p></li> <li><p><a href="tasks_explained#object-detection">DETR</a>と同様に、Mask2Formerも学習されたオブジェクトクエリを使用し、画像の特徴と組み合わせてセットの予測（<code>クラスラベル</code>、<code>マスク予測</code>）を行います。デコーダーの隠れ状態は線形層に渡され、クラスラベルに対するロジットに変換されます。ロジットと正解ラベル間のクロスエントロピー損失が最も可能性の高いものを見つけます。</p> <p>マスク予測は、ピクセル埋め込みと最終的なデコーダーの隠れ状態を組み合わせて生成されます。シグモイドクロスエントロピーやダイス損失がロジットと正解マスクの間で最も可能性の高いマスクを見つけます。</p></li>',ll,Pe,Pi='セグメンテーションタスクに取り組む準備ができましたか？SegFormerのファインチューニング方法と推論方法を学ぶために、完全な<a href="tasks/semantic_segmentation">画像セグメンテーションガイド</a>をチェックしてみてください！',il,we,nl,ke,wi='<a href="model_doc/glpn">GLPN</a>、<em>Global-Local Path Network</em>、はセグメンテーションまたは深度推定などの密な予測タスクに適しています。<a href="model_doc/segformer">SegFormer</a>エンコーダーを軽量デコーダーと組み合わせたTransformerベースの深度推定モデルです。',sl,E,ki='<img src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/glpn_architecture.jpg"/>',al,Ne,Ni='<li><p>ViTのように、画像はパッチのシーケンスに分割されますが、これらの画像パッチは小さいです。これはセグメンテーションや深度推定などの密な予測タスクに適しています。画像パッチはパッチ埋め込みに変換されます（パッチ埋め込みの作成方法の詳細については、<a href="#image-classification">画像分類</a>セクションを参照してください）。これらのパッチ埋め込みはエンコーダーに渡されます。</p></li> <li><p>エンコーダーはパッチ埋め込みを受け入れ、複数のエンコーダーブロックを通じてそれらを渡します。各ブロックにはアテンションとMix-FFNレイヤーが含まれています。後者の役割は位置情報を提供することです。各エンコーダーブロックの最後には、階層的表現を作成するための<em>パッチマージング</em>レイヤーがあります。隣接するパッチのグループごとの特徴が連結され、連結された特徴に対して線形層が適用され、パッチの数を1/4の解像度に削減します。これが次のエンコーダーブロックへの入力となり、ここではこのプロセス全体が繰り返され、元の画像の1/8、1/16、および1/32の解像度の画像特徴が得られます。</p></li> <li><p>軽量デコーダーは、エンコーダーからの最後の特徴マップ（1/32スケール）を受け取り、それを1/16スケールにアップサンプリングします。その後、特徴は各特徴に対するアテンションマップからローカルとグローバルな特徴を選択して組み合わせる<em>セレクティブフィーチャーフュージョン（SFF）</em>モジュールに渡され、1/8にアップサンプリングされます。このプロセスはデコードされた特徴が元の画像と同じサイズになるまで繰り返されます。</p></li> <li><p>デコードされた特徴は、最終的な予測を行うためにセマンティックセグメンテーション、深度推定、またはその他の密な予測タスクに供給されます。セマンティックセグメンテーションの場合、特徴はクラス数に対するロジットに変換され、クロスエントロピー損失を使用して最適化されます。深度推定の場合、特徴は深度マップに変換され、平均絶対誤差（MAE）または平均二乗誤差（MSE）損失が使用されます。</p></li>',fl,Re,ml,Ee,Ri="Transformerは最初に機械翻訳のために設計され、それ以降、ほとんどのNLPタスクを解決するためのデフォルトのアーキテクチャとなっています。一部のタスクはTransformerのエンコーダー構造に適しており、他のタスクはデコーダーに適しています。さらに、一部のタスクではTransformerのエンコーダー-デコーダー構造を使用します。",pl,be,rl,Be,Ei='<a href="model_doc/bert">BERT</a>はエンコーダーのみのモデルであり、テキストの豊かな表現を学習するために両側の単語に注意を払うことで、深い双方向性を効果的に実装した最初のモデルです。',ol,je,bi='<li><p>BERTは<a href="tokenizer_summary#wordpiece">WordPiece</a>トークナイゼーションを使用してテキストのトークン埋め込みを生成します。単一の文と文のペアを区別するために、特別な <code>[SEP]</code> トークンが追加されます。 <code>[CLS]</code> トークンはすべてのテキストシーケンスの先頭に追加されます。 <code>[CLS]</code> トークンとともに最終出力は、分類タスクのための入力として使用されます。BERTはまた、トークンが文のペアの最初または2番目の文に属するかどうかを示すセグメント埋め込みを追加します。</p></li> <li><p>BERTは、事前トレーニングで2つの目標を使用します：マスクされた言語モデリングと次の文の予測です。マスクされた言語モデリングでは、入力トークンの一部がランダムにマスクされ、モデルはこれらを予測する必要があります。これにより、モデルが全ての単語を見て「次の単語」を予測することができる双方向性の問題が解決されます。予測されたマスクトークンの最終的な隠れた状態は、ソフトマックスを使用した単語のマスクを予測するためのフィードフォワードネットワークに渡されます。</p> <p>2番目の事前トレーニングオブジェクトは次の文の予測です。モデルは文Aの後に文Bが続くかどうかを予測する必要があります。半分の場合、文Bは次の文であり、残りの半分の場合、文Bはランダムな文です。予測（次の文かどうか）は、2つのクラス（<code>IsNext</code>および<code>NotNext</code>）に対するソフトマックスを持つフィードフォワードネットワークに渡されます。</p></li> <li><p>入力埋め込みは、最終的な隠れた状態を出力するために複数のエンコーダーレイヤーを介して渡されます。</p></li>',$l,Ve,Bi="事前訓練済みモデルをテキスト分類に使用するには、ベースのBERTモデルの上にシーケンス分類ヘッドを追加します。シーケンス分類ヘッドは最終的な隠れた状態を受け入れ、それらをロジットに変換するための線形層です。クロスエントロピー損失は、ロジットとターゲット間で最も可能性の高いラベルを見つけるために計算されます。",ul,De,ji='テキスト分類を試してみる準備はできましたか？DistilBERTを微調整し、推論に使用する方法を学ぶために、完全な<a href="tasks/sequence_classification">テキスト分類ガイド</a>をチェックしてみてください！',vl,ye,Tl,Ae,Vi="BERTを名前エンティティ認識（NER）などのトークン分類タスクに使用するには、ベースのBERTモデルの上にトークン分類ヘッドを追加します。トークン分類ヘッドは最終的な隠れた状態を受け入れ、それらをロジットに変換するための線形層です。クロスエントロピー損失は、ロジットと各トークン間で最も可能性の高いラベルを見つけるために計算されます。",cl,ze,Di='トークン分類を試してみる準備はできましたか？DistilBERTを微調整し、推論に使用する方法を学ぶために、完全な<a href="tasks/token_classification">トークン分類ガイド</a>をチェックしてみてください！',_l,Se,xl,qe,yi="BERTを質問応答に使用するには、ベースのBERTモデルの上にスパン分類ヘッドを追加します。この線形層は最終的な隠れた状態を受け入れ、回答に対応するテキストの「スパン」開始と終了のロジットを計算します。クロスエントロピー損失は、ロジットとラベル位置との間で最も可能性の高いテキストスパンを見つけるために計算されます。",Cl,Fe,Ai='質問応答を試してみる準備はできましたか？DistilBERTを微調整し、推論に使用する方法を学ぶために、完全な<a href="tasks/question_answering">質問応答ガイド</a>をチェックしてみてください！',Ll,b,gl,Ge,Ml,Ie,zi='<a href="model_doc/gpt2">GPT-2</a>は大量のテキストで事前トレーニングされたデコーダー専用モデルです。プロンプトを与えると説得力のあるテキストを生成し、明示的にトレーニングされていないにもかかわらず、質問応答などの他のNLPタスクも完了できます。',dl,B,Si='<img src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/gpt2_architecture.png"/>',Hl,Oe,qi='<li><p>GPT-2は<a href="tokenizer_summary#bytepair-encoding-bpe">バイトペアエンコーディング（BPE）</a>を使用して単語をトークナイズし、トークン埋め込みを生成します。位置エンコーディングがトークン埋め込みに追加され、各トークンの位置を示します。入力埋め込みは複数のデコーダーブロックを介して最終的な隠れた状態を出力するために渡されます。各デコーダーブロック内で、GPT-2は「マスクされた自己注意」レイヤーを使用します。これは、GPT-2が未来のトークンに注意を払うことはできないことを意味します。GPT-2は左側のトークンにのみ注意を払うことが許可されています。これはBERTの<code>mask</code>トークンとは異なり、マスクされた自己注意では未来のトークンに対してスコアを<code>0</code>に設定するための注意マスクが使用されます。</p></li> <li><p>デコーダーからの出力は、言語モデリングヘッドに渡され、最終的な隠れた状態をロジットに変換するための線形変換を実行します。ラベルはシーケンス内の次のトークンであり、これはロジットを右に1つずらして生成されます。クロスエントロピー損失は、シフトされたロジットとラベル間で計算され、次に最も可能性の高いトークンを出力します。</p></li>',hl,Xe,Fi='GPT-2の事前トレーニングの目標は完全に<a href="glossary#causal-language-modeling">因果言語モデリング</a>に基づいており、シーケンス内の次の単語を予測します。これにより、GPT-2はテキスト生成を含むタスクで特に優れた性能を発揮します。',Pl,We,Gi='テキスト生成を試してみる準備はできましたか？DistilGPT-2を微調整し、推論に使用する方法を学ぶために、完全な<a href="tasks/language_modeling#causal-language-modeling">因果言語モデリングガイド</a>をチェックしてみてください！',wl,j,kl,Ue,Nl,Qe,Ii='<a href="model_doc/bart">BART</a> や <a href="model_doc/t5">T5</a> のようなエンコーダーデコーダーモデルは、要約タスクのシーケンス・トゥ・シーケンス・パターンに設計されています。このセクションでは、BARTの動作方法を説明し、最後にT5の微調整を試すことができます。',Rl,V,Oi='<img src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/bart_architecture.png"/>',El,Je,Xi="<li><p>BARTのエンコーダーアーキテクチャは、BERTと非常に似ており、テキストのトークンと位置エンベディングを受け入れます。BARTは、入力を破壊してからデコーダーで再構築することによって事前トレーニングされます。特定の破壊戦略を持つ他のエンコーダーとは異なり、BARTは任意の種類の破壊を適用できます。ただし、<em>テキストインフィリング</em>破壊戦略が最適です。テキストインフィリングでは、いくつかのテキストスパンが<strong>単一の</strong> <code>mask</code> トークンで置き換えられます。これは重要です、なぜならモデルはマスクされたトークンを予測しなければならず、モデルに欠落トークンの数を予測させるからです。入力埋め込みとマスクされたスパンはエンコーダーを介して最終的な隠れた状態を出力しますが、BERTとは異なり、BARTは単語を予測するための最終的なフィードフォワードネットワークを最後に追加しません。</p></li> <li><p>エンコーダーの出力はデコーダーに渡され、デコーダーはエンコーダーの出力からマスクされたトークンと非破壊トークンを予測する必要があります。これにより、デコーダーは元のテキストを復元するのに役立つ追加のコンテキストが提供されます。デコーダーからの出力は言語モデリングヘッドに渡され、隠れた状態をロジットに変換するための線形変換を実行します。クロスエントロピー損失は、ロジットとラベルの間で計算され、ラベルは単に右にシフトされたトークンです。</p></li>",bl,Ke,Wi='要約を試す準備はできましたか？T5を微調整して推論に使用する方法を学ぶために、完全な<a href="tasks/summarization">要約ガイド</a>をご覧ください！',Bl,D,jl,Ye,Vl,Ze,Ui='翻訳は、もう一つのシーケンス・トゥ・シーケンス・タスクの例であり、<a href="model_doc/bart">BART</a> や <a href="model_doc/t5">T5</a> のようなエンコーダーデコーダーモデルを使用して実行できます。このセクションでは、BARTの動作方法を説明し、最後にT5の微調整を試すことができます。',Dl,et,Qi="BARTは、ソース言語をターゲット言語にデコードできるようにするために、別個にランダムに初期化されたエンコーダーを追加することで翻訳に適応します。この新しいエンコーダーの埋め込みは、元の単語埋め込みの代わりに事前トレーニング済みのエンコーダーに渡されます。ソースエンコーダーは、モデルの出力からのクロスエントロピー損失を用いてソースエンコーダー、位置エンベディング、および入力エンベディングを更新することによって訓練されます。この最初のステップではモデルパラメータが固定され、すべてのモデルパラメータが2番目のステップで一緒に訓練されます。",yl,tt,Ji="その後、翻訳のために多言語版のmBARTが登場し、多言語で事前トレーニングされたモデルとして利用可能です。",Al,lt,Ki='翻訳を試す準備はできましたか？T5を微調整して推論に使用する方法を学ぶために、完全な<a href="tasks/summarization">翻訳ガイド</a>をご覧ください！',zl,y,Sl,st,ql;return A=new C({props:{title:"How 🤗 Transformers solve tasks",local:"how--transformers-solve-tasks",headingTag:"h1"}}),M=new it({props:{$$slots:{default:[un]},$$scope:{ctx:L}}}),F=new C({props:{title:"Speech and audio",local:"speech-and-audio",headingTag:"h2"}}),W=new C({props:{title:"Audio classification",local:"audio-classification",headingTag:"h3"}}),J=new C({props:{title:"Automatic speech recognition",local:"automatic-speech-recognition",headingTag:"h3"}}),Z=new C({props:{title:"Computer vision",local:"computer-vision",headingTag:"h2"}}),H=new it({props:{$$slots:{default:[vn]},$$scope:{ctx:L}}}),ie=new C({props:{title:"Image classification",local:"image-classification",headingTag:"h3"}}),se=new C({props:{title:"Transformer",local:"transformer",headingTag:"h4"}}),re=new C({props:{title:"CNN",local:"cnn",headingTag:"h4"}}),P=new it({props:{$$slots:{default:[Tn]},$$scope:{ctx:L}}}),_e=new C({props:{title:"Object detection",local:"object-detection",headingTag:"h3"}}),Me=new C({props:{title:"Image segmentation",local:"image-segmentation",headingTag:"h3"}}),we=new C({props:{title:"Depth estimation",local:"depth-estimation",headingTag:"h3"}}),Re=new C({props:{title:"Natural language processing",local:"natural-language-processing",headingTag:"h2"}}),be=new C({props:{title:"Text classification",local:"text-classification",headingTag:"h3"}}),ye=new C({props:{title:"Token classification",local:"token-classification",headingTag:"h3"}}),Se=new C({props:{title:"Question answering",local:"question-answering",headingTag:"h3"}}),b=new it({props:{$$slots:{default:[cn]},$$scope:{ctx:L}}}),Ge=new C({props:{title:"Text generation",local:"text-generation",headingTag:"h3"}}),j=new it({props:{$$slots:{default:[_n]},$$scope:{ctx:L}}}),Ue=new C({props:{title:"Summarization",local:"summarization",headingTag:"h3"}}),D=new it({props:{$$slots:{default:[xn]},$$scope:{ctx:L}}}),Ye=new C({props:{title:"Translation",local:"translation",headingTag:"h3"}}),y=new it({props:{$$slots:{default:[Cn]},$$scope:{ctx:L}}}),{c(){p=a("meta"),o=n(),r=a("p"),x=n(),$(A.$$.fragment),at=n(),z=a("p"),z.innerHTML=Fl,ft=n(),S=a("p"),S.textContent=Gl,mt=n(),q=a("ul"),q.innerHTML=Il,pt=n(),$(M.$$.fragment),rt=n(),$(F.$$.fragment),ot=n(),G=a("p"),G.innerHTML=Ol,$t=n(),d=a("div"),d.innerHTML=Xl,ut=n(),I=a("p"),I.textContent=Wl,vt=n(),O=a("ol"),O.innerHTML=Ul,Tt=n(),X=a("p"),X.textContent=Ql,ct=n(),$(W.$$.fragment),_t=n(),U=a("p"),U.textContent=Jl,xt=n(),Q=a("p"),Q.innerHTML=Kl,Ct=n(),$(J.$$.fragment),Lt=n(),K=a("p"),K.innerHTML=Yl,gt=n(),Y=a("p"),Y.innerHTML=Zl,Mt=n(),$(Z.$$.fragment),dt=n(),ee=a("p"),ee.textContent=ei,Ht=n(),te=a("ol"),te.innerHTML=ti,ht=n(),$(H.$$.fragment),Pt=n(),le=a("p"),le.textContent=li,wt=n(),$(ie.$$.fragment),kt=n(),ne=a("p"),ne.textContent=ii,Nt=n(),$(se.$$.fragment),Rt=n(),ae=a("p"),ae.innerHTML=ni,Et=n(),h=a("div"),h.innerHTML=si,bt=n(),fe=a("p"),fe.textContent=ai,Bt=n(),me=a("ol"),me.innerHTML=fi,jt=n(),pe=a("p"),pe.innerHTML=mi,Vt=n(),$(re.$$.fragment),Dt=n(),$(P.$$.fragment),yt=n(),oe=a("p"),oe.innerHTML=pi,At=n(),w=a("div"),w.innerHTML=ri,zt=n(),$e=a("small"),$e.textContent=oi,St=n(),ue=a("p"),ue.textContent=$i,qt=n(),k=a("div"),k.innerHTML=ui,Ft=n(),ve=a("p"),ve.textContent=vi,Gt=n(),Te=a("ol"),Te.innerHTML=Ti,It=n(),ce=a("p"),ce.textContent=ci,Ot=n(),$(_e.$$.fragment),Xt=n(),xe=a("p"),xe.innerHTML=_i,Wt=n(),N=a("div"),N.innerHTML=xi,Ut=n(),Ce=a("ol"),Ce.innerHTML=Ci,Qt=n(),Le=a("p"),Le.textContent=Li,Jt=n(),ge=a("p"),ge.innerHTML=gi,Kt=n(),$(Me.$$.fragment),Yt=n(),de=a("p"),de.innerHTML=Mi,Zt=n(),R=a("div"),R.innerHTML=di,el=n(),He=a("p"),He.textContent=Hi,tl=n(),he=a("ol"),he.innerHTML=hi,ll=n(),Pe=a("p"),Pe.innerHTML=Pi,il=n(),$(we.$$.fragment),nl=n(),ke=a("p"),ke.innerHTML=wi,sl=n(),E=a("div"),E.innerHTML=ki,al=n(),Ne=a("ol"),Ne.innerHTML=Ni,fl=n(),$(Re.$$.fragment),ml=n(),Ee=a("p"),Ee.textContent=Ri,pl=n(),$(be.$$.fragment),rl=n(),Be=a("p"),Be.innerHTML=Ei,ol=n(),je=a("ol"),je.innerHTML=bi,$l=n(),Ve=a("p"),Ve.textContent=Bi,ul=n(),De=a("p"),De.innerHTML=ji,vl=n(),$(ye.$$.fragment),Tl=n(),Ae=a("p"),Ae.textContent=Vi,cl=n(),ze=a("p"),ze.innerHTML=Di,_l=n(),$(Se.$$.fragment),xl=n(),qe=a("p"),qe.textContent=yi,Cl=n(),Fe=a("p"),Fe.innerHTML=Ai,Ll=n(),$(b.$$.fragment),gl=n(),$(Ge.$$.fragment),Ml=n(),Ie=a("p"),Ie.innerHTML=zi,dl=n(),B=a("div"),B.innerHTML=Si,Hl=n(),Oe=a("ol"),Oe.innerHTML=qi,hl=n(),Xe=a("p"),Xe.innerHTML=Fi,Pl=n(),We=a("p"),We.innerHTML=Gi,wl=n(),$(j.$$.fragment),kl=n(),$(Ue.$$.fragment),Nl=n(),Qe=a("p"),Qe.innerHTML=Ii,Rl=n(),V=a("div"),V.innerHTML=Oi,El=n(),Je=a("ol"),Je.innerHTML=Xi,bl=n(),Ke=a("p"),Ke.innerHTML=Wi,Bl=n(),$(D.$$.fragment),jl=n(),$(Ye.$$.fragment),Vl=n(),Ze=a("p"),Ze.innerHTML=Ui,Dl=n(),et=a("p"),et.textContent=Qi,yl=n(),tt=a("p"),tt.textContent=Ji,Al=n(),lt=a("p"),lt.innerHTML=Ki,zl=n(),$(y.$$.fragment),Sl=n(),st=a("p"),this.h()},l(e){const t=on("svelte-u9bgzb",document.head);p=f(t,"META",{name:!0,content:!0}),t.forEach(l),o=s(e),r=f(e,"P",{}),an(r).forEach(l),x=s(e),u(A.$$.fragment,e),at=s(e),z=f(e,"P",{"data-svelte-h":!0}),m(z)!=="svelte-f2a8z4"&&(z.innerHTML=Fl),ft=s(e),S=f(e,"P",{"data-svelte-h":!0}),m(S)!=="svelte-1wt0hj4"&&(S.textContent=Gl),mt=s(e),q=f(e,"UL",{"data-svelte-h":!0}),m(q)!=="svelte-1y7dfl2"&&(q.innerHTML=Il),pt=s(e),u(M.$$.fragment,e),rt=s(e),u(F.$$.fragment,e),ot=s(e),G=f(e,"P",{"data-svelte-h":!0}),m(G)!=="svelte-1clg1ch"&&(G.innerHTML=Ol),$t=s(e),d=f(e,"DIV",{class:!0,"data-svelte-h":!0}),m(d)!=="svelte-xcocqf"&&(d.innerHTML=Xl),ut=s(e),I=f(e,"P",{"data-svelte-h":!0}),m(I)!=="svelte-50waaa"&&(I.textContent=Wl),vt=s(e),O=f(e,"OL",{"data-svelte-h":!0}),m(O)!=="svelte-1txodlx"&&(O.innerHTML=Ul),Tt=s(e),X=f(e,"P",{"data-svelte-h":!0}),m(X)!=="svelte-1agytsm"&&(X.textContent=Ql),ct=s(e),u(W.$$.fragment,e),_t=s(e),U=f(e,"P",{"data-svelte-h":!0}),m(U)!=="svelte-zsbv8j"&&(U.textContent=Jl),xt=s(e),Q=f(e,"P",{"data-svelte-h":!0}),m(Q)!=="svelte-avfm7s"&&(Q.innerHTML=Kl),Ct=s(e),u(J.$$.fragment,e),Lt=s(e),K=f(e,"P",{"data-svelte-h":!0}),m(K)!=="svelte-1bks0f4"&&(K.innerHTML=Yl),gt=s(e),Y=f(e,"P",{"data-svelte-h":!0}),m(Y)!=="svelte-11eaitj"&&(Y.innerHTML=Zl),Mt=s(e),u(Z.$$.fragment,e),dt=s(e),ee=f(e,"P",{"data-svelte-h":!0}),m(ee)!=="svelte-1qt0zl1"&&(ee.textContent=ei),Ht=s(e),te=f(e,"OL",{"data-svelte-h":!0}),m(te)!=="svelte-q8lvsm"&&(te.innerHTML=ti),ht=s(e),u(H.$$.fragment,e),Pt=s(e),le=f(e,"P",{"data-svelte-h":!0}),m(le)!=="svelte-l253qa"&&(le.textContent=li),wt=s(e),u(ie.$$.fragment,e),kt=s(e),ne=f(e,"P",{"data-svelte-h":!0}),m(ne)!=="svelte-1vyyyo5"&&(ne.textContent=ii),Nt=s(e),u(se.$$.fragment,e),Rt=s(e),ae=f(e,"P",{"data-svelte-h":!0}),m(ae)!=="svelte-1bqy639"&&(ae.innerHTML=ni),Et=s(e),h=f(e,"DIV",{class:!0,"data-svelte-h":!0}),m(h)!=="svelte-1cij8g4"&&(h.innerHTML=si),bt=s(e),fe=f(e,"P",{"data-svelte-h":!0}),m(fe)!=="svelte-127m82m"&&(fe.textContent=ai),Bt=s(e),me=f(e,"OL",{"data-svelte-h":!0}),m(me)!=="svelte-kz8mb4"&&(me.innerHTML=fi),jt=s(e),pe=f(e,"P",{"data-svelte-h":!0}),m(pe)!=="svelte-1pezv7y"&&(pe.innerHTML=mi),Vt=s(e),u(re.$$.fragment,e),Dt=s(e),u(P.$$.fragment,e),yt=s(e),oe=f(e,"P",{"data-svelte-h":!0}),m(oe)!=="svelte-q8kjhl"&&(oe.innerHTML=pi),At=s(e),w=f(e,"DIV",{class:!0,"data-svelte-h":!0}),m(w)!=="svelte-7yb5mw"&&(w.innerHTML=ri),zt=s(e),$e=f(e,"SMALL",{"data-svelte-h":!0}),m($e)!=="svelte-1xann1h"&&($e.textContent=oi),St=s(e),ue=f(e,"P",{"data-svelte-h":!0}),m(ue)!=="svelte-18i2cdp"&&(ue.textContent=$i),qt=s(e),k=f(e,"DIV",{class:!0,"data-svelte-h":!0}),m(k)!=="svelte-jm5gk8"&&(k.innerHTML=ui),Ft=s(e),ve=f(e,"P",{"data-svelte-h":!0}),m(ve)!=="svelte-gkiki9"&&(ve.textContent=vi),Gt=s(e),Te=f(e,"OL",{"data-svelte-h":!0}),m(Te)!=="svelte-wanmuh"&&(Te.innerHTML=Ti),It=s(e),ce=f(e,"P",{"data-svelte-h":!0}),m(ce)!=="svelte-owg6hh"&&(ce.textContent=ci),Ot=s(e),u(_e.$$.fragment,e),Xt=s(e),xe=f(e,"P",{"data-svelte-h":!0}),m(xe)!=="svelte-1ypuixi"&&(xe.innerHTML=_i),Wt=s(e),N=f(e,"DIV",{class:!0,"data-svelte-h":!0}),m(N)!=="svelte-1h5i4u2"&&(N.innerHTML=xi),Ut=s(e),Ce=f(e,"OL",{"data-svelte-h":!0}),m(Ce)!=="svelte-ohb5jh"&&(Ce.innerHTML=Ci),Qt=s(e),Le=f(e,"P",{"data-svelte-h":!0}),m(Le)!=="svelte-1qba1d5"&&(Le.textContent=Li),Jt=s(e),ge=f(e,"P",{"data-svelte-h":!0}),m(ge)!=="svelte-7vvc1n"&&(ge.innerHTML=gi),Kt=s(e),u(Me.$$.fragment,e),Yt=s(e),de=f(e,"P",{"data-svelte-h":!0}),m(de)!=="svelte-110w6ir"&&(de.innerHTML=Mi),Zt=s(e),R=f(e,"DIV",{class:!0,"data-svelte-h":!0}),m(R)!=="svelte-1sj8vq2"&&(R.innerHTML=di),el=s(e),He=f(e,"P",{"data-svelte-h":!0}),m(He)!=="svelte-64mzln"&&(He.textContent=Hi),tl=s(e),he=f(e,"OL",{"data-svelte-h":!0}),m(he)!=="svelte-1ja4gwz"&&(he.innerHTML=hi),ll=s(e),Pe=f(e,"P",{"data-svelte-h":!0}),m(Pe)!=="svelte-sjq6hl"&&(Pe.innerHTML=Pi),il=s(e),u(we.$$.fragment,e),nl=s(e),ke=f(e,"P",{"data-svelte-h":!0}),m(ke)!=="svelte-1sko1q9"&&(ke.innerHTML=wi),sl=s(e),E=f(e,"DIV",{class:!0,"data-svelte-h":!0}),m(E)!=="svelte-ou0pxu"&&(E.innerHTML=ki),al=s(e),Ne=f(e,"OL",{"data-svelte-h":!0}),m(Ne)!=="svelte-12chhxz"&&(Ne.innerHTML=Ni),fl=s(e),u(Re.$$.fragment,e),ml=s(e),Ee=f(e,"P",{"data-svelte-h":!0}),m(Ee)!=="svelte-yf80eh"&&(Ee.textContent=Ri),pl=s(e),u(be.$$.fragment,e),rl=s(e),Be=f(e,"P",{"data-svelte-h":!0}),m(Be)!=="svelte-7y2br0"&&(Be.innerHTML=Ei),ol=s(e),je=f(e,"OL",{"data-svelte-h":!0}),m(je)!=="svelte-12rnw7k"&&(je.innerHTML=bi),$l=s(e),Ve=f(e,"P",{"data-svelte-h":!0}),m(Ve)!=="svelte-rr364a"&&(Ve.textContent=Bi),ul=s(e),De=f(e,"P",{"data-svelte-h":!0}),m(De)!=="svelte-1cvkaza"&&(De.innerHTML=ji),vl=s(e),u(ye.$$.fragment,e),Tl=s(e),Ae=f(e,"P",{"data-svelte-h":!0}),m(Ae)!=="svelte-1f0pv0v"&&(Ae.textContent=Vi),cl=s(e),ze=f(e,"P",{"data-svelte-h":!0}),m(ze)!=="svelte-13zd6o2"&&(ze.innerHTML=Di),_l=s(e),u(Se.$$.fragment,e),xl=s(e),qe=f(e,"P",{"data-svelte-h":!0}),m(qe)!=="svelte-v8c2el"&&(qe.textContent=yi),Cl=s(e),Fe=f(e,"P",{"data-svelte-h":!0}),m(Fe)!=="svelte-1bto20p"&&(Fe.innerHTML=Ai),Ll=s(e),u(b.$$.fragment,e),gl=s(e),u(Ge.$$.fragment,e),Ml=s(e),Ie=f(e,"P",{"data-svelte-h":!0}),m(Ie)!=="svelte-vvelve"&&(Ie.innerHTML=zi),dl=s(e),B=f(e,"DIV",{class:!0,"data-svelte-h":!0}),m(B)!=="svelte-8822hi"&&(B.innerHTML=Si),Hl=s(e),Oe=f(e,"OL",{"data-svelte-h":!0}),m(Oe)!=="svelte-19lxcvh"&&(Oe.innerHTML=qi),hl=s(e),Xe=f(e,"P",{"data-svelte-h":!0}),m(Xe)!=="svelte-7gn6tb"&&(Xe.innerHTML=Fi),Pl=s(e),We=f(e,"P",{"data-svelte-h":!0}),m(We)!=="svelte-1fy9o2l"&&(We.innerHTML=Gi),wl=s(e),u(j.$$.fragment,e),kl=s(e),u(Ue.$$.fragment,e),Nl=s(e),Qe=f(e,"P",{"data-svelte-h":!0}),m(Qe)!=="svelte-1t7cd90"&&(Qe.innerHTML=Ii),Rl=s(e),V=f(e,"DIV",{class:!0,"data-svelte-h":!0}),m(V)!=="svelte-1vl5qj0"&&(V.innerHTML=Oi),El=s(e),Je=f(e,"OL",{"data-svelte-h":!0}),m(Je)!=="svelte-5jp9ta"&&(Je.innerHTML=Xi),bl=s(e),Ke=f(e,"P",{"data-svelte-h":!0}),m(Ke)!=="svelte-mcyreo"&&(Ke.innerHTML=Wi),Bl=s(e),u(D.$$.fragment,e),jl=s(e),u(Ye.$$.fragment,e),Vl=s(e),Ze=f(e,"P",{"data-svelte-h":!0}),m(Ze)!=="svelte-7k8oyz"&&(Ze.innerHTML=Ui),Dl=s(e),et=f(e,"P",{"data-svelte-h":!0}),m(et)!=="svelte-90uyuo"&&(et.textContent=Qi),yl=s(e),tt=f(e,"P",{"data-svelte-h":!0}),m(tt)!=="svelte-wv8fd5"&&(tt.textContent=Ji),Al=s(e),lt=f(e,"P",{"data-svelte-h":!0}),m(lt)!=="svelte-1ybmxho"&&(lt.innerHTML=Ki),zl=s(e),u(y.$$.fragment,e),Sl=s(e),st=f(e,"P",{}),an(st).forEach(l),this.h()},h(){g(p,"name","hf:doc:metadata"),g(p,"content",gn),g(d,"class","flex justify-center"),g(h,"class","flex justify-center"),g(w,"class","flex justify-center"),g(k,"class","flex justify-center"),g(N,"class","flex justify-center"),g(R,"class","flex justify-center"),g(E,"class","flex justify-center"),g(B,"class","flex justify-center"),g(V,"class","flex justify-center")},m(e,t){$n(document.head,p),i(e,o,t),i(e,r,t),i(e,x,t),v(A,e,t),i(e,at,t),i(e,z,t),i(e,ft,t),i(e,S,t),i(e,mt,t),i(e,q,t),i(e,pt,t),v(M,e,t),i(e,rt,t),v(F,e,t),i(e,ot,t),i(e,G,t),i(e,$t,t),i(e,d,t),i(e,ut,t),i(e,I,t),i(e,vt,t),i(e,O,t),i(e,Tt,t),i(e,X,t),i(e,ct,t),v(W,e,t),i(e,_t,t),i(e,U,t),i(e,xt,t),i(e,Q,t),i(e,Ct,t),v(J,e,t),i(e,Lt,t),i(e,K,t),i(e,gt,t),i(e,Y,t),i(e,Mt,t),v(Z,e,t),i(e,dt,t),i(e,ee,t),i(e,Ht,t),i(e,te,t),i(e,ht,t),v(H,e,t),i(e,Pt,t),i(e,le,t),i(e,wt,t),v(ie,e,t),i(e,kt,t),i(e,ne,t),i(e,Nt,t),v(se,e,t),i(e,Rt,t),i(e,ae,t),i(e,Et,t),i(e,h,t),i(e,bt,t),i(e,fe,t),i(e,Bt,t),i(e,me,t),i(e,jt,t),i(e,pe,t),i(e,Vt,t),v(re,e,t),i(e,Dt,t),v(P,e,t),i(e,yt,t),i(e,oe,t),i(e,At,t),i(e,w,t),i(e,zt,t),i(e,$e,t),i(e,St,t),i(e,ue,t),i(e,qt,t),i(e,k,t),i(e,Ft,t),i(e,ve,t),i(e,Gt,t),i(e,Te,t),i(e,It,t),i(e,ce,t),i(e,Ot,t),v(_e,e,t),i(e,Xt,t),i(e,xe,t),i(e,Wt,t),i(e,N,t),i(e,Ut,t),i(e,Ce,t),i(e,Qt,t),i(e,Le,t),i(e,Jt,t),i(e,ge,t),i(e,Kt,t),v(Me,e,t),i(e,Yt,t),i(e,de,t),i(e,Zt,t),i(e,R,t),i(e,el,t),i(e,He,t),i(e,tl,t),i(e,he,t),i(e,ll,t),i(e,Pe,t),i(e,il,t),v(we,e,t),i(e,nl,t),i(e,ke,t),i(e,sl,t),i(e,E,t),i(e,al,t),i(e,Ne,t),i(e,fl,t),v(Re,e,t),i(e,ml,t),i(e,Ee,t),i(e,pl,t),v(be,e,t),i(e,rl,t),i(e,Be,t),i(e,ol,t),i(e,je,t),i(e,$l,t),i(e,Ve,t),i(e,ul,t),i(e,De,t),i(e,vl,t),v(ye,e,t),i(e,Tl,t),i(e,Ae,t),i(e,cl,t),i(e,ze,t),i(e,_l,t),v(Se,e,t),i(e,xl,t),i(e,qe,t),i(e,Cl,t),i(e,Fe,t),i(e,Ll,t),v(b,e,t),i(e,gl,t),v(Ge,e,t),i(e,Ml,t),i(e,Ie,t),i(e,dl,t),i(e,B,t),i(e,Hl,t),i(e,Oe,t),i(e,hl,t),i(e,Xe,t),i(e,Pl,t),i(e,We,t),i(e,wl,t),v(j,e,t),i(e,kl,t),v(Ue,e,t),i(e,Nl,t),i(e,Qe,t),i(e,Rl,t),i(e,V,t),i(e,El,t),i(e,Je,t),i(e,bl,t),i(e,Ke,t),i(e,Bl,t),v(D,e,t),i(e,jl,t),v(Ye,e,t),i(e,Vl,t),i(e,Ze,t),i(e,Dl,t),i(e,et,t),i(e,yl,t),i(e,tt,t),i(e,Al,t),i(e,lt,t),i(e,zl,t),v(y,e,t),i(e,Sl,t),i(e,st,t),ql=!0},p(e,[t]){const Yi={};t&2&&(Yi.$$scope={dirty:t,ctx:e}),M.$set(Yi);const Zi={};t&2&&(Zi.$$scope={dirty:t,ctx:e}),H.$set(Zi);const en={};t&2&&(en.$$scope={dirty:t,ctx:e}),P.$set(en);const tn={};t&2&&(tn.$$scope={dirty:t,ctx:e}),b.$set(tn);const ln={};t&2&&(ln.$$scope={dirty:t,ctx:e}),j.$set(ln);const nn={};t&2&&(nn.$$scope={dirty:t,ctx:e}),D.$set(nn);const sn={};t&2&&(sn.$$scope={dirty:t,ctx:e}),y.$set(sn)},i(e){ql||(T(A.$$.fragment,e),T(M.$$.fragment,e),T(F.$$.fragment,e),T(W.$$.fragment,e),T(J.$$.fragment,e),T(Z.$$.fragment,e),T(H.$$.fragment,e),T(ie.$$.fragment,e),T(se.$$.fragment,e),T(re.$$.fragment,e),T(P.$$.fragment,e),T(_e.$$.fragment,e),T(Me.$$.fragment,e),T(we.$$.fragment,e),T(Re.$$.fragment,e),T(be.$$.fragment,e),T(ye.$$.fragment,e),T(Se.$$.fragment,e),T(b.$$.fragment,e),T(Ge.$$.fragment,e),T(j.$$.fragment,e),T(Ue.$$.fragment,e),T(D.$$.fragment,e),T(Ye.$$.fragment,e),T(y.$$.fragment,e),ql=!0)},o(e){c(A.$$.fragment,e),c(M.$$.fragment,e),c(F.$$.fragment,e),c(W.$$.fragment,e),c(J.$$.fragment,e),c(Z.$$.fragment,e),c(H.$$.fragment,e),c(ie.$$.fragment,e),c(se.$$.fragment,e),c(re.$$.fragment,e),c(P.$$.fragment,e),c(_e.$$.fragment,e),c(Me.$$.fragment,e),c(we.$$.fragment,e),c(Re.$$.fragment,e),c(be.$$.fragment,e),c(ye.$$.fragment,e),c(Se.$$.fragment,e),c(b.$$.fragment,e),c(Ge.$$.fragment,e),c(j.$$.fragment,e),c(Ue.$$.fragment,e),c(D.$$.fragment,e),c(Ye.$$.fragment,e),c(y.$$.fragment,e),ql=!1},d(e){e&&(l(o),l(r),l(x),l(at),l(z),l(ft),l(S),l(mt),l(q),l(pt),l(rt),l(ot),l(G),l($t),l(d),l(ut),l(I),l(vt),l(O),l(Tt),l(X),l(ct),l(_t),l(U),l(xt),l(Q),l(Ct),l(Lt),l(K),l(gt),l(Y),l(Mt),l(dt),l(ee),l(Ht),l(te),l(ht),l(Pt),l(le),l(wt),l(kt),l(ne),l(Nt),l(Rt),l(ae),l(Et),l(h),l(bt),l(fe),l(Bt),l(me),l(jt),l(pe),l(Vt),l(Dt),l(yt),l(oe),l(At),l(w),l(zt),l($e),l(St),l(ue),l(qt),l(k),l(Ft),l(ve),l(Gt),l(Te),l(It),l(ce),l(Ot),l(Xt),l(xe),l(Wt),l(N),l(Ut),l(Ce),l(Qt),l(Le),l(Jt),l(ge),l(Kt),l(Yt),l(de),l(Zt),l(R),l(el),l(He),l(tl),l(he),l(ll),l(Pe),l(il),l(nl),l(ke),l(sl),l(E),l(al),l(Ne),l(fl),l(ml),l(Ee),l(pl),l(rl),l(Be),l(ol),l(je),l($l),l(Ve),l(ul),l(De),l(vl),l(Tl),l(Ae),l(cl),l(ze),l(_l),l(xl),l(qe),l(Cl),l(Fe),l(Ll),l(gl),l(Ml),l(Ie),l(dl),l(B),l(Hl),l(Oe),l(hl),l(Xe),l(Pl),l(We),l(wl),l(kl),l(Nl),l(Qe),l(Rl),l(V),l(El),l(Je),l(bl),l(Ke),l(Bl),l(jl),l(Vl),l(Ze),l(Dl),l(et),l(yl),l(tt),l(Al),l(lt),l(zl),l(Sl),l(st)),l(p),_(A,e),_(M,e),_(F,e),_(W,e),_(J,e),_(Z,e),_(H,e),_(ie,e),_(se,e),_(re,e),_(P,e),_(_e,e),_(Me,e),_(we,e),_(Re,e),_(be,e),_(ye,e),_(Se,e),_(b,e),_(Ge,e),_(j,e),_(Ue,e),_(D,e),_(Ye,e),_(y,e)}}}const gn='{"title":"How 🤗 Transformers solve tasks","local":"how--transformers-solve-tasks","sections":[{"title":"Speech and audio","local":"speech-and-audio","sections":[{"title":"Audio classification","local":"audio-classification","sections":[],"depth":3},{"title":"Automatic speech recognition","local":"automatic-speech-recognition","sections":[],"depth":3}],"depth":2},{"title":"Computer vision","local":"computer-vision","sections":[{"title":"Image classification","local":"image-classification","sections":[{"title":"Transformer","local":"transformer","sections":[],"depth":4},{"title":"CNN","local":"cnn","sections":[],"depth":4}],"depth":3},{"title":"Object detection","local":"object-detection","sections":[],"depth":3},{"title":"Image segmentation","local":"image-segmentation","sections":[],"depth":3},{"title":"Depth estimation","local":"depth-estimation","sections":[],"depth":3}],"depth":2},{"title":"Natural language processing","local":"natural-language-processing","sections":[{"title":"Text classification","local":"text-classification","sections":[],"depth":3},{"title":"Token classification","local":"token-classification","sections":[],"depth":3},{"title":"Question answering","local":"question-answering","sections":[],"depth":3},{"title":"Text generation","local":"text-generation","sections":[],"depth":3},{"title":"Summarization","local":"summarization","sections":[],"depth":3},{"title":"Translation","local":"translation","sections":[],"depth":3}],"depth":2}],"depth":1}';function Mn(L){return mn(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class wn extends pn{constructor(p){super(),rn(this,p,Mn,Ln,fn,{})}}export{wn as component};
