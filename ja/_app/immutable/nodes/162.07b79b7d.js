import{s as Sw,o as Qw,n as cr}from"../chunks/scheduler.9bc65507.js";import{S as Fw,i as Pw,g as i,s as n,r as f,A as Ew,h as a,f as l,c as p,j as Lw,u as d,x as m,k as Ww,y as Aw,a as s,v as r,d as M,t as o,w}from"../chunks/index.707bf1b6.js";import{T as Tr}from"../chunks/Tip.c2ecdbf4.js";import{C as $}from"../chunks/CodeBlock.54a9f38d.js";import{H as y}from"../chunks/Heading.342b1fa6.js";function Yw(j){let u,c="このプラグインは、<code>pytest-xdist</code> の <code>-n</code> フラグでは動作しません。";return{c(){u=i("p"),u.innerHTML=c},l(T){u=a(T,"P",{"data-svelte-h":!0}),m(u)!=="svelte-14onvpt"&&(u.innerHTML=c)},m(T,J){s(T,u,J)},p:cr,d(T){T&&l(u)}}}function qw(j){let u,c="別のプラグイン <code>pytest-repeat</code> もありますが、これは <code>unittest</code> では動作しません。";return{c(){u=i("p"),u.innerHTML=c},l(T){u=a(T,"P",{"data-svelte-h":!0}),m(u)!=="svelte-xcpx6x"&&(u.innerHTML=c)},m(T,J){s(T,u,J)},p:cr,d(T){T&&l(u)}}}function Kw(j){let u,c="<code>rm -r</code>の相当を安全に実行するために、明示的な <code>tmp_dir</code> が使用される場合、プロジェクトリポジトリのチェックアウトのサブディレクトリのみが許可されます。誤って <code>/tmp</code> などのファイルシステムの重要な部分が削除されないように、常に <code>./</code> から始まるパスを渡してください。";return{c(){u=i("p"),u.innerHTML=c},l(T){u=a(T,"P",{"data-svelte-h":!0}),m(u)!=="svelte-1qjgf9t"&&(u.innerHTML=c)},m(T,J){s(T,u,J)},p:cr,d(T){T&&l(u)}}}function Dw(j){let u,c="各テストは複数の一時ディレクトリを登録でき、要求がない限りすべて自動で削除されます。";return{c(){u=i("p"),u.textContent=c},l(T){u=a(T,"P",{"data-svelte-h":!0}),m(u)!=="svelte-11mv35t"&&(u.textContent=c)},m(T,J){s(T,u,J)},p:cr,d(T){T&&l(u)}}}function Ow(j){let u,c,T,J,_,Jp,g,Jr="🤗 Transformersモデルがどのようにテストされ、新しいテストを書いて既存のテストを改善できるかを見てみましょう。",jp,v,jr="このリポジトリには2つのテストスイートがあります：",Cp,I,Cr="<li><code>tests</code> — 一般的なAPI用のテスト</li> <li><code>examples</code> — APIの一部ではないさまざまなアプリケーション用のテスト</li>",Up,Z,bp,x,Ur='<li><p>PRが提出されると、9つのCircleCiジョブでテストされます。PRへの新しいコミットごとに再テストされます。これらのジョブは、<a href="https://github.com/huggingface/transformers/tree/main/.circleci/config.yml" rel="nofollow">この設定ファイル</a>で定義されており、必要な場合は同じ環境を自分のマシンで再現できます。</p> <p>これらのCIジョブは <code>@slow</code> テストを実行しません。</p></li> <li><p><a href="https://github.com/huggingface/transformers/actions" rel="nofollow">GitHub Actions</a>によって実行される3つのジョブがあります：</p> <ul><li><p><a href="https://github.com/huggingface/transformers/tree/main/.github/workflows/github-torch-hub.yml" rel="nofollow">torch hub integration</a>: torch hubの統合が動作するかどうかを確認します。</p></li> <li><p><a href="https://github.com/huggingface/transformers/tree/main/.github/workflows/self-push.yml" rel="nofollow">self-hosted (push)</a>: <code>main</code> にコミットが行われた場合に、GPUで高速テストを実行します。このジョブは、<code>main</code> でのコミットが以下のフォルダーのコードを更新した場合にのみ実行されます：<code>src</code>、<code>tests</code>、<code>.github</code>（追加されたモデルカード、ノートブックなどの実行を防ぐため）。</p></li> <li><p><a href="https://github.com/huggingface/transformers/tree/main/.github/workflows/self-scheduled.yml" rel="nofollow">self-hosted runner</a>: GPUで <code>tests</code> と <code>examples</code> の通常のテストと遅いテストを実行します。</p></li></ul></li>',hp,k,_p,G,br='結果は<a href="https://github.com/huggingface/transformers/actions" rel="nofollow">here</a>で観察できます。',gp,H,vp,X,Ip,B,hr='このドキュメントは、テストを実行する方法の多くの詳細について説明しています。すべてを読んだ後でも、さらに詳細が必要な場合は、<a href="https://docs.pytest.org/en/latest/usage.html" rel="nofollow">こちら</a>で見つけることができます。',Zp,V,_r="以下は、テストを実行するためのいくつかの最も便利な方法です。",xp,R,gr="すべて実行します:",kp,z,Gp,N,vr="または：",Hp,L,Xp,W,Ir="後者は次のように定義されることに注意してください。",Bp,S,Vp,Q,Zr="以下は、pytestに渡す設定情報です。",Rp,F,xr="<li>テストプロセスをCPUコアの数と同じだけ実行するように指示します。ただし、RAMが十分でない場合は注意が必要です。</li> <li>同じファイルからのすべてのテストは、同じテストプロセスで実行されるようにします。</li> <li>出力のキャプチャを行いません。</li> <li>冗長モードで実行します。</li>",zp,P,Np,E,kr="テストスイートのすべてのテスト：",Lp,A,Wp,Y,Gr="指定されたテスト ファイルのすべてのテスト:",Sp,q,Qp,K,Fp,D,Hr="個別のテスト モジュールを実行するには:",Pp,O,Ep,tt,Ap,et,Xr="ほとんどのテストでunittestが使用されているため、特定のサブテストを実行するには、それらのテストを含むunittestクラスの名前を知っている必要があります。例えば、それは次のようになるかもしれません：",Yp,lt,qp,st,Br="テストの実行方法:",Kp,nt,Vr=`テストファイル: <code>tests/test_optimization.py</code>
クラス名: <code>OptimizationTest</code>
テスト関数の名前: <code>test_adam_w</code>`,Dp,pt,Rr="ファイルに複数のクラスが含まれている場合は、特定のクラスのテストのみを実行することを選択できます。例えば：",Op,it,ti,at,zr="テストクラス内のすべてのテストを実行します。",ei,mt,Nr="前述の通り、<code>OptimizationTest</code> クラスに含まれるテストを実行するには、次のコマンドを実行できます：",li,ft,si,dt,Lr="キーワード式を使用してテストを実行できます。",ni,rt,Wr="名前に <code>adam</code> が含まれるテストのみを実行するには：",pi,Mt,ii,ot,Sr="<code>and</code>および<code>or</code>は、すべてのキーワードが一致するか、いずれかを示すために使用できます。<code>not</code>は否定するために使用できます。",ai,wt,Qr="<code>adam</code>という名前を含むテストを除いてすべてのテストを実行するには：",mi,$t,fi,yt,Fr="以下は、提供されたテキストの日本語訳です。",di,ut,ri,Tt,Pr="たとえば、<code>test_adafactor</code>と<code>test_adam_w</code>の両方を実行するには、以下のコマンドを使用できます:",Mi,ct,oi,Jt,Er="注意: ここでは、<code>or</code> を使用しています。キーワードのいずれか一つが一致すれば、両方を含めるためです。",wi,jt,Ar="両方のパターンを含むテストのみを含めたい場合は、<code>and</code> を使用してください。",$i,Ct,yi,Ut,ui,bt,Yr="時々、モデルに対して <code>accelerate</code> テストを実行する必要があります。たとえば、<code>OPT</code> 実行に対してこれらのテストを実行したい場合、コマンドに <code>-m accelerate_tests</code> を追加するだけで済みます：",Ti,ht,ci,_t,Ji,gt,qr=`ドキュメンテーションの例が正しいかどうかをテストするには、<code>doctests</code> が合格しているかを確認する必要があります。
例として、<a href="https://github.com/huggingface/transformers/blob/main/src/transformers/models/whisper/modeling_whisper.py#L1017-L1035" rel="nofollow"><code>WhisperModel.forward</code> のドックストリング</a>を使用しましょう。`,ji,vt,Ci,It,Kr="指定したファイル内のすべてのドックストリング例を自動的にテストするために、以下の行を実行してください：",Ui,Zt,bi,xt,Dr="ファイルにマークダウン拡張子がある場合は、<code>--doctest-glob=&quot;*.md&quot;</code>引数を追加する必要があります。",hi,kt,_i,Gt,Or='<a href="https://github.com/anapaulagomes/pytest-picked" rel="nofollow">pytest-picked</a>を使用すると、未ステージングのファイルまたは現在のブランチ（Gitに従って）に関連するテストを実行できます。これは、変更内容に関連するテストのみ実行されるため、変更が何も壊れていないことを迅速に確認する素晴らしい方法です。変更されていないファイルに関連するテストは実行されません。',gi,Ht,vi,Xt,Ii,Bt,tM="すべてのテストは、変更されたがまだコミットされていないファイルとフォルダから実行されます。",Zi,Vt,xi,Rt,eM='<a href="https://github.com/pytest-dev/pytest-xdist" rel="nofollow">pytest-xdist</a>は、非常に便利な機能を提供しており、すべての失敗したテストを検出し、ファイルを修正する間にそれらの失敗したテストを連続して再実行することができます。そのため、修正を行った後にpytestを再起動する必要がありません。すべてのテストが合格するまで繰り返され、その後再度フルランが実行されます。',ki,zt,Gi,Nt,lM="モードに入るには： <code>pytest -f</code>または<code>pytest --looponfail</code>",Hi,Lt,sM="ファイルの変更は、<code>looponfailroots</code>ルートディレクトリとその内容全体（再帰的に）を見て検出されます。この値のデフォルトが機能しない場合、<code>setup.cfg</code>で設定オプションを変更してプロジェクト内で変更できます。",Xi,Wt,Bi,St,nM="または <code>pytest.ini</code>/<code>tox.ini</code> ファイル:",Vi,Qt,Ri,Ft,pM="ファイルの変更を探すことは、iniファイルのディレクトリを基準にして指定されたディレクトリ内でのみ行われます。",zi,Pt,iM='<a href="https://github.com/joeyespo/pytest-watch" rel="nofollow">pytest-watch</a> は、この機能の代替実装です。',Ni,Et,Li,At,aM="特定のテストモジュールを除外してすべてのテストモジュールを実行したい場合、実行するテストの明示的なリストを指定することができます。例えば、<code>test_modeling_*.py</code> テストを除外してすべてを実行するには次のようにします：",Wi,Yt,Si,qt,Qi,Kt,mM="CIビルドおよび速度に対する隔離が重要な場合（キャッシュに対して）、キャッシュをクリアする必要があります：",Fi,Dt,Pi,Ot,Ei,te,fM="前述のように、<code>make test</code> は <code>pytest-xdist</code> プラグインを介してテストを並列実行します（<code>-n X</code> 引数、例: <code>-n 2</code> で2つの並列ジョブを実行）。",Ai,ee,dM="<code>pytest-xdist</code> の <code>--dist=</code> オプションを使用すると、テストがどのようにグループ化されるかを制御できます。<code>--dist=loadfile</code> は同じファイルにあるテストを同じプロセスに配置します。",Yi,le,rM='テストの実行順序が異なり予測不可能であるため、<code>pytest-xdist</code> を使用してテストスイートを実行すると失敗が発生する場合（つまり、いくつかの未検出の連動テストがある場合）、<a href="https://github.com/ESSS/pytest-replay" rel="nofollow">pytest-replay</a> を使用してテストを同じ順序で再生し、その後、失敗するシーケンスを最小限にするのに役立ちます。',qi,se,Ki,ne,MM="潜在的な相互依存性や状態に関連するバグ（ティアダウン）を検出するために、テストを複数回、連続して、ランダムに、またはセットで繰り返すことは有用です。そして、単純な複数回の繰り返しは、DLのランダム性によって明らかになるいくつかの問題を検出するのに役立ちます。",Di,pe,Oi,ie,oM='<li><a href="https://github.com/dropbox/pytest-flakefinder" rel="nofollow">pytest-flakefinder</a>:</li>',ta,ae,ea,me,wM="そして、すべてのテストを複数回実行します (デフォルトでは 50 回)。",la,fe,sa,C,na,U,pa,de,ia,re,aa,Me,$M=`重要: <code>pytest-random-order</code> が存在すると、テストは自動的にランダム化されます。設定の変更や変更は必要ありません。
コマンドラインオプションは必須です。`,ma,oe,yM=`前に説明したように、これにより、結合されたテスト (1 つのテストの状態が別のテストの状態に影響を与える) の検出が可能になります。いつ
<code>pytest-random-order</code> がインストールされていると、そのセッションに使用されたランダム シードが出力されます。例:`,fa,we,da,$e,uM="そのため、指定された特定のシーケンスが失敗した場合、その正確なシードを追加することでそれを再現できます。例:",ra,ye,Ma,ue,TM="特定のテストのリストを使用しない場合、またはまったくリストを使用しない場合、同じテストの正確な順序を再現します。テストのリストを手動で絞り込み始めると、シードに依存せず、テストが失敗した正確な順序で手動でリストを指定する必要があります。これには、<code>--random-order-bucket=none</code> を使用してランダム化を無効にするようpytestに指示する必要があります。例えば、次のようにします：",oa,Te,wa,ce,cM="すべてのテストのシャッフルを無効にするには:",$a,Je,ya,je,JM='デフォルトでは、<code>--random-order-bucket=module</code> が暗黙的に適用され、モジュールレベルでファイルをシャッフルします。また、<code>class</code>、<code>package</code>、<code>global</code>、および<code>none</code> レベルでシャッフルすることもできます。詳細については、その<a href="https://github.com/jbasko/pytest-random-order" rel="nofollow">ドキュメンテーション</a>を参照してください。',ua,Ce,jM='別のランダム化の代替手段は、<a href="https://github.com/pytest-dev/pytest-randomly" rel="nofollow"><code>pytest-randomly</code></a> です。このモジュールは非常に似た機能/インターフェースを持っていますが、<code>pytest-random-order</code> で利用可能なバケットモードを持っていません。インストール後に自動的に有効になるという同じ問題があります。',Ta,Ue,ca,be,Ja,he,CM='<a href="https://github.com/Frozenball/pytest-sugar" rel="nofollow">pytest-sugar</a> は、外観と操作性を向上させ、プログレスバーを追加し、即座に失敗したテストとアサーションを表示するプラグインです。インストール後に自動的にアクティブ化されます。',ja,_e,Ca,ge,UM="これを使用せずにテストを実行するには、次を実行します。",Ua,ve,ba,Ie,bM="またはアンインストールします。",ha,Ze,_a,xe,hM="<code>pytest</code> による単一またはグループのテストの場合 (<code>pip install pytest-pspec</code> の後):",ga,ke,va,Ge,Ia,He,_M=`<a href="https://github.com/pytest-dev/pytest-instafail" rel="nofollow">pytest-instafail</a> では、失敗とエラーが即座に表示されます。
テストセッションが終了するまで待機します。`,Za,Xe,xa,Be,ka,Ve,Ga,Re,gM="GPU が有効な設定で、CPU のみモードでテストするには、<code>CUDA_VISIBLE_DEVICES=&quot;&quot;</code>を追加します。",Ha,ze,Xa,Ne,vM=`または、複数の GPU がある場合は、<code>pytest</code> でどれを使用するかを指定できます。たとえば、
2 番目の GPU GPU <code>0</code> と <code>1</code> がある場合は、次を実行できます。`,Ba,Le,Va,We,IM="これは、異なるGPUで異なるタスクを実行したい場合に便利です。",Ra,Se,ZM="一部のテストはCPUのみで実行する必要があり、他のテストはCPU、GPU、またはTPUで実行する必要があり、また別のテストは複数のGPUで実行する必要があります。次のスキップデコレーターは、テストのCPU/GPU/TPUに関する要件を設定するために使用されます：",za,Qe,xM="<li><code>require_torch</code> - このテストはtorchの下でのみ実行されます。</li> <li><code>require_torch_gpu</code> - <code>require_torch</code> に加えて、少なくとも1つのGPUが必要です。</li> <li><code>require_torch_multi_gpu</code> - <code>require_torch</code> に加えて、少なくとも2つのGPUが必要です。</li> <li><code>require_torch_non_multi_gpu</code> - <code>require_torch</code> に加えて、0または1つのGPUが必要です。</li> <li><code>require_torch_up_to_2_gpus</code> - <code>require_torch</code> に加えて、0、1、または2つのGPUが必要です。</li> <li><code>require_torch_tpu</code> - <code>require_torch</code> に加えて、少なくとも1つのTPUが必要です。</li>",Na,Fe,kM="以下の表にGPUの要件を示します：",La,Pe,GM=`| n gpus | decorator                      |
|--------+--------------------------------|
| <code>&gt;= 0</code> | <code>@require_torch</code>               |
| <code>&gt;= 1</code> | <code>@require_torch_gpu</code>           |
| <code>&gt;= 2</code> | <code>@require_torch_multi_gpu</code>     |
| <code>&lt; 2</code>  | <code>@require_torch_non_multi_gpu</code> |
| <code>&lt; 3</code>  | <code>@require_torch_up_to_2_gpus</code>  |`,Wa,Ee,HM="たとえば、使用可能な GPU が 2 つ以上あり、pytorch がインストールされている場合にのみ実行する必要があるテストを次に示します。",Sa,Ae,Qa,Ye,XM="テストに <code>tensorflow</code> が必要な場合は、<code>require_tf</code> デコレータを使用します。例えば：",Fa,qe,Pa,Ke,BM=`これらのデコレータは積み重ねることができます。たとえば、テストが遅く、pytorch で少なくとも 1 つの GPU が必要な場合は、次のようになります。
設定方法:`,Ea,De,Aa,Oe,VM=`<code>@parametrized</code> のような一部のデコレータはテスト名を書き換えるため、<code>@require_*</code> スキップ デコレータをリストする必要があります。
最後にそれらが正しく動作するようにします。正しい使用例は次のとおりです`,Ya,tl,qa,el,RM=`この順序の問題は <code>@pytest.mark.parametrize</code> には存在しません。最初または最後に配置しても、それでも問題は解決されます。
仕事。ただし、それは非単体テストでのみ機能します。`,Ka,ll,zM="内部テスト:",Da,sl,NM="<li>利用可能な GPU の数:</li>",Oa,nl,tm,pl,em,il,LM="特定のtorchデバイスでテストスイートを実行するには、<code>TRANSFORMERS_TEST_DEVICE=&quot;$device&quot;</code> を追加します。ここで <code>$device</code> は対象のバックエンドです。例えば、CPUでテストするには以下のようにします：",lm,al,sm,ml,WM="この変数は、<code>mps</code>などのカスタムまたはあまり一般的ではない PyTorch バックエンドをテストするのに役立ちます。また、特定の GPU をターゲットにしたり、CPU 専用モードでテストしたりすることで、<code>CUDA_VISIBLE_DEVICES</code>と同じ効果を達成するために使用することもできます。",nm,fl,SM="特定のデバイスでは、初めて「torch」をインポートした後、追加のインポートが必要になります。これは、環境変数 <code>TRANSFORMERS_TEST_BACKEND</code> を使用して指定できます。",pm,dl,im,rl,am,Ml,QM="<code>pytest</code> は直接的に分散トレーニングを処理することはできません。試みると、サブプロセスは正しい処理を行わず、自分自身が <code>pytest</code> であると思い込んでテストスイートをループで実行し続けます。ただし、通常のプロセスを生成し、それから複数のワーカーを生成し、IOパイプを管理するプロセスを生成すれば機能します。",mm,ol,FM="これを使用するいくつかのテストがあります：",fm,wl,PM='<li><a href="https://github.com/huggingface/transformers/tree/main/tests/trainer/test_trainer_distributed.py" rel="nofollow">test_trainer_distributed.py</a></li> <li><a href="https://github.com/huggingface/transformers/tree/main/tests/deepspeed/test_deepspeed.py" rel="nofollow">test_deepspeed.py</a></li>',dm,$l,EM="実行ポイントにすぐに移動するには、これらのテスト内で <code>execute_subprocess_async</code> 呼び出しを検索してください。",rm,yl,AM="これらのテストを実行するには、少なくとも2つのGPUが必要です：",Mm,ul,om,Tl,wm,cl,YM="テストの実行中に、<code>stdout</code> および <code>stderr</code> に送信された出力はキャプチャされます。テストまたはセットアップメソッドが失敗した場合、通常、それに対応するキャプチャされた出力が失敗のトレースバックと共に表示されます。",$m,Jl,qM="出力のキャプチャを無効にし、<code>stdout</code> と <code>stderr</code> を通常通りに取得するには、<code>-s</code> または <code>--capture=no</code> を使用してください：",ym,jl,KM="これらのテストを実行するには少なくとも2つのGPUが必要です：",um,Cl,Tm,Ul,DM="テスト結果を JUnit 形式の出力に送信するには:",cm,bl,Jm,hl,jm,_l,OM="色を持たないようにする（例：黄色のテキストを白い背景に表示すると読みにくいです）：",Cm,gl,Um,vl,bm,Il,to="テスト失敗ごとに URL を作成します。",hm,Zl,_m,xl,eo="これにより、テスト実行情報がリモートのPasteサービスに送信され、各エラーに対してURLが提供されます。通常通りテストを選択するか、たとえば特定のエラーのみを送信したい場合は <code>-x</code> を追加で指定できます。",gm,kl,lo="テストセッション全体のログに対するURLを作成する方法：",vm,Gl,Im,Hl,Zm,Xl,so="🤗 transformersのテストは <code>unittest</code> を基にしていますが、 <code>pytest</code> で実行されるため、ほとんどの場合、両方のシステムの機能を使用できます。",xm,Bl,no='<a href="https://docs.pytest.org/en/stable/unittest.html" rel="nofollow">こちら</a>でサポートされている機能を読むことができますが、重要なことは、ほとんどの <code>pytest</code> のフィクスチャが動作しないことです。パラメータ化も同様ですが、似たような方法で動作する <code>parameterized</code> モジュールを使用しています。',km,Vl,Gm,Rl,po="同じテストを異なる引数で複数回実行する必要があることがよくあります。これはテスト内部から行うこともできますが、その場合、そのテストを単一の引数セットで実行する方法はありません。",Hm,zl,Xm,Nl,io="デフォルトでは、このテストは3回実行され、それぞれの実行で <code>test_floor</code> の最後の3つの引数がパラメータリストの対応する引数に割り当てられます。",Bm,Ll,ao="そして、<code>negative</code> と <code>integer</code> パラメータのセットのみを実行することもできます:",Vm,Wl,Rm,Sl,mo="または、<code>Negative</code>のサブテストを除くすべての場合、次のようになります。",zm,Ql,Nm,Fl,fo="<code>-k</code> フィルターを使用することに加えて、各サブテストの正確な名前を調べ、その正確な名前を使用して任意のサブテストまたはすべてのサブテストを実行することができます。",Lm,Pl,Wm,El,ro="すると次のものがリストされます:",Sm,Al,Qm,Yl,Mo="したがって、2 つの特定のサブテストのみを実行できるようになりました。",Fm,ql,Pm,Kl,oo='<code>transformers</code>の開発者依存関係にすでに含まれているモジュール<a href="https://pypi.org/project/parameterized/" rel="nofollow">parameterized</a> は、<code>unittests</code> と <code>pytest</code> テストの両方で機能します。',Em,Dl,wo="ただし、テストが <code>unittest</code> でない場合、<code>pytest.mark.parametrize</code> を使用することができます（または既存のテストのいくつかで、主に <code>examples</code> の下で使用されているのを見ることができます）。",Am,Ol,$o="次に、同じ例を示しますが、今度は <code>pytest</code> の <code>parametrize</code> マーカーを使用しています：",Ym,ts,qm,es,yo="<code>parameterized</code> と同様に、<code>pytest.mark.parametrize</code> を使用すると、<code>-k</code> フィルタが役立たない場合でも、サブテストの実行を細かく制御できます。ただし、このパラメータ化関数はサブテストの名前をわずかに異なるものにします。以下にその例を示します：",Km,ls,Dm,ss,uo="すると次のものがリストされます:",Om,ns,tf,ps,To="これで、特定のテストのみを実行できるようになりました。",ef,is,lf,as,co="前の例と同様に。",sf,ms,nf,fs,Jo="テストの中で、現在のテストファイルからの相対位置を知る必要があることがよくあります。しかし、これは簡単なことではありません。なぜなら、テストは複数のディレクトリから呼び出されるか、異なる深さのサブディレクトリに存在することがあるからです。<code>transformers.test_utils.TestCasePlus</code> というヘルパークラスは、すべての基本パスを整理し、簡単にアクセスできるようにすることで、この問題を解決します。",pf,ds,jo="<li><p><code>pathlib</code> オブジェクト（すべて完全に解決されたもの）：</p> <ul><li><code>test_file_path</code> - 現在のテストファイルのパス、つまり <code>__file__</code></li> <li><code>test_file_dir</code> - 現在のテストファイルを含むディレクトリ</li> <li><code>tests_dir</code> - <code>tests</code> テストスイートのディレクトリ</li> <li><code>examples_dir</code> - <code>examples</code> テストスイートのディレクトリ</li> <li><code>repo_root_dir</code> - リポジトリのディレクトリ</li> <li><code>src_dir</code> - <code>transformers</code> サブディレクトリが存在する場所</li></ul></li> <li><p>パスの文字列表現――上記と同じですが、これらは <code>pathlib</code> オブジェクトではなく文字列としてパスを返します：</p> <ul><li><code>test_file_path_str</code></li> <li><code>test_file_dir_str</code></li> <li><code>tests_dir_str</code></li> <li><code>examples_dir_str</code></li> <li><code>repo_root_dir_str</code></li> <li><code>src_dir_str</code></li></ul></li>",af,rs,Co="これらを使用し始めるには、テストが <code>transformers.test_utils.TestCasePlus</code> のサブクラスに存在することを確認するだけです。例：",mf,Ms,ff,os,Uo="もし、<code>pathlib</code> を介してパスを操作する必要がない場合、または単に文字列としてパスが必要な場合は、<code>pathlib</code> オブジェクトに <code>str()</code> を呼び出すか、<code>_str</code> で終わるアクセサを使用できます。例：",df,ws,rf,$s,Mf,ys,bo="一意の一時ファイルとディレクトリの使用は、並列テストの実行には欠かせません。これにより、テストがお互いのデータを上書きしないようにします。また、これらを作成した各テストの終了時に一時ファイルとディレクトリが削除されることを望みます。そのため、これらのニーズを満たすパッケージである <code>tempfile</code> のようなパッケージの使用は重要です。",of,us,ho="しかし、テストのデバッグ時には、一時ファイルやディレクトリに何が格納されているかを確認できる必要があり、テストを再実行するたびにランダムに変更されないその正確なパスを知りたいと思います。",wf,Ts,_o="<code>transformers.test_utils.TestCasePlus</code> というヘルパークラスは、このような目的に最適です。これは <code>unittest.TestCase</code> のサブクラスであるため、テストモジュールで簡単に継承することができます。",$f,cs,go="以下はその使用例です：",yf,Js,uf,js,vo="このコードはユニークな一時ディレクトリを作成し、<code>tmp_dir</code> をその場所に設定します。",Tf,Cs,Io="<li>ユニークな一時ディレクトリを作成します：</li>",cf,Us,Jf,bs,Zo=`<code>tmp_dir</code> には、作成された一時ディレクトリへのパスが含まれます。期間終了後は自動的に削除されます
テスト。`,jf,hs,xo="<li>任意の一時ディレクトリを作成し、テストの開始前にそれが空であることを確認し、テスト後には空にしないでください。</li>",Cf,_s,Uf,gs,ko="これは、特定のディレクトリを監視し、前のテストがそこにデータを残さないことを確認したい場合に、デバッグに役立ちます。",bf,vs,Go="<li><p><code>before</code> と <code>after</code> 引数を直接オーバーライドすることで、デフォルトの動作をオーバーライドできます。以下のいずれかの動作に導きます：</p> <ul><li><code>before=True</code>：テストの開始時に常に一時ディレクトリがクリアされます。</li> <li><code>before=False</code>：一時ディレクトリが既に存在する場合、既存のファイルはそのままになります。</li> <li><code>after=True</code>：テストの終了時に常に一時ディレクトリが削除されます。</li> <li><code>after=False</code>：テストの終了時に常に一時ディレクトリはそのままになります。</li></ul></li>",hf,b,_f,h,gf,Is,vf,Zs,Ho="別のテストからインポートするために一時的に <code>sys.path</code> をオーバーライドする必要がある場合、<code>ExtendSysPath</code> コンテキストマネージャを使用できます。例：",If,xs,Zf,ks,xf,Gs,Xo="これは、バグが見つかり、新しいテストが作成された場合であっても、バグがまだ修正されていない場合に役立ちます。メインリポジトリにコミットできるようにするには、<code>make test</code> の実行中にそれをスキップする必要があります。",kf,Hs,Bo="メソッド：",Gf,Xs,Vo="<li><p><strong>skip</strong> は、テストが特定の条件が満たされた場合にのみパスすることを期待しており、それ以外の場合は pytest がテストの実行をスキップします。一般的な例は、Windows専用のテストを非Windowsプラットフォームでスキップする場合、または現在利用できない外部リソースに依存するテストをスキップする場合です（例: データベースが利用できない場合）。</p></li> <li><p><strong>xfail</strong> は、何らかの理由でテストが失敗することを期待しています。一般的な例は、まだ実装されていない機能のテストや、まだ修正されていないバグのテストです。テストが予想される失敗にもかかわらずパスした場合（pytest.mark.xfailでマークされたテスト）、それはxpassとしてテストサマリーに報告されます。</p></li>",Hf,Bs,Ro="これらの2つの間の重要な違いの1つは、<code>skip</code> はテストを実行しない点であり、<code>xfail</code> は実行します。したがって、バグのあるコードが他のテストに影響を与える場合は、<code>xfail</code> を使用しないでください。",Xf,Vs,Bf,Rs,zo="<li>テスト全体を無条件にスキップする方法は次のとおりです：</li>",Vf,zs,Rf,Ns,No="または pytest 経由:",zf,Ls,Nf,Ws,Lo="または <code>xfail</code> の方法:",Lf,Ss,Wf,Qs,Wo="<li>テスト内の内部チェックに基づいてテストをスキップする方法は次のとおりです。</li>",Sf,Fs,Qf,Ps,So="またはモジュール全体:",Ff,Es,Pf,As,Qo="または <code>xfail</code> の方法:",Ef,Ys,Af,qs,Fo="<li>一部のインポートが欠落している場合にモジュール内のすべてのテストをスキップする方法は次のとおりです。</li>",Yf,Ks,qf,Ds,Po="<li>条件に基づいてテストをスキップします。</li>",Kf,Os,Df,tn,Eo="または：",Of,en,td,ln,Ao="またはモジュール全体をスキップします。",ed,sn,ld,nn,Yo='詳細、例、および方法についての詳細は<a href="https://docs.pytest.org/en/latest/skipping.html" rel="nofollow">こちら</a>を参照してください。',sd,pn,nd,an,qo="テストライブラリは着実に成長しており、テストの一部は数分かかります。そのため、CIでテストスイートの完了を待つのは1時間待つ余裕がないことがあります。したがって、いくつかの例外を除いて、遅いテストは以下の例のようにマークすべきです：",pd,mn,id,fn,Ko="テストが<code>@slow</code>としてマークされたら、そのようなテストを実行するには、環境変数 <code>RUN_SLOW=1</code>を設定します。例:",ad,dn,md,rn,Do="<code>@parameterized</code> のようなデコレータはテスト名を書き換えるため、<code>@slow</code> および他のスキップデコレータ <code>@require_*</code> は正しく動作するためには、最後にリストアップする必要があります。以下は正しい使用例の一例です：",fd,Mn,dd,on,Oo="このドキュメントの冒頭で説明したように、遅いテストは定期的なスケジュールに従って実行され、PRのCIチェックでは実行されません。そのため、一部の問題がPRの提出時に見落とされ、マージされる可能性があります。そのような問題は次回のスケジュールされたCIジョブで検出されます。しかし、それはまた、PRを提出する前に自分のマシンで遅いテストを実行する重要性を意味しています。",rd,wn,tw="どのテストを遅いテストとしてマークすべきかを選択するための、おおまかな意思決定メカニズムが次に示されています：",Md,$n,ew="<li><p>テストがライブラリの内部コンポーネントの1つに焦点を当てている場合（例: モデリングファイル、トークン化ファイル、パイプライン）、そのテストは遅いテストスイートで実行する必要があります。それがライブラリの他の側面、たとえばドキュメンテーションや例に焦点を当てている場合、それらのテストは遅いテストスイートで実行する必要があります。そして、このアプローチを洗練させるために例外を設ける必要があります。</p></li> <li><p>重いウェイトセットや約50MB以上のデータセットをダウンロードする必要があるすべてのテスト（例: モデル統合テスト、トークナイザ統合テスト、パイプライン統合テスト）は遅いテストとして設定する必要があります。新しいモデルを追加する場合、統合テスト用にランダムなウェイトを持つ小さなバージョンを作成し、ハブにアップロードする必要があります。これについては以下の段落で詳しく説明します。</p></li> <li><p>特に高速化されていないトレーニングを行う必要があるすべてのテストは遅いテストとして設定する必要があります。</p></li> <li><p>一部の「遅い」であるべきでないテストが非常に遅い場合、およびそれらを <code>@slow</code> として設定する必要がある場合には例外を導入できます。大容量のファイルをディスクに保存および読み込みする自動モデリングテストは、<code>@slow</code> としてマークされたテストの良い例です。</p></li> <li><p>CIで1秒未満でテストが完了する場合（ダウンロードを含む）、それは通常のテストであるべきです。</p></li>",od,yn,lw="すべての非遅いテストは、さまざまな内部要素を完全にカバーする必要がありますが、高速である必要があります。たとえば、特別に作成された小さなモデル（レイヤー数が最小限で、語彙サイズが小さいなど）を使用して、かなりのカバレッジを実現できます。その後、<code>@slow</code> テストでは大規模な遅いモデルを使用して質的なテストを実行できます。これらを使用するには、以下のように <em>tiny</em> モデルを探してください：",wd,un,$d,Tn,sw='<a href="https://github.com/huggingface/transformers/tree/main/scripts/fsmt/fsmt-make-tiny-model.py" rel="nofollow">スクリプトの例</a>があり、これにより tiny-wmt19-en-de のような小さなモデルが作成されます。特定のモデルのアーキテクチャに簡単に調整できます。',yd,cn,nw="実行時間を誤って測定することが簡単です。たとえば、巨大なモデルのダウンロードに関するオーバーヘッドがある場合、ローカルでテストするとダウンロードされたファイルがキャッシュされ、ダウンロード時間が計測されなくなります。したがって、CIログの実行速度レポート（<code>pytest --durations=0 tests</code> の出力）を確認してください。",ud,Jn,pw="このレポートは、遅いテストとしてマークされていない遅い外れ値や、高速に書き直す必要があるテストを見つけるのにも役立ちます。テストスイートがCIで遅くなり始めた場合、このレポートのトップリストには最も遅いテストが表示されます。",Td,jn,cd,Cn,iw='<code>stdout</code> および/または <code>stderr</code> に書き込む関数をテストするために、テストは <code>pytest</code> の <a href="https://docs.pytest.org/en/latest/capture.html" rel="nofollow">capsys システム</a> を使用してこれらのストリームにアクセスできます。以下はその方法です：',Jd,Un,jd,bn,aw=`そしてもちろん、ほとんどの場合、<code>stderr</code>は例外の一部として提供されるため、そのような場合には try/excel を使用する必要があります。
ケース：`,Cd,hn,Ud,_n,mw="stdout をキャプチャするもう 1 つのアプローチは、<code>contextlib.redirect_stdout</code>を使用することです。",bd,gn,hd,vn,fw="stdout をキャプチャする際の重要な潜在的な問題は、通常の <code>print</code> でこれまでに出力された内容をリセットする可能性がある <code>\\r</code> 文字が含まれている可能性があることです。<code>pytest</code> 自体には問題はありませんが、<code>pytest -s</code> ではこれらの文字がバッファに含まれるため、<code>-s</code> ありとなしでテストを実行できるようにするには、<code>re.sub(r&#39;~.*\\r&#39;, &#39;&#39;, buf, 0, re.M)</code> を使用してキャプチャされた出力に対して追加のクリーンアップを行う必要があります。",_d,In,dw="しかし、その後、<code>\\r</code> が含まれているかどうかにかかわらず、すべての操作を自動的に処理するヘルパーコンテキストマネージャラッパーがあります。したがって、次のように簡単に行えます：",gd,Zn,vd,xn,rw="完全なテスト例は次のとおりです。",Id,kn,Zd,Gn,Mw="<code>stderr</code> をキャプチャしたい場合は、代わりに <code>CaptureStderr</code> クラスを使用してください。",xd,Hn,kd,Xn,ow="両方のストリームを一度にキャプチャする必要がある場合は、親の <code>CaptureStd</code> クラスを使用します。",Gd,Bn,Hd,Vn,ww=`また、テストの問題のデバッグを支援するために、デフォルトで、これらのコンテキスト マネージャーは終了時にキャプチャされたストリームを自動的に再生します。
文脈から。`,Xd,Rn,Bd,zn,$w="ロガーの出力を検証する必要がある場合は、<code>CaptureLogger</code>を使用できます。",Vd,Nn,Rd,Ln,zd,Wn,yw=`特定のテストで環境変数の影響をテストしたい場合は、ヘルパー デコレータを使用できます。
<code>transformers.testing_utils.mockenv</code>`,Nd,Sn,Ld,Qn,uw=`場合によっては、外部プログラムを呼び出す必要があるため、<code>os.environ</code> に<code>PYTHONPATH</code>を設定してインクルードする必要があります。
複数のローカル パス。ヘルパー クラス <code>transformers.test_utils.TestCasePlus</code> が役に立ちます。`,Wd,Fn,Sd,Pn,Tw=`テストファイルが <code>tests</code> テストスイートまたは <code>examples</code> のどちらにあるかに応じて
<code>env[PYTHONPATH]</code> を使用して、これら 2 つのディレクトリのいずれかを含めます。また、テストが確実に行われるようにするための <code>src</code> ディレクトリも含めます。
現在のリポジトリに対して実行され、最後に、テストが実行される前にすでに設定されていた <code>env[PYTHONPATH]</code> を使用して実行されます。
何かあれば呼ばれます。`,Qd,En,cw="このヘルパー メソッドは <code>os.environ</code> オブジェクトのコピーを作成するため、元のオブジェクトはそのまま残ります。",Fd,An,Pd,Yn,Jw=`状況によっては、テストのランダム性を削除したい場合があります。同一の再現可能な結果セットを取得するには、
シードを修正する必要があります:`,Ed,qn,Ad,Kn,Yd,Dn,jw="警告が発生した時点でデバッガーを開始するには、次の手順を実行します。",qd,On,Kd,tp,Dd,ep,Cw="セルフプッシュのワークフローCIジョブをトリガーするには、以下の手順を実行する必要があります：",Od,lp,Uw='<li><code>transformers</code> のリモートリポジトリで新しいブランチを作成します（フォークではなく、元のリポジトリで行います）。</li> <li>ブランチの名前は <code>ci_</code> または <code>ci-</code> で始まる必要があります（<code>main</code> もトリガーしますが、<code>main</code> ではPRを作成できません）。また、特定のパスでのみトリガーされます - このドキュメントが書かれた後に変更された場合に備えて、最新の定義は<a href="https://github.com/huggingface/transformers/blob/main/.github/workflows/self-push.yml" rel="nofollow">こちら</a>の <em>push:</em> にあります。</li> <li>このブランチからPRを作成します。</li> <li>その後、このジョブが<a href="https://github.com/huggingface/transformers/actions/workflows/self-push.yml" rel="nofollow">ここ</a>に表示されます。ジョブはバックログがある場合、すぐに実行されないことがあります。</li>',tr,sp,er,np,bw="CI機能のテストは通常のCIの正常な動作に干渉する可能性があるため、新しいCI機能を追加する場合、以下の手順に従う必要があります。",lr,pp,hw="<li>テストが必要なものをテストするための新しい専用のジョブを作成します。</li> <li>新しいジョブは常に成功する必要があるため、常にグリーン ✓（詳細は以下参照）を表示する必要があります。</li> <li>さまざまな種類のPR（ユーザーフォークブランチ、非フォークブランチ、github.com UIから直接ファイルを編集するブランチ、さまざまな強制プッシュなど）が実行されるまでいくつかの日間実行し、実験的なジョブのログを監視します（意図的に常にグリーンになるようになっている全体のジョブの緑ではなく）。</li> <li>すべてが安定していることが明確になったら、新しい変更を既存のジョブに統合します。</li>",sr,ip,_w="このように、CI機能自体の実験が通常のワークフローに干渉しないようにできます。",nr,ap,gw="では、新しいCI機能が開発中である間、ジョブを常に成功させるにはどうすればいいでしょうか？",pr,mp,vw="TravisCIのような一部のCIは <code>ignore-step-failure</code> をサポートし、全体のジョブを成功として報告しますが、この文書が作成された時点ではCircleCIとGithub Actionsはそれをサポートしていません。",ir,fp,Iw="したがって、以下のワークアラウンドを使用できます：",ar,dp,Zw="<li>bashスクリプト内で潜在的な失敗を抑制するために実行コマンドの冒頭に <code>set +euo pipefail</code> を記述します。</li> <li>最後のコマンドは成功する必要があります。たとえば <code>echo &quot;done&quot;</code> または単に <code>true</code> を使用できます。</li>",mr,rp,xw="以下は例です：",fr,Mp,dr,op,kw="単純なコマンドの場合は、次のようにすることもできます。",rr,wp,Mr,$p,Gw="もちろん、結果に満足したら、実験的なステップやジョブを通常のジョブと統合し、<code>set +euo pipefail</code> などの追加した要素を削除して、実験的なジョブが通常のCIの動作に干渉しないようにします。",or,yp,Hw="このプロセス全体は、実験的なステップに対して <code>allow-failure</code> のようなものを設定し、PRの全体のステータスに影響を与えずに失敗させることができれば、はるかに簡単になったでしょう。しかし、前述の通り、現在はCircleCIとGithub Actionsはこの機能をサポートしていません。",wr,up,Xw="この機能に関しての投票や、CIに特有のスレッドでその進捗状況を確認できます：",$r,Tp,Bw='<li><a href="https://github.com/actions/toolkit/issues/399" rel="nofollow">Github Actions:</a></li> <li><a href="https://ideas.circleci.com/ideas/CCI-I-344" rel="nofollow">CircleCI:</a></li>',yr,cp,ur;return _=new y({props:{title:"Testing",local:"testing",headingTag:"h1"}}),Z=new y({props:{title:"How transformers are tested",local:"how-transformers-are-tested",headingTag:"h2"}}),k=new $({props:{code:"UlVOX1NMT1clM0QxJTIwcHl0ZXN0JTIwdGVzdHMlMkYlMEFSVU5fU0xPVyUzRDElMjBweXRlc3QlMjBleGFtcGxlcyUyRg==",highlighted:`RUN_SLOW=1 pytest tests/
RUN_SLOW=1 pytest examples/`,wrap:!1}}),H=new y({props:{title:"Running tests",local:"running-tests",headingTag:"h2"}}),X=new y({props:{title:"Choosing which tests to run",local:"choosing-which-tests-to-run",headingTag:"h3"}}),z=new $({props:{code:"cHl0ZXN0",highlighted:"pytest",wrap:!1}}),L=new $({props:{code:"bWFrZSUyMHRlc3Q=",highlighted:'make <span class="hljs-built_in">test</span>',wrap:!1}}),S=new $({props:{code:"cHl0aG9uJTIwLW0lMjBweXRlc3QlMjAtbiUyMGF1dG8lMjAtLWRpc3QlM0Rsb2FkZmlsZSUyMC1zJTIwLXYlMjAuJTJGdGVzdHMlMkY=",highlighted:"python -m pytest -n auto --dist=loadfile -s -v ./tests/",wrap:!1}}),P=new y({props:{title:"Getting the list of all tests",local:"getting-the-list-of-all-tests",headingTag:"h3"}}),A=new $({props:{code:"cHl0ZXN0JTIwLS1jb2xsZWN0LW9ubHklMjAtcQ==",highlighted:"pytest --collect-only -q",wrap:!1}}),q=new $({props:{code:"cHl0ZXN0JTIwdGVzdHMlMkZ0ZXN0X29wdGltaXphdGlvbi5weSUyMC0tY29sbGVjdC1vbmx5JTIwLXE=",highlighted:"pytest tests/test_optimization.py --collect-only -q",wrap:!1}}),K=new y({props:{title:"Run a specific test module",local:"run-a-specific-test-module",headingTag:"h3"}}),O=new $({props:{code:"cHl0ZXN0JTIwdGVzdHMlMkZ1dGlscyUyRnRlc3RfbG9nZ2luZy5weQ==",highlighted:"pytest tests/utils/test_logging.py",wrap:!1}}),tt=new y({props:{title:"Run specific tests",local:"run-specific-tests",headingTag:"h3"}}),lt=new $({props:{code:"cHl0ZXN0JTIwdGVzdHMlMkZ0ZXN0X29wdGltaXphdGlvbi5weSUzQSUzQU9wdGltaXphdGlvblRlc3QlM0ElM0F0ZXN0X2FkYW1fdw==",highlighted:"pytest tests/test_optimization.py::OptimizationTest::test_adam_w",wrap:!1}}),it=new $({props:{code:"cHl0ZXN0JTIwdGVzdHMlMkZ0ZXN0X29wdGltaXphdGlvbi5weSUzQSUzQU9wdGltaXphdGlvblRlc3Q=",highlighted:"pytest tests/test_optimization.py::OptimizationTest",wrap:!1}}),ft=new $({props:{code:"cHl0ZXN0JTIwdGVzdHMlMkZ0ZXN0X29wdGltaXphdGlvbi5weSUzQSUzQU9wdGltaXphdGlvblRlc3QlMjAtLWNvbGxlY3Qtb25seSUyMC1x",highlighted:"pytest tests/test_optimization.py::OptimizationTest --collect-only -q",wrap:!1}}),Mt=new $({props:{code:"cHl0ZXN0JTIwLWslMjBhZGFtJTIwdGVzdHMlMkZ0ZXN0X29wdGltaXphdGlvbi5weQ==",highlighted:"pytest -k adam tests/test_optimization.py",wrap:!1}}),$t=new $({props:{code:"cHl0ZXN0JTIwLWslMjAlMjJub3QlMjBhZGFtJTIyJTIwdGVzdHMlMkZ0ZXN0X29wdGltaXphdGlvbi5weQ==",highlighted:'pytest -k <span class="hljs-string">&quot;not adam&quot;</span> tests/test_optimization.py',wrap:!1}}),ut=new $({props:{code:"cHl0ZXN0JTIwLWslMjAlMjJhZGElMjBhbmQlMjBub3QlMjBhZGFtJTIyJTIwdGVzdHMlMkZ0ZXN0X29wdGltaXphdGlvbi5weQ==",highlighted:'pytest -k <span class="hljs-string">&quot;ada and not adam&quot;</span> tests/test_optimization.py',wrap:!1}}),ct=new $({props:{code:"cHl0ZXN0JTIwLWslMjAlMjJ0ZXN0X2FkYW1fdyUyMG9yJTIwdGVzdF9hZGFtX3clMjIlMjB0ZXN0cyUyRnRlc3Rfb3B0aW1pemF0aW9uLnB5",highlighted:'pytest -k <span class="hljs-string">&quot;test_adam_w or test_adam_w&quot;</span> tests/test_optimization.py',wrap:!1}}),Ct=new $({props:{code:"cHl0ZXN0JTIwLWslMjAlMjJ0ZXN0JTIwYW5kJTIwYWRhJTIyJTIwdGVzdHMlMkZ0ZXN0X29wdGltaXphdGlvbi5weQ==",highlighted:'pytest -k <span class="hljs-string">&quot;test and ada&quot;</span> tests/test_optimization.py',wrap:!1}}),Ut=new y({props:{title:"Run accelerate tests",local:"run-accelerate-tests",headingTag:"h3"}}),ht=new $({props:{code:"UlVOX1NMT1clM0QxJTIwcHl0ZXN0JTIwLW0lMjBhY2NlbGVyYXRlX3Rlc3RzJTIwdGVzdHMlMkZtb2RlbHMlMkZvcHQlMkZ0ZXN0X21vZGVsaW5nX29wdC5weSUyMA==",highlighted:"RUN_SLOW=1 pytest -m accelerate_tests tests/models/opt/test_modeling_opt.py ",wrap:!1}}),_t=new y({props:{title:"Run documentation tests",local:"run-documentation-tests",headingTag:"h3"}}),vt=new $({props:{code:"ciUyMiUyMiUyMiUwQVJldHVybnMlM0ElMEElMEFFeGFtcGxlJTNBJTBBJTIwJTIwJTIwJTIwJTYwJTYwJTYwcHl0aG9uJTBBJTIwJTIwJTIwJTIwJTNFJTNFJTNFJTIwaW1wb3J0JTIwdG9yY2glMEElMjAlMjAlMjAlMjAlM0UlM0UlM0UlMjBmcm9tJTIwdHJhbnNmb3JtZXJzJTIwaW1wb3J0JTIwV2hpc3Blck1vZGVsJTJDJTIwV2hpc3BlckZlYXR1cmVFeHRyYWN0b3IlMEElMjAlMjAlMjAlMjAlM0UlM0UlM0UlMjBmcm9tJTIwZGF0YXNldHMlMjBpbXBvcnQlMjBsb2FkX2RhdGFzZXQlMEElMEElMjAlMjAlMjAlMjAlM0UlM0UlM0UlMjBtb2RlbCUyMCUzRCUyMFdoaXNwZXJNb2RlbC5mcm9tX3ByZXRyYWluZWQoJTIyb3BlbmFpJTJGd2hpc3Blci1iYXNlJTIyKSUwQSUyMCUyMCUyMCUyMCUzRSUzRSUzRSUyMGZlYXR1cmVfZXh0cmFjdG9yJTIwJTNEJTIwV2hpc3BlckZlYXR1cmVFeHRyYWN0b3IuZnJvbV9wcmV0cmFpbmVkKCUyMm9wZW5haSUyRndoaXNwZXItYmFzZSUyMiklMEElMjAlMjAlMjAlMjAlM0UlM0UlM0UlMjBkcyUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJoZi1pbnRlcm5hbC10ZXN0aW5nJTJGbGlicmlzcGVlY2hfYXNyX2R1bW15JTIyJTJDJTIwJTIyY2xlYW4lMjIlMkMlMjBzcGxpdCUzRCUyMnZhbGlkYXRpb24lMjIpJTBBJTIwJTIwJTIwJTIwJTNFJTNFJTNFJTIwaW5wdXRzJTIwJTNEJTIwZmVhdHVyZV9leHRyYWN0b3IoZHMlNUIwJTVEJTVCJTIyYXVkaW8lMjIlNUQlNUIlMjJhcnJheSUyMiU1RCUyQyUyMHJldHVybl90ZW5zb3JzJTNEJTIycHQlMjIpJTBBJTIwJTIwJTIwJTIwJTNFJTNFJTNFJTIwaW5wdXRfZmVhdHVyZXMlMjAlM0QlMjBpbnB1dHMuaW5wdXRfZmVhdHVyZXMlMEElMjAlMjAlMjAlMjAlM0UlM0UlM0UlMjBkZWNvZGVyX2lucHV0X2lkcyUyMCUzRCUyMHRvcmNoLnRlbnNvciglNUIlNUIxJTJDJTIwMSU1RCU1RCklMjAqJTIwbW9kZWwuY29uZmlnLmRlY29kZXJfc3RhcnRfdG9rZW5faWQlMEElMjAlMjAlMjAlMjAlM0UlM0UlM0UlMjBsYXN0X2hpZGRlbl9zdGF0ZSUyMCUzRCUyMG1vZGVsKGlucHV0X2ZlYXR1cmVzJTJDJTIwZGVjb2Rlcl9pbnB1dF9pZHMlM0RkZWNvZGVyX2lucHV0X2lkcykubGFzdF9oaWRkZW5fc3RhdGUlMEElMjAlMjAlMjAlMjAlM0UlM0UlM0UlMjBsaXN0KGxhc3RfaGlkZGVuX3N0YXRlLnNoYXBlKSUwQSUyMCUyMCUyMCUyMCU1QjElMkMlMjAyJTJDJTIwNTEyJTVEJTBBJTIwJTIwJTIwJTIwJTYwJTYwJTYwJTIyJTIyJTIyJTBB",highlighted:`<span class="hljs-string">r&quot;&quot;&quot;
Returns:

Example:
    \`\`\`python
    &gt;&gt;&gt; import torch
    &gt;&gt;&gt; from transformers import WhisperModel, WhisperFeatureExtractor
    &gt;&gt;&gt; from datasets import load_dataset

    &gt;&gt;&gt; model = WhisperModel.from_pretrained(&quot;openai/whisper-base&quot;)
    &gt;&gt;&gt; feature_extractor = WhisperFeatureExtractor.from_pretrained(&quot;openai/whisper-base&quot;)
    &gt;&gt;&gt; ds = load_dataset(&quot;hf-internal-testing/librispeech_asr_dummy&quot;, &quot;clean&quot;, split=&quot;validation&quot;)
    &gt;&gt;&gt; inputs = feature_extractor(ds[0][&quot;audio&quot;][&quot;array&quot;], return_tensors=&quot;pt&quot;)
    &gt;&gt;&gt; input_features = inputs.input_features
    &gt;&gt;&gt; decoder_input_ids = torch.tensor([[1, 1]]) * model.config.decoder_start_token_id
    &gt;&gt;&gt; last_hidden_state = model(input_features, decoder_input_ids=decoder_input_ids).last_hidden_state
    &gt;&gt;&gt; list(last_hidden_state.shape)
    [1, 2, 512]
    \`\`\`&quot;&quot;&quot;</span>
`,wrap:!1}}),Zt=new $({props:{code:"cHl0ZXN0JTIwLS1kb2N0ZXN0LW1vZHVsZXMlMjAlM0NwYXRoX3RvX2ZpbGVfb3JfZGlyJTNF",highlighted:"pytest --doctest-modules &lt;path_to_file_or_dir&gt;",wrap:!1}}),kt=new y({props:{title:"Run only modified tests",local:"run-only-modified-tests",headingTag:"h3"}}),Ht=new $({props:{code:"cGlwJTIwaW5zdGFsbCUyMHB5dGVzdC1waWNrZWQ=",highlighted:"pip install pytest-picked",wrap:!1}}),Xt=new $({props:{code:"cHl0ZXN0JTIwLS1waWNrZWQ=",highlighted:"pytest --picked",wrap:!1}}),Vt=new y({props:{title:"Automatically rerun failed tests on source modification",local:"automatically-rerun-failed-tests-on-source-modification",headingTag:"h3"}}),zt=new $({props:{code:"cGlwJTIwaW5zdGFsbCUyMHB5dGVzdC14ZGlzdA==",highlighted:"pip install pytest-xdist",wrap:!1}}),Wt=new $({props:{code:"JTVCdG9vbCUzQXB5dGVzdCU1RCUwQWxvb3BvbmZhaWxyb290cyUyMCUzRCUyMHRyYW5zZm9ybWVycyUyMHRlc3Rz",highlighted:`<span class="hljs-section">[tool:pytest]</span>
<span class="hljs-attr">looponfailroots</span> = transformers tests`,wrap:!1}}),Qt=new $({props:{code:"JTVCcHl0ZXN0JTVEJTBBbG9vcG9uZmFpbHJvb3RzJTIwJTNEJTIwdHJhbnNmb3JtZXJzJTIwdGVzdHM=",highlighted:`<span class="hljs-section">[pytest]</span>
<span class="hljs-attr">looponfailroots</span> = transformers tests`,wrap:!1}}),Et=new y({props:{title:"Skip a test module",local:"skip-a-test-module",headingTag:"h3"}}),Yt=new $({props:{code:"cHl0ZXN0JTIwKmxzJTIwLTElMjB0ZXN0cyUyRipweSUyMCU3QyUyMGdyZXAlMjAtdiUyMHRlc3RfbW9kZWxpbmcq",highlighted:'pytest *<span class="hljs-built_in">ls</span> -1 tests/*py | grep -v test_modeling*',wrap:!1}}),qt=new y({props:{title:"Clearing state",local:"clearing-state",headingTag:"h3"}}),Dt=new $({props:{code:"cHl0ZXN0JTIwLS1jYWNoZS1jbGVhciUyMHRlc3Rz",highlighted:"pytest --cache-clear tests",wrap:!1}}),Ot=new y({props:{title:"Running tests in parallel",local:"running-tests-in-parallel",headingTag:"h3"}}),se=new y({props:{title:"Test order and repetition",local:"test-order-and-repetition",headingTag:"h3"}}),pe=new y({props:{title:"Repeat tests",local:"repeat-tests",headingTag:"h4"}}),ae=new $({props:{code:"cGlwJTIwaW5zdGFsbCUyMHB5dGVzdC1mbGFrZWZpbmRlcg==",highlighted:"pip install pytest-flakefinder",wrap:!1}}),fe=new $({props:{code:"cHl0ZXN0JTIwLS1mbGFrZS1maW5kZXIlMjAtLWZsYWtlLXJ1bnMlM0Q1JTIwdGVzdHMlMkZ0ZXN0X2ZhaWxpbmdfdGVzdC5weQ==",highlighted:"pytest --flake-finder --flake-runs=5 tests/test_failing_test.py",wrap:!1}}),C=new Tr({props:{$$slots:{default:[Yw]},$$scope:{ctx:j}}}),U=new Tr({props:{$$slots:{default:[qw]},$$scope:{ctx:j}}}),de=new y({props:{title:"Run tests in a random order",local:"run-tests-in-a-random-order",headingTag:"h4"}}),re=new $({props:{code:"cGlwJTIwaW5zdGFsbCUyMHB5dGVzdC1yYW5kb20tb3JkZXI=",highlighted:"pip install pytest-random-order",wrap:!1}}),we=new $({props:{code:"cHl0ZXN0JTIwdGVzdHMlMEElNUIuLi4lNUQlMEFVc2luZyUyMC0tcmFuZG9tLW9yZGVyLWJ1Y2tldCUzRG1vZHVsZSUwQVVzaW5nJTIwLS1yYW5kb20tb3JkZXItc2VlZCUzRDU3MzY2Mw==",highlighted:`pytest tests
[...]
Using --random-order-bucket=module
Using --random-order-seed=573663`,wrap:!1}}),ye=new $({props:{code:"cHl0ZXN0JTIwLS1yYW5kb20tb3JkZXItc2VlZCUzRDU3MzY2MyUwQSU1Qi4uLiU1RCUwQVVzaW5nJTIwLS1yYW5kb20tb3JkZXItYnVja2V0JTNEbW9kdWxlJTBBVXNpbmclMjAtLXJhbmRvbS1vcmRlci1zZWVkJTNENTczNjYz",highlighted:`pytest --random-order-seed=573663
[...]
Using --random-order-bucket=module
Using --random-order-seed=573663`,wrap:!1}}),Te=new $({props:{code:"cHl0ZXN0JTIwLS1yYW5kb20tb3JkZXItYnVja2V0JTNEbm9uZSUyMHRlc3RzJTJGdGVzdF9hLnB5JTIwdGVzdHMlMkZ0ZXN0X2MucHklMjB0ZXN0cyUyRnRlc3RfYi5weQ==",highlighted:"pytest --random-order-bucket=none tests/test_a.py tests/test_c.py tests/test_b.py",wrap:!1}}),Je=new $({props:{code:"cHl0ZXN0JTIwLS1yYW5kb20tb3JkZXItYnVja2V0JTNEbm9uZQ==",highlighted:"pytest --random-order-bucket=none",wrap:!1}}),Ue=new y({props:{title:"Look and feel variations",local:"look-and-feel-variations",headingTag:"h3"}}),be=new y({props:{title:"pytest-sugar",local:"pytest-sugar",headingTag:"h4"}}),_e=new $({props:{code:"cGlwJTIwaW5zdGFsbCUyMHB5dGVzdC1zdWdhcg==",highlighted:"pip install pytest-sugar",wrap:!1}}),ve=new $({props:{code:"cHl0ZXN0JTIwLXAlMjBubyUzQXN1Z2Fy",highlighted:"pytest -p no:sugar",wrap:!1}}),Ze=new y({props:{title:"Report each sub-test name and its progress",local:"report-each-sub-test-name-and-its-progress",headingTag:"h4"}}),ke=new $({props:{code:"cHl0ZXN0JTIwLS1wc3BlYyUyMHRlc3RzJTJGdGVzdF9vcHRpbWl6YXRpb24ucHk=",highlighted:"pytest --pspec tests/test_optimization.py",wrap:!1}}),Ge=new y({props:{title:"Instantly shows failed tests",local:"instantly-shows-failed-tests",headingTag:"h4"}}),Xe=new $({props:{code:"cGlwJTIwaW5zdGFsbCUyMHB5dGVzdC1pbnN0YWZhaWw=",highlighted:"pip install pytest-instafail",wrap:!1}}),Be=new $({props:{code:"cHl0ZXN0JTIwLS1pbnN0YWZhaWw=",highlighted:"pytest --instafail",wrap:!1}}),Ve=new y({props:{title:"To GPU or not to GPU",local:"to-gpu-or-not-to-gpu",headingTag:"h3"}}),ze=new $({props:{code:"Q1VEQV9WSVNJQkxFX0RFVklDRVMlM0QlMjIlMjIlMjBweXRlc3QlMjB0ZXN0cyUyRnV0aWxzJTJGdGVzdF9sb2dnaW5nLnB5",highlighted:'CUDA_VISIBLE_DEVICES=<span class="hljs-string">&quot;&quot;</span> pytest tests/utils/test_logging.py',wrap:!1}}),Le=new $({props:{code:"Q1VEQV9WSVNJQkxFX0RFVklDRVMlM0QlMjIxJTIyJTIwcHl0ZXN0JTIwdGVzdHMlMkZ1dGlscyUyRnRlc3RfbG9nZ2luZy5weQ==",highlighted:'CUDA_VISIBLE_DEVICES=<span class="hljs-string">&quot;1&quot;</span> pytest tests/utils/test_logging.py',wrap:!1}}),Ae=new $({props:{code:"JTQwcmVxdWlyZV90b3JjaF9tdWx0aV9ncHUlMEFkZWYlMjB0ZXN0X2V4YW1wbGVfd2l0aF9tdWx0aV9ncHUoKSUzQQ==",highlighted:`<span class="hljs-meta">@require_torch_multi_gpu</span>
<span class="hljs-keyword">def</span> <span class="hljs-title function_">test_example_with_multi_gpu</span>():`,wrap:!1}}),qe=new $({props:{code:"JTQwcmVxdWlyZV90ZiUwQWRlZiUyMHRlc3RfdGZfdGhpbmdfd2l0aF90ZW5zb3JmbG93KCklM0E=",highlighted:`<span class="hljs-meta">@require_tf</span>
<span class="hljs-keyword">def</span> <span class="hljs-title function_">test_tf_thing_with_tensorflow</span>():`,wrap:!1}}),De=new $({props:{code:"JTQwcmVxdWlyZV90b3JjaF9ncHUlMEElNDBzbG93JTBBZGVmJTIwdGVzdF9leGFtcGxlX3Nsb3dfb25fZ3B1KCklM0E=",highlighted:`<span class="hljs-meta">@require_torch_gpu</span>
<span class="hljs-meta">@slow</span>
<span class="hljs-keyword">def</span> <span class="hljs-title function_">test_example_slow_on_gpu</span>():`,wrap:!1}}),tl=new $({props:{code:"JTQwcGFyYW1ldGVyaXplZC5leHBhbmQoLi4uKSUwQSU0MHJlcXVpcmVfdG9yY2hfbXVsdGlfZ3B1JTBBZGVmJTIwdGVzdF9pbnRlZ3JhdGlvbl9mb28oKSUzQQ==",highlighted:`<span class="hljs-meta">@parameterized.expand(<span class="hljs-params">...</span>)</span>
<span class="hljs-meta">@require_torch_multi_gpu</span>
<span class="hljs-keyword">def</span> <span class="hljs-title function_">test_integration_foo</span>():`,wrap:!1}}),nl=new $({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycy50ZXN0aW5nX3V0aWxzJTIwaW1wb3J0JTIwZ2V0X2dwdV9jb3VudCUwQSUwQW5fZ3B1JTIwJTNEJTIwZ2V0X2dwdV9jb3VudCgpJTIwJTIwJTIzJTIwd29ya3MlMjB3aXRoJTIwdG9yY2glMjBhbmQlMjB0Zg==",highlighted:`<span class="hljs-keyword">from</span> transformers.testing_utils <span class="hljs-keyword">import</span> get_gpu_count

n_gpu = get_gpu_count()  <span class="hljs-comment"># works with torch and tf</span>`,wrap:!1}}),pl=new y({props:{title:"Testing with a specific PyTorch backend or device",local:"testing-with-a-specific-pytorch-backend-or-device",headingTag:"h3"}}),al=new $({props:{code:"VFJBTlNGT1JNRVJTX1RFU1RfREVWSUNFJTNEJTIyY3B1JTIyJTIwcHl0ZXN0JTIwdGVzdHMlMkZ1dGlscyUyRnRlc3RfbG9nZ2luZy5weQ==",highlighted:'TRANSFORMERS_TEST_DEVICE=<span class="hljs-string">&quot;cpu&quot;</span> pytest tests/utils/test_logging.py',wrap:!1}}),dl=new $({props:{code:"VFJBTlNGT1JNRVJTX1RFU1RfQkFDS0VORCUzRCUyMnRvcmNoX25wdSUyMiUyMHB5dGVzdCUyMHRlc3RzJTJGdXRpbHMlMkZ0ZXN0X2xvZ2dpbmcucHk=",highlighted:'TRANSFORMERS_TEST_BACKEND=<span class="hljs-string">&quot;torch_npu&quot;</span> pytest tests/utils/test_logging.py',wrap:!1}}),rl=new y({props:{title:"Distributed training",local:"distributed-training",headingTag:"h3"}}),ul=new $({props:{code:"Q1VEQV9WSVNJQkxFX0RFVklDRVMlM0QwJTJDMSUyMFJVTl9TTE9XJTNEMSUyMHB5dGVzdCUyMC1zdiUyMHRlc3RzJTJGdGVzdF90cmFpbmVyX2Rpc3RyaWJ1dGVkLnB5",highlighted:"CUDA_VISIBLE_DEVICES=0,1 RUN_SLOW=1 pytest -sv tests/test_trainer_distributed.py",wrap:!1}}),Tl=new y({props:{title:"Output capture",local:"output-capture",headingTag:"h3"}}),Cl=new $({props:{code:"cHl0ZXN0JTIwLXMlMjB0ZXN0cyUyRnV0aWxzJTJGdGVzdF9sb2dnaW5nLnB5",highlighted:"pytest -s tests/utils/test_logging.py",wrap:!1}}),bl=new $({props:{code:"cHkudGVzdCUyMHRlc3RzJTIwLS1qdW5pdHhtbCUzRHJlc3VsdC54bWw=",highlighted:"py.test tests --junitxml=result.xml",wrap:!1}}),hl=new y({props:{title:"Color control",local:"color-control",headingTag:"h3"}}),gl=new $({props:{code:"cHl0ZXN0JTIwLS1jb2xvciUzRG5vJTIwdGVzdHMlMkZ1dGlscyUyRnRlc3RfbG9nZ2luZy5weQ==",highlighted:"pytest --color=no tests/utils/test_logging.py",wrap:!1}}),vl=new y({props:{title:"Sending test report to online pastebin service",local:"sending-test-report-to-online-pastebin-service",headingTag:"h3"}}),Zl=new $({props:{code:"cHl0ZXN0JTIwLS1wYXN0ZWJpbiUzRGZhaWxlZCUyMHRlc3RzJTJGdXRpbHMlMkZ0ZXN0X2xvZ2dpbmcucHk=",highlighted:"pytest --pastebin=failed tests/utils/test_logging.py",wrap:!1}}),Gl=new $({props:{code:"cHl0ZXN0JTIwLS1wYXN0ZWJpbiUzRGFsbCUyMHRlc3RzJTJGdXRpbHMlMkZ0ZXN0X2xvZ2dpbmcucHk=",highlighted:"pytest --pastebin=all tests/utils/test_logging.py",wrap:!1}}),Hl=new y({props:{title:"Writing tests",local:"writing-tests",headingTag:"h2"}}),Vl=new y({props:{title:"Parametrization",local:"parametrization",headingTag:"h3"}}),zl=new $({props:{code:"JTIzJTIwdGVzdF90aGlzMS5weSUwQWltcG9ydCUyMHVuaXR0ZXN0JTBBZnJvbSUyMHBhcmFtZXRlcml6ZWQlMjBpbXBvcnQlMjBwYXJhbWV0ZXJpemVkJTBBJTBBJTBBY2xhc3MlMjBUZXN0TWF0aFVuaXRUZXN0KHVuaXR0ZXN0LlRlc3RDYXNlKSUzQSUwQSUyMCUyMCUyMCUyMCU0MHBhcmFtZXRlcml6ZWQuZXhwYW5kKCUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCU1QiUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCglMjJuZWdhdGl2ZSUyMiUyQyUyMC0xLjUlMkMlMjAtMi4wKSUyQyUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCglMjJpbnRlZ2VyJTIyJTJDJTIwMSUyQyUyMDEuMCklMkMlMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAoJTIybGFyZ2UlMjBmcmFjdGlvbiUyMiUyQyUyMDEuNiUyQyUyMDEpJTJDJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTVEJTBBJTIwJTIwJTIwJTIwKSUwQSUyMCUyMCUyMCUyMGRlZiUyMHRlc3RfZmxvb3Ioc2VsZiUyQyUyMG5hbWUlMkMlMjBpbnB1dCUyQyUyMGV4cGVjdGVkKSUzQSUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMGFzc2VydF9lcXVhbChtYXRoLmZsb29yKGlucHV0KSUyQyUyMGV4cGVjdGVkKQ==",highlighted:`<span class="hljs-comment"># test_this1.py</span>
<span class="hljs-keyword">import</span> unittest
<span class="hljs-keyword">from</span> parameterized <span class="hljs-keyword">import</span> parameterized


<span class="hljs-keyword">class</span> <span class="hljs-title class_">TestMathUnitTest</span>(unittest.TestCase):
<span class="hljs-meta">    @parameterized.expand(<span class="hljs-params">
        [
            (<span class="hljs-params"><span class="hljs-string">&quot;negative&quot;</span>, -<span class="hljs-number">1.5</span>, -<span class="hljs-number">2.0</span></span>),
            (<span class="hljs-params"><span class="hljs-string">&quot;integer&quot;</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1.0</span></span>),
            (<span class="hljs-params"><span class="hljs-string">&quot;large fraction&quot;</span>, <span class="hljs-number">1.6</span>, <span class="hljs-number">1</span></span>),
        ]
    </span>)</span>
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">test_floor</span>(<span class="hljs-params">self, name, <span class="hljs-built_in">input</span>, expected</span>):
        assert_equal(math.floor(<span class="hljs-built_in">input</span>), expected)`,wrap:!1}}),Wl=new $({props:{code:"cHl0ZXN0JTIwLWslMjAlMjJuZWdhdGl2ZSUyMGFuZCUyMGludGVnZXIlMjIlMjB0ZXN0cyUyRnRlc3RfbXl0ZXN0LnB5",highlighted:'pytest -k <span class="hljs-string">&quot;negative and integer&quot;</span> tests/test_mytest.py',wrap:!1}}),Ql=new $({props:{code:"cHl0ZXN0JTIwLWslMjAlMjJub3QlMjBuZWdhdGl2ZSUyMiUyMHRlc3RzJTJGdGVzdF9teXRlc3QucHk=",highlighted:'pytest -k <span class="hljs-string">&quot;not negative&quot;</span> tests/test_mytest.py',wrap:!1}}),Pl=new $({props:{code:"cHl0ZXN0JTIwdGVzdF90aGlzMS5weSUyMC0tY29sbGVjdC1vbmx5JTIwLXE=",highlighted:"pytest test_this1.py --collect-only -q",wrap:!1}}),Al=new $({props:{code:"dGVzdF90aGlzMS5weSUzQSUzQVRlc3RNYXRoVW5pdFRlc3QlM0ElM0F0ZXN0X2Zsb29yXzBfbmVnYXRpdmUlMEF0ZXN0X3RoaXMxLnB5JTNBJTNBVGVzdE1hdGhVbml0VGVzdCUzQSUzQXRlc3RfZmxvb3JfMV9pbnRlZ2VyJTBBdGVzdF90aGlzMS5weSUzQSUzQVRlc3RNYXRoVW5pdFRlc3QlM0ElM0F0ZXN0X2Zsb29yXzJfbGFyZ2VfZnJhY3Rpb24=",highlighted:`test_this1.py::TestMathUnitTest::test_floor_0_negative
test_this1.py::TestMathUnitTest::test_floor_1_integer
test_this1.py::TestMathUnitTest::test_floor_2_large_fraction`,wrap:!1}}),ql=new $({props:{code:"cHl0ZXN0JTIwdGVzdF90aGlzMS5weSUzQSUzQVRlc3RNYXRoVW5pdFRlc3QlM0ElM0F0ZXN0X2Zsb29yXzBfbmVnYXRpdmUlMjAlMjB0ZXN0X3RoaXMxLnB5JTNBJTNBVGVzdE1hdGhVbml0VGVzdCUzQSUzQXRlc3RfZmxvb3JfMV9pbnRlZ2Vy",highlighted:"pytest test_this1.py::TestMathUnitTest::test_floor_0_negative  test_this1.py::TestMathUnitTest::test_floor_1_integer",wrap:!1}}),ts=new $({props:{code:"JTIzJTIwdGVzdF90aGlzMi5weSUwQWltcG9ydCUyMHB5dGVzdCUwQSUwQSUwQSU0MHB5dGVzdC5tYXJrLnBhcmFtZXRyaXplKCUwQSUyMCUyMCUyMCUyMCUyMm5hbWUlMkMlMjBpbnB1dCUyQyUyMGV4cGVjdGVkJTIyJTJDJTBBJTIwJTIwJTIwJTIwJTVCJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwKCUyMm5lZ2F0aXZlJTIyJTJDJTIwLTEuNSUyQyUyMC0yLjApJTJDJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwKCUyMmludGVnZXIlMjIlMkMlMjAxJTJDJTIwMS4wKSUyQyUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCglMjJsYXJnZSUyMGZyYWN0aW9uJTIyJTJDJTIwMS42JTJDJTIwMSklMkMlMEElMjAlMjAlMjAlMjAlNUQlMkMlMEEpJTBBZGVmJTIwdGVzdF9mbG9vcihuYW1lJTJDJTIwaW5wdXQlMkMlMjBleHBlY3RlZCklM0ElMEElMjAlMjAlMjAlMjBhc3NlcnRfZXF1YWwobWF0aC5mbG9vcihpbnB1dCklMkMlMjBleHBlY3RlZCk=",highlighted:`<span class="hljs-comment"># test_this2.py</span>
<span class="hljs-keyword">import</span> pytest


<span class="hljs-meta">@pytest.mark.parametrize(<span class="hljs-params">
    <span class="hljs-string">&quot;name, input, expected&quot;</span>,
    [
        (<span class="hljs-params"><span class="hljs-string">&quot;negative&quot;</span>, -<span class="hljs-number">1.5</span>, -<span class="hljs-number">2.0</span></span>),
        (<span class="hljs-params"><span class="hljs-string">&quot;integer&quot;</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1.0</span></span>),
        (<span class="hljs-params"><span class="hljs-string">&quot;large fraction&quot;</span>, <span class="hljs-number">1.6</span>, <span class="hljs-number">1</span></span>),
    ],
</span>)</span>
<span class="hljs-keyword">def</span> <span class="hljs-title function_">test_floor</span>(<span class="hljs-params">name, <span class="hljs-built_in">input</span>, expected</span>):
    assert_equal(math.floor(<span class="hljs-built_in">input</span>), expected)`,wrap:!1}}),ls=new $({props:{code:"cHl0ZXN0JTIwdGVzdF90aGlzMi5weSUyMC0tY29sbGVjdC1vbmx5JTIwLXE=",highlighted:"pytest test_this2.py --collect-only -q",wrap:!1}}),ns=new $({props:{code:"dGVzdF90aGlzMi5weSUzQSUzQXRlc3RfZmxvb3IlNUJpbnRlZ2VyLTEtMS4wJTVEJTBBdGVzdF90aGlzMi5weSUzQSUzQXRlc3RfZmxvb3IlNUJuZWdhdGl2ZS0tMS41LS0yLjAlNUQlMEF0ZXN0X3RoaXMyLnB5JTNBJTNBdGVzdF9mbG9vciU1QmxhcmdlJTIwZnJhY3Rpb24tMS42LTElNUQ=",highlighted:`test_this2.py::test_floor[integer-1-1.0]
test_this2.py::test_floor[negative--1.5--2.0]
test_this2.py::test_floor[large fraction-1.6-1]`,wrap:!1}}),is=new $({props:{code:"cHl0ZXN0JTIwdGVzdF90aGlzMi5weSUzQSUzQXRlc3RfZmxvb3IlNUJuZWdhdGl2ZS0tMS41LS0yLjAlNUQlMjB0ZXN0X3RoaXMyLnB5JTNBJTNBdGVzdF9mbG9vciU1QmludGVnZXItMS0xLjAlNUQ=",highlighted:"pytest test_this2.py::test_floor[negative--1.5--2.0] test_this2.py::test_floor[integer-1-1.0]",wrap:!1}}),ms=new y({props:{title:"Files and directories",local:"files-and-directories",headingTag:"h3"}}),Ms=new $({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycy50ZXN0aW5nX3V0aWxzJTIwaW1wb3J0JTIwVGVzdENhc2VQbHVzJTBBJTBBJTBBY2xhc3MlMjBQYXRoRXhhbXBsZVRlc3QoVGVzdENhc2VQbHVzKSUzQSUwQSUyMCUyMCUyMCUyMGRlZiUyMHRlc3Rfc29tZXRoaW5nX2ludm9sdmluZ19sb2NhbF9sb2NhdGlvbnMoc2VsZiklM0ElMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjBkYXRhX2RpciUyMCUzRCUyMHNlbGYudGVzdHNfZGlyJTIwJTJGJTIwJTIyZml4dHVyZXMlMkZ0ZXN0c19zYW1wbGVzJTJGd210X2VuX3JvJTIy",highlighted:`<span class="hljs-keyword">from</span> transformers.testing_utils <span class="hljs-keyword">import</span> TestCasePlus


<span class="hljs-keyword">class</span> <span class="hljs-title class_">PathExampleTest</span>(<span class="hljs-title class_ inherited__">TestCasePlus</span>):
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">test_something_involving_local_locations</span>(<span class="hljs-params">self</span>):
        data_dir = self.tests_dir / <span class="hljs-string">&quot;fixtures/tests_samples/wmt_en_ro&quot;</span>`,wrap:!1}}),ws=new $({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycy50ZXN0aW5nX3V0aWxzJTIwaW1wb3J0JTIwVGVzdENhc2VQbHVzJTBBJTBBJTBBY2xhc3MlMjBQYXRoRXhhbXBsZVRlc3QoVGVzdENhc2VQbHVzKSUzQSUwQSUyMCUyMCUyMCUyMGRlZiUyMHRlc3Rfc29tZXRoaW5nX2ludm9sdmluZ19zdHJpbmdpZmllZF9sb2NhdGlvbnMoc2VsZiklM0ElMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjBleGFtcGxlc19kaXIlMjAlM0QlMjBzZWxmLmV4YW1wbGVzX2Rpcl9zdHI=",highlighted:`<span class="hljs-keyword">from</span> transformers.testing_utils <span class="hljs-keyword">import</span> TestCasePlus


<span class="hljs-keyword">class</span> <span class="hljs-title class_">PathExampleTest</span>(<span class="hljs-title class_ inherited__">TestCasePlus</span>):
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">test_something_involving_stringified_locations</span>(<span class="hljs-params">self</span>):
        examples_dir = self.examples_dir_str`,wrap:!1}}),$s=new y({props:{title:"Temporary files and directories",local:"temporary-files-and-directories",headingTag:"h3"}}),Js=new $({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycy50ZXN0aW5nX3V0aWxzJTIwaW1wb3J0JTIwVGVzdENhc2VQbHVzJTBBJTBBJTBBY2xhc3MlMjBFeGFtcGxlc1Rlc3RzKFRlc3RDYXNlUGx1cyklM0ElMEElMjAlMjAlMjAlMjBkZWYlMjB0ZXN0X3doYXRldmVyKHNlbGYpJTNBJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwdG1wX2RpciUyMCUzRCUyMHNlbGYuZ2V0X2F1dG9fcmVtb3ZlX3RtcF9kaXIoKQ==",highlighted:`<span class="hljs-keyword">from</span> transformers.testing_utils <span class="hljs-keyword">import</span> TestCasePlus


<span class="hljs-keyword">class</span> <span class="hljs-title class_">ExamplesTests</span>(<span class="hljs-title class_ inherited__">TestCasePlus</span>):
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">test_whatever</span>(<span class="hljs-params">self</span>):
        tmp_dir = self.get_auto_remove_tmp_dir()`,wrap:!1}}),Us=new $({props:{code:"ZGVmJTIwdGVzdF93aGF0ZXZlcihzZWxmKSUzQSUwQSUyMCUyMCUyMCUyMHRtcF9kaXIlMjAlM0QlMjBzZWxmLmdldF9hdXRvX3JlbW92ZV90bXBfZGlyKCk=",highlighted:`<span class="hljs-keyword">def</span> <span class="hljs-title function_">test_whatever</span>(<span class="hljs-params">self</span>):
    tmp_dir = self.get_auto_remove_tmp_dir()`,wrap:!1}}),_s=new $({props:{code:"ZGVmJTIwdGVzdF93aGF0ZXZlcihzZWxmKSUzQSUwQSUyMCUyMCUyMCUyMHRtcF9kaXIlMjAlM0QlMjBzZWxmLmdldF9hdXRvX3JlbW92ZV90bXBfZGlyKCUyMi4lMkZ4eHglMjIp",highlighted:`<span class="hljs-keyword">def</span> <span class="hljs-title function_">test_whatever</span>(<span class="hljs-params">self</span>):
    tmp_dir = self.get_auto_remove_tmp_dir(<span class="hljs-string">&quot;./xxx&quot;</span>)`,wrap:!1}}),b=new Tr({props:{$$slots:{default:[Kw]},$$scope:{ctx:j}}}),h=new Tr({props:{$$slots:{default:[Dw]},$$scope:{ctx:j}}}),Is=new y({props:{title:"Temporary sys.path override",local:"temporary-syspath-override",headingTag:"h3"}}),xs=new $({props:{code:"aW1wb3J0JTIwb3MlMEFmcm9tJTIwdHJhbnNmb3JtZXJzLnRlc3RpbmdfdXRpbHMlMjBpbXBvcnQlMjBFeHRlbmRTeXNQYXRoJTBBJTBBYmluZGlyJTIwJTNEJTIwb3MucGF0aC5hYnNwYXRoKG9zLnBhdGguZGlybmFtZShfX2ZpbGVfXykpJTBBd2l0aCUyMEV4dGVuZFN5c1BhdGgoZiUyMiU3QmJpbmRpciU3RCUyRi4uJTIyKSUzQSUwQSUyMCUyMCUyMCUyMGZyb20lMjB0ZXN0X3RyYWluZXIlMjBpbXBvcnQlMjBUcmFpbmVySW50ZWdyYXRpb25Db21tb24lMjAlMjAlMjMlMjBub3Fh",highlighted:`<span class="hljs-keyword">import</span> os
<span class="hljs-keyword">from</span> transformers.testing_utils <span class="hljs-keyword">import</span> ExtendSysPath

bindir = os.path.abspath(os.path.dirname(__file__))
<span class="hljs-keyword">with</span> ExtendSysPath(<span class="hljs-string">f&quot;<span class="hljs-subst">{bindir}</span>/..&quot;</span>):
    <span class="hljs-keyword">from</span> test_trainer <span class="hljs-keyword">import</span> TrainerIntegrationCommon  <span class="hljs-comment"># noqa</span>`,wrap:!1}}),ks=new y({props:{title:"Skipping tests",local:"skipping-tests",headingTag:"h3"}}),Vs=new y({props:{title:"Implementation",local:"implementation",headingTag:"h4"}}),zs=new $({props:{code:"JTQwdW5pdHRlc3Quc2tpcCglMjJ0aGlzJTIwYnVnJTIwbmVlZHMlMjB0byUyMGJlJTIwZml4ZWQlMjIpJTBBZGVmJTIwdGVzdF9mZWF0dXJlX3goKSUzQQ==",highlighted:`<span class="hljs-meta">@unittest.skip(<span class="hljs-params"><span class="hljs-string">&quot;this bug needs to be fixed&quot;</span></span>)</span>
<span class="hljs-keyword">def</span> <span class="hljs-title function_">test_feature_x</span>():`,wrap:!1}}),Ls=new $({props:{code:"JTQwcHl0ZXN0Lm1hcmsuc2tpcChyZWFzb24lM0QlMjJ0aGlzJTIwYnVnJTIwbmVlZHMlMjB0byUyMGJlJTIwZml4ZWQlMjIp",highlighted:'<span class="hljs-meta">@pytest.mark.skip(<span class="hljs-params">reason=<span class="hljs-string">&quot;this bug needs to be fixed&quot;</span></span>)</span>',wrap:!1}}),Ss=new $({props:{code:"JTQwcHl0ZXN0Lm1hcmsueGZhaWwlMEFkZWYlMjB0ZXN0X2ZlYXR1cmVfeCgpJTNB",highlighted:`<span class="hljs-meta">@pytest.mark.xfail</span>
<span class="hljs-keyword">def</span> <span class="hljs-title function_">test_feature_x</span>():`,wrap:!1}}),Fs=new $({props:{code:"ZGVmJTIwdGVzdF9mZWF0dXJlX3goKSUzQSUwQSUyMCUyMCUyMCUyMGlmJTIwbm90JTIwaGFzX3NvbWV0aGluZygpJTNBJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwcHl0ZXN0LnNraXAoJTIydW5zdXBwb3J0ZWQlMjBjb25maWd1cmF0aW9uJTIyKQ==",highlighted:`<span class="hljs-keyword">def</span> <span class="hljs-title function_">test_feature_x</span>():
    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> has_something():
        pytest.skip(<span class="hljs-string">&quot;unsupported configuration&quot;</span>)`,wrap:!1}}),Es=new $({props:{code:"aW1wb3J0JTIwcHl0ZXN0JTBBJTBBaWYlMjBub3QlMjBweXRlc3QuY29uZmlnLmdldG9wdGlvbiglMjItLWN1c3RvbS1mbGFnJTIyKSUzQSUwQSUyMCUyMCUyMCUyMHB5dGVzdC5za2lwKCUyMi0tY3VzdG9tLWZsYWclMjBpcyUyMG1pc3NpbmclMkMlMjBza2lwcGluZyUyMHRlc3RzJTIyJTJDJTIwYWxsb3dfbW9kdWxlX2xldmVsJTNEVHJ1ZSk=",highlighted:`<span class="hljs-keyword">import</span> pytest

<span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> pytest.config.getoption(<span class="hljs-string">&quot;--custom-flag&quot;</span>):
    pytest.skip(<span class="hljs-string">&quot;--custom-flag is missing, skipping tests&quot;</span>, allow_module_level=<span class="hljs-literal">True</span>)`,wrap:!1}}),Ys=new $({props:{code:"ZGVmJTIwdGVzdF9mZWF0dXJlX3goKSUzQSUwQSUyMCUyMCUyMCUyMHB5dGVzdC54ZmFpbCglMjJleHBlY3RlZCUyMHRvJTIwZmFpbCUyMHVudGlsJTIwYnVnJTIwWFlaJTIwaXMlMjBmaXhlZCUyMik=",highlighted:`<span class="hljs-keyword">def</span> <span class="hljs-title function_">test_feature_x</span>():
    pytest.xfail(<span class="hljs-string">&quot;expected to fail until bug XYZ is fixed&quot;</span>)`,wrap:!1}}),Ks=new $({props:{code:"ZG9jdXRpbHMlMjAlM0QlMjBweXRlc3QuaW1wb3J0b3Jza2lwKCUyMmRvY3V0aWxzJTIyJTJDJTIwbWludmVyc2lvbiUzRCUyMjAuMyUyMik=",highlighted:'docutils = pytest.importorskip(<span class="hljs-string">&quot;docutils&quot;</span>, minversion=<span class="hljs-string">&quot;0.3&quot;</span>)',wrap:!1}}),Os=new $({props:{code:"JTQwcHl0ZXN0Lm1hcmsuc2tpcGlmKHN5cy52ZXJzaW9uX2luZm8lMjAlM0MlMjAoMyUyQzYpJTJDJTIwcmVhc29uJTNEJTIycmVxdWlyZXMlMjBweXRob24zLjYlMjBvciUyMGhpZ2hlciUyMiklMEFkZWYlMjB0ZXN0X2ZlYXR1cmVfeCgpJTNB",highlighted:`<span class="hljs-meta">@pytest.mark.skipif(<span class="hljs-params">sys.version_info &lt; (<span class="hljs-params"><span class="hljs-number">3</span>,<span class="hljs-number">6</span></span>), reason=<span class="hljs-string">&quot;requires python3.6 or higher&quot;</span></span>)</span>
<span class="hljs-keyword">def</span> <span class="hljs-title function_">test_feature_x</span>():`,wrap:!1}}),en=new $({props:{code:"JTQwdW5pdHRlc3Quc2tpcElmKHRvcmNoX2RldmljZSUyMCUzRCUzRCUyMCUyMmNwdSUyMiUyQyUyMCUyMkNhbid0JTIwZG8lMjBoYWxmJTIwcHJlY2lzaW9uJTIyKSUwQWRlZiUyMHRlc3RfZmVhdHVyZV94KCklM0E=",highlighted:`<span class="hljs-meta">@unittest.skipIf(<span class="hljs-params">torch_device == <span class="hljs-string">&quot;cpu&quot;</span>, <span class="hljs-string">&quot;Can&#x27;t do half precision&quot;</span></span>)</span>
<span class="hljs-keyword">def</span> <span class="hljs-title function_">test_feature_x</span>():`,wrap:!1}}),sn=new $({props:{code:"JTQwcHl0ZXN0Lm1hcmsuc2tpcGlmKHN5cy5wbGF0Zm9ybSUyMCUzRCUzRCUyMCd3aW4zMiclMkMlMjByZWFzb24lM0QlMjJkb2VzJTIwbm90JTIwcnVuJTIwb24lMjB3aW5kb3dzJTIyKSUwQWNsYXNzJTIwVGVzdENsYXNzKCklM0ElMEElMjAlMjAlMjAlMjBkZWYlMjB0ZXN0X2ZlYXR1cmVfeChzZWxmKSUzQQ==",highlighted:`<span class="hljs-meta">@pytest.mark.skipif(<span class="hljs-params">sys.platform == <span class="hljs-string">&#x27;win32&#x27;</span>, reason=<span class="hljs-string">&quot;does not run on windows&quot;</span></span>)</span>
<span class="hljs-keyword">class</span> <span class="hljs-title class_">TestClass</span>():
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">test_feature_x</span>(<span class="hljs-params">self</span>):`,wrap:!1}}),pn=new y({props:{title:"Slow tests",local:"slow-tests",headingTag:"h3"}}),mn=new $({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycy50ZXN0aW5nX3V0aWxzJTIwaW1wb3J0JTIwc2xvdyUwQSU0MHNsb3clMEFkZWYlMjB0ZXN0X2ludGVncmF0aW9uX2ZvbygpJTNB",highlighted:`<span class="hljs-keyword">from</span> transformers.testing_utils <span class="hljs-keyword">import</span> slow
<span class="hljs-meta">@slow</span>
<span class="hljs-keyword">def</span> <span class="hljs-title function_">test_integration_foo</span>():`,wrap:!1}}),dn=new $({props:{code:"UlVOX1NMT1clM0QxJTIwcHl0ZXN0JTIwdGVzdHM=",highlighted:"RUN_SLOW=1 pytest tests",wrap:!1}}),Mn=new $({props:{code:"JTQwcGFyYW1ldGVyaXplZC5leHBhbmQoLi4uKSUwQSU0MHNsb3clMEFkZWYlMjB0ZXN0X2ludGVncmF0aW9uX2ZvbygpJTNB",highlighted:`<span class="hljs-meta">@parameterized.expand(<span class="hljs-params">...</span>)</span>
<span class="hljs-meta">@slow</span>
<span class="hljs-keyword">def</span> <span class="hljs-title function_">test_integration_foo</span>():`,wrap:!1}}),un=new $({props:{code:"Z3JlcCUyMHRpbnklMjB0ZXN0cyUyMGV4YW1wbGVz",highlighted:"grep tiny tests examples",wrap:!1}}),jn=new y({props:{title:"Testing the stdout/stderr output",local:"testing-the-stdoutstderr-output",headingTag:"h3"}}),Un=new $({props:{code:"aW1wb3J0JTIwc3lzJTBBJTBBJTBBZGVmJTIwcHJpbnRfdG9fc3Rkb3V0KHMpJTNBJTBBJTIwJTIwJTIwJTIwcHJpbnQocyklMEElMEElMEFkZWYlMjBwcmludF90b19zdGRlcnIocyklM0ElMEElMjAlMjAlMjAlMjBzeXMuc3RkZXJyLndyaXRlKHMpJTBBJTBBJTBBZGVmJTIwdGVzdF9yZXN1bHRfYW5kX3N0ZG91dChjYXBzeXMpJTNBJTBBJTIwJTIwJTIwJTIwbXNnJTIwJTNEJTIwJTIySGVsbG8lMjIlMEElMjAlMjAlMjAlMjBwcmludF90b19zdGRvdXQobXNnKSUwQSUyMCUyMCUyMCUyMHByaW50X3RvX3N0ZGVycihtc2cpJTBBJTIwJTIwJTIwJTIwb3V0JTJDJTIwZXJyJTIwJTNEJTIwY2Fwc3lzLnJlYWRvdXRlcnIoKSUyMCUyMCUyMyUyMGNvbnN1bWUlMjB0aGUlMjBjYXB0dXJlZCUyMG91dHB1dCUyMHN0cmVhbXMlMEElMjAlMjAlMjAlMjAlMjMlMjBvcHRpb25hbCUzQSUyMGlmJTIweW91JTIwd2FudCUyMHRvJTIwcmVwbGF5JTIwdGhlJTIwY29uc3VtZWQlMjBzdHJlYW1zJTNBJTBBJTIwJTIwJTIwJTIwc3lzLnN0ZG91dC53cml0ZShvdXQpJTBBJTIwJTIwJTIwJTIwc3lzLnN0ZGVyci53cml0ZShlcnIpJTBBJTIwJTIwJTIwJTIwJTIzJTIwdGVzdCUzQSUwQSUyMCUyMCUyMCUyMGFzc2VydCUyMG1zZyUyMGluJTIwb3V0JTBBJTIwJTIwJTIwJTIwYXNzZXJ0JTIwbXNnJTIwaW4lMjBlcnI=",highlighted:`<span class="hljs-keyword">import</span> sys


<span class="hljs-keyword">def</span> <span class="hljs-title function_">print_to_stdout</span>(<span class="hljs-params">s</span>):
    <span class="hljs-built_in">print</span>(s)


<span class="hljs-keyword">def</span> <span class="hljs-title function_">print_to_stderr</span>(<span class="hljs-params">s</span>):
    sys.stderr.write(s)


<span class="hljs-keyword">def</span> <span class="hljs-title function_">test_result_and_stdout</span>(<span class="hljs-params">capsys</span>):
    msg = <span class="hljs-string">&quot;Hello&quot;</span>
    print_to_stdout(msg)
    print_to_stderr(msg)
    out, err = capsys.readouterr()  <span class="hljs-comment"># consume the captured output streams</span>
    <span class="hljs-comment"># optional: if you want to replay the consumed streams:</span>
    sys.stdout.write(out)
    sys.stderr.write(err)
    <span class="hljs-comment"># test:</span>
    <span class="hljs-keyword">assert</span> msg <span class="hljs-keyword">in</span> out
    <span class="hljs-keyword">assert</span> msg <span class="hljs-keyword">in</span> err`,wrap:!1}}),hn=new $({props:{code:"ZGVmJTIwcmFpc2VfZXhjZXB0aW9uKG1zZyklM0ElMEElMjAlMjAlMjAlMjByYWlzZSUyMFZhbHVlRXJyb3IobXNnKSUwQSUwQSUwQWRlZiUyMHRlc3Rfc29tZXRoaW5nX2V4Y2VwdGlvbigpJTNBJTBBJTIwJTIwJTIwJTIwbXNnJTIwJTNEJTIwJTIyTm90JTIwYSUyMGdvb2QlMjB2YWx1ZSUyMiUwQSUyMCUyMCUyMCUyMGVycm9yJTIwJTNEJTIwJTIyJTIyJTBBJTIwJTIwJTIwJTIwdHJ5JTNBJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwcmFpc2VfZXhjZXB0aW9uKG1zZyklMEElMjAlMjAlMjAlMjBleGNlcHQlMjBFeGNlcHRpb24lMjBhcyUyMGUlM0ElMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjBlcnJvciUyMCUzRCUyMHN0cihlKSUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMGFzc2VydCUyMG1zZyUyMGluJTIwZXJyb3IlMkMlMjBmJTIyJTdCbXNnJTdEJTIwaXMlMjBpbiUyMHRoZSUyMGV4Y2VwdGlvbiUzQSU1Q24lN0JlcnJvciU3RCUyMg==",highlighted:`<span class="hljs-keyword">def</span> <span class="hljs-title function_">raise_exception</span>(<span class="hljs-params">msg</span>):
    <span class="hljs-keyword">raise</span> ValueError(msg)


<span class="hljs-keyword">def</span> <span class="hljs-title function_">test_something_exception</span>():
    msg = <span class="hljs-string">&quot;Not a good value&quot;</span>
    error = <span class="hljs-string">&quot;&quot;</span>
    <span class="hljs-keyword">try</span>:
        raise_exception(msg)
    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:
        error = <span class="hljs-built_in">str</span>(e)
        <span class="hljs-keyword">assert</span> msg <span class="hljs-keyword">in</span> error, <span class="hljs-string">f&quot;<span class="hljs-subst">{msg}</span> is in the exception:\\n<span class="hljs-subst">{error}</span>&quot;</span>`,wrap:!1}}),gn=new $({props:{code:"ZnJvbSUyMGlvJTIwaW1wb3J0JTIwU3RyaW5nSU8lMEFmcm9tJTIwY29udGV4dGxpYiUyMGltcG9ydCUyMHJlZGlyZWN0X3N0ZG91dCUwQSUwQSUwQWRlZiUyMHByaW50X3RvX3N0ZG91dChzKSUzQSUwQSUyMCUyMCUyMCUyMHByaW50KHMpJTBBJTBBJTBBZGVmJTIwdGVzdF9yZXN1bHRfYW5kX3N0ZG91dCgpJTNBJTBBJTIwJTIwJTIwJTIwbXNnJTIwJTNEJTIwJTIySGVsbG8lMjIlMEElMjAlMjAlMjAlMjBidWZmZXIlMjAlM0QlMjBTdHJpbmdJTygpJTBBJTIwJTIwJTIwJTIwd2l0aCUyMHJlZGlyZWN0X3N0ZG91dChidWZmZXIpJTNBJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwcHJpbnRfdG9fc3Rkb3V0KG1zZyklMEElMjAlMjAlMjAlMjBvdXQlMjAlM0QlMjBidWZmZXIuZ2V0dmFsdWUoKSUwQSUyMCUyMCUyMCUyMCUyMyUyMG9wdGlvbmFsJTNBJTIwaWYlMjB5b3UlMjB3YW50JTIwdG8lMjByZXBsYXklMjB0aGUlMjBjb25zdW1lZCUyMHN0cmVhbXMlM0ElMEElMjAlMjAlMjAlMjBzeXMuc3Rkb3V0LndyaXRlKG91dCklMEElMjAlMjAlMjAlMjAlMjMlMjB0ZXN0JTNBJTBBJTIwJTIwJTIwJTIwYXNzZXJ0JTIwbXNnJTIwaW4lMjBvdXQ=",highlighted:`<span class="hljs-keyword">from</span> io <span class="hljs-keyword">import</span> StringIO
<span class="hljs-keyword">from</span> contextlib <span class="hljs-keyword">import</span> redirect_stdout


<span class="hljs-keyword">def</span> <span class="hljs-title function_">print_to_stdout</span>(<span class="hljs-params">s</span>):
    <span class="hljs-built_in">print</span>(s)


<span class="hljs-keyword">def</span> <span class="hljs-title function_">test_result_and_stdout</span>():
    msg = <span class="hljs-string">&quot;Hello&quot;</span>
    buffer = StringIO()
    <span class="hljs-keyword">with</span> redirect_stdout(buffer):
        print_to_stdout(msg)
    out = buffer.getvalue()
    <span class="hljs-comment"># optional: if you want to replay the consumed streams:</span>
    sys.stdout.write(out)
    <span class="hljs-comment"># test:</span>
    <span class="hljs-keyword">assert</span> msg <span class="hljs-keyword">in</span> out`,wrap:!1}}),Zn=new $({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycy50ZXN0aW5nX3V0aWxzJTIwaW1wb3J0JTIwQ2FwdHVyZVN0ZG91dCUwQSUwQXdpdGglMjBDYXB0dXJlU3Rkb3V0KCklMjBhcyUyMGNzJTNBJTBBJTIwJTIwJTIwJTIwZnVuY3Rpb25fdGhhdF93cml0ZXNfdG9fc3Rkb3V0KCklMEFwcmludChjcy5vdXQp",highlighted:`<span class="hljs-keyword">from</span> transformers.testing_utils <span class="hljs-keyword">import</span> CaptureStdout

<span class="hljs-keyword">with</span> CaptureStdout() <span class="hljs-keyword">as</span> cs:
    function_that_writes_to_stdout()
<span class="hljs-built_in">print</span>(cs.out)`,wrap:!1}}),kn=new $({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycy50ZXN0aW5nX3V0aWxzJTIwaW1wb3J0JTIwQ2FwdHVyZVN0ZG91dCUwQSUwQW1zZyUyMCUzRCUyMCUyMlNlY3JldCUyMG1lc3NhZ2UlNUNyJTIyJTBBZmluYWwlMjAlM0QlMjAlMjJIZWxsbyUyMFdvcmxkJTIyJTBBd2l0aCUyMENhcHR1cmVTdGRvdXQoKSUyMGFzJTIwY3MlM0ElMEElMjAlMjAlMjAlMjBwcmludChtc2clMjAlMkIlMjBmaW5hbCklMEFhc3NlcnQlMjBjcy5vdXQlMjAlM0QlM0QlMjBmaW5hbCUyMCUyQiUyMCUyMiU1Q24lMjIlMkMlMjBmJTIyY2FwdHVyZWQlM0ElMjAlN0Jjcy5vdXQlN0QlMkMlMjBleHBlY3RpbmclMjAlN0JmaW5hbCU3RCUyMg==",highlighted:`<span class="hljs-keyword">from</span> transformers.testing_utils <span class="hljs-keyword">import</span> CaptureStdout

msg = <span class="hljs-string">&quot;Secret message\\r&quot;</span>
final = <span class="hljs-string">&quot;Hello World&quot;</span>
<span class="hljs-keyword">with</span> CaptureStdout() <span class="hljs-keyword">as</span> cs:
    <span class="hljs-built_in">print</span>(msg + final)
<span class="hljs-keyword">assert</span> cs.out == final + <span class="hljs-string">&quot;\\n&quot;</span>, <span class="hljs-string">f&quot;captured: <span class="hljs-subst">{cs.out}</span>, expecting <span class="hljs-subst">{final}</span>&quot;</span>`,wrap:!1}}),Hn=new $({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycy50ZXN0aW5nX3V0aWxzJTIwaW1wb3J0JTIwQ2FwdHVyZVN0ZGVyciUwQSUwQXdpdGglMjBDYXB0dXJlU3RkZXJyKCklMjBhcyUyMGNzJTNBJTBBJTIwJTIwJTIwJTIwZnVuY3Rpb25fdGhhdF93cml0ZXNfdG9fc3RkZXJyKCklMEFwcmludChjcy5lcnIp",highlighted:`<span class="hljs-keyword">from</span> transformers.testing_utils <span class="hljs-keyword">import</span> CaptureStderr

<span class="hljs-keyword">with</span> CaptureStderr() <span class="hljs-keyword">as</span> cs:
    function_that_writes_to_stderr()
<span class="hljs-built_in">print</span>(cs.err)`,wrap:!1}}),Bn=new $({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycy50ZXN0aW5nX3V0aWxzJTIwaW1wb3J0JTIwQ2FwdHVyZVN0ZCUwQSUwQXdpdGglMjBDYXB0dXJlU3RkKCklMjBhcyUyMGNzJTNBJTBBJTIwJTIwJTIwJTIwZnVuY3Rpb25fdGhhdF93cml0ZXNfdG9fc3Rkb3V0X2FuZF9zdGRlcnIoKSUwQXByaW50KGNzLmVyciUyQyUyMGNzLm91dCk=",highlighted:`<span class="hljs-keyword">from</span> transformers.testing_utils <span class="hljs-keyword">import</span> CaptureStd

<span class="hljs-keyword">with</span> CaptureStd() <span class="hljs-keyword">as</span> cs:
    function_that_writes_to_stdout_and_stderr()
<span class="hljs-built_in">print</span>(cs.err, cs.out)`,wrap:!1}}),Rn=new y({props:{title:"Capturing logger stream",local:"capturing-logger-stream",headingTag:"h3"}}),Nn=new $({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMGxvZ2dpbmclMEFmcm9tJTIwdHJhbnNmb3JtZXJzLnRlc3RpbmdfdXRpbHMlMjBpbXBvcnQlMjBDYXB0dXJlTG9nZ2VyJTBBJTBBbXNnJTIwJTNEJTIwJTIyVGVzdGluZyUyMDElMkMlMjAyJTJDJTIwMyUyMiUwQWxvZ2dpbmcuc2V0X3ZlcmJvc2l0eV9pbmZvKCklMEFsb2dnZXIlMjAlM0QlMjBsb2dnaW5nLmdldF9sb2dnZXIoJTIydHJhbnNmb3JtZXJzLm1vZGVscy5iYXJ0LnRva2VuaXphdGlvbl9iYXJ0JTIyKSUwQXdpdGglMjBDYXB0dXJlTG9nZ2VyKGxvZ2dlciklMjBhcyUyMGNsJTNBJTBBJTIwJTIwJTIwJTIwbG9nZ2VyLmluZm8obXNnKSUwQWFzc2VydCUyMGNsLm91dCUyQyUyMG1zZyUyMCUyQiUyMCUyMiU1Q24lMjI=",highlighted:`<span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> logging
<span class="hljs-keyword">from</span> transformers.testing_utils <span class="hljs-keyword">import</span> CaptureLogger

msg = <span class="hljs-string">&quot;Testing 1, 2, 3&quot;</span>
logging.set_verbosity_info()
logger = logging.get_logger(<span class="hljs-string">&quot;transformers.models.bart.tokenization_bart&quot;</span>)
<span class="hljs-keyword">with</span> CaptureLogger(logger) <span class="hljs-keyword">as</span> cl:
    logger.info(msg)
<span class="hljs-keyword">assert</span> cl.out, msg + <span class="hljs-string">&quot;\\n&quot;</span>`,wrap:!1}}),Ln=new y({props:{title:"Testing with environment variables",local:"testing-with-environment-variables",headingTag:"h3"}}),Sn=new $({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycy50ZXN0aW5nX3V0aWxzJTIwaW1wb3J0JTIwbW9ja2VudiUwQSUwQSUwQWNsYXNzJTIwSGZBcmd1bWVudFBhcnNlclRlc3QodW5pdHRlc3QuVGVzdENhc2UpJTNBJTBBJTIwJTIwJTIwJTIwJTQwbW9ja2VudihUUkFOU0ZPUk1FUlNfVkVSQk9TSVRZJTNEJTIyZXJyb3IlMjIpJTBBJTIwJTIwJTIwJTIwZGVmJTIwdGVzdF9lbnZfb3ZlcnJpZGUoc2VsZiklM0ElMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjBlbnZfbGV2ZWxfc3RyJTIwJTNEJTIwb3MuZ2V0ZW52KCUyMlRSQU5TRk9STUVSU19WRVJCT1NJVFklMjIlMkMlMjBOb25lKQ==",highlighted:`<span class="hljs-keyword">from</span> transformers.testing_utils <span class="hljs-keyword">import</span> mockenv


<span class="hljs-keyword">class</span> <span class="hljs-title class_">HfArgumentParserTest</span>(unittest.TestCase):
<span class="hljs-meta">    @mockenv(<span class="hljs-params">TRANSFORMERS_VERBOSITY=<span class="hljs-string">&quot;error&quot;</span></span>)</span>
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">test_env_override</span>(<span class="hljs-params">self</span>):
        env_level_str = os.getenv(<span class="hljs-string">&quot;TRANSFORMERS_VERBOSITY&quot;</span>, <span class="hljs-literal">None</span>)`,wrap:!1}}),Fn=new $({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycy50ZXN0aW5nX3V0aWxzJTIwaW1wb3J0JTIwVGVzdENhc2VQbHVzJTBBJTBBJTBBY2xhc3MlMjBFbnZFeGFtcGxlVGVzdChUZXN0Q2FzZVBsdXMpJTNBJTBBJTIwJTIwJTIwJTIwZGVmJTIwdGVzdF9leHRlcm5hbF9wcm9nKHNlbGYpJTNBJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwZW52JTIwJTNEJTIwc2VsZi5nZXRfZW52KCklMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjMlMjBub3clMjBjYWxsJTIwdGhlJTIwZXh0ZXJuYWwlMjBwcm9ncmFtJTJDJTIwcGFzc2luZyUyMCU2MGVudiU2MCUyMHRvJTIwaXQ=",highlighted:`<span class="hljs-keyword">from</span> transformers.testing_utils <span class="hljs-keyword">import</span> TestCasePlus


<span class="hljs-keyword">class</span> <span class="hljs-title class_">EnvExampleTest</span>(<span class="hljs-title class_ inherited__">TestCasePlus</span>):
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">test_external_prog</span>(<span class="hljs-params">self</span>):
        env = self.get_env()
        <span class="hljs-comment"># now call the external program, passing \`env\` to it</span>`,wrap:!1}}),An=new y({props:{title:"Getting reproducible results",local:"getting-reproducible-results",headingTag:"h3"}}),qn=new $({props:{code:"c2VlZCUyMCUzRCUyMDQyJTBBJTBBJTIzJTIwcHl0aG9uJTIwUk5HJTBBaW1wb3J0JTIwcmFuZG9tJTBBJTBBcmFuZG9tLnNlZWQoc2VlZCklMEElMEElMjMlMjBweXRvcmNoJTIwUk5HcyUwQWltcG9ydCUyMHRvcmNoJTBBJTBBdG9yY2gubWFudWFsX3NlZWQoc2VlZCklMEF0b3JjaC5iYWNrZW5kcy5jdWRubi5kZXRlcm1pbmlzdGljJTIwJTNEJTIwVHJ1ZSUwQWlmJTIwdG9yY2guY3VkYS5pc19hdmFpbGFibGUoKSUzQSUwQSUyMCUyMCUyMCUyMHRvcmNoLmN1ZGEubWFudWFsX3NlZWRfYWxsKHNlZWQpJTBBJTBBJTIzJTIwbnVtcHklMjBSTkclMEFpbXBvcnQlMjBudW1weSUyMGFzJTIwbnAlMEElMEFucC5yYW5kb20uc2VlZChzZWVkKSUwQSUwQSUyMyUyMHRmJTIwUk5HJTBBdGYucmFuZG9tLnNldF9zZWVkKHNlZWQp",highlighted:`seed = <span class="hljs-number">42</span>

<span class="hljs-comment"># python RNG</span>
<span class="hljs-keyword">import</span> random

random.seed(seed)

<span class="hljs-comment"># pytorch RNGs</span>
<span class="hljs-keyword">import</span> torch

torch.manual_seed(seed)
torch.backends.cudnn.deterministic = <span class="hljs-literal">True</span>
<span class="hljs-keyword">if</span> torch.cuda.is_available():
    torch.cuda.manual_seed_all(seed)

<span class="hljs-comment"># numpy RNG</span>
<span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np

np.random.seed(seed)

<span class="hljs-comment"># tf RNG</span>
tf.random.set_seed(seed)`,wrap:!1}}),Kn=new y({props:{title:"Debugging tests",local:"debugging-tests",headingTag:"h3"}}),On=new $({props:{code:"cHl0ZXN0JTIwdGVzdHMlMkZ1dGlscyUyRnRlc3RfbG9nZ2luZy5weSUyMC1XJTIwZXJyb3IlM0ElM0FVc2VyV2FybmluZyUyMC0tcGRi",highlighted:"pytest tests/utils/test_logging.py -W error::UserWarning --pdb",wrap:!1}}),tp=new y({props:{title:"Working with github actions workflows",local:"working-with-github-actions-workflows",headingTag:"h2"}}),sp=new y({props:{title:"Testing Experimental CI Features",local:"testing-experimental-ci-features",headingTag:"h2"}}),Mp=new $({props:{code:"LSUyMHJ1biUzQSUwQSUyMCUyMCUyMCUyMG5hbWUlM0ElMjBydW4lMjBDSSUyMGV4cGVyaW1lbnQlMEElMjAlMjAlMjAlMjBjb21tYW5kJTNBJTIwJTdDJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwc2V0JTIwJTJCZXVvJTIwcGlwZWZhaWwlMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjBlY2hvJTIwJTIyc2V0dGluZyUyMHJ1bi1hbGwtZGVzcGl0ZS1hbnktZXJyb3JzLW1vZGUlMjIlMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjB0aGlzX2NvbW1hbmRfd2lsbF9mYWlsJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwZWNobyUyMCUyMmJ1dCUyMGJhc2glMjBjb250aW51ZXMlMjB0byUyMHJ1biUyMiUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMyUyMGVtdWxhdGUlMjBhbm90aGVyJTIwZmFpbHVyZSUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMGZhbHNlJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIzJTIwYnV0JTIwdGhlJTIwbGFzdCUyMGNvbW1hbmQlMjBtdXN0JTIwYmUlMjBhJTIwc3VjY2VzcyUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMGVjaG8lMjAlMjJkdXJpbmclMjBleHBlcmltZW50JTIwZG8lMjBub3QlMjByZW1vdmUlM0ElMjByZXBvcnRpbmclMjBzdWNjZXNzJTIwdG8lMjBDSSUyQyUyMGV2ZW4lMjBpZiUyMHRoZXJlJTIwd2VyZSUyMGZhaWx1cmVzJTIy",highlighted:`<span class="hljs-bullet">-</span> <span class="hljs-attr">run:</span>
    <span class="hljs-attr">name:</span> <span class="hljs-string">run</span> <span class="hljs-string">CI</span> <span class="hljs-string">experiment</span>
    <span class="hljs-attr">command:</span> <span class="hljs-string">|
        set +euo pipefail
        echo &quot;setting run-all-despite-any-errors-mode&quot;
        this_command_will_fail
        echo &quot;but bash continues to run&quot;
        # emulate another failure
        false
        # but the last command must be a success
        echo &quot;during experiment do not remove: reporting success to CI, even if there were failures&quot;</span>`,wrap:!1}}),wp=new $({props:{code:"Y21kX3RoYXRfbWF5X2ZhaWwlMjAlN0MlN0MlMjB0cnVl",highlighted:'cmd_that_may_fail || <span class="hljs-literal">true</span>',wrap:!1}}),{c(){u=i("meta"),c=n(),T=i("p"),J=n(),f(_.$$.fragment),Jp=n(),g=i("p"),g.textContent=Jr,jp=n(),v=i("p"),v.textContent=jr,Cp=n(),I=i("ol"),I.innerHTML=Cr,Up=n(),f(Z.$$.fragment),bp=n(),x=i("ol"),x.innerHTML=Ur,hp=n(),f(k.$$.fragment),_p=n(),G=i("p"),G.innerHTML=br,gp=n(),f(H.$$.fragment),vp=n(),f(X.$$.fragment),Ip=n(),B=i("p"),B.innerHTML=hr,Zp=n(),V=i("p"),V.textContent=_r,xp=n(),R=i("p"),R.textContent=gr,kp=n(),f(z.$$.fragment),Gp=n(),N=i("p"),N.textContent=vr,Hp=n(),f(L.$$.fragment),Xp=n(),W=i("p"),W.textContent=Ir,Bp=n(),f(S.$$.fragment),Vp=n(),Q=i("p"),Q.textContent=Zr,Rp=n(),F=i("ul"),F.innerHTML=xr,zp=n(),f(P.$$.fragment),Np=n(),E=i("p"),E.textContent=kr,Lp=n(),f(A.$$.fragment),Wp=n(),Y=i("p"),Y.textContent=Gr,Sp=n(),f(q.$$.fragment),Qp=n(),f(K.$$.fragment),Fp=n(),D=i("p"),D.textContent=Hr,Pp=n(),f(O.$$.fragment),Ep=n(),f(tt.$$.fragment),Ap=n(),et=i("p"),et.textContent=Xr,Yp=n(),f(lt.$$.fragment),qp=n(),st=i("p"),st.textContent=Br,Kp=n(),nt=i("p"),nt.innerHTML=Vr,Dp=n(),pt=i("p"),pt.textContent=Rr,Op=n(),f(it.$$.fragment),ti=n(),at=i("p"),at.textContent=zr,ei=n(),mt=i("p"),mt.innerHTML=Nr,li=n(),f(ft.$$.fragment),si=n(),dt=i("p"),dt.textContent=Lr,ni=n(),rt=i("p"),rt.innerHTML=Wr,pi=n(),f(Mt.$$.fragment),ii=n(),ot=i("p"),ot.innerHTML=Sr,ai=n(),wt=i("p"),wt.innerHTML=Qr,mi=n(),f($t.$$.fragment),fi=n(),yt=i("p"),yt.textContent=Fr,di=n(),f(ut.$$.fragment),ri=n(),Tt=i("p"),Tt.innerHTML=Pr,Mi=n(),f(ct.$$.fragment),oi=n(),Jt=i("p"),Jt.innerHTML=Er,wi=n(),jt=i("p"),jt.innerHTML=Ar,$i=n(),f(Ct.$$.fragment),yi=n(),f(Ut.$$.fragment),ui=n(),bt=i("p"),bt.innerHTML=Yr,Ti=n(),f(ht.$$.fragment),ci=n(),f(_t.$$.fragment),Ji=n(),gt=i("p"),gt.innerHTML=qr,ji=n(),f(vt.$$.fragment),Ci=n(),It=i("p"),It.textContent=Kr,Ui=n(),f(Zt.$$.fragment),bi=n(),xt=i("p"),xt.innerHTML=Dr,hi=n(),f(kt.$$.fragment),_i=n(),Gt=i("p"),Gt.innerHTML=Or,gi=n(),f(Ht.$$.fragment),vi=n(),f(Xt.$$.fragment),Ii=n(),Bt=i("p"),Bt.textContent=tM,Zi=n(),f(Vt.$$.fragment),xi=n(),Rt=i("p"),Rt.innerHTML=eM,ki=n(),f(zt.$$.fragment),Gi=n(),Nt=i("p"),Nt.innerHTML=lM,Hi=n(),Lt=i("p"),Lt.innerHTML=sM,Xi=n(),f(Wt.$$.fragment),Bi=n(),St=i("p"),St.innerHTML=nM,Vi=n(),f(Qt.$$.fragment),Ri=n(),Ft=i("p"),Ft.textContent=pM,zi=n(),Pt=i("p"),Pt.innerHTML=iM,Ni=n(),f(Et.$$.fragment),Li=n(),At=i("p"),At.innerHTML=aM,Wi=n(),f(Yt.$$.fragment),Si=n(),f(qt.$$.fragment),Qi=n(),Kt=i("p"),Kt.textContent=mM,Fi=n(),f(Dt.$$.fragment),Pi=n(),f(Ot.$$.fragment),Ei=n(),te=i("p"),te.innerHTML=fM,Ai=n(),ee=i("p"),ee.innerHTML=dM,Yi=n(),le=i("p"),le.innerHTML=rM,qi=n(),f(se.$$.fragment),Ki=n(),ne=i("p"),ne.textContent=MM,Di=n(),f(pe.$$.fragment),Oi=n(),ie=i("ul"),ie.innerHTML=oM,ta=n(),f(ae.$$.fragment),ea=n(),me=i("p"),me.textContent=wM,la=n(),f(fe.$$.fragment),sa=n(),f(C.$$.fragment),na=n(),f(U.$$.fragment),pa=n(),f(de.$$.fragment),ia=n(),f(re.$$.fragment),aa=n(),Me=i("p"),Me.innerHTML=$M,ma=n(),oe=i("p"),oe.innerHTML=yM,fa=n(),f(we.$$.fragment),da=n(),$e=i("p"),$e.textContent=uM,ra=n(),f(ye.$$.fragment),Ma=n(),ue=i("p"),ue.innerHTML=TM,oa=n(),f(Te.$$.fragment),wa=n(),ce=i("p"),ce.textContent=cM,$a=n(),f(Je.$$.fragment),ya=n(),je=i("p"),je.innerHTML=JM,ua=n(),Ce=i("p"),Ce.innerHTML=jM,Ta=n(),f(Ue.$$.fragment),ca=n(),f(be.$$.fragment),Ja=n(),he=i("p"),he.innerHTML=CM,ja=n(),f(_e.$$.fragment),Ca=n(),ge=i("p"),ge.textContent=UM,Ua=n(),f(ve.$$.fragment),ba=n(),Ie=i("p"),Ie.textContent=bM,ha=n(),f(Ze.$$.fragment),_a=n(),xe=i("p"),xe.innerHTML=hM,ga=n(),f(ke.$$.fragment),va=n(),f(Ge.$$.fragment),Ia=n(),He=i("p"),He.innerHTML=_M,Za=n(),f(Xe.$$.fragment),xa=n(),f(Be.$$.fragment),ka=n(),f(Ve.$$.fragment),Ga=n(),Re=i("p"),Re.innerHTML=gM,Ha=n(),f(ze.$$.fragment),Xa=n(),Ne=i("p"),Ne.innerHTML=vM,Ba=n(),f(Le.$$.fragment),Va=n(),We=i("p"),We.textContent=IM,Ra=n(),Se=i("p"),Se.textContent=ZM,za=n(),Qe=i("ul"),Qe.innerHTML=xM,Na=n(),Fe=i("p"),Fe.textContent=kM,La=n(),Pe=i("p"),Pe.innerHTML=GM,Wa=n(),Ee=i("p"),Ee.textContent=HM,Sa=n(),f(Ae.$$.fragment),Qa=n(),Ye=i("p"),Ye.innerHTML=XM,Fa=n(),f(qe.$$.fragment),Pa=n(),Ke=i("p"),Ke.textContent=BM,Ea=n(),f(De.$$.fragment),Aa=n(),Oe=i("p"),Oe.innerHTML=VM,Ya=n(),f(tl.$$.fragment),qa=n(),el=i("p"),el.innerHTML=RM,Ka=n(),ll=i("p"),ll.textContent=zM,Da=n(),sl=i("ul"),sl.innerHTML=NM,Oa=n(),f(nl.$$.fragment),tm=n(),f(pl.$$.fragment),em=n(),il=i("p"),il.innerHTML=LM,lm=n(),f(al.$$.fragment),sm=n(),ml=i("p"),ml.innerHTML=WM,nm=n(),fl=i("p"),fl.innerHTML=SM,pm=n(),f(dl.$$.fragment),im=n(),f(rl.$$.fragment),am=n(),Ml=i("p"),Ml.innerHTML=QM,mm=n(),ol=i("p"),ol.textContent=FM,fm=n(),wl=i("ul"),wl.innerHTML=PM,dm=n(),$l=i("p"),$l.innerHTML=EM,rm=n(),yl=i("p"),yl.textContent=AM,Mm=n(),f(ul.$$.fragment),om=n(),f(Tl.$$.fragment),wm=n(),cl=i("p"),cl.innerHTML=YM,$m=n(),Jl=i("p"),Jl.innerHTML=qM,ym=n(),jl=i("p"),jl.textContent=KM,um=n(),f(Cl.$$.fragment),Tm=n(),Ul=i("p"),Ul.textContent=DM,cm=n(),f(bl.$$.fragment),Jm=n(),f(hl.$$.fragment),jm=n(),_l=i("p"),_l.textContent=OM,Cm=n(),f(gl.$$.fragment),Um=n(),f(vl.$$.fragment),bm=n(),Il=i("p"),Il.textContent=to,hm=n(),f(Zl.$$.fragment),_m=n(),xl=i("p"),xl.innerHTML=eo,gm=n(),kl=i("p"),kl.textContent=lo,vm=n(),f(Gl.$$.fragment),Im=n(),f(Hl.$$.fragment),Zm=n(),Xl=i("p"),Xl.innerHTML=so,xm=n(),Bl=i("p"),Bl.innerHTML=no,km=n(),f(Vl.$$.fragment),Gm=n(),Rl=i("p"),Rl.textContent=po,Hm=n(),f(zl.$$.fragment),Xm=n(),Nl=i("p"),Nl.innerHTML=io,Bm=n(),Ll=i("p"),Ll.innerHTML=ao,Vm=n(),f(Wl.$$.fragment),Rm=n(),Sl=i("p"),Sl.innerHTML=mo,zm=n(),f(Ql.$$.fragment),Nm=n(),Fl=i("p"),Fl.innerHTML=fo,Lm=n(),f(Pl.$$.fragment),Wm=n(),El=i("p"),El.textContent=ro,Sm=n(),f(Al.$$.fragment),Qm=n(),Yl=i("p"),Yl.textContent=Mo,Fm=n(),f(ql.$$.fragment),Pm=n(),Kl=i("p"),Kl.innerHTML=oo,Em=n(),Dl=i("p"),Dl.innerHTML=wo,Am=n(),Ol=i("p"),Ol.innerHTML=$o,Ym=n(),f(ts.$$.fragment),qm=n(),es=i("p"),es.innerHTML=yo,Km=n(),f(ls.$$.fragment),Dm=n(),ss=i("p"),ss.textContent=uo,Om=n(),f(ns.$$.fragment),tf=n(),ps=i("p"),ps.textContent=To,ef=n(),f(is.$$.fragment),lf=n(),as=i("p"),as.textContent=co,sf=n(),f(ms.$$.fragment),nf=n(),fs=i("p"),fs.innerHTML=Jo,pf=n(),ds=i("ul"),ds.innerHTML=jo,af=n(),rs=i("p"),rs.innerHTML=Co,mf=n(),f(Ms.$$.fragment),ff=n(),os=i("p"),os.innerHTML=Uo,df=n(),f(ws.$$.fragment),rf=n(),f($s.$$.fragment),Mf=n(),ys=i("p"),ys.innerHTML=bo,of=n(),us=i("p"),us.textContent=ho,wf=n(),Ts=i("p"),Ts.innerHTML=_o,$f=n(),cs=i("p"),cs.textContent=go,yf=n(),f(Js.$$.fragment),uf=n(),js=i("p"),js.innerHTML=vo,Tf=n(),Cs=i("ul"),Cs.innerHTML=Io,cf=n(),f(Us.$$.fragment),Jf=n(),bs=i("p"),bs.innerHTML=Zo,jf=n(),hs=i("ul"),hs.innerHTML=xo,Cf=n(),f(_s.$$.fragment),Uf=n(),gs=i("p"),gs.textContent=ko,bf=n(),vs=i("ul"),vs.innerHTML=Go,hf=n(),f(b.$$.fragment),_f=n(),f(h.$$.fragment),gf=n(),f(Is.$$.fragment),vf=n(),Zs=i("p"),Zs.innerHTML=Ho,If=n(),f(xs.$$.fragment),Zf=n(),f(ks.$$.fragment),xf=n(),Gs=i("p"),Gs.innerHTML=Xo,kf=n(),Hs=i("p"),Hs.textContent=Bo,Gf=n(),Xs=i("ul"),Xs.innerHTML=Vo,Hf=n(),Bs=i("p"),Bs.innerHTML=Ro,Xf=n(),f(Vs.$$.fragment),Bf=n(),Rs=i("ul"),Rs.innerHTML=zo,Vf=n(),f(zs.$$.fragment),Rf=n(),Ns=i("p"),Ns.textContent=No,zf=n(),f(Ls.$$.fragment),Nf=n(),Ws=i("p"),Ws.innerHTML=Lo,Lf=n(),f(Ss.$$.fragment),Wf=n(),Qs=i("ul"),Qs.innerHTML=Wo,Sf=n(),f(Fs.$$.fragment),Qf=n(),Ps=i("p"),Ps.textContent=So,Ff=n(),f(Es.$$.fragment),Pf=n(),As=i("p"),As.innerHTML=Qo,Ef=n(),f(Ys.$$.fragment),Af=n(),qs=i("ul"),qs.innerHTML=Fo,Yf=n(),f(Ks.$$.fragment),qf=n(),Ds=i("ul"),Ds.innerHTML=Po,Kf=n(),f(Os.$$.fragment),Df=n(),tn=i("p"),tn.textContent=Eo,Of=n(),f(en.$$.fragment),td=n(),ln=i("p"),ln.textContent=Ao,ed=n(),f(sn.$$.fragment),ld=n(),nn=i("p"),nn.innerHTML=Yo,sd=n(),f(pn.$$.fragment),nd=n(),an=i("p"),an.textContent=qo,pd=n(),f(mn.$$.fragment),id=n(),fn=i("p"),fn.innerHTML=Ko,ad=n(),f(dn.$$.fragment),md=n(),rn=i("p"),rn.innerHTML=Do,fd=n(),f(Mn.$$.fragment),dd=n(),on=i("p"),on.textContent=Oo,rd=n(),wn=i("p"),wn.textContent=tw,Md=n(),$n=i("ul"),$n.innerHTML=ew,od=n(),yn=i("p"),yn.innerHTML=lw,wd=n(),f(un.$$.fragment),$d=n(),Tn=i("p"),Tn.innerHTML=sw,yd=n(),cn=i("p"),cn.innerHTML=nw,ud=n(),Jn=i("p"),Jn.textContent=pw,Td=n(),f(jn.$$.fragment),cd=n(),Cn=i("p"),Cn.innerHTML=iw,Jd=n(),f(Un.$$.fragment),jd=n(),bn=i("p"),bn.innerHTML=aw,Cd=n(),f(hn.$$.fragment),Ud=n(),_n=i("p"),_n.innerHTML=mw,bd=n(),f(gn.$$.fragment),hd=n(),vn=i("p"),vn.innerHTML=fw,_d=n(),In=i("p"),In.innerHTML=dw,gd=n(),f(Zn.$$.fragment),vd=n(),xn=i("p"),xn.textContent=rw,Id=n(),f(kn.$$.fragment),Zd=n(),Gn=i("p"),Gn.innerHTML=Mw,xd=n(),f(Hn.$$.fragment),kd=n(),Xn=i("p"),Xn.innerHTML=ow,Gd=n(),f(Bn.$$.fragment),Hd=n(),Vn=i("p"),Vn.textContent=ww,Xd=n(),f(Rn.$$.fragment),Bd=n(),zn=i("p"),zn.innerHTML=$w,Vd=n(),f(Nn.$$.fragment),Rd=n(),f(Ln.$$.fragment),zd=n(),Wn=i("p"),Wn.innerHTML=yw,Nd=n(),f(Sn.$$.fragment),Ld=n(),Qn=i("p"),Qn.innerHTML=uw,Wd=n(),f(Fn.$$.fragment),Sd=n(),Pn=i("p"),Pn.innerHTML=Tw,Qd=n(),En=i("p"),En.innerHTML=cw,Fd=n(),f(An.$$.fragment),Pd=n(),Yn=i("p"),Yn.textContent=Jw,Ed=n(),f(qn.$$.fragment),Ad=n(),f(Kn.$$.fragment),Yd=n(),Dn=i("p"),Dn.textContent=jw,qd=n(),f(On.$$.fragment),Kd=n(),f(tp.$$.fragment),Dd=n(),ep=i("p"),ep.textContent=Cw,Od=n(),lp=i("ol"),lp.innerHTML=Uw,tr=n(),f(sp.$$.fragment),er=n(),np=i("p"),np.textContent=bw,lr=n(),pp=i("ol"),pp.innerHTML=hw,sr=n(),ip=i("p"),ip.textContent=_w,nr=n(),ap=i("p"),ap.textContent=gw,pr=n(),mp=i("p"),mp.innerHTML=vw,ir=n(),fp=i("p"),fp.textContent=Iw,ar=n(),dp=i("ol"),dp.innerHTML=Zw,mr=n(),rp=i("p"),rp.textContent=xw,fr=n(),f(Mp.$$.fragment),dr=n(),op=i("p"),op.textContent=kw,rr=n(),f(wp.$$.fragment),Mr=n(),$p=i("p"),$p.innerHTML=Gw,or=n(),yp=i("p"),yp.innerHTML=Hw,wr=n(),up=i("p"),up.textContent=Xw,$r=n(),Tp=i("ul"),Tp.innerHTML=Bw,yr=n(),cp=i("p"),this.h()},l(t){const e=Ew("svelte-u9bgzb",document.head);u=a(e,"META",{name:!0,content:!0}),e.forEach(l),c=p(t),T=a(t,"P",{}),Lw(T).forEach(l),J=p(t),d(_.$$.fragment,t),Jp=p(t),g=a(t,"P",{"data-svelte-h":!0}),m(g)!=="svelte-1f4v0si"&&(g.textContent=Jr),jp=p(t),v=a(t,"P",{"data-svelte-h":!0}),m(v)!=="svelte-if97kr"&&(v.textContent=jr),Cp=p(t),I=a(t,"OL",{"data-svelte-h":!0}),m(I)!=="svelte-6tegpe"&&(I.innerHTML=Cr),Up=p(t),d(Z.$$.fragment,t),bp=p(t),x=a(t,"OL",{"data-svelte-h":!0}),m(x)!=="svelte-1l8mb7f"&&(x.innerHTML=Ur),hp=p(t),d(k.$$.fragment,t),_p=p(t),G=a(t,"P",{"data-svelte-h":!0}),m(G)!=="svelte-1wsymz9"&&(G.innerHTML=br),gp=p(t),d(H.$$.fragment,t),vp=p(t),d(X.$$.fragment,t),Ip=p(t),B=a(t,"P",{"data-svelte-h":!0}),m(B)!=="svelte-133zp5n"&&(B.innerHTML=hr),Zp=p(t),V=a(t,"P",{"data-svelte-h":!0}),m(V)!=="svelte-4vdyto"&&(V.textContent=_r),xp=p(t),R=a(t,"P",{"data-svelte-h":!0}),m(R)!=="svelte-1nodzat"&&(R.textContent=gr),kp=p(t),d(z.$$.fragment,t),Gp=p(t),N=a(t,"P",{"data-svelte-h":!0}),m(N)!=="svelte-2q8psa"&&(N.textContent=vr),Hp=p(t),d(L.$$.fragment,t),Xp=p(t),W=a(t,"P",{"data-svelte-h":!0}),m(W)!=="svelte-1a6r617"&&(W.textContent=Ir),Bp=p(t),d(S.$$.fragment,t),Vp=p(t),Q=a(t,"P",{"data-svelte-h":!0}),m(Q)!=="svelte-1xe5yst"&&(Q.textContent=Zr),Rp=p(t),F=a(t,"UL",{"data-svelte-h":!0}),m(F)!=="svelte-1j05ap2"&&(F.innerHTML=xr),zp=p(t),d(P.$$.fragment,t),Np=p(t),E=a(t,"P",{"data-svelte-h":!0}),m(E)!=="svelte-p9q4wz"&&(E.textContent=kr),Lp=p(t),d(A.$$.fragment,t),Wp=p(t),Y=a(t,"P",{"data-svelte-h":!0}),m(Y)!=="svelte-1csx8vu"&&(Y.textContent=Gr),Sp=p(t),d(q.$$.fragment,t),Qp=p(t),d(K.$$.fragment,t),Fp=p(t),D=a(t,"P",{"data-svelte-h":!0}),m(D)!=="svelte-aap7d2"&&(D.textContent=Hr),Pp=p(t),d(O.$$.fragment,t),Ep=p(t),d(tt.$$.fragment,t),Ap=p(t),et=a(t,"P",{"data-svelte-h":!0}),m(et)!=="svelte-7oqrly"&&(et.textContent=Xr),Yp=p(t),d(lt.$$.fragment,t),qp=p(t),st=a(t,"P",{"data-svelte-h":!0}),m(st)!=="svelte-ycw310"&&(st.textContent=Br),Kp=p(t),nt=a(t,"P",{"data-svelte-h":!0}),m(nt)!=="svelte-143xhxm"&&(nt.innerHTML=Vr),Dp=p(t),pt=a(t,"P",{"data-svelte-h":!0}),m(pt)!=="svelte-1f6s2bi"&&(pt.textContent=Rr),Op=p(t),d(it.$$.fragment,t),ti=p(t),at=a(t,"P",{"data-svelte-h":!0}),m(at)!=="svelte-vd4ir7"&&(at.textContent=zr),ei=p(t),mt=a(t,"P",{"data-svelte-h":!0}),m(mt)!=="svelte-1perqkb"&&(mt.innerHTML=Nr),li=p(t),d(ft.$$.fragment,t),si=p(t),dt=a(t,"P",{"data-svelte-h":!0}),m(dt)!=="svelte-jgmuxt"&&(dt.textContent=Lr),ni=p(t),rt=a(t,"P",{"data-svelte-h":!0}),m(rt)!=="svelte-4y49ga"&&(rt.innerHTML=Wr),pi=p(t),d(Mt.$$.fragment,t),ii=p(t),ot=a(t,"P",{"data-svelte-h":!0}),m(ot)!=="svelte-1oo7jbh"&&(ot.innerHTML=Sr),ai=p(t),wt=a(t,"P",{"data-svelte-h":!0}),m(wt)!=="svelte-qdgvdm"&&(wt.innerHTML=Qr),mi=p(t),d($t.$$.fragment,t),fi=p(t),yt=a(t,"P",{"data-svelte-h":!0}),m(yt)!=="svelte-1fq1jbf"&&(yt.textContent=Fr),di=p(t),d(ut.$$.fragment,t),ri=p(t),Tt=a(t,"P",{"data-svelte-h":!0}),m(Tt)!=="svelte-1bre4qd"&&(Tt.innerHTML=Pr),Mi=p(t),d(ct.$$.fragment,t),oi=p(t),Jt=a(t,"P",{"data-svelte-h":!0}),m(Jt)!=="svelte-1pz7pgc"&&(Jt.innerHTML=Er),wi=p(t),jt=a(t,"P",{"data-svelte-h":!0}),m(jt)!=="svelte-b67pux"&&(jt.innerHTML=Ar),$i=p(t),d(Ct.$$.fragment,t),yi=p(t),d(Ut.$$.fragment,t),ui=p(t),bt=a(t,"P",{"data-svelte-h":!0}),m(bt)!=="svelte-15zb8zq"&&(bt.innerHTML=Yr),Ti=p(t),d(ht.$$.fragment,t),ci=p(t),d(_t.$$.fragment,t),Ji=p(t),gt=a(t,"P",{"data-svelte-h":!0}),m(gt)!=="svelte-71wmjc"&&(gt.innerHTML=qr),ji=p(t),d(vt.$$.fragment,t),Ci=p(t),It=a(t,"P",{"data-svelte-h":!0}),m(It)!=="svelte-p9e9h2"&&(It.textContent=Kr),Ui=p(t),d(Zt.$$.fragment,t),bi=p(t),xt=a(t,"P",{"data-svelte-h":!0}),m(xt)!=="svelte-1hy29rc"&&(xt.innerHTML=Dr),hi=p(t),d(kt.$$.fragment,t),_i=p(t),Gt=a(t,"P",{"data-svelte-h":!0}),m(Gt)!=="svelte-1o0bd21"&&(Gt.innerHTML=Or),gi=p(t),d(Ht.$$.fragment,t),vi=p(t),d(Xt.$$.fragment,t),Ii=p(t),Bt=a(t,"P",{"data-svelte-h":!0}),m(Bt)!=="svelte-d7g4rr"&&(Bt.textContent=tM),Zi=p(t),d(Vt.$$.fragment,t),xi=p(t),Rt=a(t,"P",{"data-svelte-h":!0}),m(Rt)!=="svelte-lot8kg"&&(Rt.innerHTML=eM),ki=p(t),d(zt.$$.fragment,t),Gi=p(t),Nt=a(t,"P",{"data-svelte-h":!0}),m(Nt)!=="svelte-tb2172"&&(Nt.innerHTML=lM),Hi=p(t),Lt=a(t,"P",{"data-svelte-h":!0}),m(Lt)!=="svelte-1ojov2s"&&(Lt.innerHTML=sM),Xi=p(t),d(Wt.$$.fragment,t),Bi=p(t),St=a(t,"P",{"data-svelte-h":!0}),m(St)!=="svelte-10dyxs"&&(St.innerHTML=nM),Vi=p(t),d(Qt.$$.fragment,t),Ri=p(t),Ft=a(t,"P",{"data-svelte-h":!0}),m(Ft)!=="svelte-13229eb"&&(Ft.textContent=pM),zi=p(t),Pt=a(t,"P",{"data-svelte-h":!0}),m(Pt)!=="svelte-16jah8d"&&(Pt.innerHTML=iM),Ni=p(t),d(Et.$$.fragment,t),Li=p(t),At=a(t,"P",{"data-svelte-h":!0}),m(At)!=="svelte-1kuyb6u"&&(At.innerHTML=aM),Wi=p(t),d(Yt.$$.fragment,t),Si=p(t),d(qt.$$.fragment,t),Qi=p(t),Kt=a(t,"P",{"data-svelte-h":!0}),m(Kt)!=="svelte-d3grr6"&&(Kt.textContent=mM),Fi=p(t),d(Dt.$$.fragment,t),Pi=p(t),d(Ot.$$.fragment,t),Ei=p(t),te=a(t,"P",{"data-svelte-h":!0}),m(te)!=="svelte-ye5wlw"&&(te.innerHTML=fM),Ai=p(t),ee=a(t,"P",{"data-svelte-h":!0}),m(ee)!=="svelte-1qba2ug"&&(ee.innerHTML=dM),Yi=p(t),le=a(t,"P",{"data-svelte-h":!0}),m(le)!=="svelte-1fzh5bl"&&(le.innerHTML=rM),qi=p(t),d(se.$$.fragment,t),Ki=p(t),ne=a(t,"P",{"data-svelte-h":!0}),m(ne)!=="svelte-cdstvx"&&(ne.textContent=MM),Di=p(t),d(pe.$$.fragment,t),Oi=p(t),ie=a(t,"UL",{"data-svelte-h":!0}),m(ie)!=="svelte-1mmgi4h"&&(ie.innerHTML=oM),ta=p(t),d(ae.$$.fragment,t),ea=p(t),me=a(t,"P",{"data-svelte-h":!0}),m(me)!=="svelte-1x9cp76"&&(me.textContent=wM),la=p(t),d(fe.$$.fragment,t),sa=p(t),d(C.$$.fragment,t),na=p(t),d(U.$$.fragment,t),pa=p(t),d(de.$$.fragment,t),ia=p(t),d(re.$$.fragment,t),aa=p(t),Me=a(t,"P",{"data-svelte-h":!0}),m(Me)!=="svelte-190ttxr"&&(Me.innerHTML=$M),ma=p(t),oe=a(t,"P",{"data-svelte-h":!0}),m(oe)!=="svelte-1ruygvg"&&(oe.innerHTML=yM),fa=p(t),d(we.$$.fragment,t),da=p(t),$e=a(t,"P",{"data-svelte-h":!0}),m($e)!=="svelte-1jm3mbg"&&($e.textContent=uM),ra=p(t),d(ye.$$.fragment,t),Ma=p(t),ue=a(t,"P",{"data-svelte-h":!0}),m(ue)!=="svelte-13qf2tv"&&(ue.innerHTML=TM),oa=p(t),d(Te.$$.fragment,t),wa=p(t),ce=a(t,"P",{"data-svelte-h":!0}),m(ce)!=="svelte-z9wvdh"&&(ce.textContent=cM),$a=p(t),d(Je.$$.fragment,t),ya=p(t),je=a(t,"P",{"data-svelte-h":!0}),m(je)!=="svelte-15nvmf3"&&(je.innerHTML=JM),ua=p(t),Ce=a(t,"P",{"data-svelte-h":!0}),m(Ce)!=="svelte-14rlj5b"&&(Ce.innerHTML=jM),Ta=p(t),d(Ue.$$.fragment,t),ca=p(t),d(be.$$.fragment,t),Ja=p(t),he=a(t,"P",{"data-svelte-h":!0}),m(he)!=="svelte-188fsnj"&&(he.innerHTML=CM),ja=p(t),d(_e.$$.fragment,t),Ca=p(t),ge=a(t,"P",{"data-svelte-h":!0}),m(ge)!=="svelte-6nfn1l"&&(ge.textContent=UM),Ua=p(t),d(ve.$$.fragment,t),ba=p(t),Ie=a(t,"P",{"data-svelte-h":!0}),m(Ie)!=="svelte-1kcezsg"&&(Ie.textContent=bM),ha=p(t),d(Ze.$$.fragment,t),_a=p(t),xe=a(t,"P",{"data-svelte-h":!0}),m(xe)!=="svelte-dryod4"&&(xe.innerHTML=hM),ga=p(t),d(ke.$$.fragment,t),va=p(t),d(Ge.$$.fragment,t),Ia=p(t),He=a(t,"P",{"data-svelte-h":!0}),m(He)!=="svelte-bkotvv"&&(He.innerHTML=_M),Za=p(t),d(Xe.$$.fragment,t),xa=p(t),d(Be.$$.fragment,t),ka=p(t),d(Ve.$$.fragment,t),Ga=p(t),Re=a(t,"P",{"data-svelte-h":!0}),m(Re)!=="svelte-13mupbb"&&(Re.innerHTML=gM),Ha=p(t),d(ze.$$.fragment,t),Xa=p(t),Ne=a(t,"P",{"data-svelte-h":!0}),m(Ne)!=="svelte-1kdozmm"&&(Ne.innerHTML=vM),Ba=p(t),d(Le.$$.fragment,t),Va=p(t),We=a(t,"P",{"data-svelte-h":!0}),m(We)!=="svelte-1a7ibsx"&&(We.textContent=IM),Ra=p(t),Se=a(t,"P",{"data-svelte-h":!0}),m(Se)!=="svelte-vvqrwf"&&(Se.textContent=ZM),za=p(t),Qe=a(t,"UL",{"data-svelte-h":!0}),m(Qe)!=="svelte-ij26p"&&(Qe.innerHTML=xM),Na=p(t),Fe=a(t,"P",{"data-svelte-h":!0}),m(Fe)!=="svelte-10fh04e"&&(Fe.textContent=kM),La=p(t),Pe=a(t,"P",{"data-svelte-h":!0}),m(Pe)!=="svelte-5bpuka"&&(Pe.innerHTML=GM),Wa=p(t),Ee=a(t,"P",{"data-svelte-h":!0}),m(Ee)!=="svelte-l9ub52"&&(Ee.textContent=HM),Sa=p(t),d(Ae.$$.fragment,t),Qa=p(t),Ye=a(t,"P",{"data-svelte-h":!0}),m(Ye)!=="svelte-17hvngs"&&(Ye.innerHTML=XM),Fa=p(t),d(qe.$$.fragment,t),Pa=p(t),Ke=a(t,"P",{"data-svelte-h":!0}),m(Ke)!=="svelte-1e6564g"&&(Ke.textContent=BM),Ea=p(t),d(De.$$.fragment,t),Aa=p(t),Oe=a(t,"P",{"data-svelte-h":!0}),m(Oe)!=="svelte-16epltl"&&(Oe.innerHTML=VM),Ya=p(t),d(tl.$$.fragment,t),qa=p(t),el=a(t,"P",{"data-svelte-h":!0}),m(el)!=="svelte-1ooqf8t"&&(el.innerHTML=RM),Ka=p(t),ll=a(t,"P",{"data-svelte-h":!0}),m(ll)!=="svelte-ogqgqi"&&(ll.textContent=zM),Da=p(t),sl=a(t,"UL",{"data-svelte-h":!0}),m(sl)!=="svelte-12kgxwu"&&(sl.innerHTML=NM),Oa=p(t),d(nl.$$.fragment,t),tm=p(t),d(pl.$$.fragment,t),em=p(t),il=a(t,"P",{"data-svelte-h":!0}),m(il)!=="svelte-uezj1y"&&(il.innerHTML=LM),lm=p(t),d(al.$$.fragment,t),sm=p(t),ml=a(t,"P",{"data-svelte-h":!0}),m(ml)!=="svelte-1yhxrgp"&&(ml.innerHTML=WM),nm=p(t),fl=a(t,"P",{"data-svelte-h":!0}),m(fl)!=="svelte-1tievvp"&&(fl.innerHTML=SM),pm=p(t),d(dl.$$.fragment,t),im=p(t),d(rl.$$.fragment,t),am=p(t),Ml=a(t,"P",{"data-svelte-h":!0}),m(Ml)!=="svelte-3d2xs6"&&(Ml.innerHTML=QM),mm=p(t),ol=a(t,"P",{"data-svelte-h":!0}),m(ol)!=="svelte-cro0jo"&&(ol.textContent=FM),fm=p(t),wl=a(t,"UL",{"data-svelte-h":!0}),m(wl)!=="svelte-m5pydi"&&(wl.innerHTML=PM),dm=p(t),$l=a(t,"P",{"data-svelte-h":!0}),m($l)!=="svelte-1ap182y"&&($l.innerHTML=EM),rm=p(t),yl=a(t,"P",{"data-svelte-h":!0}),m(yl)!=="svelte-f6tma1"&&(yl.textContent=AM),Mm=p(t),d(ul.$$.fragment,t),om=p(t),d(Tl.$$.fragment,t),wm=p(t),cl=a(t,"P",{"data-svelte-h":!0}),m(cl)!=="svelte-4moyq3"&&(cl.innerHTML=YM),$m=p(t),Jl=a(t,"P",{"data-svelte-h":!0}),m(Jl)!=="svelte-1we7ukd"&&(Jl.innerHTML=qM),ym=p(t),jl=a(t,"P",{"data-svelte-h":!0}),m(jl)!=="svelte-15xyu1i"&&(jl.textContent=KM),um=p(t),d(Cl.$$.fragment,t),Tm=p(t),Ul=a(t,"P",{"data-svelte-h":!0}),m(Ul)!=="svelte-65pz16"&&(Ul.textContent=DM),cm=p(t),d(bl.$$.fragment,t),Jm=p(t),d(hl.$$.fragment,t),jm=p(t),_l=a(t,"P",{"data-svelte-h":!0}),m(_l)!=="svelte-pospj6"&&(_l.textContent=OM),Cm=p(t),d(gl.$$.fragment,t),Um=p(t),d(vl.$$.fragment,t),bm=p(t),Il=a(t,"P",{"data-svelte-h":!0}),m(Il)!=="svelte-1at1peb"&&(Il.textContent=to),hm=p(t),d(Zl.$$.fragment,t),_m=p(t),xl=a(t,"P",{"data-svelte-h":!0}),m(xl)!=="svelte-zu2v2r"&&(xl.innerHTML=eo),gm=p(t),kl=a(t,"P",{"data-svelte-h":!0}),m(kl)!=="svelte-1kda3rk"&&(kl.textContent=lo),vm=p(t),d(Gl.$$.fragment,t),Im=p(t),d(Hl.$$.fragment,t),Zm=p(t),Xl=a(t,"P",{"data-svelte-h":!0}),m(Xl)!=="svelte-12rb2kn"&&(Xl.innerHTML=so),xm=p(t),Bl=a(t,"P",{"data-svelte-h":!0}),m(Bl)!=="svelte-1qovrxg"&&(Bl.innerHTML=no),km=p(t),d(Vl.$$.fragment,t),Gm=p(t),Rl=a(t,"P",{"data-svelte-h":!0}),m(Rl)!=="svelte-9m3rwb"&&(Rl.textContent=po),Hm=p(t),d(zl.$$.fragment,t),Xm=p(t),Nl=a(t,"P",{"data-svelte-h":!0}),m(Nl)!=="svelte-1qeo0gx"&&(Nl.innerHTML=io),Bm=p(t),Ll=a(t,"P",{"data-svelte-h":!0}),m(Ll)!=="svelte-1c7mqi8"&&(Ll.innerHTML=ao),Vm=p(t),d(Wl.$$.fragment,t),Rm=p(t),Sl=a(t,"P",{"data-svelte-h":!0}),m(Sl)!=="svelte-1f79mwi"&&(Sl.innerHTML=mo),zm=p(t),d(Ql.$$.fragment,t),Nm=p(t),Fl=a(t,"P",{"data-svelte-h":!0}),m(Fl)!=="svelte-18j7dyi"&&(Fl.innerHTML=fo),Lm=p(t),d(Pl.$$.fragment,t),Wm=p(t),El=a(t,"P",{"data-svelte-h":!0}),m(El)!=="svelte-144s97y"&&(El.textContent=ro),Sm=p(t),d(Al.$$.fragment,t),Qm=p(t),Yl=a(t,"P",{"data-svelte-h":!0}),m(Yl)!=="svelte-16tgjeh"&&(Yl.textContent=Mo),Fm=p(t),d(ql.$$.fragment,t),Pm=p(t),Kl=a(t,"P",{"data-svelte-h":!0}),m(Kl)!=="svelte-e8xv16"&&(Kl.innerHTML=oo),Em=p(t),Dl=a(t,"P",{"data-svelte-h":!0}),m(Dl)!=="svelte-yhfvvk"&&(Dl.innerHTML=wo),Am=p(t),Ol=a(t,"P",{"data-svelte-h":!0}),m(Ol)!=="svelte-drl6lj"&&(Ol.innerHTML=$o),Ym=p(t),d(ts.$$.fragment,t),qm=p(t),es=a(t,"P",{"data-svelte-h":!0}),m(es)!=="svelte-15mrz5v"&&(es.innerHTML=yo),Km=p(t),d(ls.$$.fragment,t),Dm=p(t),ss=a(t,"P",{"data-svelte-h":!0}),m(ss)!=="svelte-144s97y"&&(ss.textContent=uo),Om=p(t),d(ns.$$.fragment,t),tf=p(t),ps=a(t,"P",{"data-svelte-h":!0}),m(ps)!=="svelte-xlq195"&&(ps.textContent=To),ef=p(t),d(is.$$.fragment,t),lf=p(t),as=a(t,"P",{"data-svelte-h":!0}),m(as)!=="svelte-1wymcgj"&&(as.textContent=co),sf=p(t),d(ms.$$.fragment,t),nf=p(t),fs=a(t,"P",{"data-svelte-h":!0}),m(fs)!=="svelte-4mzt97"&&(fs.innerHTML=Jo),pf=p(t),ds=a(t,"UL",{"data-svelte-h":!0}),m(ds)!=="svelte-ujiyg0"&&(ds.innerHTML=jo),af=p(t),rs=a(t,"P",{"data-svelte-h":!0}),m(rs)!=="svelte-1tj22t1"&&(rs.innerHTML=Co),mf=p(t),d(Ms.$$.fragment,t),ff=p(t),os=a(t,"P",{"data-svelte-h":!0}),m(os)!=="svelte-1prtux1"&&(os.innerHTML=Uo),df=p(t),d(ws.$$.fragment,t),rf=p(t),d($s.$$.fragment,t),Mf=p(t),ys=a(t,"P",{"data-svelte-h":!0}),m(ys)!=="svelte-ru673g"&&(ys.innerHTML=bo),of=p(t),us=a(t,"P",{"data-svelte-h":!0}),m(us)!=="svelte-ohh6o"&&(us.textContent=ho),wf=p(t),Ts=a(t,"P",{"data-svelte-h":!0}),m(Ts)!=="svelte-19cg9sr"&&(Ts.innerHTML=_o),$f=p(t),cs=a(t,"P",{"data-svelte-h":!0}),m(cs)!=="svelte-lg2i64"&&(cs.textContent=go),yf=p(t),d(Js.$$.fragment,t),uf=p(t),js=a(t,"P",{"data-svelte-h":!0}),m(js)!=="svelte-cuevgw"&&(js.innerHTML=vo),Tf=p(t),Cs=a(t,"UL",{"data-svelte-h":!0}),m(Cs)!=="svelte-c3cbm4"&&(Cs.innerHTML=Io),cf=p(t),d(Us.$$.fragment,t),Jf=p(t),bs=a(t,"P",{"data-svelte-h":!0}),m(bs)!=="svelte-1yroefg"&&(bs.innerHTML=Zo),jf=p(t),hs=a(t,"UL",{"data-svelte-h":!0}),m(hs)!=="svelte-8rwxpi"&&(hs.innerHTML=xo),Cf=p(t),d(_s.$$.fragment,t),Uf=p(t),gs=a(t,"P",{"data-svelte-h":!0}),m(gs)!=="svelte-ha43la"&&(gs.textContent=ko),bf=p(t),vs=a(t,"UL",{"data-svelte-h":!0}),m(vs)!=="svelte-17rfg5h"&&(vs.innerHTML=Go),hf=p(t),d(b.$$.fragment,t),_f=p(t),d(h.$$.fragment,t),gf=p(t),d(Is.$$.fragment,t),vf=p(t),Zs=a(t,"P",{"data-svelte-h":!0}),m(Zs)!=="svelte-15uh889"&&(Zs.innerHTML=Ho),If=p(t),d(xs.$$.fragment,t),Zf=p(t),d(ks.$$.fragment,t),xf=p(t),Gs=a(t,"P",{"data-svelte-h":!0}),m(Gs)!=="svelte-1bwh00e"&&(Gs.innerHTML=Xo),kf=p(t),Hs=a(t,"P",{"data-svelte-h":!0}),m(Hs)!=="svelte-12rb4qk"&&(Hs.textContent=Bo),Gf=p(t),Xs=a(t,"UL",{"data-svelte-h":!0}),m(Xs)!=="svelte-1j8ob66"&&(Xs.innerHTML=Vo),Hf=p(t),Bs=a(t,"P",{"data-svelte-h":!0}),m(Bs)!=="svelte-7lqsb7"&&(Bs.innerHTML=Ro),Xf=p(t),d(Vs.$$.fragment,t),Bf=p(t),Rs=a(t,"UL",{"data-svelte-h":!0}),m(Rs)!=="svelte-1wif35g"&&(Rs.innerHTML=zo),Vf=p(t),d(zs.$$.fragment,t),Rf=p(t),Ns=a(t,"P",{"data-svelte-h":!0}),m(Ns)!=="svelte-z7hemg"&&(Ns.textContent=No),zf=p(t),d(Ls.$$.fragment,t),Nf=p(t),Ws=a(t,"P",{"data-svelte-h":!0}),m(Ws)!=="svelte-ewu7tz"&&(Ws.innerHTML=Lo),Lf=p(t),d(Ss.$$.fragment,t),Wf=p(t),Qs=a(t,"UL",{"data-svelte-h":!0}),m(Qs)!=="svelte-kx7ezb"&&(Qs.innerHTML=Wo),Sf=p(t),d(Fs.$$.fragment,t),Qf=p(t),Ps=a(t,"P",{"data-svelte-h":!0}),m(Ps)!=="svelte-163fd3l"&&(Ps.textContent=So),Ff=p(t),d(Es.$$.fragment,t),Pf=p(t),As=a(t,"P",{"data-svelte-h":!0}),m(As)!=="svelte-ewu7tz"&&(As.innerHTML=Qo),Ef=p(t),d(Ys.$$.fragment,t),Af=p(t),qs=a(t,"UL",{"data-svelte-h":!0}),m(qs)!=="svelte-r7uq1p"&&(qs.innerHTML=Fo),Yf=p(t),d(Ks.$$.fragment,t),qf=p(t),Ds=a(t,"UL",{"data-svelte-h":!0}),m(Ds)!=="svelte-6pb97v"&&(Ds.innerHTML=Po),Kf=p(t),d(Os.$$.fragment,t),Df=p(t),tn=a(t,"P",{"data-svelte-h":!0}),m(tn)!=="svelte-2q8psa"&&(tn.textContent=Eo),Of=p(t),d(en.$$.fragment,t),td=p(t),ln=a(t,"P",{"data-svelte-h":!0}),m(ln)!=="svelte-1ij2jrz"&&(ln.textContent=Ao),ed=p(t),d(sn.$$.fragment,t),ld=p(t),nn=a(t,"P",{"data-svelte-h":!0}),m(nn)!=="svelte-79crc0"&&(nn.innerHTML=Yo),sd=p(t),d(pn.$$.fragment,t),nd=p(t),an=a(t,"P",{"data-svelte-h":!0}),m(an)!=="svelte-49mpzn"&&(an.textContent=qo),pd=p(t),d(mn.$$.fragment,t),id=p(t),fn=a(t,"P",{"data-svelte-h":!0}),m(fn)!=="svelte-1eoodnh"&&(fn.innerHTML=Ko),ad=p(t),d(dn.$$.fragment,t),md=p(t),rn=a(t,"P",{"data-svelte-h":!0}),m(rn)!=="svelte-1u1ijdq"&&(rn.innerHTML=Do),fd=p(t),d(Mn.$$.fragment,t),dd=p(t),on=a(t,"P",{"data-svelte-h":!0}),m(on)!=="svelte-1py4xe1"&&(on.textContent=Oo),rd=p(t),wn=a(t,"P",{"data-svelte-h":!0}),m(wn)!=="svelte-19c7p8h"&&(wn.textContent=tw),Md=p(t),$n=a(t,"UL",{"data-svelte-h":!0}),m($n)!=="svelte-14yedo1"&&($n.innerHTML=ew),od=p(t),yn=a(t,"P",{"data-svelte-h":!0}),m(yn)!=="svelte-bqqw6e"&&(yn.innerHTML=lw),wd=p(t),d(un.$$.fragment,t),$d=p(t),Tn=a(t,"P",{"data-svelte-h":!0}),m(Tn)!=="svelte-r73no7"&&(Tn.innerHTML=sw),yd=p(t),cn=a(t,"P",{"data-svelte-h":!0}),m(cn)!=="svelte-mqetyk"&&(cn.innerHTML=nw),ud=p(t),Jn=a(t,"P",{"data-svelte-h":!0}),m(Jn)!=="svelte-vqznoj"&&(Jn.textContent=pw),Td=p(t),d(jn.$$.fragment,t),cd=p(t),Cn=a(t,"P",{"data-svelte-h":!0}),m(Cn)!=="svelte-pmgaql"&&(Cn.innerHTML=iw),Jd=p(t),d(Un.$$.fragment,t),jd=p(t),bn=a(t,"P",{"data-svelte-h":!0}),m(bn)!=="svelte-6yplq0"&&(bn.innerHTML=aw),Cd=p(t),d(hn.$$.fragment,t),Ud=p(t),_n=a(t,"P",{"data-svelte-h":!0}),m(_n)!=="svelte-1goe70r"&&(_n.innerHTML=mw),bd=p(t),d(gn.$$.fragment,t),hd=p(t),vn=a(t,"P",{"data-svelte-h":!0}),m(vn)!=="svelte-1456tx8"&&(vn.innerHTML=fw),_d=p(t),In=a(t,"P",{"data-svelte-h":!0}),m(In)!=="svelte-1pude8m"&&(In.innerHTML=dw),gd=p(t),d(Zn.$$.fragment,t),vd=p(t),xn=a(t,"P",{"data-svelte-h":!0}),m(xn)!=="svelte-13mmw96"&&(xn.textContent=rw),Id=p(t),d(kn.$$.fragment,t),Zd=p(t),Gn=a(t,"P",{"data-svelte-h":!0}),m(Gn)!=="svelte-ipsv1t"&&(Gn.innerHTML=Mw),xd=p(t),d(Hn.$$.fragment,t),kd=p(t),Xn=a(t,"P",{"data-svelte-h":!0}),m(Xn)!=="svelte-2uhqqg"&&(Xn.innerHTML=ow),Gd=p(t),d(Bn.$$.fragment,t),Hd=p(t),Vn=a(t,"P",{"data-svelte-h":!0}),m(Vn)!=="svelte-gwbpae"&&(Vn.textContent=ww),Xd=p(t),d(Rn.$$.fragment,t),Bd=p(t),zn=a(t,"P",{"data-svelte-h":!0}),m(zn)!=="svelte-1n4vef0"&&(zn.innerHTML=$w),Vd=p(t),d(Nn.$$.fragment,t),Rd=p(t),d(Ln.$$.fragment,t),zd=p(t),Wn=a(t,"P",{"data-svelte-h":!0}),m(Wn)!=="svelte-1br382f"&&(Wn.innerHTML=yw),Nd=p(t),d(Sn.$$.fragment,t),Ld=p(t),Qn=a(t,"P",{"data-svelte-h":!0}),m(Qn)!=="svelte-1287rf4"&&(Qn.innerHTML=uw),Wd=p(t),d(Fn.$$.fragment,t),Sd=p(t),Pn=a(t,"P",{"data-svelte-h":!0}),m(Pn)!=="svelte-3ssu2y"&&(Pn.innerHTML=Tw),Qd=p(t),En=a(t,"P",{"data-svelte-h":!0}),m(En)!=="svelte-engu1n"&&(En.innerHTML=cw),Fd=p(t),d(An.$$.fragment,t),Pd=p(t),Yn=a(t,"P",{"data-svelte-h":!0}),m(Yn)!=="svelte-62lqft"&&(Yn.textContent=Jw),Ed=p(t),d(qn.$$.fragment,t),Ad=p(t),d(Kn.$$.fragment,t),Yd=p(t),Dn=a(t,"P",{"data-svelte-h":!0}),m(Dn)!=="svelte-87kqd"&&(Dn.textContent=jw),qd=p(t),d(On.$$.fragment,t),Kd=p(t),d(tp.$$.fragment,t),Dd=p(t),ep=a(t,"P",{"data-svelte-h":!0}),m(ep)!=="svelte-fbn1dw"&&(ep.textContent=Cw),Od=p(t),lp=a(t,"OL",{"data-svelte-h":!0}),m(lp)!=="svelte-1whxp3g"&&(lp.innerHTML=Uw),tr=p(t),d(sp.$$.fragment,t),er=p(t),np=a(t,"P",{"data-svelte-h":!0}),m(np)!=="svelte-pd7gjw"&&(np.textContent=bw),lr=p(t),pp=a(t,"OL",{"data-svelte-h":!0}),m(pp)!=="svelte-1kzrtdv"&&(pp.innerHTML=hw),sr=p(t),ip=a(t,"P",{"data-svelte-h":!0}),m(ip)!=="svelte-1hfz3f5"&&(ip.textContent=_w),nr=p(t),ap=a(t,"P",{"data-svelte-h":!0}),m(ap)!=="svelte-14b6iud"&&(ap.textContent=gw),pr=p(t),mp=a(t,"P",{"data-svelte-h":!0}),m(mp)!=="svelte-zezoch"&&(mp.innerHTML=vw),ir=p(t),fp=a(t,"P",{"data-svelte-h":!0}),m(fp)!=="svelte-g2woxv"&&(fp.textContent=Iw),ar=p(t),dp=a(t,"OL",{"data-svelte-h":!0}),m(dp)!=="svelte-1qp18n7"&&(dp.innerHTML=Zw),mr=p(t),rp=a(t,"P",{"data-svelte-h":!0}),m(rp)!=="svelte-16ij210"&&(rp.textContent=xw),fr=p(t),d(Mp.$$.fragment,t),dr=p(t),op=a(t,"P",{"data-svelte-h":!0}),m(op)!=="svelte-17elm4j"&&(op.textContent=kw),rr=p(t),d(wp.$$.fragment,t),Mr=p(t),$p=a(t,"P",{"data-svelte-h":!0}),m($p)!=="svelte-z10780"&&($p.innerHTML=Gw),or=p(t),yp=a(t,"P",{"data-svelte-h":!0}),m(yp)!=="svelte-e3np7l"&&(yp.innerHTML=Hw),wr=p(t),up=a(t,"P",{"data-svelte-h":!0}),m(up)!=="svelte-8n23od"&&(up.textContent=Xw),$r=p(t),Tp=a(t,"UL",{"data-svelte-h":!0}),m(Tp)!=="svelte-ikwit4"&&(Tp.innerHTML=Bw),yr=p(t),cp=a(t,"P",{}),Lw(cp).forEach(l),this.h()},h(){Ww(u,"name","hf:doc:metadata"),Ww(u,"content",t$)},m(t,e){Aw(document.head,u),s(t,c,e),s(t,T,e),s(t,J,e),r(_,t,e),s(t,Jp,e),s(t,g,e),s(t,jp,e),s(t,v,e),s(t,Cp,e),s(t,I,e),s(t,Up,e),r(Z,t,e),s(t,bp,e),s(t,x,e),s(t,hp,e),r(k,t,e),s(t,_p,e),s(t,G,e),s(t,gp,e),r(H,t,e),s(t,vp,e),r(X,t,e),s(t,Ip,e),s(t,B,e),s(t,Zp,e),s(t,V,e),s(t,xp,e),s(t,R,e),s(t,kp,e),r(z,t,e),s(t,Gp,e),s(t,N,e),s(t,Hp,e),r(L,t,e),s(t,Xp,e),s(t,W,e),s(t,Bp,e),r(S,t,e),s(t,Vp,e),s(t,Q,e),s(t,Rp,e),s(t,F,e),s(t,zp,e),r(P,t,e),s(t,Np,e),s(t,E,e),s(t,Lp,e),r(A,t,e),s(t,Wp,e),s(t,Y,e),s(t,Sp,e),r(q,t,e),s(t,Qp,e),r(K,t,e),s(t,Fp,e),s(t,D,e),s(t,Pp,e),r(O,t,e),s(t,Ep,e),r(tt,t,e),s(t,Ap,e),s(t,et,e),s(t,Yp,e),r(lt,t,e),s(t,qp,e),s(t,st,e),s(t,Kp,e),s(t,nt,e),s(t,Dp,e),s(t,pt,e),s(t,Op,e),r(it,t,e),s(t,ti,e),s(t,at,e),s(t,ei,e),s(t,mt,e),s(t,li,e),r(ft,t,e),s(t,si,e),s(t,dt,e),s(t,ni,e),s(t,rt,e),s(t,pi,e),r(Mt,t,e),s(t,ii,e),s(t,ot,e),s(t,ai,e),s(t,wt,e),s(t,mi,e),r($t,t,e),s(t,fi,e),s(t,yt,e),s(t,di,e),r(ut,t,e),s(t,ri,e),s(t,Tt,e),s(t,Mi,e),r(ct,t,e),s(t,oi,e),s(t,Jt,e),s(t,wi,e),s(t,jt,e),s(t,$i,e),r(Ct,t,e),s(t,yi,e),r(Ut,t,e),s(t,ui,e),s(t,bt,e),s(t,Ti,e),r(ht,t,e),s(t,ci,e),r(_t,t,e),s(t,Ji,e),s(t,gt,e),s(t,ji,e),r(vt,t,e),s(t,Ci,e),s(t,It,e),s(t,Ui,e),r(Zt,t,e),s(t,bi,e),s(t,xt,e),s(t,hi,e),r(kt,t,e),s(t,_i,e),s(t,Gt,e),s(t,gi,e),r(Ht,t,e),s(t,vi,e),r(Xt,t,e),s(t,Ii,e),s(t,Bt,e),s(t,Zi,e),r(Vt,t,e),s(t,xi,e),s(t,Rt,e),s(t,ki,e),r(zt,t,e),s(t,Gi,e),s(t,Nt,e),s(t,Hi,e),s(t,Lt,e),s(t,Xi,e),r(Wt,t,e),s(t,Bi,e),s(t,St,e),s(t,Vi,e),r(Qt,t,e),s(t,Ri,e),s(t,Ft,e),s(t,zi,e),s(t,Pt,e),s(t,Ni,e),r(Et,t,e),s(t,Li,e),s(t,At,e),s(t,Wi,e),r(Yt,t,e),s(t,Si,e),r(qt,t,e),s(t,Qi,e),s(t,Kt,e),s(t,Fi,e),r(Dt,t,e),s(t,Pi,e),r(Ot,t,e),s(t,Ei,e),s(t,te,e),s(t,Ai,e),s(t,ee,e),s(t,Yi,e),s(t,le,e),s(t,qi,e),r(se,t,e),s(t,Ki,e),s(t,ne,e),s(t,Di,e),r(pe,t,e),s(t,Oi,e),s(t,ie,e),s(t,ta,e),r(ae,t,e),s(t,ea,e),s(t,me,e),s(t,la,e),r(fe,t,e),s(t,sa,e),r(C,t,e),s(t,na,e),r(U,t,e),s(t,pa,e),r(de,t,e),s(t,ia,e),r(re,t,e),s(t,aa,e),s(t,Me,e),s(t,ma,e),s(t,oe,e),s(t,fa,e),r(we,t,e),s(t,da,e),s(t,$e,e),s(t,ra,e),r(ye,t,e),s(t,Ma,e),s(t,ue,e),s(t,oa,e),r(Te,t,e),s(t,wa,e),s(t,ce,e),s(t,$a,e),r(Je,t,e),s(t,ya,e),s(t,je,e),s(t,ua,e),s(t,Ce,e),s(t,Ta,e),r(Ue,t,e),s(t,ca,e),r(be,t,e),s(t,Ja,e),s(t,he,e),s(t,ja,e),r(_e,t,e),s(t,Ca,e),s(t,ge,e),s(t,Ua,e),r(ve,t,e),s(t,ba,e),s(t,Ie,e),s(t,ha,e),r(Ze,t,e),s(t,_a,e),s(t,xe,e),s(t,ga,e),r(ke,t,e),s(t,va,e),r(Ge,t,e),s(t,Ia,e),s(t,He,e),s(t,Za,e),r(Xe,t,e),s(t,xa,e),r(Be,t,e),s(t,ka,e),r(Ve,t,e),s(t,Ga,e),s(t,Re,e),s(t,Ha,e),r(ze,t,e),s(t,Xa,e),s(t,Ne,e),s(t,Ba,e),r(Le,t,e),s(t,Va,e),s(t,We,e),s(t,Ra,e),s(t,Se,e),s(t,za,e),s(t,Qe,e),s(t,Na,e),s(t,Fe,e),s(t,La,e),s(t,Pe,e),s(t,Wa,e),s(t,Ee,e),s(t,Sa,e),r(Ae,t,e),s(t,Qa,e),s(t,Ye,e),s(t,Fa,e),r(qe,t,e),s(t,Pa,e),s(t,Ke,e),s(t,Ea,e),r(De,t,e),s(t,Aa,e),s(t,Oe,e),s(t,Ya,e),r(tl,t,e),s(t,qa,e),s(t,el,e),s(t,Ka,e),s(t,ll,e),s(t,Da,e),s(t,sl,e),s(t,Oa,e),r(nl,t,e),s(t,tm,e),r(pl,t,e),s(t,em,e),s(t,il,e),s(t,lm,e),r(al,t,e),s(t,sm,e),s(t,ml,e),s(t,nm,e),s(t,fl,e),s(t,pm,e),r(dl,t,e),s(t,im,e),r(rl,t,e),s(t,am,e),s(t,Ml,e),s(t,mm,e),s(t,ol,e),s(t,fm,e),s(t,wl,e),s(t,dm,e),s(t,$l,e),s(t,rm,e),s(t,yl,e),s(t,Mm,e),r(ul,t,e),s(t,om,e),r(Tl,t,e),s(t,wm,e),s(t,cl,e),s(t,$m,e),s(t,Jl,e),s(t,ym,e),s(t,jl,e),s(t,um,e),r(Cl,t,e),s(t,Tm,e),s(t,Ul,e),s(t,cm,e),r(bl,t,e),s(t,Jm,e),r(hl,t,e),s(t,jm,e),s(t,_l,e),s(t,Cm,e),r(gl,t,e),s(t,Um,e),r(vl,t,e),s(t,bm,e),s(t,Il,e),s(t,hm,e),r(Zl,t,e),s(t,_m,e),s(t,xl,e),s(t,gm,e),s(t,kl,e),s(t,vm,e),r(Gl,t,e),s(t,Im,e),r(Hl,t,e),s(t,Zm,e),s(t,Xl,e),s(t,xm,e),s(t,Bl,e),s(t,km,e),r(Vl,t,e),s(t,Gm,e),s(t,Rl,e),s(t,Hm,e),r(zl,t,e),s(t,Xm,e),s(t,Nl,e),s(t,Bm,e),s(t,Ll,e),s(t,Vm,e),r(Wl,t,e),s(t,Rm,e),s(t,Sl,e),s(t,zm,e),r(Ql,t,e),s(t,Nm,e),s(t,Fl,e),s(t,Lm,e),r(Pl,t,e),s(t,Wm,e),s(t,El,e),s(t,Sm,e),r(Al,t,e),s(t,Qm,e),s(t,Yl,e),s(t,Fm,e),r(ql,t,e),s(t,Pm,e),s(t,Kl,e),s(t,Em,e),s(t,Dl,e),s(t,Am,e),s(t,Ol,e),s(t,Ym,e),r(ts,t,e),s(t,qm,e),s(t,es,e),s(t,Km,e),r(ls,t,e),s(t,Dm,e),s(t,ss,e),s(t,Om,e),r(ns,t,e),s(t,tf,e),s(t,ps,e),s(t,ef,e),r(is,t,e),s(t,lf,e),s(t,as,e),s(t,sf,e),r(ms,t,e),s(t,nf,e),s(t,fs,e),s(t,pf,e),s(t,ds,e),s(t,af,e),s(t,rs,e),s(t,mf,e),r(Ms,t,e),s(t,ff,e),s(t,os,e),s(t,df,e),r(ws,t,e),s(t,rf,e),r($s,t,e),s(t,Mf,e),s(t,ys,e),s(t,of,e),s(t,us,e),s(t,wf,e),s(t,Ts,e),s(t,$f,e),s(t,cs,e),s(t,yf,e),r(Js,t,e),s(t,uf,e),s(t,js,e),s(t,Tf,e),s(t,Cs,e),s(t,cf,e),r(Us,t,e),s(t,Jf,e),s(t,bs,e),s(t,jf,e),s(t,hs,e),s(t,Cf,e),r(_s,t,e),s(t,Uf,e),s(t,gs,e),s(t,bf,e),s(t,vs,e),s(t,hf,e),r(b,t,e),s(t,_f,e),r(h,t,e),s(t,gf,e),r(Is,t,e),s(t,vf,e),s(t,Zs,e),s(t,If,e),r(xs,t,e),s(t,Zf,e),r(ks,t,e),s(t,xf,e),s(t,Gs,e),s(t,kf,e),s(t,Hs,e),s(t,Gf,e),s(t,Xs,e),s(t,Hf,e),s(t,Bs,e),s(t,Xf,e),r(Vs,t,e),s(t,Bf,e),s(t,Rs,e),s(t,Vf,e),r(zs,t,e),s(t,Rf,e),s(t,Ns,e),s(t,zf,e),r(Ls,t,e),s(t,Nf,e),s(t,Ws,e),s(t,Lf,e),r(Ss,t,e),s(t,Wf,e),s(t,Qs,e),s(t,Sf,e),r(Fs,t,e),s(t,Qf,e),s(t,Ps,e),s(t,Ff,e),r(Es,t,e),s(t,Pf,e),s(t,As,e),s(t,Ef,e),r(Ys,t,e),s(t,Af,e),s(t,qs,e),s(t,Yf,e),r(Ks,t,e),s(t,qf,e),s(t,Ds,e),s(t,Kf,e),r(Os,t,e),s(t,Df,e),s(t,tn,e),s(t,Of,e),r(en,t,e),s(t,td,e),s(t,ln,e),s(t,ed,e),r(sn,t,e),s(t,ld,e),s(t,nn,e),s(t,sd,e),r(pn,t,e),s(t,nd,e),s(t,an,e),s(t,pd,e),r(mn,t,e),s(t,id,e),s(t,fn,e),s(t,ad,e),r(dn,t,e),s(t,md,e),s(t,rn,e),s(t,fd,e),r(Mn,t,e),s(t,dd,e),s(t,on,e),s(t,rd,e),s(t,wn,e),s(t,Md,e),s(t,$n,e),s(t,od,e),s(t,yn,e),s(t,wd,e),r(un,t,e),s(t,$d,e),s(t,Tn,e),s(t,yd,e),s(t,cn,e),s(t,ud,e),s(t,Jn,e),s(t,Td,e),r(jn,t,e),s(t,cd,e),s(t,Cn,e),s(t,Jd,e),r(Un,t,e),s(t,jd,e),s(t,bn,e),s(t,Cd,e),r(hn,t,e),s(t,Ud,e),s(t,_n,e),s(t,bd,e),r(gn,t,e),s(t,hd,e),s(t,vn,e),s(t,_d,e),s(t,In,e),s(t,gd,e),r(Zn,t,e),s(t,vd,e),s(t,xn,e),s(t,Id,e),r(kn,t,e),s(t,Zd,e),s(t,Gn,e),s(t,xd,e),r(Hn,t,e),s(t,kd,e),s(t,Xn,e),s(t,Gd,e),r(Bn,t,e),s(t,Hd,e),s(t,Vn,e),s(t,Xd,e),r(Rn,t,e),s(t,Bd,e),s(t,zn,e),s(t,Vd,e),r(Nn,t,e),s(t,Rd,e),r(Ln,t,e),s(t,zd,e),s(t,Wn,e),s(t,Nd,e),r(Sn,t,e),s(t,Ld,e),s(t,Qn,e),s(t,Wd,e),r(Fn,t,e),s(t,Sd,e),s(t,Pn,e),s(t,Qd,e),s(t,En,e),s(t,Fd,e),r(An,t,e),s(t,Pd,e),s(t,Yn,e),s(t,Ed,e),r(qn,t,e),s(t,Ad,e),r(Kn,t,e),s(t,Yd,e),s(t,Dn,e),s(t,qd,e),r(On,t,e),s(t,Kd,e),r(tp,t,e),s(t,Dd,e),s(t,ep,e),s(t,Od,e),s(t,lp,e),s(t,tr,e),r(sp,t,e),s(t,er,e),s(t,np,e),s(t,lr,e),s(t,pp,e),s(t,sr,e),s(t,ip,e),s(t,nr,e),s(t,ap,e),s(t,pr,e),s(t,mp,e),s(t,ir,e),s(t,fp,e),s(t,ar,e),s(t,dp,e),s(t,mr,e),s(t,rp,e),s(t,fr,e),r(Mp,t,e),s(t,dr,e),s(t,op,e),s(t,rr,e),r(wp,t,e),s(t,Mr,e),s(t,$p,e),s(t,or,e),s(t,yp,e),s(t,wr,e),s(t,up,e),s(t,$r,e),s(t,Tp,e),s(t,yr,e),s(t,cp,e),ur=!0},p(t,[e]){const Vw={};e&2&&(Vw.$$scope={dirty:e,ctx:t}),C.$set(Vw);const Rw={};e&2&&(Rw.$$scope={dirty:e,ctx:t}),U.$set(Rw);const zw={};e&2&&(zw.$$scope={dirty:e,ctx:t}),b.$set(zw);const Nw={};e&2&&(Nw.$$scope={dirty:e,ctx:t}),h.$set(Nw)},i(t){ur||(M(_.$$.fragment,t),M(Z.$$.fragment,t),M(k.$$.fragment,t),M(H.$$.fragment,t),M(X.$$.fragment,t),M(z.$$.fragment,t),M(L.$$.fragment,t),M(S.$$.fragment,t),M(P.$$.fragment,t),M(A.$$.fragment,t),M(q.$$.fragment,t),M(K.$$.fragment,t),M(O.$$.fragment,t),M(tt.$$.fragment,t),M(lt.$$.fragment,t),M(it.$$.fragment,t),M(ft.$$.fragment,t),M(Mt.$$.fragment,t),M($t.$$.fragment,t),M(ut.$$.fragment,t),M(ct.$$.fragment,t),M(Ct.$$.fragment,t),M(Ut.$$.fragment,t),M(ht.$$.fragment,t),M(_t.$$.fragment,t),M(vt.$$.fragment,t),M(Zt.$$.fragment,t),M(kt.$$.fragment,t),M(Ht.$$.fragment,t),M(Xt.$$.fragment,t),M(Vt.$$.fragment,t),M(zt.$$.fragment,t),M(Wt.$$.fragment,t),M(Qt.$$.fragment,t),M(Et.$$.fragment,t),M(Yt.$$.fragment,t),M(qt.$$.fragment,t),M(Dt.$$.fragment,t),M(Ot.$$.fragment,t),M(se.$$.fragment,t),M(pe.$$.fragment,t),M(ae.$$.fragment,t),M(fe.$$.fragment,t),M(C.$$.fragment,t),M(U.$$.fragment,t),M(de.$$.fragment,t),M(re.$$.fragment,t),M(we.$$.fragment,t),M(ye.$$.fragment,t),M(Te.$$.fragment,t),M(Je.$$.fragment,t),M(Ue.$$.fragment,t),M(be.$$.fragment,t),M(_e.$$.fragment,t),M(ve.$$.fragment,t),M(Ze.$$.fragment,t),M(ke.$$.fragment,t),M(Ge.$$.fragment,t),M(Xe.$$.fragment,t),M(Be.$$.fragment,t),M(Ve.$$.fragment,t),M(ze.$$.fragment,t),M(Le.$$.fragment,t),M(Ae.$$.fragment,t),M(qe.$$.fragment,t),M(De.$$.fragment,t),M(tl.$$.fragment,t),M(nl.$$.fragment,t),M(pl.$$.fragment,t),M(al.$$.fragment,t),M(dl.$$.fragment,t),M(rl.$$.fragment,t),M(ul.$$.fragment,t),M(Tl.$$.fragment,t),M(Cl.$$.fragment,t),M(bl.$$.fragment,t),M(hl.$$.fragment,t),M(gl.$$.fragment,t),M(vl.$$.fragment,t),M(Zl.$$.fragment,t),M(Gl.$$.fragment,t),M(Hl.$$.fragment,t),M(Vl.$$.fragment,t),M(zl.$$.fragment,t),M(Wl.$$.fragment,t),M(Ql.$$.fragment,t),M(Pl.$$.fragment,t),M(Al.$$.fragment,t),M(ql.$$.fragment,t),M(ts.$$.fragment,t),M(ls.$$.fragment,t),M(ns.$$.fragment,t),M(is.$$.fragment,t),M(ms.$$.fragment,t),M(Ms.$$.fragment,t),M(ws.$$.fragment,t),M($s.$$.fragment,t),M(Js.$$.fragment,t),M(Us.$$.fragment,t),M(_s.$$.fragment,t),M(b.$$.fragment,t),M(h.$$.fragment,t),M(Is.$$.fragment,t),M(xs.$$.fragment,t),M(ks.$$.fragment,t),M(Vs.$$.fragment,t),M(zs.$$.fragment,t),M(Ls.$$.fragment,t),M(Ss.$$.fragment,t),M(Fs.$$.fragment,t),M(Es.$$.fragment,t),M(Ys.$$.fragment,t),M(Ks.$$.fragment,t),M(Os.$$.fragment,t),M(en.$$.fragment,t),M(sn.$$.fragment,t),M(pn.$$.fragment,t),M(mn.$$.fragment,t),M(dn.$$.fragment,t),M(Mn.$$.fragment,t),M(un.$$.fragment,t),M(jn.$$.fragment,t),M(Un.$$.fragment,t),M(hn.$$.fragment,t),M(gn.$$.fragment,t),M(Zn.$$.fragment,t),M(kn.$$.fragment,t),M(Hn.$$.fragment,t),M(Bn.$$.fragment,t),M(Rn.$$.fragment,t),M(Nn.$$.fragment,t),M(Ln.$$.fragment,t),M(Sn.$$.fragment,t),M(Fn.$$.fragment,t),M(An.$$.fragment,t),M(qn.$$.fragment,t),M(Kn.$$.fragment,t),M(On.$$.fragment,t),M(tp.$$.fragment,t),M(sp.$$.fragment,t),M(Mp.$$.fragment,t),M(wp.$$.fragment,t),ur=!0)},o(t){o(_.$$.fragment,t),o(Z.$$.fragment,t),o(k.$$.fragment,t),o(H.$$.fragment,t),o(X.$$.fragment,t),o(z.$$.fragment,t),o(L.$$.fragment,t),o(S.$$.fragment,t),o(P.$$.fragment,t),o(A.$$.fragment,t),o(q.$$.fragment,t),o(K.$$.fragment,t),o(O.$$.fragment,t),o(tt.$$.fragment,t),o(lt.$$.fragment,t),o(it.$$.fragment,t),o(ft.$$.fragment,t),o(Mt.$$.fragment,t),o($t.$$.fragment,t),o(ut.$$.fragment,t),o(ct.$$.fragment,t),o(Ct.$$.fragment,t),o(Ut.$$.fragment,t),o(ht.$$.fragment,t),o(_t.$$.fragment,t),o(vt.$$.fragment,t),o(Zt.$$.fragment,t),o(kt.$$.fragment,t),o(Ht.$$.fragment,t),o(Xt.$$.fragment,t),o(Vt.$$.fragment,t),o(zt.$$.fragment,t),o(Wt.$$.fragment,t),o(Qt.$$.fragment,t),o(Et.$$.fragment,t),o(Yt.$$.fragment,t),o(qt.$$.fragment,t),o(Dt.$$.fragment,t),o(Ot.$$.fragment,t),o(se.$$.fragment,t),o(pe.$$.fragment,t),o(ae.$$.fragment,t),o(fe.$$.fragment,t),o(C.$$.fragment,t),o(U.$$.fragment,t),o(de.$$.fragment,t),o(re.$$.fragment,t),o(we.$$.fragment,t),o(ye.$$.fragment,t),o(Te.$$.fragment,t),o(Je.$$.fragment,t),o(Ue.$$.fragment,t),o(be.$$.fragment,t),o(_e.$$.fragment,t),o(ve.$$.fragment,t),o(Ze.$$.fragment,t),o(ke.$$.fragment,t),o(Ge.$$.fragment,t),o(Xe.$$.fragment,t),o(Be.$$.fragment,t),o(Ve.$$.fragment,t),o(ze.$$.fragment,t),o(Le.$$.fragment,t),o(Ae.$$.fragment,t),o(qe.$$.fragment,t),o(De.$$.fragment,t),o(tl.$$.fragment,t),o(nl.$$.fragment,t),o(pl.$$.fragment,t),o(al.$$.fragment,t),o(dl.$$.fragment,t),o(rl.$$.fragment,t),o(ul.$$.fragment,t),o(Tl.$$.fragment,t),o(Cl.$$.fragment,t),o(bl.$$.fragment,t),o(hl.$$.fragment,t),o(gl.$$.fragment,t),o(vl.$$.fragment,t),o(Zl.$$.fragment,t),o(Gl.$$.fragment,t),o(Hl.$$.fragment,t),o(Vl.$$.fragment,t),o(zl.$$.fragment,t),o(Wl.$$.fragment,t),o(Ql.$$.fragment,t),o(Pl.$$.fragment,t),o(Al.$$.fragment,t),o(ql.$$.fragment,t),o(ts.$$.fragment,t),o(ls.$$.fragment,t),o(ns.$$.fragment,t),o(is.$$.fragment,t),o(ms.$$.fragment,t),o(Ms.$$.fragment,t),o(ws.$$.fragment,t),o($s.$$.fragment,t),o(Js.$$.fragment,t),o(Us.$$.fragment,t),o(_s.$$.fragment,t),o(b.$$.fragment,t),o(h.$$.fragment,t),o(Is.$$.fragment,t),o(xs.$$.fragment,t),o(ks.$$.fragment,t),o(Vs.$$.fragment,t),o(zs.$$.fragment,t),o(Ls.$$.fragment,t),o(Ss.$$.fragment,t),o(Fs.$$.fragment,t),o(Es.$$.fragment,t),o(Ys.$$.fragment,t),o(Ks.$$.fragment,t),o(Os.$$.fragment,t),o(en.$$.fragment,t),o(sn.$$.fragment,t),o(pn.$$.fragment,t),o(mn.$$.fragment,t),o(dn.$$.fragment,t),o(Mn.$$.fragment,t),o(un.$$.fragment,t),o(jn.$$.fragment,t),o(Un.$$.fragment,t),o(hn.$$.fragment,t),o(gn.$$.fragment,t),o(Zn.$$.fragment,t),o(kn.$$.fragment,t),o(Hn.$$.fragment,t),o(Bn.$$.fragment,t),o(Rn.$$.fragment,t),o(Nn.$$.fragment,t),o(Ln.$$.fragment,t),o(Sn.$$.fragment,t),o(Fn.$$.fragment,t),o(An.$$.fragment,t),o(qn.$$.fragment,t),o(Kn.$$.fragment,t),o(On.$$.fragment,t),o(tp.$$.fragment,t),o(sp.$$.fragment,t),o(Mp.$$.fragment,t),o(wp.$$.fragment,t),ur=!1},d(t){t&&(l(c),l(T),l(J),l(Jp),l(g),l(jp),l(v),l(Cp),l(I),l(Up),l(bp),l(x),l(hp),l(_p),l(G),l(gp),l(vp),l(Ip),l(B),l(Zp),l(V),l(xp),l(R),l(kp),l(Gp),l(N),l(Hp),l(Xp),l(W),l(Bp),l(Vp),l(Q),l(Rp),l(F),l(zp),l(Np),l(E),l(Lp),l(Wp),l(Y),l(Sp),l(Qp),l(Fp),l(D),l(Pp),l(Ep),l(Ap),l(et),l(Yp),l(qp),l(st),l(Kp),l(nt),l(Dp),l(pt),l(Op),l(ti),l(at),l(ei),l(mt),l(li),l(si),l(dt),l(ni),l(rt),l(pi),l(ii),l(ot),l(ai),l(wt),l(mi),l(fi),l(yt),l(di),l(ri),l(Tt),l(Mi),l(oi),l(Jt),l(wi),l(jt),l($i),l(yi),l(ui),l(bt),l(Ti),l(ci),l(Ji),l(gt),l(ji),l(Ci),l(It),l(Ui),l(bi),l(xt),l(hi),l(_i),l(Gt),l(gi),l(vi),l(Ii),l(Bt),l(Zi),l(xi),l(Rt),l(ki),l(Gi),l(Nt),l(Hi),l(Lt),l(Xi),l(Bi),l(St),l(Vi),l(Ri),l(Ft),l(zi),l(Pt),l(Ni),l(Li),l(At),l(Wi),l(Si),l(Qi),l(Kt),l(Fi),l(Pi),l(Ei),l(te),l(Ai),l(ee),l(Yi),l(le),l(qi),l(Ki),l(ne),l(Di),l(Oi),l(ie),l(ta),l(ea),l(me),l(la),l(sa),l(na),l(pa),l(ia),l(aa),l(Me),l(ma),l(oe),l(fa),l(da),l($e),l(ra),l(Ma),l(ue),l(oa),l(wa),l(ce),l($a),l(ya),l(je),l(ua),l(Ce),l(Ta),l(ca),l(Ja),l(he),l(ja),l(Ca),l(ge),l(Ua),l(ba),l(Ie),l(ha),l(_a),l(xe),l(ga),l(va),l(Ia),l(He),l(Za),l(xa),l(ka),l(Ga),l(Re),l(Ha),l(Xa),l(Ne),l(Ba),l(Va),l(We),l(Ra),l(Se),l(za),l(Qe),l(Na),l(Fe),l(La),l(Pe),l(Wa),l(Ee),l(Sa),l(Qa),l(Ye),l(Fa),l(Pa),l(Ke),l(Ea),l(Aa),l(Oe),l(Ya),l(qa),l(el),l(Ka),l(ll),l(Da),l(sl),l(Oa),l(tm),l(em),l(il),l(lm),l(sm),l(ml),l(nm),l(fl),l(pm),l(im),l(am),l(Ml),l(mm),l(ol),l(fm),l(wl),l(dm),l($l),l(rm),l(yl),l(Mm),l(om),l(wm),l(cl),l($m),l(Jl),l(ym),l(jl),l(um),l(Tm),l(Ul),l(cm),l(Jm),l(jm),l(_l),l(Cm),l(Um),l(bm),l(Il),l(hm),l(_m),l(xl),l(gm),l(kl),l(vm),l(Im),l(Zm),l(Xl),l(xm),l(Bl),l(km),l(Gm),l(Rl),l(Hm),l(Xm),l(Nl),l(Bm),l(Ll),l(Vm),l(Rm),l(Sl),l(zm),l(Nm),l(Fl),l(Lm),l(Wm),l(El),l(Sm),l(Qm),l(Yl),l(Fm),l(Pm),l(Kl),l(Em),l(Dl),l(Am),l(Ol),l(Ym),l(qm),l(es),l(Km),l(Dm),l(ss),l(Om),l(tf),l(ps),l(ef),l(lf),l(as),l(sf),l(nf),l(fs),l(pf),l(ds),l(af),l(rs),l(mf),l(ff),l(os),l(df),l(rf),l(Mf),l(ys),l(of),l(us),l(wf),l(Ts),l($f),l(cs),l(yf),l(uf),l(js),l(Tf),l(Cs),l(cf),l(Jf),l(bs),l(jf),l(hs),l(Cf),l(Uf),l(gs),l(bf),l(vs),l(hf),l(_f),l(gf),l(vf),l(Zs),l(If),l(Zf),l(xf),l(Gs),l(kf),l(Hs),l(Gf),l(Xs),l(Hf),l(Bs),l(Xf),l(Bf),l(Rs),l(Vf),l(Rf),l(Ns),l(zf),l(Nf),l(Ws),l(Lf),l(Wf),l(Qs),l(Sf),l(Qf),l(Ps),l(Ff),l(Pf),l(As),l(Ef),l(Af),l(qs),l(Yf),l(qf),l(Ds),l(Kf),l(Df),l(tn),l(Of),l(td),l(ln),l(ed),l(ld),l(nn),l(sd),l(nd),l(an),l(pd),l(id),l(fn),l(ad),l(md),l(rn),l(fd),l(dd),l(on),l(rd),l(wn),l(Md),l($n),l(od),l(yn),l(wd),l($d),l(Tn),l(yd),l(cn),l(ud),l(Jn),l(Td),l(cd),l(Cn),l(Jd),l(jd),l(bn),l(Cd),l(Ud),l(_n),l(bd),l(hd),l(vn),l(_d),l(In),l(gd),l(vd),l(xn),l(Id),l(Zd),l(Gn),l(xd),l(kd),l(Xn),l(Gd),l(Hd),l(Vn),l(Xd),l(Bd),l(zn),l(Vd),l(Rd),l(zd),l(Wn),l(Nd),l(Ld),l(Qn),l(Wd),l(Sd),l(Pn),l(Qd),l(En),l(Fd),l(Pd),l(Yn),l(Ed),l(Ad),l(Yd),l(Dn),l(qd),l(Kd),l(Dd),l(ep),l(Od),l(lp),l(tr),l(er),l(np),l(lr),l(pp),l(sr),l(ip),l(nr),l(ap),l(pr),l(mp),l(ir),l(fp),l(ar),l(dp),l(mr),l(rp),l(fr),l(dr),l(op),l(rr),l(Mr),l($p),l(or),l(yp),l(wr),l(up),l($r),l(Tp),l(yr),l(cp)),l(u),w(_,t),w(Z,t),w(k,t),w(H,t),w(X,t),w(z,t),w(L,t),w(S,t),w(P,t),w(A,t),w(q,t),w(K,t),w(O,t),w(tt,t),w(lt,t),w(it,t),w(ft,t),w(Mt,t),w($t,t),w(ut,t),w(ct,t),w(Ct,t),w(Ut,t),w(ht,t),w(_t,t),w(vt,t),w(Zt,t),w(kt,t),w(Ht,t),w(Xt,t),w(Vt,t),w(zt,t),w(Wt,t),w(Qt,t),w(Et,t),w(Yt,t),w(qt,t),w(Dt,t),w(Ot,t),w(se,t),w(pe,t),w(ae,t),w(fe,t),w(C,t),w(U,t),w(de,t),w(re,t),w(we,t),w(ye,t),w(Te,t),w(Je,t),w(Ue,t),w(be,t),w(_e,t),w(ve,t),w(Ze,t),w(ke,t),w(Ge,t),w(Xe,t),w(Be,t),w(Ve,t),w(ze,t),w(Le,t),w(Ae,t),w(qe,t),w(De,t),w(tl,t),w(nl,t),w(pl,t),w(al,t),w(dl,t),w(rl,t),w(ul,t),w(Tl,t),w(Cl,t),w(bl,t),w(hl,t),w(gl,t),w(vl,t),w(Zl,t),w(Gl,t),w(Hl,t),w(Vl,t),w(zl,t),w(Wl,t),w(Ql,t),w(Pl,t),w(Al,t),w(ql,t),w(ts,t),w(ls,t),w(ns,t),w(is,t),w(ms,t),w(Ms,t),w(ws,t),w($s,t),w(Js,t),w(Us,t),w(_s,t),w(b,t),w(h,t),w(Is,t),w(xs,t),w(ks,t),w(Vs,t),w(zs,t),w(Ls,t),w(Ss,t),w(Fs,t),w(Es,t),w(Ys,t),w(Ks,t),w(Os,t),w(en,t),w(sn,t),w(pn,t),w(mn,t),w(dn,t),w(Mn,t),w(un,t),w(jn,t),w(Un,t),w(hn,t),w(gn,t),w(Zn,t),w(kn,t),w(Hn,t),w(Bn,t),w(Rn,t),w(Nn,t),w(Ln,t),w(Sn,t),w(Fn,t),w(An,t),w(qn,t),w(Kn,t),w(On,t),w(tp,t),w(sp,t),w(Mp,t),w(wp,t)}}}const t$='{"title":"Testing","local":"testing","sections":[{"title":"How transformers are tested","local":"how-transformers-are-tested","sections":[],"depth":2},{"title":"Running tests","local":"running-tests","sections":[{"title":"Choosing which tests to run","local":"choosing-which-tests-to-run","sections":[],"depth":3},{"title":"Getting the list of all tests","local":"getting-the-list-of-all-tests","sections":[],"depth":3},{"title":"Run a specific test module","local":"run-a-specific-test-module","sections":[],"depth":3},{"title":"Run specific tests","local":"run-specific-tests","sections":[],"depth":3},{"title":"Run accelerate tests","local":"run-accelerate-tests","sections":[],"depth":3},{"title":"Run documentation tests","local":"run-documentation-tests","sections":[],"depth":3},{"title":"Run only modified tests","local":"run-only-modified-tests","sections":[],"depth":3},{"title":"Automatically rerun failed tests on source modification","local":"automatically-rerun-failed-tests-on-source-modification","sections":[],"depth":3},{"title":"Skip a test module","local":"skip-a-test-module","sections":[],"depth":3},{"title":"Clearing state","local":"clearing-state","sections":[],"depth":3},{"title":"Running tests in parallel","local":"running-tests-in-parallel","sections":[],"depth":3},{"title":"Test order and repetition","local":"test-order-and-repetition","sections":[{"title":"Repeat tests","local":"repeat-tests","sections":[],"depth":4},{"title":"Run tests in a random order","local":"run-tests-in-a-random-order","sections":[],"depth":4}],"depth":3},{"title":"Look and feel variations","local":"look-and-feel-variations","sections":[{"title":"pytest-sugar","local":"pytest-sugar","sections":[],"depth":4},{"title":"Report each sub-test name and its progress","local":"report-each-sub-test-name-and-its-progress","sections":[],"depth":4},{"title":"Instantly shows failed tests","local":"instantly-shows-failed-tests","sections":[],"depth":4}],"depth":3},{"title":"To GPU or not to GPU","local":"to-gpu-or-not-to-gpu","sections":[],"depth":3},{"title":"Testing with a specific PyTorch backend or device","local":"testing-with-a-specific-pytorch-backend-or-device","sections":[],"depth":3},{"title":"Distributed training","local":"distributed-training","sections":[],"depth":3},{"title":"Output capture","local":"output-capture","sections":[],"depth":3},{"title":"Color control","local":"color-control","sections":[],"depth":3},{"title":"Sending test report to online pastebin service","local":"sending-test-report-to-online-pastebin-service","sections":[],"depth":3}],"depth":2},{"title":"Writing tests","local":"writing-tests","sections":[{"title":"Parametrization","local":"parametrization","sections":[],"depth":3},{"title":"Files and directories","local":"files-and-directories","sections":[],"depth":3},{"title":"Temporary files and directories","local":"temporary-files-and-directories","sections":[],"depth":3},{"title":"Temporary sys.path override","local":"temporary-syspath-override","sections":[],"depth":3},{"title":"Skipping tests","local":"skipping-tests","sections":[{"title":"Implementation","local":"implementation","sections":[],"depth":4}],"depth":3},{"title":"Slow tests","local":"slow-tests","sections":[],"depth":3},{"title":"Testing the stdout/stderr output","local":"testing-the-stdoutstderr-output","sections":[],"depth":3},{"title":"Capturing logger stream","local":"capturing-logger-stream","sections":[],"depth":3},{"title":"Testing with environment variables","local":"testing-with-environment-variables","sections":[],"depth":3},{"title":"Getting reproducible results","local":"getting-reproducible-results","sections":[],"depth":3},{"title":"Debugging tests","local":"debugging-tests","sections":[],"depth":3}],"depth":2},{"title":"Working with github actions workflows","local":"working-with-github-actions-workflows","sections":[],"depth":2},{"title":"Testing Experimental CI Features","local":"testing-experimental-ci-features","sections":[],"depth":2}],"depth":1}';function e$(j){return Qw(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class a$ extends Fw{constructor(u){super(),Pw(this,u,e$,Ow,Sw,{})}}export{a$ as component};
