import{s as Ie,o as He,n as Fe}from"../chunks/scheduler.9bc65507.js";import{S as ze,i as Qe,g as o,s as n,r as m,A as Le,h as p,f as l,c as a,j as Ge,u as r,x as i,k as Ve,y as Ee,a as s,v as u,d as c,t as d,w as f}from"../chunks/index.707bf1b6.js";import{T as Oe}from"../chunks/Tip.c2ecdbf4.js";import{C as M}from"../chunks/CodeBlock.54a9f38d.js";import{H as dt}from"../chunks/Heading.342b1fa6.js";function Ye(bt){let b,y="<code>transformers.onnx</code>はもはやメンテナンスされていないため、モデルを上記で説明したように🤗 Optimumでエクスポートしてください。このセクションは将来のバージョンで削除されます。";return{c(){b=o("p"),b.innerHTML=y},l(g){b=p(g,"P",{"data-svelte-h":!0}),i(b)!=="svelte-haasss"&&(b.innerHTML=y)},m(g,ct){s(g,b,ct)},p:Fe,d(g){g&&l(b)}}}function qe(bt){let b,y,g,ct,h,Mt,w,re="🤗 Transformersモデルを本番環境に展開する際には、モデルを特殊なランタイムおよびハードウェアで読み込み、実行できるように、モデルをシリアライズされた形式にエクスポートすることが必要であるか、その恩恵を受けることができることがあります。",gt,x,ue="🤗 Optimumは、Transformersの拡張機能であり、PyTorchまたはTensorFlowからモデルをONNXやTFLiteなどのシリアライズされた形式にエクスポートすることを可能にする「exporters」モジュールを提供しています。また、🤗 Optimumは、最大の効率でターゲットハードウェアでモデルをトレーニングおよび実行するためのパフォーマンス最適化ツールも提供しています。",Tt,J,ce='このガイドでは、🤗 Transformersモデルを🤗 Optimumを使用してONNXにエクスポートする方法を示しており、モデルをTFLiteにエクスポートする方法については<a href="tflite">Export to TFLiteページ</a>を参照してください。',yt,$,ht,j,de='<a href="http://onnx.ai" rel="nofollow">ONNX（Open Neural Network eXchange）</a>は、PyTorchおよびTensorFlowを含むさまざまなフレームワークで深層学習モデルを表現するための共通の一連の演算子とファイル形式を定義するオープンスタンダードです。モデルがONNX形式にエクスポートされると、これらの演算子はニューラルネットワークを介するデータの流れを表す計算グラフ（一般的には「中間表現」と呼ばれる）を構築するために使用されます。',wt,N,fe="標準化された演算子とデータ型を備えたグラフを公開することで、ONNXはフレームワーク間の切り替えを容易にします。たとえば、PyTorchでトレーニングされたモデルはONNX形式にエクスポートし、それをTensorFlowでインポートすることができます（逆も同様です）。",xt,X,be="ONNX形式にエクスポートされたモデルは、以下のように使用できます：",Jt,U,Me='<li><a href="https://huggingface.co/docs/optimum/onnxruntime/usage_guides/optimization" rel="nofollow">グラフ最適化</a>や<a href="https://huggingface.co/docs/optimum/onnxruntime/usage_guides/quantization" rel="nofollow">量子化</a>などのテクニックを使用して推論のために最適化。</li> <li><a href="https://huggingface.co/docs/optimum/onnxruntime/package_reference/modeling_ort" rel="nofollow"><code>ORTModelForXXX</code>クラス</a>を介してONNX Runtimeで実行し、🤗 Transformersでおなじみの<code>AutoModel</code> APIに従います。</li> <li><a href="https://huggingface.co/docs/optimum/main/en/onnxruntime/usage_guides/pipelines" rel="nofollow">最適化された推論パイプライン</a>を介して実行し、🤗 Transformersの<a href="/docs/transformers/main/ja/main_classes/pipelines#transformers.pipeline">pipeline()</a>関数と同じAPIを持っています。</li>',$t,C,ge="🤗 Optimumは、設定オブジェクトを活用してONNXエクスポートをサポートしており、これらの設定オブジェクトは多くのモデルアーキテクチャ用に事前に作成されており、他のアーキテクチャにも簡単に拡張できるように設計されています。",jt,Z,Te='事前に作成された設定のリストについては、<a href="https://huggingface.co/docs/optimum/exporters/onnx/overview" rel="nofollow">🤗 Optimumドキュメント</a>を参照してください。',Nt,_,ye="🤗 TransformersモデルをONNXにエクスポートする方法は2つあります。以下では両方の方法を示します：",Xt,v,he="<li>export with 🤗 Optimum via CLI.</li> <li>export with 🤗 Optimum with <code>optimum.onnxruntime</code>.</li>",Ut,W,Ct,R,we="🤗 TransformersモデルをONNXにエクスポートするには、まず追加の依存関係をインストールしてください：",Zt,k,_t,B,xe='すべての利用可能な引数を確認するには、<a href="https://huggingface.co/docs/optimum/exporters/onnx/usage_guides/export_a_model#exporting-a-model-to-onnx-using-the-cli" rel="nofollow">🤗 Optimumドキュメント</a>を参照してください。または、コマンドラインでヘルプを表示することもできます：',vt,G,Wt,V,Je="🤗 Hubからモデルのチェックポイントをエクスポートするには、例えば <code>distilbert/distilbert-base-uncased-distilled-squad</code> を使いたい場合、以下のコマンドを実行してください：",Rt,I,kt,H,$e="進行状況を示し、結果の <code>model.onnx</code> が保存される場所を表示するログは、以下のように表示されるはずです：",Bt,F,Gt,z,je='上記の例は🤗 Hubからのチェックポイントのエクスポートを示しています。ローカルモデルをエクスポートする場合、まずモデルの重みとトークナイザのファイルを同じディレクトリ（<code>local_path</code>）に保存してください。CLIを使用する場合、🤗 Hubのチェックポイント名の代わりに<code>model</code>引数に<code>local_path</code>を渡し、<code>--task</code>引数を指定してください。<a href="https://huggingface.co/docs/optimum/exporters/task_manager" rel="nofollow">🤗 Optimumドキュメント</a>でサポートされているタスクのリストを確認できます。<code>task</code>引数が指定されていない場合、タスク固有のヘッドを持たないモデルアーキテクチャがデフォルトで選択されます。',Vt,Q,It,L,Ne='エクスポートされた <code>model.onnx</code> ファイルは、ONNX標準をサポートする<a href="https://onnx.ai/supported-tools.html#deployModel" rel="nofollow">多くのアクセラレータ</a>の1つで実行できます。たとえば、<a href="https://onnxruntime.ai/" rel="nofollow">ONNX Runtime</a>を使用してモデルを読み込み、実行する方法は以下の通りです：',Ht,E,Ft,O,Xe='🤗 HubからTensorFlowのチェックポイントをエクスポートするプロセスは、同様です。例えば、<a href="https://huggingface.co/keras-io" rel="nofollow">Keras organization</a>から純粋なTensorFlowのチェックポイントをエクスポートする方法は以下の通りです：',zt,Y,Qt,q,Lt,S,Ue="CLIの代わりに、🤗 TransformersモデルをONNXにプログラム的にエクスポートすることもできます。以下のように行います：",Et,P,Ot,A,Yt,K,Ce='現在エクスポートできないモデルをサポートするために貢献したい場合、まず<a href="https://huggingface.co/docs/optimum/exporters/onnx/overview" rel="nofollow"><code>optimum.exporters.onnx</code></a>でサポートされているかどうかを確認し、サポートされていない場合は<a href="https://huggingface.co/docs/optimum/exporters/onnx/usage_guides/contribute" rel="nofollow">🤗 Optimumに貢献</a>してください。',qt,D,St,T,Pt,tt,Ze="🤗 TransformersモデルをONNXにエクスポートするには、追加の依存関係をインストールしてください：",At,et,Kt,lt,_e="<code>transformers.onnx</code>パッケージをPythonモジュールとして使用して、事前に用意された設定を使用してチェックポイントをエクスポートする方法は以下の通りです：",Dt,st,te,nt,ve="この方法は、<code>--model</code>引数で定義されたチェックポイントのONNXグラフをエクスポートします。🤗 Hubのいずれかのチェックポイントまたはローカルに保存されたチェックポイントを渡すことができます。エクスポートされた<code>model.onnx</code>ファイルは、ONNX標準をサポートする多くのアクセラレータで実行できます。例えば、ONNX Runtimeを使用してモデルを読み込んで実行する方法は以下の通りです：",ee,at,le,ot,We="必要な出力名（例: <code>[&quot;last_hidden_state&quot;]</code>）は、各モデルのONNX構成を確認することで取得できます。例えば、DistilBERTの場合、次のようになります：",se,pt,ne,it,Re="ハブから純粋なTensorFlowのチェックポイントをプログラム的にエクスポートするプロセスは、以下のように同様です：",ae,mt,oe,rt,ke="ローカルに保存されたモデルをエクスポートする場合、モデルの重みとトークナイザのファイルを同じディレクトリに保存してください（例： <code>local-pt-checkpoint</code>）。その後、<code>transformers.onnx</code>パッケージの <code>--model</code>引数を希望するディレクトリに向けて設定して、ONNXにエクスポートします：",pe,ut,ie,ft,me;return h=new dt({props:{title:"Export to ONNX",local:"export-to-onnx",headingTag:"h1"}}),$=new dt({props:{title:"Export to ONNX",local:"export-to-onnx",headingTag:"h2"}}),W=new dt({props:{title:"Exporting a 🤗 Transformers model to ONNX with CLI",local:"exporting-a--transformers-model-to-onnx-with-cli",headingTag:"h3"}}),k=new M({props:{code:"cGlwJTIwaW5zdGFsbCUyMG9wdGltdW0lNUJleHBvcnRlcnMlNUQ=",highlighted:"pip install optimum[exporters]",wrap:!1}}),G=new M({props:{code:"b3B0aW11bS1jbGklMjBleHBvcnQlMjBvbm54JTIwLS1oZWxw",highlighted:'optimum-cli <span class="hljs-built_in">export</span> onnx --<span class="hljs-built_in">help</span>',wrap:!1}}),I=new M({props:{code:"b3B0aW11bS1jbGklMjBleHBvcnQlMjBvbm54JTIwLS1tb2RlbCUyMGRpc3RpbGJlcnQlMkZkaXN0aWxiZXJ0LWJhc2UtdW5jYXNlZC1kaXN0aWxsZWQtc3F1YWQlMjBkaXN0aWxiZXJ0X2Jhc2VfdW5jYXNlZF9zcXVhZF9vbm54JTJG",highlighted:'optimum-cli <span class="hljs-built_in">export</span> onnx --model distilbert/distilbert-base-uncased-distilled-squad distilbert_base_uncased_squad_onnx/',wrap:!1}}),F=new M({props:{code:"VmFsaWRhdGluZyUyME9OTlglMjBtb2RlbCUyMGRpc3RpbGJlcnRfYmFzZV91bmNhc2VkX3NxdWFkX29ubnglMkZtb2RlbC5vbm54Li4uJTBBJTA5LSU1QiVFMiU5QyU5MyU1RCUyME9OTlglMjBtb2RlbCUyMG91dHB1dCUyMG5hbWVzJTIwbWF0Y2glMjByZWZlcmVuY2UlMjBtb2RlbCUyMChzdGFydF9sb2dpdHMlMkMlMjBlbmRfbG9naXRzKSUwQSUwOS0lMjBWYWxpZGF0aW5nJTIwT05OWCUyME1vZGVsJTIwb3V0cHV0JTIwJTIyc3RhcnRfbG9naXRzJTIyJTNBJTBBJTA5JTA5LSU1QiVFMiU5QyU5MyU1RCUyMCgyJTJDJTIwMTYpJTIwbWF0Y2hlcyUyMCgyJTJDJTIwMTYpJTBBJTA5JTA5LSU1QiVFMiU5QyU5MyU1RCUyMGFsbCUyMHZhbHVlcyUyMGNsb3NlJTIwKGF0b2wlM0ElMjAwLjAwMDEpJTBBJTA5LSUyMFZhbGlkYXRpbmclMjBPTk5YJTIwTW9kZWwlMjBvdXRwdXQlMjAlMjJlbmRfbG9naXRzJTIyJTNBJTBBJTA5JTA5LSU1QiVFMiU5QyU5MyU1RCUyMCgyJTJDJTIwMTYpJTIwbWF0Y2hlcyUyMCgyJTJDJTIwMTYpJTBBJTA5JTA5LSU1QiVFMiU5QyU5MyU1RCUyMGFsbCUyMHZhbHVlcyUyMGNsb3NlJTIwKGF0b2wlM0ElMjAwLjAwMDEpJTBBVGhlJTIwT05OWCUyMGV4cG9ydCUyMHN1Y2NlZWRlZCUyMGFuZCUyMHRoZSUyMGV4cG9ydGVkJTIwbW9kZWwlMjB3YXMlMjBzYXZlZCUyMGF0JTNBJTIwZGlzdGlsYmVydF9iYXNlX3VuY2FzZWRfc3F1YWRfb25ueA==",highlighted:`Validating ONNX model distilbert_base_uncased_squad_onnx/model.onnx...
	-[✓] ONNX model output names match reference model (start_logits, end_logits)
	- Validating ONNX Model output <span class="hljs-string">&quot;start_logits&quot;</span>:
		-[✓] (2, 16) matches (2, 16)
		-[✓] all values close (atol: 0.0001)
	- Validating ONNX Model output <span class="hljs-string">&quot;end_logits&quot;</span>:
		-[✓] (2, 16) matches (2, 16)
		-[✓] all values close (atol: 0.0001)
The ONNX <span class="hljs-built_in">export</span> succeeded and the exported model was saved at: distilbert_base_uncased_squad_onnx`,wrap:!1}}),Q=new M({props:{code:"b3B0aW11bS1jbGklMjBleHBvcnQlMjBvbm54JTIwLS1tb2RlbCUyMGxvY2FsX3BhdGglMjAtLXRhc2slMjBxdWVzdGlvbi1hbnN3ZXJpbmclMjBkaXN0aWxiZXJ0X2Jhc2VfdW5jYXNlZF9zcXVhZF9vbm54JTJG",highlighted:'optimum-cli <span class="hljs-built_in">export</span> onnx --model local_path --task question-answering distilbert_base_uncased_squad_onnx/',wrap:!1}}),E=new M({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMEF1dG9Ub2tlbml6ZXIlMEFmcm9tJTIwb3B0aW11bS5vbm54cnVudGltZSUyMGltcG9ydCUyME9SVE1vZGVsRm9yUXVlc3Rpb25BbnN3ZXJpbmclMEElMEF0b2tlbml6ZXIlMjAlM0QlMjBBdXRvVG9rZW5pemVyLmZyb21fcHJldHJhaW5lZCglMjJkaXN0aWxiZXJ0X2Jhc2VfdW5jYXNlZF9zcXVhZF9vbm54JTIyKSUwQW1vZGVsJTIwJTNEJTIwT1JUTW9kZWxGb3JRdWVzdGlvbkFuc3dlcmluZy5mcm9tX3ByZXRyYWluZWQoJTIyZGlzdGlsYmVydF9iYXNlX3VuY2FzZWRfc3F1YWRfb25ueCUyMiklMEFpbnB1dHMlMjAlM0QlMjB0b2tlbml6ZXIoJTIyV2hhdCUyMGFtJTIwSSUyMHVzaW5nJTNGJTIyJTJDJTIwJTIyVXNpbmclMjBEaXN0aWxCRVJUJTIwd2l0aCUyME9OTlglMjBSdW50aW1lISUyMiUyQyUyMHJldHVybl90ZW5zb3JzJTNEJTIycHQlMjIpJTBBb3V0cHV0cyUyMCUzRCUyMG1vZGVsKCoqaW5wdXRzKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoTokenizer
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> optimum.onnxruntime <span class="hljs-keyword">import</span> ORTModelForQuestionAnswering

<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer = AutoTokenizer.from_pretrained(<span class="hljs-string">&quot;distilbert_base_uncased_squad_onnx&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>model = ORTModelForQuestionAnswering.from_pretrained(<span class="hljs-string">&quot;distilbert_base_uncased_squad_onnx&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>inputs = tokenizer(<span class="hljs-string">&quot;What am I using?&quot;</span>, <span class="hljs-string">&quot;Using DistilBERT with ONNX Runtime!&quot;</span>, return_tensors=<span class="hljs-string">&quot;pt&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>outputs = model(**inputs)`,wrap:!1}}),Y=new M({props:{code:"b3B0aW11bS1jbGklMjBleHBvcnQlMjBvbm54JTIwLS1tb2RlbCUyMGtlcmFzLWlvJTJGdHJhbnNmb3JtZXJzLXFhJTIwZGlzdGlsYmVydF9iYXNlX2Nhc2VkX3NxdWFkX29ubnglMkY=",highlighted:'optimum-cli <span class="hljs-built_in">export</span> onnx --model keras-io/transformers-qa distilbert_base_cased_squad_onnx/',wrap:!1}}),q=new dt({props:{title:"Exporting a 🤗 Transformers model to ONNX with optimum.onnxruntime",local:"exporting-a--transformers-model-to-onnx-with-optimumonnxruntime",headingTag:"h3"}}),P=new M({props:{code:"ZnJvbSUyMG9wdGltdW0ub25ueHJ1bnRpbWUlMjBpbXBvcnQlMjBPUlRNb2RlbEZvclNlcXVlbmNlQ2xhc3NpZmljYXRpb24lMEFmcm9tJTIwdHJhbnNmb3JtZXJzJTIwaW1wb3J0JTIwQXV0b1Rva2VuaXplciUwQSUwQW1vZGVsX2NoZWNrcG9pbnQlMjAlM0QlMjAlMjJkaXN0aWxiZXJ0X2Jhc2VfdW5jYXNlZF9zcXVhZCUyMiUwQXNhdmVfZGlyZWN0b3J5JTIwJTNEJTIwJTIyb25ueCUyRiUyMiUwQSUwQSUyMyUyMExvYWQlMjBhJTIwbW9kZWwlMjBmcm9tJTIwdHJhbnNmb3JtZXJzJTIwYW5kJTIwZXhwb3J0JTIwaXQlMjB0byUyME9OTlglMEFvcnRfbW9kZWwlMjAlM0QlMjBPUlRNb2RlbEZvclNlcXVlbmNlQ2xhc3NpZmljYXRpb24uZnJvbV9wcmV0cmFpbmVkKG1vZGVsX2NoZWNrcG9pbnQlMkMlMjBleHBvcnQlM0RUcnVlKSUwQXRva2VuaXplciUyMCUzRCUyMEF1dG9Ub2tlbml6ZXIuZnJvbV9wcmV0cmFpbmVkKG1vZGVsX2NoZWNrcG9pbnQpJTBBJTBBJTIzJTIwU2F2ZSUyMHRoZSUyMG9ubnglMjBtb2RlbCUyMGFuZCUyMHRva2VuaXplciUwQW9ydF9tb2RlbC5zYXZlX3ByZXRyYWluZWQoc2F2ZV9kaXJlY3RvcnkpJTBBdG9rZW5pemVyLnNhdmVfcHJldHJhaW5lZChzYXZlX2RpcmVjdG9yeSk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> optimum.onnxruntime <span class="hljs-keyword">import</span> ORTModelForSequenceClassification
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoTokenizer

<span class="hljs-meta">&gt;&gt;&gt; </span>model_checkpoint = <span class="hljs-string">&quot;distilbert_base_uncased_squad&quot;</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>save_directory = <span class="hljs-string">&quot;onnx/&quot;</span>

<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-comment"># Load a model from transformers and export it to ONNX</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>ort_model = ORTModelForSequenceClassification.from_pretrained(model_checkpoint, export=<span class="hljs-literal">True</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer = AutoTokenizer.from_pretrained(model_checkpoint)

<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-comment"># Save the onnx model and tokenizer</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>ort_model.save_pretrained(save_directory)
<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer.save_pretrained(save_directory)`,wrap:!1}}),A=new dt({props:{title:"Exporting a model for an unsupported architecture",local:"exporting-a-model-for-an-unsupported-architecture",headingTag:"h3"}}),D=new dt({props:{title:"Exporting a model with transformers.onnx",local:"exporting-a-model-with-transformersonnx",headingTag:"h3"}}),T=new Oe({props:{warning:!0,$$slots:{default:[Ye]},$$scope:{ctx:bt}}}),et=new M({props:{code:"cGlwJTIwaW5zdGFsbCUyMHRyYW5zZm9ybWVycyU1Qm9ubnglNUQ=",highlighted:"pip install transformers[onnx]",wrap:!1}}),st=new M({props:{code:"cHl0aG9uJTIwLW0lMjB0cmFuc2Zvcm1lcnMub25ueCUyMC0tbW9kZWwlM0RkaXN0aWxiZXJ0JTJGZGlzdGlsYmVydC1iYXNlLXVuY2FzZWQlMjBvbm54JTJG",highlighted:"python -m transformers.onnx --model=distilbert/distilbert-base-uncased onnx/",wrap:!1}}),at=new M({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMEF1dG9Ub2tlbml6ZXIlMEFmcm9tJTIwb25ueHJ1bnRpbWUlMjBpbXBvcnQlMjBJbmZlcmVuY2VTZXNzaW9uJTBBJTBBdG9rZW5pemVyJTIwJTNEJTIwQXV0b1Rva2VuaXplci5mcm9tX3ByZXRyYWluZWQoJTIyZGlzdGlsYmVydCUyRmRpc3RpbGJlcnQtYmFzZS11bmNhc2VkJTIyKSUwQXNlc3Npb24lMjAlM0QlMjBJbmZlcmVuY2VTZXNzaW9uKCUyMm9ubnglMkZtb2RlbC5vbm54JTIyKSUwQSUyMyUyME9OTlglMjBSdW50aW1lJTIwZXhwZWN0cyUyME51bVB5JTIwYXJyYXlzJTIwYXMlMjBpbnB1dCUwQWlucHV0cyUyMCUzRCUyMHRva2VuaXplciglMjJVc2luZyUyMERpc3RpbEJFUlQlMjB3aXRoJTIwT05OWCUyMFJ1bnRpbWUhJTIyJTJDJTIwcmV0dXJuX3RlbnNvcnMlM0QlMjJucCUyMiklMEFvdXRwdXRzJTIwJTNEJTIwc2Vzc2lvbi5ydW4ob3V0cHV0X25hbWVzJTNEJTVCJTIybGFzdF9oaWRkZW5fc3RhdGUlMjIlNUQlMkMlMjBpbnB1dF9mZWVkJTNEZGljdChpbnB1dHMpKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoTokenizer
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> onnxruntime <span class="hljs-keyword">import</span> InferenceSession

<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer = AutoTokenizer.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>session = InferenceSession(<span class="hljs-string">&quot;onnx/model.onnx&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-comment"># ONNX Runtime expects NumPy arrays as input</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>inputs = tokenizer(<span class="hljs-string">&quot;Using DistilBERT with ONNX Runtime!&quot;</span>, return_tensors=<span class="hljs-string">&quot;np&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>outputs = session.run(output_names=[<span class="hljs-string">&quot;last_hidden_state&quot;</span>], input_feed=<span class="hljs-built_in">dict</span>(inputs))`,wrap:!1}}),pt=new M({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycy5tb2RlbHMuZGlzdGlsYmVydCUyMGltcG9ydCUyMERpc3RpbEJlcnRDb25maWclMkMlMjBEaXN0aWxCZXJ0T25ueENvbmZpZyUwQSUwQWNvbmZpZyUyMCUzRCUyMERpc3RpbEJlcnRDb25maWcoKSUwQW9ubnhfY29uZmlnJTIwJTNEJTIwRGlzdGlsQmVydE9ubnhDb25maWcoY29uZmlnKSUwQXByaW50KGxpc3Qob25ueF9jb25maWcub3V0cHV0cy5rZXlzKCkpKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers.models.distilbert <span class="hljs-keyword">import</span> DistilBertConfig, DistilBertOnnxConfig

<span class="hljs-meta">&gt;&gt;&gt; </span>config = DistilBertConfig()
<span class="hljs-meta">&gt;&gt;&gt; </span>onnx_config = DistilBertOnnxConfig(config)
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(<span class="hljs-built_in">list</span>(onnx_config.outputs.keys()))
[<span class="hljs-string">&quot;last_hidden_state&quot;</span>]`,wrap:!1}}),mt=new M({props:{code:"cHl0aG9uJTIwLW0lMjB0cmFuc2Zvcm1lcnMub25ueCUyMC0tbW9kZWwlM0RrZXJhcy1pbyUyRnRyYW5zZm9ybWVycy1xYSUyMG9ubnglMkY=",highlighted:"python -m transformers.onnx --model=keras-io/transformers-qa onnx/",wrap:!1}}),ut=new M({props:{code:"cHl0aG9uJTIwLW0lMjB0cmFuc2Zvcm1lcnMub25ueCUyMC0tbW9kZWwlM0Rsb2NhbC1wdC1jaGVja3BvaW50JTIwb25ueCUyRg==",highlighted:"python -m transformers.onnx --model=local-pt-checkpoint onnx/",wrap:!1}}),{c(){b=o("meta"),y=n(),g=o("p"),ct=n(),m(h.$$.fragment),Mt=n(),w=o("p"),w.textContent=re,gt=n(),x=o("p"),x.textContent=ue,Tt=n(),J=o("p"),J.innerHTML=ce,yt=n(),m($.$$.fragment),ht=n(),j=o("p"),j.innerHTML=de,wt=n(),N=o("p"),N.textContent=fe,xt=n(),X=o("p"),X.textContent=be,Jt=n(),U=o("ul"),U.innerHTML=Me,$t=n(),C=o("p"),C.textContent=ge,jt=n(),Z=o("p"),Z.innerHTML=Te,Nt=n(),_=o("p"),_.textContent=ye,Xt=n(),v=o("ul"),v.innerHTML=he,Ut=n(),m(W.$$.fragment),Ct=n(),R=o("p"),R.textContent=we,Zt=n(),m(k.$$.fragment),_t=n(),B=o("p"),B.innerHTML=xe,vt=n(),m(G.$$.fragment),Wt=n(),V=o("p"),V.innerHTML=Je,Rt=n(),m(I.$$.fragment),kt=n(),H=o("p"),H.innerHTML=$e,Bt=n(),m(F.$$.fragment),Gt=n(),z=o("p"),z.innerHTML=je,Vt=n(),m(Q.$$.fragment),It=n(),L=o("p"),L.innerHTML=Ne,Ht=n(),m(E.$$.fragment),Ft=n(),O=o("p"),O.innerHTML=Xe,zt=n(),m(Y.$$.fragment),Qt=n(),m(q.$$.fragment),Lt=n(),S=o("p"),S.textContent=Ue,Et=n(),m(P.$$.fragment),Ot=n(),m(A.$$.fragment),Yt=n(),K=o("p"),K.innerHTML=Ce,qt=n(),m(D.$$.fragment),St=n(),m(T.$$.fragment),Pt=n(),tt=o("p"),tt.textContent=Ze,At=n(),m(et.$$.fragment),Kt=n(),lt=o("p"),lt.innerHTML=_e,Dt=n(),m(st.$$.fragment),te=n(),nt=o("p"),nt.innerHTML=ve,ee=n(),m(at.$$.fragment),le=n(),ot=o("p"),ot.innerHTML=We,se=n(),m(pt.$$.fragment),ne=n(),it=o("p"),it.textContent=Re,ae=n(),m(mt.$$.fragment),oe=n(),rt=o("p"),rt.innerHTML=ke,pe=n(),m(ut.$$.fragment),ie=n(),ft=o("p"),this.h()},l(t){const e=Le("svelte-u9bgzb",document.head);b=p(e,"META",{name:!0,content:!0}),e.forEach(l),y=a(t),g=p(t,"P",{}),Ge(g).forEach(l),ct=a(t),r(h.$$.fragment,t),Mt=a(t),w=p(t,"P",{"data-svelte-h":!0}),i(w)!=="svelte-qc94t0"&&(w.textContent=re),gt=a(t),x=p(t,"P",{"data-svelte-h":!0}),i(x)!=="svelte-1557kk1"&&(x.textContent=ue),Tt=a(t),J=p(t,"P",{"data-svelte-h":!0}),i(J)!=="svelte-ht5c1x"&&(J.innerHTML=ce),yt=a(t),r($.$$.fragment,t),ht=a(t),j=p(t,"P",{"data-svelte-h":!0}),i(j)!=="svelte-1jftxm"&&(j.innerHTML=de),wt=a(t),N=p(t,"P",{"data-svelte-h":!0}),i(N)!=="svelte-r6157j"&&(N.textContent=fe),xt=a(t),X=p(t,"P",{"data-svelte-h":!0}),i(X)!=="svelte-7mahc9"&&(X.textContent=be),Jt=a(t),U=p(t,"UL",{"data-svelte-h":!0}),i(U)!=="svelte-1j8xn51"&&(U.innerHTML=Me),$t=a(t),C=p(t,"P",{"data-svelte-h":!0}),i(C)!=="svelte-1c7xacs"&&(C.textContent=ge),jt=a(t),Z=p(t,"P",{"data-svelte-h":!0}),i(Z)!=="svelte-td5fmw"&&(Z.innerHTML=Te),Nt=a(t),_=p(t,"P",{"data-svelte-h":!0}),i(_)!=="svelte-hejyb2"&&(_.textContent=ye),Xt=a(t),v=p(t,"UL",{"data-svelte-h":!0}),i(v)!=="svelte-18tahix"&&(v.innerHTML=he),Ut=a(t),r(W.$$.fragment,t),Ct=a(t),R=p(t,"P",{"data-svelte-h":!0}),i(R)!=="svelte-ql60kh"&&(R.textContent=we),Zt=a(t),r(k.$$.fragment,t),_t=a(t),B=p(t,"P",{"data-svelte-h":!0}),i(B)!=="svelte-g5msyl"&&(B.innerHTML=xe),vt=a(t),r(G.$$.fragment,t),Wt=a(t),V=p(t,"P",{"data-svelte-h":!0}),i(V)!=="svelte-1xswql7"&&(V.innerHTML=Je),Rt=a(t),r(I.$$.fragment,t),kt=a(t),H=p(t,"P",{"data-svelte-h":!0}),i(H)!=="svelte-e4t3p2"&&(H.innerHTML=$e),Bt=a(t),r(F.$$.fragment,t),Gt=a(t),z=p(t,"P",{"data-svelte-h":!0}),i(z)!=="svelte-1de804l"&&(z.innerHTML=je),Vt=a(t),r(Q.$$.fragment,t),It=a(t),L=p(t,"P",{"data-svelte-h":!0}),i(L)!=="svelte-1rwgg53"&&(L.innerHTML=Ne),Ht=a(t),r(E.$$.fragment,t),Ft=a(t),O=p(t,"P",{"data-svelte-h":!0}),i(O)!=="svelte-1e2boax"&&(O.innerHTML=Xe),zt=a(t),r(Y.$$.fragment,t),Qt=a(t),r(q.$$.fragment,t),Lt=a(t),S=p(t,"P",{"data-svelte-h":!0}),i(S)!=="svelte-15ogace"&&(S.textContent=Ue),Et=a(t),r(P.$$.fragment,t),Ot=a(t),r(A.$$.fragment,t),Yt=a(t),K=p(t,"P",{"data-svelte-h":!0}),i(K)!=="svelte-6051gd"&&(K.innerHTML=Ce),qt=a(t),r(D.$$.fragment,t),St=a(t),r(T.$$.fragment,t),Pt=a(t),tt=p(t,"P",{"data-svelte-h":!0}),i(tt)!=="svelte-f5cz41"&&(tt.textContent=Ze),At=a(t),r(et.$$.fragment,t),Kt=a(t),lt=p(t,"P",{"data-svelte-h":!0}),i(lt)!=="svelte-foxlz0"&&(lt.innerHTML=_e),Dt=a(t),r(st.$$.fragment,t),te=a(t),nt=p(t,"P",{"data-svelte-h":!0}),i(nt)!=="svelte-kw829a"&&(nt.innerHTML=ve),ee=a(t),r(at.$$.fragment,t),le=a(t),ot=p(t,"P",{"data-svelte-h":!0}),i(ot)!=="svelte-xs9tjx"&&(ot.innerHTML=We),se=a(t),r(pt.$$.fragment,t),ne=a(t),it=p(t,"P",{"data-svelte-h":!0}),i(it)!=="svelte-1qs89on"&&(it.textContent=Re),ae=a(t),r(mt.$$.fragment,t),oe=a(t),rt=p(t,"P",{"data-svelte-h":!0}),i(rt)!=="svelte-1c2zce8"&&(rt.innerHTML=ke),pe=a(t),r(ut.$$.fragment,t),ie=a(t),ft=p(t,"P",{}),Ge(ft).forEach(l),this.h()},h(){Ve(b,"name","hf:doc:metadata"),Ve(b,"content",Se)},m(t,e){Ee(document.head,b),s(t,y,e),s(t,g,e),s(t,ct,e),u(h,t,e),s(t,Mt,e),s(t,w,e),s(t,gt,e),s(t,x,e),s(t,Tt,e),s(t,J,e),s(t,yt,e),u($,t,e),s(t,ht,e),s(t,j,e),s(t,wt,e),s(t,N,e),s(t,xt,e),s(t,X,e),s(t,Jt,e),s(t,U,e),s(t,$t,e),s(t,C,e),s(t,jt,e),s(t,Z,e),s(t,Nt,e),s(t,_,e),s(t,Xt,e),s(t,v,e),s(t,Ut,e),u(W,t,e),s(t,Ct,e),s(t,R,e),s(t,Zt,e),u(k,t,e),s(t,_t,e),s(t,B,e),s(t,vt,e),u(G,t,e),s(t,Wt,e),s(t,V,e),s(t,Rt,e),u(I,t,e),s(t,kt,e),s(t,H,e),s(t,Bt,e),u(F,t,e),s(t,Gt,e),s(t,z,e),s(t,Vt,e),u(Q,t,e),s(t,It,e),s(t,L,e),s(t,Ht,e),u(E,t,e),s(t,Ft,e),s(t,O,e),s(t,zt,e),u(Y,t,e),s(t,Qt,e),u(q,t,e),s(t,Lt,e),s(t,S,e),s(t,Et,e),u(P,t,e),s(t,Ot,e),u(A,t,e),s(t,Yt,e),s(t,K,e),s(t,qt,e),u(D,t,e),s(t,St,e),u(T,t,e),s(t,Pt,e),s(t,tt,e),s(t,At,e),u(et,t,e),s(t,Kt,e),s(t,lt,e),s(t,Dt,e),u(st,t,e),s(t,te,e),s(t,nt,e),s(t,ee,e),u(at,t,e),s(t,le,e),s(t,ot,e),s(t,se,e),u(pt,t,e),s(t,ne,e),s(t,it,e),s(t,ae,e),u(mt,t,e),s(t,oe,e),s(t,rt,e),s(t,pe,e),u(ut,t,e),s(t,ie,e),s(t,ft,e),me=!0},p(t,[e]){const Be={};e&2&&(Be.$$scope={dirty:e,ctx:t}),T.$set(Be)},i(t){me||(c(h.$$.fragment,t),c($.$$.fragment,t),c(W.$$.fragment,t),c(k.$$.fragment,t),c(G.$$.fragment,t),c(I.$$.fragment,t),c(F.$$.fragment,t),c(Q.$$.fragment,t),c(E.$$.fragment,t),c(Y.$$.fragment,t),c(q.$$.fragment,t),c(P.$$.fragment,t),c(A.$$.fragment,t),c(D.$$.fragment,t),c(T.$$.fragment,t),c(et.$$.fragment,t),c(st.$$.fragment,t),c(at.$$.fragment,t),c(pt.$$.fragment,t),c(mt.$$.fragment,t),c(ut.$$.fragment,t),me=!0)},o(t){d(h.$$.fragment,t),d($.$$.fragment,t),d(W.$$.fragment,t),d(k.$$.fragment,t),d(G.$$.fragment,t),d(I.$$.fragment,t),d(F.$$.fragment,t),d(Q.$$.fragment,t),d(E.$$.fragment,t),d(Y.$$.fragment,t),d(q.$$.fragment,t),d(P.$$.fragment,t),d(A.$$.fragment,t),d(D.$$.fragment,t),d(T.$$.fragment,t),d(et.$$.fragment,t),d(st.$$.fragment,t),d(at.$$.fragment,t),d(pt.$$.fragment,t),d(mt.$$.fragment,t),d(ut.$$.fragment,t),me=!1},d(t){t&&(l(y),l(g),l(ct),l(Mt),l(w),l(gt),l(x),l(Tt),l(J),l(yt),l(ht),l(j),l(wt),l(N),l(xt),l(X),l(Jt),l(U),l($t),l(C),l(jt),l(Z),l(Nt),l(_),l(Xt),l(v),l(Ut),l(Ct),l(R),l(Zt),l(_t),l(B),l(vt),l(Wt),l(V),l(Rt),l(kt),l(H),l(Bt),l(Gt),l(z),l(Vt),l(It),l(L),l(Ht),l(Ft),l(O),l(zt),l(Qt),l(Lt),l(S),l(Et),l(Ot),l(Yt),l(K),l(qt),l(St),l(Pt),l(tt),l(At),l(Kt),l(lt),l(Dt),l(te),l(nt),l(ee),l(le),l(ot),l(se),l(ne),l(it),l(ae),l(oe),l(rt),l(pe),l(ie),l(ft)),l(b),f(h,t),f($,t),f(W,t),f(k,t),f(G,t),f(I,t),f(F,t),f(Q,t),f(E,t),f(Y,t),f(q,t),f(P,t),f(A,t),f(D,t),f(T,t),f(et,t),f(st,t),f(at,t),f(pt,t),f(mt,t),f(ut,t)}}}const Se='{"title":"Export to ONNX","local":"export-to-onnx","sections":[{"title":"Export to ONNX","local":"export-to-onnx","sections":[{"title":"Exporting a 🤗 Transformers model to ONNX with CLI","local":"exporting-a--transformers-model-to-onnx-with-cli","sections":[],"depth":3},{"title":"Exporting a 🤗 Transformers model to ONNX with optimum.onnxruntime","local":"exporting-a--transformers-model-to-onnx-with-optimumonnxruntime","sections":[],"depth":3},{"title":"Exporting a model for an unsupported architecture","local":"exporting-a-model-for-an-unsupported-architecture","sections":[],"depth":3},{"title":"Exporting a model with transformers.onnx","local":"exporting-a-model-with-transformersonnx","sections":[],"depth":3}],"depth":2}],"depth":1}';function Pe(bt){return He(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class ll extends ze{constructor(b){super(),Qe(this,b,Pe,qe,Ie,{})}}export{ll as component};
