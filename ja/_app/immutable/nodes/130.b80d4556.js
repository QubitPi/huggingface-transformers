import{s as ol,o as fl,n as pl}from"../chunks/scheduler.9bc65507.js";import{S as ml,i as cl,g as p,s as n,r as c,A as rl,h as o,f as l,c as s,j as il,u as r,x as f,k as nl,y as $l,a as i,v as $,d,t as a,w as u}from"../chunks/index.707bf1b6.js";import{T as sl}from"../chunks/Tip.c2ecdbf4.js";import{C}from"../chunks/CodeBlock.54a9f38d.js";import{H as Me}from"../chunks/Heading.342b1fa6.js";function dl(xe){let m,y="ファイルが別のファイルの完全なコピーである場合、それを<code>utils/check_copies.py</code>の<code>FULL_COPIES</code>定数に登録する必要があります。";return{c(){m=p("p"),m.innerHTML=y},l(b){m=o(b,"P",{"data-svelte-h":!0}),f(m)!=="svelte-1y3om5f"&&(m.innerHTML=y)},m(b,_){i(b,m,_)},p:pl,d(b){b&&l(m)}}}function al(xe){let m,y="もし置換がフォーマットを変更する場合（たとえば、短い名前を非常に長い名前に置き換える場合など）、自動フォーマッタを適用した後にコピーが確認されます。";return{c(){m=p("p"),m.textContent=y},l(b){m=o(b,"P",{"data-svelte-h":!0}),f(m)!=="svelte-1nu2h1"&&(m.textContent=y)},m(b,_){i(b,m,_)},p:pl,d(b){b&&l(m)}}}function ul(xe){let m,y,b,_,T,we,w,vt="🤗 Transformersリポジトリでプルリクエストを開くと、追加しているパッチが既存のものを壊していないことを確認するために、かなりの数のチェックが実行されます。これらのチェックには、次の4つのタイプがあります：",ve,v,Rt="<li>通常のテスト</li> <li>ドキュメンテーションのビルド</li> <li>コードとドキュメンテーションのスタイル</li> <li>リポジトリ全体の一貫性</li>",Re,R,kt="このドキュメントでは、これらのさまざまなチェックとその背後にある理由、そしてそれらのいずれかがあなたのプルリクエストで失敗した場合のローカルでのデバッグ方法について説明します。",ke,k,gt="なお、理想的には、開発者用のインストールが必要です：",ge,g,He,H,Ht="または編集可能なインストールの場合：",Le,L,he,h,Lt="トランスフォーマーズのリポジトリ内で作業しています。トランスフォーマーズのオプションの依存関係の数が増えたため、すべてを取得できない可能性があります。開発用インストールが失敗した場合、作業しているディープラーニングフレームワーク（PyTorch、TensorFlow、および/またはFlax）をインストールし、次の手順を実行してください。",Pe,P,Je,J,ht="または編集可能なインストールの場合：",Ue,U,We,W,Ze,Z,Pt="<code>ci/circleci: run_tests_</code> で始まるすべてのジョブは、Transformersのテストスイートの一部を実行します。これらのジョブは、特定の環境でライブラリの一部に焦点を当てて実行されます。たとえば、<code>ci/circleci: run_tests_pipelines_tf</code> は、TensorFlowのみがインストールされた環境でパイプラインのテストを実行します。",Be,B,Jt="テストスイートの一部のみが実行されるように注意してください。テストスイートは、変更前と変更後のPRのライブラリの違いを決定し、その違いに影響を受けるテストを選択するためのユーティリティが実行されます。このユーティリティは、ローカルで以下のコマンドを実行して実行できます：",Fe,F,Ie,I,Ut="<li><p>リポジトリのルートからスクリプトを実行します。これは次のステップを実行します：</p> <ol><li><p>差分内の各ファイルをチェックし、変更がコード内にあるか、コメントやドキュメンテーション文字列のみにあるかを確認します。実際のコード変更があるファイルのみを保持します。</p></li> <li><p>内部のマップを構築します。このマップは、ライブラリのソースコードの各ファイルが再帰的に影響を与えるすべてのファイルを提供します。モジュールAがモジュールBに影響を与えるとは、モジュールBがモジュールAをインポートする場合を指します。再帰的な影響を得るには、モジュールAからモジュールBへのモジュールのチェーンが必要で、各モジュールは前のモジュールをインポートする必要があります。</p></li> <li><p>このマップをステップ1で収集したファイルに適用します。これにより、PRに影響を受けるモデルファイルのリストが得られます。</p></li> <li><p>これらのファイルをそれに対応するテストファイルにマップし、実行するテストのリストを取得します。</p></li></ol></li> <li><p>スクリプトをローカルで実行する場合、ステップ1、3、および4の結果が表示され、実行するテストがわかります。スクリプトはまた、<code>test_list.txt</code> という名前のファイルを作成します。このファイルには実行するテストのリストが含まれており、次のコマンドでローカルで実行できます：</p></li>",Se,S,ze,z,Ge,G,Wt="<code>build_pr_documentation</code> ジョブは、ドキュメンテーションのビルドを行い、あなたのPRがマージされた後にすべてが正常に表示されることを確認します。ボットがプレビューのドキュメンテーションへのリンクをPRに追加します。PRに対する変更は、プレビューに自動的に反映されます。ドキュメンテーションのビルドに失敗した場合、失敗したジョブの隣にある「詳細」をクリックして、何が問題になっているかを確認できます。多くの場合、問題は<code>toctree</code>内のファイルが不足しているなど、単純なものです。",Ve,V,Zt='ドキュメンテーションをローカルでビルドまたはプレビューしたい場合は、<a href="https://github.com/huggingface/transformers/tree/main/docs" rel="nofollow">docsフォルダ内の<code>README.md</code></a>をご覧ください。',Ee,E,Ye,Y,Bt="すべてのソースファイル、例、テストには、<code>black</code>と<code>ruff</code>を使用してコードのフォーマットが適用されます。また、ドックストリングと<code>rst</code>ファイルのフォーマット、Transformersの<code>__init__.py</code>ファイルで実行される遅延インポートの順序についてもカスタムツールが存在します（<code>utils/style_doc.py</code>と<code>utils/custom_init_isort.py</code>）。これらすべては、以下を実行することで起動できます。",Qe,Q,Ae,A,Ft="CIは、<code>ci/circleci: check_code_quality</code> チェック内でこれらのチェックが適用されていることを確認します。また、<code>ruff</code> を実行し、未定義の変数や使用されていない変数がある場合にエラーを報告します。このチェックをローカルで実行するには、以下のコマンドを使用してください。",je,j,qe,q,It="時間がかかることがあります。したがって、現在のブランチで変更したファイルのみで同じことを実行するには、次のコマンドを実行します。",Ne,N,Xe,X,St="この最後のコマンドは、リポジトリの整合性のためのすべての追加のチェックも実行します。それらを詳しく見てみましょう。",Oe,O,De,D,zt="これには、あなたのPRがリポジトリを適切な状態に保ったままであることを確認するためのすべてのテストが含まれており、ci/<code>circleci: check_repository_consistency</code> チェックによって実行されます。ローカルでこのチェックを実行するには、以下を実行します。",Ke,K,et,ee,Gt="これを確認します：",tt,te,Vt="<li><code>utils/check_repo.py</code> によって実行される、init に追加されたすべてのオブジェクトが文書化されています。</li> <li><code>utils/check_inits.py</code> によって実行される、すべての <code>__init__.py</code> ファイルがその2つのセクションで同じ内容を持っています。</li> <li><code>utils/check_copies.py</code> によって実行される、他のモジュールからのコピーとして識別されたすべてのコードが元のコードと一致しています。</li> <li><code>utils/check_config_docstrings.py</code> によって実行される、すべての設定クラスには少なくとも1つの有効なチェックポイントがドキュメント文字列に記載されています。</li> <li><code>utils/check_config_attributes.py</code> によって実行される、すべての設定クラスには、対応するモデリングファイルで使用されている属性のみが含まれています。</li> <li><code>utils/check_copies.py</code> によって実行される、README とドキュメントのインデックスの翻訳が、メインのREADME と同じモデルリストを持っています。</li> <li><code>utils/check_table.py</code> によって実行される、ドキュメンテーションの自動生成テーブルが最新であることを確認します。</li> <li><code>utils/check_dummies.py</code> によって実行される、すべてのオブジェクトが利用可能であり、オプションの依存関係がすべてインストールされていなくても問題ありません。</li>",lt,le,Et="このチェックが失敗する場合、最初の2つの項目は手動で修正する必要があり、最後の4つはコマンドを実行して自動的に修正できます。",it,ie,nt,ne,Yt="追加のチェックポイントは、新しいモデルを追加するPull Request（PR）に関連しています。主に次の点を確認します：",st,se,Qt="<li>すべての追加されたモデルは、Auto-mapping（<code>utils/check_repo.py</code>で実行）に含まれています。</li> <li>すべてのモデルが適切にテストされています（<code>utils/check_repo.py</code>で実行）。</li>",pt,pe,ot,oe,At="Transformersライブラリは、モデルコードに関して非常に意見があるため、各モデルは他のモデルに依存せずに完全に1つのファイルに実装する必要があります。したがって、特定のモデルのコードのコピーが元のコードと一貫しているかどうかを確認する仕組みを追加しました。これにより、バグ修正がある場合、他の影響を受けるモデルをすべて確認し、変更を伝達するかコピーを破棄するかを選択できます。",ft,x,mt,fe,jt='この仕組みは、<code># Copied from xxx</code>という形式のコメントに依存しています。<code>xxx</code>は、コピーされているクラスまたは関数の完全なパスを含む必要があります。例えば、<code>RobertaSelfOutput</code>は<code>BertSelfOutput</code>クラスの直接のコピーですので、<a href="https://github.com/huggingface/transformers/blob/2bd7a27a671fd1d98059124024f580f8f5c0f3b5/src/transformers/models/roberta/modeling_roberta.py#L289" rel="nofollow">こちら</a>にコメントがあります。',ct,me,rt,ce,qt='注意点として、これをクラス全体に適用する代わりに、コピー元の関連メソッドに適用できます。たとえば、<a href="https://github.com/huggingface/transformers/blob/2bd7a27a671fd1d98059124024f580f8f5c0f3b5/src/transformers/models/roberta/modeling_roberta.py#L598" rel="nofollow">こちら</a>では、<code>RobertaPreTrainedModel._init_weights</code> が <code>BertPreTrainedModel</code> からコピーされており、以下のコメントがあります：',$t,re,dt,$e,Nt="注：矢印の周りにはスペースが含まれていてはいけません（もちろん、そのスペースが置換パターンの一部である場合を除きます）。",at,de,Xt='カンマで区切られた複数のパターンを追加できます。例えば、ここでは <code>CamemberForMaskedLM</code> は <code>RobertaForMaskedLM</code> の直接のコピーで、2つの置換があります： <code>Roberta</code> から <code>Camembert</code> へ、そして <code>ROBERTA</code> から <code>CAMEMBERT</code> へと置換されます。<a href="https://github.com/huggingface/transformers/blob/15082a9dc6950ecae63a0d3e5060b2fc7f15050a/src/transformers/models/camembert/modeling_camembert.py#L929" rel="nofollow">こちら</a>で、この作業はコメント付きで行われています。',ut,ae,bt,ue,Ot="もし順序が重要な場合（以前の置換と競合する可能性があるため）、置換は左から右に実行されます。",Ct,M,yt,be,Dt='パターンが同じ置換の異なるケース（大文字と小文字のバリアントがある）の場合、オプションとして <code>all-casing</code> を追加するだけの別の方法もあります。<a href="https://github.com/huggingface/transformers/blob/15082a9dc6950ecae63a0d3e5060b2fc7f15050a/src/transformers/models/mobilebert/modeling_mobilebert.py#L1237" rel="nofollow">こちら</a>は、<code>MobileBertForSequenceClassification</code> 内の例で、コメントがついています。',_t,Ce,xt,ye,Kt="この場合、コードは「BertForSequenceClassification」からコピーされ、次のように置換されます：",Mt,_e,el="<li><code>Bert</code> を <code>MobileBert</code> に置き換える（例：<code>init</code>で <code>MobileBertModel</code> を使用する場合）</li> <li><code>bert</code> を <code>mobilebert</code> に置き換える（例：<code>self.mobilebert</code> を定義する場合）</li> <li><code>BERT</code> を <code>MOBILEBERT</code> に置き換える（定数 <code>MOBILEBERT_INPUTS_DOCSTRING</code> 内で）</li>",Tt,Te,wt;return T=new Me({props:{title:"Checks on a Pull Request",local:"checks-on-a-pull-request",headingTag:"h1"}}),g=new C({props:{code:"cGlwJTIwaW5zdGFsbCUyMHRyYW5zZm9ybWVycyU1QmRldiU1RA==",highlighted:"pip install transformers[dev]",wrap:!1}}),L=new C({props:{code:"cGlwJTIwaW5zdGFsbCUyMC1lJTIwLiU1QmRldiU1RA==",highlighted:"pip install -e .[dev]",wrap:!1}}),P=new C({props:{code:"cGlwJTIwaW5zdGFsbCUyMHRyYW5zZm9ybWVycyU1QnF1YWxpdHklNUQ=",highlighted:"pip install transformers[quality]",wrap:!1}}),U=new C({props:{code:"cGlwJTIwaW5zdGFsbCUyMC1lJTIwLiU1QnF1YWxpdHklNUQ=",highlighted:"pip install -e .[quality]",wrap:!1}}),W=new Me({props:{title:"Tests",local:"tests",headingTag:"h2"}}),F=new C({props:{code:"cHl0aG9uJTIwdXRpbHMlMkZ0ZXN0c19mZXRjaGVyLnB5",highlighted:"python utils/tests_fetcher.py",wrap:!1}}),S=new C({props:{code:"cHl0aG9uJTIwLW0lMjBweXRlc3QlMjAtbiUyMDglMjAtLWRpc3QlM0Rsb2FkZmlsZSUyMC1yQSUyMC1zJTIwJTI0KGNhdCUyMHRlc3RfbGlzdC50eHQp",highlighted:'python -m pytest -n 8 --dist=loadfile -rA -s $(<span class="hljs-built_in">cat</span> test_list.txt)',wrap:!1}}),z=new Me({props:{title:"Documentation build",local:"documentation-build",headingTag:"h2"}}),E=new Me({props:{title:"Code and documentation style",local:"code-and-documentation-style",headingTag:"h2"}}),Q=new C({props:{code:"bWFrZSUyMHN0eWxl",highlighted:"make style",wrap:!1}}),j=new C({props:{code:"bWFrZSUyMHF1YWxpdHk=",highlighted:"make quality",wrap:!1}}),N=new C({props:{code:"bWFrZSUyMGZpeHVw",highlighted:"make fixup",wrap:!1}}),O=new Me({props:{title:"Repository consistency",local:"repository-consistency",headingTag:"h2"}}),K=new C({props:{code:"bWFrZSUyMHJlcG8tY29uc2lzdGVuY3k=",highlighted:"make repo-consistency",wrap:!1}}),ie=new C({props:{code:"bWFrZSUyMGZpeC1jb3BpZXM=",highlighted:"make fix-copies",wrap:!1}}),pe=new Me({props:{title:"Check copies",local:"check-copies",headingTag:"h3"}}),x=new sl({props:{$$slots:{default:[dl]},$$scope:{ctx:xe}}}),me=new C({props:{code:"JTIzJTIwQ29waWVkJTIwZnJvbSUyMHRyYW5zZm9ybWVycy5tb2RlbHMuYmVydC5tb2RlbGluZ19iZXJ0LkJlcnRTZWxmT3V0cHV0",highlighted:'<span class="hljs-comment"># Copied from transformers.models.bert.modeling_bert.BertSelfOutput</span>',wrap:!1}}),re=new C({props:{code:"JTIzJTIwQ29waWVkJTIwZnJvbSUyMHRyYW5zZm9ybWVycy5tb2RlbHMuYmVydC5tb2RlbGluZ19iZXJ0LkJlcnRBdHRlbnRpb24lMjB3aXRoJTIwQmVydC0lM0VSb2JlcnRh",highlighted:'<span class="hljs-comment"># Copied from transformers.models.bert.modeling_bert.BertAttention with Bert-&gt;Roberta</span>',wrap:!1}}),ae=new C({props:{code:"JTIzJTIwQ29waWVkJTIwZnJvbSUyMHRyYW5zZm9ybWVycy5tb2RlbHMucm9iZXJ0YS5tb2RlbGluZ19yb2JlcnRhLlJvYmVydGFGb3JNYXNrZWRMTSUyMHdpdGglMjBSb2JlcnRhLSUzRUNhbWVtYmVydCUyQyUyMFJPQkVSVEEtJTNFQ0FNRU1CRVJU",highlighted:'<span class="hljs-comment"># Copied from transformers.models.roberta.modeling_roberta.RobertaForMaskedLM with Roberta-&gt;Camembert, ROBERTA-&gt;CAMEMBERT</span>',wrap:!1}}),M=new sl({props:{$$slots:{default:[al]},$$scope:{ctx:xe}}}),Ce=new C({props:{code:"JTIzJTIwQ29waWVkJTIwZnJvbSUyMHRyYW5zZm9ybWVycy5tb2RlbHMuYmVydC5tb2RlbGluZ19iZXJ0LkJlcnRGb3JTZXF1ZW5jZUNsYXNzaWZpY2F0aW9uJTIwd2l0aCUyMEJlcnQtJTNFTW9iaWxlQmVydCUyMGFsbC1jYXNpbmc=",highlighted:'<span class="hljs-comment"># Copied from transformers.models.bert.modeling_bert.BertForSequenceClassification with Bert-&gt;MobileBert all-casing</span>',wrap:!1}}),{c(){m=p("meta"),y=n(),b=p("p"),_=n(),c(T.$$.fragment),we=n(),w=p("p"),w.textContent=vt,ve=n(),v=p("ul"),v.innerHTML=Rt,Re=n(),R=p("p"),R.textContent=kt,ke=n(),k=p("p"),k.textContent=gt,ge=n(),c(g.$$.fragment),He=n(),H=p("p"),H.textContent=Ht,Le=n(),c(L.$$.fragment),he=n(),h=p("p"),h.textContent=Lt,Pe=n(),c(P.$$.fragment),Je=n(),J=p("p"),J.textContent=ht,Ue=n(),c(U.$$.fragment),We=n(),c(W.$$.fragment),Ze=n(),Z=p("p"),Z.innerHTML=Pt,Be=n(),B=p("p"),B.textContent=Jt,Fe=n(),c(F.$$.fragment),Ie=n(),I=p("ol"),I.innerHTML=Ut,Se=n(),c(S.$$.fragment),ze=n(),c(z.$$.fragment),Ge=n(),G=p("p"),G.innerHTML=Wt,Ve=n(),V=p("p"),V.innerHTML=Zt,Ee=n(),c(E.$$.fragment),Ye=n(),Y=p("p"),Y.innerHTML=Bt,Qe=n(),c(Q.$$.fragment),Ae=n(),A=p("p"),A.innerHTML=Ft,je=n(),c(j.$$.fragment),qe=n(),q=p("p"),q.textContent=It,Ne=n(),c(N.$$.fragment),Xe=n(),X=p("p"),X.textContent=St,Oe=n(),c(O.$$.fragment),De=n(),D=p("p"),D.innerHTML=zt,Ke=n(),c(K.$$.fragment),et=n(),ee=p("p"),ee.textContent=Gt,tt=n(),te=p("ul"),te.innerHTML=Vt,lt=n(),le=p("p"),le.textContent=Et,it=n(),c(ie.$$.fragment),nt=n(),ne=p("p"),ne.textContent=Yt,st=n(),se=p("ul"),se.innerHTML=Qt,pt=n(),c(pe.$$.fragment),ot=n(),oe=p("p"),oe.textContent=At,ft=n(),c(x.$$.fragment),mt=n(),fe=p("p"),fe.innerHTML=jt,ct=n(),c(me.$$.fragment),rt=n(),ce=p("p"),ce.innerHTML=qt,$t=n(),c(re.$$.fragment),dt=n(),$e=p("p"),$e.textContent=Nt,at=n(),de=p("p"),de.innerHTML=Xt,ut=n(),c(ae.$$.fragment),bt=n(),ue=p("p"),ue.textContent=Ot,Ct=n(),c(M.$$.fragment),yt=n(),be=p("p"),be.innerHTML=Dt,_t=n(),c(Ce.$$.fragment),xt=n(),ye=p("p"),ye.textContent=Kt,Mt=n(),_e=p("ul"),_e.innerHTML=el,Tt=n(),Te=p("p"),this.h()},l(e){const t=rl("svelte-u9bgzb",document.head);m=o(t,"META",{name:!0,content:!0}),t.forEach(l),y=s(e),b=o(e,"P",{}),il(b).forEach(l),_=s(e),r(T.$$.fragment,e),we=s(e),w=o(e,"P",{"data-svelte-h":!0}),f(w)!=="svelte-6vhga0"&&(w.textContent=vt),ve=s(e),v=o(e,"UL",{"data-svelte-h":!0}),f(v)!=="svelte-1w9l3ef"&&(v.innerHTML=Rt),Re=s(e),R=o(e,"P",{"data-svelte-h":!0}),f(R)!=="svelte-1juzo9p"&&(R.textContent=kt),ke=s(e),k=o(e,"P",{"data-svelte-h":!0}),f(k)!=="svelte-647kz4"&&(k.textContent=gt),ge=s(e),r(g.$$.fragment,e),He=s(e),H=o(e,"P",{"data-svelte-h":!0}),f(H)!=="svelte-lw6edn"&&(H.textContent=Ht),Le=s(e),r(L.$$.fragment,e),he=s(e),h=o(e,"P",{"data-svelte-h":!0}),f(h)!=="svelte-1vico0x"&&(h.textContent=Lt),Pe=s(e),r(P.$$.fragment,e),Je=s(e),J=o(e,"P",{"data-svelte-h":!0}),f(J)!=="svelte-lw6edn"&&(J.textContent=ht),Ue=s(e),r(U.$$.fragment,e),We=s(e),r(W.$$.fragment,e),Ze=s(e),Z=o(e,"P",{"data-svelte-h":!0}),f(Z)!=="svelte-10po4e2"&&(Z.innerHTML=Pt),Be=s(e),B=o(e,"P",{"data-svelte-h":!0}),f(B)!=="svelte-16uydr7"&&(B.textContent=Jt),Fe=s(e),r(F.$$.fragment,e),Ie=s(e),I=o(e,"OL",{"data-svelte-h":!0}),f(I)!=="svelte-1b9pjr"&&(I.innerHTML=Ut),Se=s(e),r(S.$$.fragment,e),ze=s(e),r(z.$$.fragment,e),Ge=s(e),G=o(e,"P",{"data-svelte-h":!0}),f(G)!=="svelte-umlta"&&(G.innerHTML=Wt),Ve=s(e),V=o(e,"P",{"data-svelte-h":!0}),f(V)!=="svelte-1fp7wxn"&&(V.innerHTML=Zt),Ee=s(e),r(E.$$.fragment,e),Ye=s(e),Y=o(e,"P",{"data-svelte-h":!0}),f(Y)!=="svelte-12z54zn"&&(Y.innerHTML=Bt),Qe=s(e),r(Q.$$.fragment,e),Ae=s(e),A=o(e,"P",{"data-svelte-h":!0}),f(A)!=="svelte-1dx6wwz"&&(A.innerHTML=Ft),je=s(e),r(j.$$.fragment,e),qe=s(e),q=o(e,"P",{"data-svelte-h":!0}),f(q)!=="svelte-jgs55c"&&(q.textContent=It),Ne=s(e),r(N.$$.fragment,e),Xe=s(e),X=o(e,"P",{"data-svelte-h":!0}),f(X)!=="svelte-qx87bt"&&(X.textContent=St),Oe=s(e),r(O.$$.fragment,e),De=s(e),D=o(e,"P",{"data-svelte-h":!0}),f(D)!=="svelte-88pwk7"&&(D.innerHTML=zt),Ke=s(e),r(K.$$.fragment,e),et=s(e),ee=o(e,"P",{"data-svelte-h":!0}),f(ee)!=="svelte-11vt7bs"&&(ee.textContent=Gt),tt=s(e),te=o(e,"UL",{"data-svelte-h":!0}),f(te)!=="svelte-sssvxb"&&(te.innerHTML=Vt),lt=s(e),le=o(e,"P",{"data-svelte-h":!0}),f(le)!=="svelte-5h7qyc"&&(le.textContent=Et),it=s(e),r(ie.$$.fragment,e),nt=s(e),ne=o(e,"P",{"data-svelte-h":!0}),f(ne)!=="svelte-1deoey3"&&(ne.textContent=Yt),st=s(e),se=o(e,"UL",{"data-svelte-h":!0}),f(se)!=="svelte-8r90zs"&&(se.innerHTML=Qt),pt=s(e),r(pe.$$.fragment,e),ot=s(e),oe=o(e,"P",{"data-svelte-h":!0}),f(oe)!=="svelte-1tq3qt9"&&(oe.textContent=At),ft=s(e),r(x.$$.fragment,e),mt=s(e),fe=o(e,"P",{"data-svelte-h":!0}),f(fe)!=="svelte-9sv7tf"&&(fe.innerHTML=jt),ct=s(e),r(me.$$.fragment,e),rt=s(e),ce=o(e,"P",{"data-svelte-h":!0}),f(ce)!=="svelte-1ig1nlf"&&(ce.innerHTML=qt),$t=s(e),r(re.$$.fragment,e),dt=s(e),$e=o(e,"P",{"data-svelte-h":!0}),f($e)!=="svelte-106g9sp"&&($e.textContent=Nt),at=s(e),de=o(e,"P",{"data-svelte-h":!0}),f(de)!=="svelte-zpbi7d"&&(de.innerHTML=Xt),ut=s(e),r(ae.$$.fragment,e),bt=s(e),ue=o(e,"P",{"data-svelte-h":!0}),f(ue)!=="svelte-1itl7yg"&&(ue.textContent=Ot),Ct=s(e),r(M.$$.fragment,e),yt=s(e),be=o(e,"P",{"data-svelte-h":!0}),f(be)!=="svelte-1ytoy9i"&&(be.innerHTML=Dt),_t=s(e),r(Ce.$$.fragment,e),xt=s(e),ye=o(e,"P",{"data-svelte-h":!0}),f(ye)!=="svelte-rmlc43"&&(ye.textContent=Kt),Mt=s(e),_e=o(e,"UL",{"data-svelte-h":!0}),f(_e)!=="svelte-743mux"&&(_e.innerHTML=el),Tt=s(e),Te=o(e,"P",{}),il(Te).forEach(l),this.h()},h(){nl(m,"name","hf:doc:metadata"),nl(m,"content",bl)},m(e,t){$l(document.head,m),i(e,y,t),i(e,b,t),i(e,_,t),$(T,e,t),i(e,we,t),i(e,w,t),i(e,ve,t),i(e,v,t),i(e,Re,t),i(e,R,t),i(e,ke,t),i(e,k,t),i(e,ge,t),$(g,e,t),i(e,He,t),i(e,H,t),i(e,Le,t),$(L,e,t),i(e,he,t),i(e,h,t),i(e,Pe,t),$(P,e,t),i(e,Je,t),i(e,J,t),i(e,Ue,t),$(U,e,t),i(e,We,t),$(W,e,t),i(e,Ze,t),i(e,Z,t),i(e,Be,t),i(e,B,t),i(e,Fe,t),$(F,e,t),i(e,Ie,t),i(e,I,t),i(e,Se,t),$(S,e,t),i(e,ze,t),$(z,e,t),i(e,Ge,t),i(e,G,t),i(e,Ve,t),i(e,V,t),i(e,Ee,t),$(E,e,t),i(e,Ye,t),i(e,Y,t),i(e,Qe,t),$(Q,e,t),i(e,Ae,t),i(e,A,t),i(e,je,t),$(j,e,t),i(e,qe,t),i(e,q,t),i(e,Ne,t),$(N,e,t),i(e,Xe,t),i(e,X,t),i(e,Oe,t),$(O,e,t),i(e,De,t),i(e,D,t),i(e,Ke,t),$(K,e,t),i(e,et,t),i(e,ee,t),i(e,tt,t),i(e,te,t),i(e,lt,t),i(e,le,t),i(e,it,t),$(ie,e,t),i(e,nt,t),i(e,ne,t),i(e,st,t),i(e,se,t),i(e,pt,t),$(pe,e,t),i(e,ot,t),i(e,oe,t),i(e,ft,t),$(x,e,t),i(e,mt,t),i(e,fe,t),i(e,ct,t),$(me,e,t),i(e,rt,t),i(e,ce,t),i(e,$t,t),$(re,e,t),i(e,dt,t),i(e,$e,t),i(e,at,t),i(e,de,t),i(e,ut,t),$(ae,e,t),i(e,bt,t),i(e,ue,t),i(e,Ct,t),$(M,e,t),i(e,yt,t),i(e,be,t),i(e,_t,t),$(Ce,e,t),i(e,xt,t),i(e,ye,t),i(e,Mt,t),i(e,_e,t),i(e,Tt,t),i(e,Te,t),wt=!0},p(e,[t]){const tl={};t&2&&(tl.$$scope={dirty:t,ctx:e}),x.$set(tl);const ll={};t&2&&(ll.$$scope={dirty:t,ctx:e}),M.$set(ll)},i(e){wt||(d(T.$$.fragment,e),d(g.$$.fragment,e),d(L.$$.fragment,e),d(P.$$.fragment,e),d(U.$$.fragment,e),d(W.$$.fragment,e),d(F.$$.fragment,e),d(S.$$.fragment,e),d(z.$$.fragment,e),d(E.$$.fragment,e),d(Q.$$.fragment,e),d(j.$$.fragment,e),d(N.$$.fragment,e),d(O.$$.fragment,e),d(K.$$.fragment,e),d(ie.$$.fragment,e),d(pe.$$.fragment,e),d(x.$$.fragment,e),d(me.$$.fragment,e),d(re.$$.fragment,e),d(ae.$$.fragment,e),d(M.$$.fragment,e),d(Ce.$$.fragment,e),wt=!0)},o(e){a(T.$$.fragment,e),a(g.$$.fragment,e),a(L.$$.fragment,e),a(P.$$.fragment,e),a(U.$$.fragment,e),a(W.$$.fragment,e),a(F.$$.fragment,e),a(S.$$.fragment,e),a(z.$$.fragment,e),a(E.$$.fragment,e),a(Q.$$.fragment,e),a(j.$$.fragment,e),a(N.$$.fragment,e),a(O.$$.fragment,e),a(K.$$.fragment,e),a(ie.$$.fragment,e),a(pe.$$.fragment,e),a(x.$$.fragment,e),a(me.$$.fragment,e),a(re.$$.fragment,e),a(ae.$$.fragment,e),a(M.$$.fragment,e),a(Ce.$$.fragment,e),wt=!1},d(e){e&&(l(y),l(b),l(_),l(we),l(w),l(ve),l(v),l(Re),l(R),l(ke),l(k),l(ge),l(He),l(H),l(Le),l(he),l(h),l(Pe),l(Je),l(J),l(Ue),l(We),l(Ze),l(Z),l(Be),l(B),l(Fe),l(Ie),l(I),l(Se),l(ze),l(Ge),l(G),l(Ve),l(V),l(Ee),l(Ye),l(Y),l(Qe),l(Ae),l(A),l(je),l(qe),l(q),l(Ne),l(Xe),l(X),l(Oe),l(De),l(D),l(Ke),l(et),l(ee),l(tt),l(te),l(lt),l(le),l(it),l(nt),l(ne),l(st),l(se),l(pt),l(ot),l(oe),l(ft),l(mt),l(fe),l(ct),l(rt),l(ce),l($t),l(dt),l($e),l(at),l(de),l(ut),l(bt),l(ue),l(Ct),l(yt),l(be),l(_t),l(xt),l(ye),l(Mt),l(_e),l(Tt),l(Te)),l(m),u(T,e),u(g,e),u(L,e),u(P,e),u(U,e),u(W,e),u(F,e),u(S,e),u(z,e),u(E,e),u(Q,e),u(j,e),u(N,e),u(O,e),u(K,e),u(ie,e),u(pe,e),u(x,e),u(me,e),u(re,e),u(ae,e),u(M,e),u(Ce,e)}}}const bl='{"title":"Checks on a Pull Request","local":"checks-on-a-pull-request","sections":[{"title":"Tests","local":"tests","sections":[],"depth":2},{"title":"Documentation build","local":"documentation-build","sections":[],"depth":2},{"title":"Code and documentation style","local":"code-and-documentation-style","sections":[],"depth":2},{"title":"Repository consistency","local":"repository-consistency","sections":[{"title":"Check copies","local":"check-copies","sections":[],"depth":3}],"depth":2}],"depth":1}';function Cl(xe){return fl(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class wl extends ml{constructor(m){super(),cl(this,m,Cl,ul,ol,{})}}export{wl as component};
