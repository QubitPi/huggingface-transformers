import{s as fs,o as bs,n as Us}from"../chunks/scheduler.987d3921.js";import{S as ws,i as Js,g as i,s as t,r as o,A as Ts,h as p,f as n,c as a,j as ys,u as c,x as r,k as Pe,y as xs,a as l,v as m,d,t as h,w as u}from"../chunks/index.c8b1fed4.js";import{T as $s}from"../chunks/Tip.6bc1e794.js";import{C as M}from"../chunks/CodeBlock.18094d58.js";import{H as ie}from"../chunks/Heading.3fa3b67f.js";function ks(re){let g,b="Eine vollständige Liste der unterstützten Aufgaben und verfügbaren Parameter finden Sie in der <code>pipeline()</code>-Dokumentation.";return{c(){g=i("p"),g.innerHTML=b},l(j){g=p(j,"P",{"data-svelte-h":!0}),r(g)!=="svelte-13a0a0h"&&(g.innerHTML=b)},m(j,ae){l(j,g,ae)},p:Us,d(j){j&&n(g)}}}function Is(re){let g,b,j,ae,U,oe,w,De='Die <code>pipeline()</code> macht es einfach, jedes beliebige Modell aus dem <a href="https://huggingface.co/models" rel="nofollow">Hub</a> für die Inferenz auf jede Sprache, Computer Vision, Sprache und multimodale Aufgaben zu verwenden. Selbst wenn Sie keine Erfahrung mit einer bestimmten Modalität haben oder nicht mit dem zugrundeliegenden Code hinter den Modellen vertraut sind, können Sie sie mit der <code>pipeline()</code> für Inferenzen verwenden! In diesem Beispiel lernen Sie, wie:',ce,J,Ke="<li>Eine <code>pipeline()</code> für Inferenz zu verwenden.</li> <li>Einen bestimmten Tokenizer oder ein bestimmtes Modell zu verwenden.</li> <li>Eine <code>pipeline()</code> für Audio-, Vision- und multimodale Aufgaben zu verwenden.</li>",me,y,de,T,he,x,Oe="Obwohl jede Aufgabe eine zugehörige <code>pipeline()</code> hat, ist es einfacher, die allgemeine <code>pipeline()</code>-Abstraktion zu verwenden, die alle aufgabenspezifischen Pipelines enthält. Die <code>pipeline()</code> lädt automatisch ein Standardmodell und eine Vorverarbeitungsklasse, die für Ihre Aufgabe inferenzfähig ist.",ue,$,es="<li>Beginnen Sie mit der Erstellung einer <code>pipeline()</code> und geben Sie eine Inferenzaufgabe an:</li>",ge,k,Me,f,ss="<li>Übergeben Sie Ihren Eingabetext an die <code>pipeline()</code>:</li>",je,I,ye,Z,ns="Wenn Sie mehr als eine Eingabe haben, übergeben Sie die Eingabe als Liste:",fe,v,be,C,ls="Alle zusätzlichen Parameter für Ihre Aufgabe können auch in die <code>pipeline()</code> aufgenommen werden. Die Aufgabe <code>Text-Generierung</code> hat eine <code>generate()</code>-Methode mit mehreren Parametern zur Steuerung der Ausgabe. Wenn Sie zum Beispiel mehr als eine Ausgabe erzeugen wollen, setzen Sie den Parameter <code>num_return_sequences</code>:",Ue,G,we,B,Je,W,ts='Die <code>pipeline()</code> akzeptiert jedes Modell aus dem <a href="https://huggingface.co/models" rel="nofollow">Hub</a>. Auf dem Hub gibt es Tags, mit denen Sie nach einem Modell filtern können, das Sie für Ihre Aufgabe verwenden möchten. Sobald Sie ein passendes Modell ausgewählt haben, laden Sie es mit der entsprechenden <code>AutoModelFor</code> und <code>AutoTokenizer</code> Klasse. Laden Sie zum Beispiel die Klasse <code>AutoModelForCausalLM</code> für eine kausale Sprachmodellierungsaufgabe:',Te,z,xe,V,as="Erstellen Sie eine <code>pipeline()</code> für Ihre Aufgabe, und geben Sie das Modell und den Tokenizer an, die Sie geladen haben:",$e,S,ke,H,is="Übergeben Sie Ihren Eingabetext an die <code>pipeline()</code> , um einen Text zu erzeugen:",Ie,R,Ze,q,ve,E,ps="Die <code>pipeline()</code> unterstützt auch Audioaufgaben wie Audioklassifizierung und automatische Spracherkennung.",Ce,Q,rs="Lassen Sie uns zum Beispiel die Emotion in diesem Audioclip klassifizieren:",Ge,A,Be,_,os='Finden Sie ein <a href="https://huggingface.co/models?pipeline_tag=audio-classification" rel="nofollow">Audioklassifikation</a> Modell auf dem Model Hub für Emotionserkennung und laden Sie es in die <code>pipeline()</code>:',We,N,ze,X,cs="Übergeben Sie die Audiodatei an die <code>pipeline()</code>:",Ve,L,Se,F,He,Y,ms="Die Verwendung einer <code>pipeline()</code> für Bildverarbeitungsaufgaben ist praktisch identisch.",Re,P,ds="Geben Sie Ihre Aufgabe an und übergeben Sie Ihr Bild an den Klassifikator. Das Bild kann ein Link oder ein lokaler Pfad zu dem Bild sein. Zum Beispiel: Welche Katzenart ist unten abgebildet?",qe,D,hs='<img src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/pipeline-cat-chonk.jpeg" alt="pipeline-cat-chonk"/>',Ee,K,Qe,O,Ae,ee,us="Die <code>pipeline()</code> unterstützt mehr als eine Modalität. Eine Aufgabe zur Beantwortung visueller Fragen (VQA) kombiniert zum Beispiel Text und Bild. Verwenden Sie einen beliebigen Bildlink und eine Frage, die Sie zu dem Bild stellen möchten. Das Bild kann eine URL oder ein lokaler Pfad zu dem Bild sein.",_e,se,gs="Wenn Sie zum Beispiel das gleiche Bild wie in der obigen Vision-Pipeline verwenden:",Ne,ne,Xe,le,Ms="Erstellen Sie eine Pipeline für “vqa” und übergeben Sie ihr das Bild und die Frage:",Le,te,Fe,pe,Ye;return U=new ie({props:{title:"Pipelines für Inferenzen",local:"pipelines-für-inferenzen",headingTag:"h1"}}),y=new $s({props:{$$slots:{default:[ks]},$$scope:{ctx:re}}}),T=new ie({props:{title:"Verwendung von Pipelines",local:"verwendung-von-pipelines",headingTag:"h2"}}),k=new M({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMHBpcGVsaW5lJTBBJTBBZ2VuZXJhdG9yJTIwJTNEJTIwcGlwZWxpbmUodGFzayUzRCUyMnRleHQtZ2VuZXJhdGlvbiUyMik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline

<span class="hljs-meta">&gt;&gt;&gt; </span>generator = pipeline(task=<span class="hljs-string">&quot;text-generation&quot;</span>)`,wrap:!1}}),I=new M({props:{code:"Z2VuZXJhdG9yKCUwQSUyMCUyMCUyMCUyMCUyMlRocmVlJTIwUmluZ3MlMjBmb3IlMjB0aGUlMjBFbHZlbi1raW5ncyUyMHVuZGVyJTIwdGhlJTIwc2t5JTJDJTIwU2V2ZW4lMjBmb3IlMjB0aGUlMjBEd2FyZi1sb3JkcyUyMGluJTIwdGhlaXIlMjBoYWxscyUyMG9mJTIwc3RvbmUlMjIlMEEpJTIwJTIwJTIzJTIwZG9jdGVzdCUzQSUyMCUyQlNLSVA=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>generator(
<span class="hljs-meta">... </span>    <span class="hljs-string">&quot;Three Rings for the Elven-kings under the sky, Seven for the Dwarf-lords in their halls of stone&quot;</span>
<span class="hljs-meta">... </span>)  <span class="hljs-comment"># doctest: +SKIP</span>
[{<span class="hljs-string">&#x27;generated_text&#x27;</span>: <span class="hljs-string">&#x27;Three Rings for the Elven-kings under the sky, Seven for the Dwarf-lords in their halls of stone, Seven for the Iron-priests at the door to the east, and thirteen for the Lord Kings at the end of the mountain&#x27;</span>}]`,wrap:!1}}),v=new M({props:{code:"Z2VuZXJhdG9yKCUwQSUyMCUyMCUyMCUyMCU1QiUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMlRocmVlJTIwUmluZ3MlMjBmb3IlMjB0aGUlMjBFbHZlbi1raW5ncyUyMHVuZGVyJTIwdGhlJTIwc2t5JTJDJTIwU2V2ZW4lMjBmb3IlMjB0aGUlMjBEd2FyZi1sb3JkcyUyMGluJTIwdGhlaXIlMjBoYWxscyUyMG9mJTIwc3RvbmUlMjIlMkMlMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjJOaW5lJTIwZm9yJTIwTW9ydGFsJTIwTWVuJTJDJTIwZG9vbWVkJTIwdG8lMjBkaWUlMkMlMjBPbmUlMjBmb3IlMjB0aGUlMjBEYXJrJTIwTG9yZCUyMG9uJTIwaGlzJTIwZGFyayUyMHRocm9uZSUyMiUyQyUwQSUyMCUyMCUyMCUyMCU1RCUwQSklMjAlMjAlMjMlMjBkb2N0ZXN0JTNBJTIwJTJCU0tJUA==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>generator(
<span class="hljs-meta">... </span>    [
<span class="hljs-meta">... </span>        <span class="hljs-string">&quot;Three Rings for the Elven-kings under the sky, Seven for the Dwarf-lords in their halls of stone&quot;</span>,
<span class="hljs-meta">... </span>        <span class="hljs-string">&quot;Nine for Mortal Men, doomed to die, One for the Dark Lord on his dark throne&quot;</span>,
<span class="hljs-meta">... </span>    ]
<span class="hljs-meta">... </span>)  <span class="hljs-comment"># doctest: +SKIP</span>`,wrap:!1}}),G=new M({props:{code:"Z2VuZXJhdG9yKCUwQSUyMCUyMCUyMCUyMCUyMlRocmVlJTIwUmluZ3MlMjBmb3IlMjB0aGUlMjBFbHZlbi1raW5ncyUyMHVuZGVyJTIwdGhlJTIwc2t5JTJDJTIwU2V2ZW4lMjBmb3IlMjB0aGUlMjBEd2FyZi1sb3JkcyUyMGluJTIwdGhlaXIlMjBoYWxscyUyMG9mJTIwc3RvbmUlMjIlMkMlMEElMjAlMjAlMjAlMjBudW1fcmV0dXJuX3NlcXVlbmNlcyUzRDIlMkMlMEEpJTIwJTIwJTIzJTIwZG9jdGVzdCUzQSUyMCUyQlNLSVA=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>generator(
<span class="hljs-meta">... </span>    <span class="hljs-string">&quot;Three Rings for the Elven-kings under the sky, Seven for the Dwarf-lords in their halls of stone&quot;</span>,
<span class="hljs-meta">... </span>    num_return_sequences=<span class="hljs-number">2</span>,
<span class="hljs-meta">... </span>)  <span class="hljs-comment"># doctest: +SKIP</span>`,wrap:!1}}),B=new ie({props:{title:"Wählen Sie ein Modell und einen Tokenizer",local:"wählen-sie-ein-modell-und-einen-tokenizer",headingTag:"h3"}}),z=new M({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMEF1dG9Ub2tlbml6ZXIlMkMlMjBBdXRvTW9kZWxGb3JDYXVzYWxMTSUwQSUwQXRva2VuaXplciUyMCUzRCUyMEF1dG9Ub2tlbml6ZXIuZnJvbV9wcmV0cmFpbmVkKCUyMmRpc3RpbGJlcnQlMkZkaXN0aWxncHQyJTIyKSUwQW1vZGVsJTIwJTNEJTIwQXV0b01vZGVsRm9yQ2F1c2FsTE0uZnJvbV9wcmV0cmFpbmVkKCUyMmRpc3RpbGJlcnQlMkZkaXN0aWxncHQyJTIyKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoTokenizer, AutoModelForCausalLM

<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer = AutoTokenizer.from_pretrained(<span class="hljs-string">&quot;distilbert/distilgpt2&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>model = AutoModelForCausalLM.from_pretrained(<span class="hljs-string">&quot;distilbert/distilgpt2&quot;</span>)`,wrap:!1}}),S=new M({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMHBpcGVsaW5lJTBBJTBBZ2VuZXJhdG9yJTIwJTNEJTIwcGlwZWxpbmUodGFzayUzRCUyMnRleHQtZ2VuZXJhdGlvbiUyMiUyQyUyMG1vZGVsJTNEbW9kZWwlMkMlMjB0b2tlbml6ZXIlM0R0b2tlbml6ZXIp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline

<span class="hljs-meta">&gt;&gt;&gt; </span>generator = pipeline(task=<span class="hljs-string">&quot;text-generation&quot;</span>, model=model, tokenizer=tokenizer)`,wrap:!1}}),R=new M({props:{code:"Z2VuZXJhdG9yKCUwQSUyMCUyMCUyMCUyMCUyMlRocmVlJTIwUmluZ3MlMjBmb3IlMjB0aGUlMjBFbHZlbi1raW5ncyUyMHVuZGVyJTIwdGhlJTIwc2t5JTJDJTIwU2V2ZW4lMjBmb3IlMjB0aGUlMjBEd2FyZi1sb3JkcyUyMGluJTIwdGhlaXIlMjBoYWxscyUyMG9mJTIwc3RvbmUlMjIlMEEpJTIwJTIwJTIzJTIwZG9jdGVzdCUzQSUyMCUyQlNLSVA=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>generator(
<span class="hljs-meta">... </span>    <span class="hljs-string">&quot;Three Rings for the Elven-kings under the sky, Seven for the Dwarf-lords in their halls of stone&quot;</span>
<span class="hljs-meta">... </span>)  <span class="hljs-comment"># doctest: +SKIP</span>
[{<span class="hljs-string">&#x27;generated_text&#x27;</span>: <span class="hljs-string">&#x27;Three Rings for the Elven-kings under the sky, Seven for the Dwarf-lords in their halls of stone, Seven for the Dragon-lords (for them to rule in a world ruled by their rulers, and all who live within the realm&#x27;</span>}]`,wrap:!1}}),q=new ie({props:{title:"Audio-Pipeline",local:"audio-pipeline",headingTag:"h2"}}),A=new M({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBaW1wb3J0JTIwdG9yY2glMEElMEF0b3JjaC5tYW51YWxfc2VlZCg0MiklMEFkcyUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJoZi1pbnRlcm5hbC10ZXN0aW5nJTJGbGlicmlzcGVlY2hfYXNyX2RlbW8lMjIlMkMlMjAlMjJjbGVhbiUyMiUyQyUyMHNwbGl0JTNEJTIydmFsaWRhdGlvbiUyMiklMEFhdWRpb19maWxlJTIwJTNEJTIwZHMlNUIwJTVEJTVCJTIyYXVkaW8lMjIlNUQlNUIlMjJwYXRoJTIyJTVE",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> torch

<span class="hljs-meta">&gt;&gt;&gt; </span>torch.manual_seed(<span class="hljs-number">42</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>ds = load_dataset(<span class="hljs-string">&quot;hf-internal-testing/librispeech_asr_demo&quot;</span>, <span class="hljs-string">&quot;clean&quot;</span>, split=<span class="hljs-string">&quot;validation&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>audio_file = ds[<span class="hljs-number">0</span>][<span class="hljs-string">&quot;audio&quot;</span>][<span class="hljs-string">&quot;path&quot;</span>]`,wrap:!1}}),N=new M({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMHBpcGVsaW5lJTBBJTBBYXVkaW9fY2xhc3NpZmllciUyMCUzRCUyMHBpcGVsaW5lKCUwQSUyMCUyMCUyMCUyMHRhc2slM0QlMjJhdWRpby1jbGFzc2lmaWNhdGlvbiUyMiUyQyUyMG1vZGVsJTNEJTIyZWhjYWxhYnJlcyUyRndhdjJ2ZWMyLWxnLXhsc3ItZW4tc3BlZWNoLWVtb3Rpb24tcmVjb2duaXRpb24lMjIlMEEp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline

<span class="hljs-meta">&gt;&gt;&gt; </span>audio_classifier = pipeline(
<span class="hljs-meta">... </span>    task=<span class="hljs-string">&quot;audio-classification&quot;</span>, model=<span class="hljs-string">&quot;ehcalabres/wav2vec2-lg-xlsr-en-speech-emotion-recognition&quot;</span>
<span class="hljs-meta">... </span>)`,wrap:!1}}),L=new M({props:{code:"cHJlZHMlMjAlM0QlMjBhdWRpb19jbGFzc2lmaWVyKGF1ZGlvX2ZpbGUpJTBBcHJlZHMlMjAlM0QlMjAlNUIlN0IlMjJzY29yZSUyMiUzQSUyMHJvdW5kKHByZWQlNUIlMjJzY29yZSUyMiU1RCUyQyUyMDQpJTJDJTIwJTIybGFiZWwlMjIlM0ElMjBwcmVkJTVCJTIybGFiZWwlMjIlNUQlN0QlMjBmb3IlMjBwcmVkJTIwaW4lMjBwcmVkcyU1RCUwQXByZWRz",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>preds = audio_classifier(audio_file)
<span class="hljs-meta">&gt;&gt;&gt; </span>preds = [{<span class="hljs-string">&quot;score&quot;</span>: <span class="hljs-built_in">round</span>(pred[<span class="hljs-string">&quot;score&quot;</span>], <span class="hljs-number">4</span>), <span class="hljs-string">&quot;label&quot;</span>: pred[<span class="hljs-string">&quot;label&quot;</span>]} <span class="hljs-keyword">for</span> pred <span class="hljs-keyword">in</span> preds]
<span class="hljs-meta">&gt;&gt;&gt; </span>preds
[{<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.1315</span>, <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;calm&#x27;</span>}, {<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.1307</span>, <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;neutral&#x27;</span>}, {<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.1274</span>, <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;sad&#x27;</span>}, {<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.1261</span>, <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;fearful&#x27;</span>}, {<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.1242</span>, <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;happy&#x27;</span>}]`,wrap:!1}}),F=new ie({props:{title:"Bildverarbeitungs-Pipeline",local:"bildverarbeitungs-pipeline",headingTag:"h2"}}),K=new M({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMHBpcGVsaW5lJTBBJTBBdmlzaW9uX2NsYXNzaWZpZXIlMjAlM0QlMjBwaXBlbGluZSh0YXNrJTNEJTIyaW1hZ2UtY2xhc3NpZmljYXRpb24lMjIpJTBBcHJlZHMlMjAlM0QlMjB2aXNpb25fY2xhc3NpZmllciglMEElMjAlMjAlMjAlMjBpbWFnZXMlM0QlMjJodHRwcyUzQSUyRiUyRmh1Z2dpbmdmYWNlLmNvJTJGZGF0YXNldHMlMkZodWdnaW5nZmFjZSUyRmRvY3VtZW50YXRpb24taW1hZ2VzJTJGcmVzb2x2ZSUyRm1haW4lMkZwaXBlbGluZS1jYXQtY2hvbmsuanBlZyUyMiUwQSklMEFwcmVkcyUyMCUzRCUyMCU1QiU3QiUyMnNjb3JlJTIyJTNBJTIwcm91bmQocHJlZCU1QiUyMnNjb3JlJTIyJTVEJTJDJTIwNCklMkMlMjAlMjJsYWJlbCUyMiUzQSUyMHByZWQlNUIlMjJsYWJlbCUyMiU1RCU3RCUyMGZvciUyMHByZWQlMjBpbiUyMHByZWRzJTVEJTBBcHJlZHM=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline

<span class="hljs-meta">&gt;&gt;&gt; </span>vision_classifier = pipeline(task=<span class="hljs-string">&quot;image-classification&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>preds = vision_classifier(
<span class="hljs-meta">... </span>    images=<span class="hljs-string">&quot;https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/pipeline-cat-chonk.jpeg&quot;</span>
<span class="hljs-meta">... </span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>preds = [{<span class="hljs-string">&quot;score&quot;</span>: <span class="hljs-built_in">round</span>(pred[<span class="hljs-string">&quot;score&quot;</span>], <span class="hljs-number">4</span>), <span class="hljs-string">&quot;label&quot;</span>: pred[<span class="hljs-string">&quot;label&quot;</span>]} <span class="hljs-keyword">for</span> pred <span class="hljs-keyword">in</span> preds]
<span class="hljs-meta">&gt;&gt;&gt; </span>preds
[{<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.4335</span>, <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;lynx, catamount&#x27;</span>}, {<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.0348</span>, <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;cougar, puma, catamount, mountain lion, painter, panther, Felis concolor&#x27;</span>}, {<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.0324</span>, <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;snow leopard, ounce, Panthera uncia&#x27;</span>}, {<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.0239</span>, <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;Egyptian cat&#x27;</span>}, {<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.0229</span>, <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;tiger cat&#x27;</span>}]`,wrap:!1}}),O=new ie({props:{title:"Multimodale Pipeline",local:"multimodale-pipeline",headingTag:"h2"}}),ne=new M({props:{code:"aW1hZ2UlMjAlM0QlMjAlMjJodHRwcyUzQSUyRiUyRmh1Z2dpbmdmYWNlLmNvJTJGZGF0YXNldHMlMkZodWdnaW5nZmFjZSUyRmRvY3VtZW50YXRpb24taW1hZ2VzJTJGcmVzb2x2ZSUyRm1haW4lMkZwaXBlbGluZS1jYXQtY2hvbmsuanBlZyUyMiUwQXF1ZXN0aW9uJTIwJTNEJTIwJTIyV2hlcmUlMjBpcyUyMHRoZSUyMGNhdCUzRiUyMg==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>image = <span class="hljs-string">&quot;https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/pipeline-cat-chonk.jpeg&quot;</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>question = <span class="hljs-string">&quot;Where is the cat?&quot;</span>`,wrap:!1}}),te=new M({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMHBpcGVsaW5lJTBBJTBBdnFhJTIwJTNEJTIwcGlwZWxpbmUodGFzayUzRCUyMnZxYSUyMiklMEFwcmVkcyUyMCUzRCUyMHZxYShpbWFnZSUzRGltYWdlJTJDJTIwcXVlc3Rpb24lM0RxdWVzdGlvbiklMEFwcmVkcyUyMCUzRCUyMCU1QiU3QiUyMnNjb3JlJTIyJTNBJTIwcm91bmQocHJlZCU1QiUyMnNjb3JlJTIyJTVEJTJDJTIwNCklMkMlMjAlMjJhbnN3ZXIlMjIlM0ElMjBwcmVkJTVCJTIyYW5zd2VyJTIyJTVEJTdEJTIwZm9yJTIwcHJlZCUyMGluJTIwcHJlZHMlNUQlMEFwcmVkcw==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline

<span class="hljs-meta">&gt;&gt;&gt; </span>vqa = pipeline(task=<span class="hljs-string">&quot;vqa&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>preds = vqa(image=image, question=question)
<span class="hljs-meta">&gt;&gt;&gt; </span>preds = [{<span class="hljs-string">&quot;score&quot;</span>: <span class="hljs-built_in">round</span>(pred[<span class="hljs-string">&quot;score&quot;</span>], <span class="hljs-number">4</span>), <span class="hljs-string">&quot;answer&quot;</span>: pred[<span class="hljs-string">&quot;answer&quot;</span>]} <span class="hljs-keyword">for</span> pred <span class="hljs-keyword">in</span> preds]
<span class="hljs-meta">&gt;&gt;&gt; </span>preds
[{<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.9112</span>, <span class="hljs-string">&#x27;answer&#x27;</span>: <span class="hljs-string">&#x27;snow&#x27;</span>}, {<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.8796</span>, <span class="hljs-string">&#x27;answer&#x27;</span>: <span class="hljs-string">&#x27;in snow&#x27;</span>}, {<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.6717</span>, <span class="hljs-string">&#x27;answer&#x27;</span>: <span class="hljs-string">&#x27;outside&#x27;</span>}, {<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.0291</span>, <span class="hljs-string">&#x27;answer&#x27;</span>: <span class="hljs-string">&#x27;on ground&#x27;</span>}, {<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.027</span>, <span class="hljs-string">&#x27;answer&#x27;</span>: <span class="hljs-string">&#x27;ground&#x27;</span>}]`,wrap:!1}}),{c(){g=i("meta"),b=t(),j=i("p"),ae=t(),o(U.$$.fragment),oe=t(),w=i("p"),w.innerHTML=De,ce=t(),J=i("ul"),J.innerHTML=Ke,me=t(),o(y.$$.fragment),de=t(),o(T.$$.fragment),he=t(),x=i("p"),x.innerHTML=Oe,ue=t(),$=i("ol"),$.innerHTML=es,ge=t(),o(k.$$.fragment),Me=t(),f=i("ol"),f.innerHTML=ss,je=t(),o(I.$$.fragment),ye=t(),Z=i("p"),Z.textContent=ns,fe=t(),o(v.$$.fragment),be=t(),C=i("p"),C.innerHTML=ls,Ue=t(),o(G.$$.fragment),we=t(),o(B.$$.fragment),Je=t(),W=i("p"),W.innerHTML=ts,Te=t(),o(z.$$.fragment),xe=t(),V=i("p"),V.innerHTML=as,$e=t(),o(S.$$.fragment),ke=t(),H=i("p"),H.innerHTML=is,Ie=t(),o(R.$$.fragment),Ze=t(),o(q.$$.fragment),ve=t(),E=i("p"),E.innerHTML=ps,Ce=t(),Q=i("p"),Q.textContent=rs,Ge=t(),o(A.$$.fragment),Be=t(),_=i("p"),_.innerHTML=os,We=t(),o(N.$$.fragment),ze=t(),X=i("p"),X.innerHTML=cs,Ve=t(),o(L.$$.fragment),Se=t(),o(F.$$.fragment),He=t(),Y=i("p"),Y.innerHTML=ms,Re=t(),P=i("p"),P.textContent=ds,qe=t(),D=i("p"),D.innerHTML=hs,Ee=t(),o(K.$$.fragment),Qe=t(),o(O.$$.fragment),Ae=t(),ee=i("p"),ee.innerHTML=us,_e=t(),se=i("p"),se.textContent=gs,Ne=t(),o(ne.$$.fragment),Xe=t(),le=i("p"),le.textContent=Ms,Le=t(),o(te.$$.fragment),Fe=t(),pe=i("p"),this.h()},l(e){const s=Ts("svelte-u9bgzb",document.head);g=p(s,"META",{name:!0,content:!0}),s.forEach(n),b=a(e),j=p(e,"P",{}),ys(j).forEach(n),ae=a(e),c(U.$$.fragment,e),oe=a(e),w=p(e,"P",{"data-svelte-h":!0}),r(w)!=="svelte-pgo72q"&&(w.innerHTML=De),ce=a(e),J=p(e,"UL",{"data-svelte-h":!0}),r(J)!=="svelte-1r97160"&&(J.innerHTML=Ke),me=a(e),c(y.$$.fragment,e),de=a(e),c(T.$$.fragment,e),he=a(e),x=p(e,"P",{"data-svelte-h":!0}),r(x)!=="svelte-131iydd"&&(x.innerHTML=Oe),ue=a(e),$=p(e,"OL",{"data-svelte-h":!0}),r($)!=="svelte-7ukubc"&&($.innerHTML=es),ge=a(e),c(k.$$.fragment,e),Me=a(e),f=p(e,"OL",{start:!0,"data-svelte-h":!0}),r(f)!=="svelte-576cei"&&(f.innerHTML=ss),je=a(e),c(I.$$.fragment,e),ye=a(e),Z=p(e,"P",{"data-svelte-h":!0}),r(Z)!=="svelte-5edsts"&&(Z.textContent=ns),fe=a(e),c(v.$$.fragment,e),be=a(e),C=p(e,"P",{"data-svelte-h":!0}),r(C)!=="svelte-18y937w"&&(C.innerHTML=ls),Ue=a(e),c(G.$$.fragment,e),we=a(e),c(B.$$.fragment,e),Je=a(e),W=p(e,"P",{"data-svelte-h":!0}),r(W)!=="svelte-2xb0dv"&&(W.innerHTML=ts),Te=a(e),c(z.$$.fragment,e),xe=a(e),V=p(e,"P",{"data-svelte-h":!0}),r(V)!=="svelte-1pg1bwk"&&(V.innerHTML=as),$e=a(e),c(S.$$.fragment,e),ke=a(e),H=p(e,"P",{"data-svelte-h":!0}),r(H)!=="svelte-tafigc"&&(H.innerHTML=is),Ie=a(e),c(R.$$.fragment,e),Ze=a(e),c(q.$$.fragment,e),ve=a(e),E=p(e,"P",{"data-svelte-h":!0}),r(E)!=="svelte-xr6iji"&&(E.innerHTML=ps),Ce=a(e),Q=p(e,"P",{"data-svelte-h":!0}),r(Q)!=="svelte-focxr8"&&(Q.textContent=rs),Ge=a(e),c(A.$$.fragment,e),Be=a(e),_=p(e,"P",{"data-svelte-h":!0}),r(_)!=="svelte-y0dy9h"&&(_.innerHTML=os),We=a(e),c(N.$$.fragment,e),ze=a(e),X=p(e,"P",{"data-svelte-h":!0}),r(X)!=="svelte-abxu8t"&&(X.innerHTML=cs),Ve=a(e),c(L.$$.fragment,e),Se=a(e),c(F.$$.fragment,e),He=a(e),Y=p(e,"P",{"data-svelte-h":!0}),r(Y)!=="svelte-z5s5d7"&&(Y.innerHTML=ms),Re=a(e),P=p(e,"P",{"data-svelte-h":!0}),r(P)!=="svelte-zwmd7x"&&(P.textContent=ds),qe=a(e),D=p(e,"P",{"data-svelte-h":!0}),r(D)!=="svelte-1bks2jw"&&(D.innerHTML=hs),Ee=a(e),c(K.$$.fragment,e),Qe=a(e),c(O.$$.fragment,e),Ae=a(e),ee=p(e,"P",{"data-svelte-h":!0}),r(ee)!=="svelte-11yqw70"&&(ee.innerHTML=us),_e=a(e),se=p(e,"P",{"data-svelte-h":!0}),r(se)!=="svelte-18cdahu"&&(se.textContent=gs),Ne=a(e),c(ne.$$.fragment,e),Xe=a(e),le=p(e,"P",{"data-svelte-h":!0}),r(le)!=="svelte-14oafxv"&&(le.textContent=Ms),Le=a(e),c(te.$$.fragment,e),Fe=a(e),pe=p(e,"P",{}),ys(pe).forEach(n),this.h()},h(){Pe(g,"name","hf:doc:metadata"),Pe(g,"content",Zs),Pe(f,"start","2")},m(e,s){xs(document.head,g),l(e,b,s),l(e,j,s),l(e,ae,s),m(U,e,s),l(e,oe,s),l(e,w,s),l(e,ce,s),l(e,J,s),l(e,me,s),m(y,e,s),l(e,de,s),m(T,e,s),l(e,he,s),l(e,x,s),l(e,ue,s),l(e,$,s),l(e,ge,s),m(k,e,s),l(e,Me,s),l(e,f,s),l(e,je,s),m(I,e,s),l(e,ye,s),l(e,Z,s),l(e,fe,s),m(v,e,s),l(e,be,s),l(e,C,s),l(e,Ue,s),m(G,e,s),l(e,we,s),m(B,e,s),l(e,Je,s),l(e,W,s),l(e,Te,s),m(z,e,s),l(e,xe,s),l(e,V,s),l(e,$e,s),m(S,e,s),l(e,ke,s),l(e,H,s),l(e,Ie,s),m(R,e,s),l(e,Ze,s),m(q,e,s),l(e,ve,s),l(e,E,s),l(e,Ce,s),l(e,Q,s),l(e,Ge,s),m(A,e,s),l(e,Be,s),l(e,_,s),l(e,We,s),m(N,e,s),l(e,ze,s),l(e,X,s),l(e,Ve,s),m(L,e,s),l(e,Se,s),m(F,e,s),l(e,He,s),l(e,Y,s),l(e,Re,s),l(e,P,s),l(e,qe,s),l(e,D,s),l(e,Ee,s),m(K,e,s),l(e,Qe,s),m(O,e,s),l(e,Ae,s),l(e,ee,s),l(e,_e,s),l(e,se,s),l(e,Ne,s),m(ne,e,s),l(e,Xe,s),l(e,le,s),l(e,Le,s),m(te,e,s),l(e,Fe,s),l(e,pe,s),Ye=!0},p(e,[s]){const js={};s&2&&(js.$$scope={dirty:s,ctx:e}),y.$set(js)},i(e){Ye||(d(U.$$.fragment,e),d(y.$$.fragment,e),d(T.$$.fragment,e),d(k.$$.fragment,e),d(I.$$.fragment,e),d(v.$$.fragment,e),d(G.$$.fragment,e),d(B.$$.fragment,e),d(z.$$.fragment,e),d(S.$$.fragment,e),d(R.$$.fragment,e),d(q.$$.fragment,e),d(A.$$.fragment,e),d(N.$$.fragment,e),d(L.$$.fragment,e),d(F.$$.fragment,e),d(K.$$.fragment,e),d(O.$$.fragment,e),d(ne.$$.fragment,e),d(te.$$.fragment,e),Ye=!0)},o(e){h(U.$$.fragment,e),h(y.$$.fragment,e),h(T.$$.fragment,e),h(k.$$.fragment,e),h(I.$$.fragment,e),h(v.$$.fragment,e),h(G.$$.fragment,e),h(B.$$.fragment,e),h(z.$$.fragment,e),h(S.$$.fragment,e),h(R.$$.fragment,e),h(q.$$.fragment,e),h(A.$$.fragment,e),h(N.$$.fragment,e),h(L.$$.fragment,e),h(F.$$.fragment,e),h(K.$$.fragment,e),h(O.$$.fragment,e),h(ne.$$.fragment,e),h(te.$$.fragment,e),Ye=!1},d(e){e&&(n(b),n(j),n(ae),n(oe),n(w),n(ce),n(J),n(me),n(de),n(he),n(x),n(ue),n($),n(ge),n(Me),n(f),n(je),n(ye),n(Z),n(fe),n(be),n(C),n(Ue),n(we),n(Je),n(W),n(Te),n(xe),n(V),n($e),n(ke),n(H),n(Ie),n(Ze),n(ve),n(E),n(Ce),n(Q),n(Ge),n(Be),n(_),n(We),n(ze),n(X),n(Ve),n(Se),n(He),n(Y),n(Re),n(P),n(qe),n(D),n(Ee),n(Qe),n(Ae),n(ee),n(_e),n(se),n(Ne),n(Xe),n(le),n(Le),n(Fe),n(pe)),n(g),u(U,e),u(y,e),u(T,e),u(k,e),u(I,e),u(v,e),u(G,e),u(B,e),u(z,e),u(S,e),u(R,e),u(q,e),u(A,e),u(N,e),u(L,e),u(F,e),u(K,e),u(O,e),u(ne,e),u(te,e)}}}const Zs='{"title":"Pipelines für Inferenzen","local":"pipelines-für-inferenzen","sections":[{"title":"Verwendung von Pipelines","local":"verwendung-von-pipelines","sections":[{"title":"Wählen Sie ein Modell und einen Tokenizer","local":"wählen-sie-ein-modell-und-einen-tokenizer","sections":[],"depth":3}],"depth":2},{"title":"Audio-Pipeline","local":"audio-pipeline","sections":[],"depth":2},{"title":"Bildverarbeitungs-Pipeline","local":"bildverarbeitungs-pipeline","sections":[],"depth":2},{"title":"Multimodale Pipeline","local":"multimodale-pipeline","sections":[],"depth":2}],"depth":1}';function vs(re){return bs(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Vs extends ws{constructor(g){super(),Js(this,g,vs,Is,fs,{})}}export{Vs as component};
