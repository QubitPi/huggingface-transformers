import{s as ln,f as sn,o as rn,n as ze}from"../chunks/scheduler.987d3921.js";import{S as an,i as on,g as f,s as r,r as b,A as mn,h,f as t,c as a,j as yt,u as w,x as g,k as x,y as un,a as l,v as M,d as k,t as T,w as _}from"../chunks/index.c8b1fed4.js";import{T as pn}from"../chunks/Tip.6bc1e794.js";import{Y as dn}from"../chunks/Youtube.67f0a1fc.js";import{C as I}from"../chunks/CodeBlock.18094d58.js";import{F as nn,M as je}from"../chunks/Markdown.10b8ab04.js";import{H as U}from"../chunks/Heading.3fa3b67f.js";function fn(C){let i,u='Um ein Modell mit der √ñffentlichkeit zu teilen, ben√∂tigen Sie ein Konto auf <a href="https://huggingface.co/join" rel="nofollow">huggingface.co</a>. Sie k√∂nnen auch einer bestehenden Organisation beitreten oder eine neue Organisation gr√ºnden.';return{c(){i=f("p"),i.innerHTML=u},l(s){i=h(s,"P",{"data-svelte-h":!0}),g(i)!=="svelte-qkz88d"&&(i.innerHTML=u)},m(s,o){l(s,i,o)},p:ze,d(s){s&&t(i)}}}function hn(C){let i,u="Geben Sie <code>from_tf=True</code> an, um einen Pr√ºfpunkt von TensorFlow nach PyTorch zu konvertieren:",s,o,d;return o=new I({props:{code:"cHRfbW9kZWwlMjAlM0QlMjBEaXN0aWxCZXJ0Rm9yU2VxdWVuY2VDbGFzc2lmaWNhdGlvbi5mcm9tX3ByZXRyYWluZWQoJTIycGF0aCUyRnRvJTJGYXdlc29tZS1uYW1lLXlvdS1waWNrZWQlMjIlMkMlMjBmcm9tX3RmJTNEVHJ1ZSklMEFwdF9tb2RlbC5zYXZlX3ByZXRyYWluZWQoJTIycGF0aCUyRnRvJTJGYXdlc29tZS1uYW1lLXlvdS1waWNrZWQlMjIp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>pt_model = DistilBertForSequenceClassification.from_pretrained(<span class="hljs-string">&quot;path/to/awesome-name-you-picked&quot;</span>, from_tf=<span class="hljs-literal">True</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>pt_model.save_pretrained(<span class="hljs-string">&quot;path/to/awesome-name-you-picked&quot;</span>)`,wrap:!1}}),{c(){i=f("p"),i.innerHTML=u,s=r(),b(o.$$.fragment)},l(m){i=h(m,"P",{"data-svelte-h":!0}),g(i)!=="svelte-11vbuel"&&(i.innerHTML=u),s=a(m),w(o.$$.fragment,m)},m(m,v){l(m,i,v),l(m,s,v),M(o,m,v),d=!0},p:ze,i(m){d||(k(o.$$.fragment,m),d=!0)},o(m){T(o.$$.fragment,m),d=!1},d(m){m&&(t(i),t(s)),_(o,m)}}}function cn(C){let i,u;return i=new je({props:{$$slots:{default:[hn]},$$scope:{ctx:C}}}),{c(){b(i.$$.fragment)},l(s){w(i.$$.fragment,s)},m(s,o){M(i,s,o),u=!0},p(s,o){const d={};o&2&&(d.$$scope={dirty:o,ctx:s}),i.$set(d)},i(s){u||(k(i.$$.fragment,s),u=!0)},o(s){T(i.$$.fragment,s),u=!1},d(s){_(i,s)}}}function gn(C){let i,u="Geben Sie <code>from_pt=True</code> an, um einen Pr√ºfpunkt von PyTorch nach TensorFlow zu konvertieren:",s,o,d,m,v="Dann k√∂nnen Sie Ihr neues TensorFlow-Modell mit seinem neuen Checkpoint speichern:",J,H,j;return o=new I({props:{code:"dGZfbW9kZWwlMjAlM0QlMjBURkRpc3RpbEJlcnRGb3JTZXF1ZW5jZUNsYXNzaWZpY2F0aW9uLmZyb21fcHJldHJhaW5lZCglMjJwYXRoJTJGdG8lMkZhd2Vzb21lLW5hbWUteW91LXBpY2tlZCUyMiUyQyUyMGZyb21fcHQlM0RUcnVlKQ==",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>tf_model = TFDistilBertForSequenceClassification.from_pretrained(<span class="hljs-string">&quot;path/to/awesome-name-you-picked&quot;</span>, from_pt=<span class="hljs-literal">True</span>)',wrap:!1}}),H=new I({props:{code:"dGZfbW9kZWwuc2F2ZV9wcmV0cmFpbmVkKCUyMnBhdGglMkZ0byUyRmF3ZXNvbWUtbmFtZS15b3UtcGlja2VkJTIyKQ==",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>tf_model.save_pretrained(<span class="hljs-string">&quot;path/to/awesome-name-you-picked&quot;</span>)',wrap:!1}}),{c(){i=f("p"),i.innerHTML=u,s=r(),b(o.$$.fragment),d=r(),m=f("p"),m.textContent=v,J=r(),b(H.$$.fragment)},l(c){i=h(c,"P",{"data-svelte-h":!0}),g(i)!=="svelte-1165hel"&&(i.innerHTML=u),s=a(c),w(o.$$.fragment,c),d=a(c),m=h(c,"P",{"data-svelte-h":!0}),g(m)!=="svelte-1dv2lx7"&&(m.textContent=v),J=a(c),w(H.$$.fragment,c)},m(c,y){l(c,i,y),l(c,s,y),M(o,c,y),l(c,d,y),l(c,m,y),l(c,J,y),M(H,c,y),j=!0},p:ze,i(c){j||(k(o.$$.fragment,c),k(H.$$.fragment,c),j=!0)},o(c){T(o.$$.fragment,c),T(H.$$.fragment,c),j=!1},d(c){c&&(t(i),t(s),t(d),t(m),t(J)),_(o,c),_(H,c)}}}function $n(C){let i,u;return i=new je({props:{$$slots:{default:[gn]},$$scope:{ctx:C}}}),{c(){b(i.$$.fragment)},l(s){w(i.$$.fragment,s)},m(s,o){M(i,s,o),u=!0},p(s,o){const d={};o&2&&(d.$$scope={dirty:o,ctx:s}),i.$set(d)},i(s){u||(k(i.$$.fragment,s),u=!0)},o(s){T(i.$$.fragment,s),u=!1},d(s){_(i,s)}}}function bn(C){let i,u="Wenn ein Modell in Flax verf√ºgbar ist, k√∂nnen Sie auch einen Kontrollpunkt von PyTorch nach Flax konvertieren:",s,o,d;return o=new I({props:{code:"ZmxheF9tb2RlbCUyMCUzRCUyMEZsYXhEaXN0aWxCZXJ0Rm9yU2VxdWVuY2VDbGFzc2lmaWNhdGlvbi5mcm9tX3ByZXRyYWluZWQoJTBBJTIwJTIwJTIwJTIwJTIycGF0aCUyRnRvJTJGYXdlc29tZS1uYW1lLXlvdS1waWNrZWQlMjIlMkMlMjBmcm9tX3B0JTNEVHJ1ZSUwQSk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>flax_model = FlaxDistilBertForSequenceClassification.from_pretrained(
<span class="hljs-meta">... </span>    <span class="hljs-string">&quot;path/to/awesome-name-you-picked&quot;</span>, from_pt=<span class="hljs-literal">True</span>
<span class="hljs-meta">... </span>)`,wrap:!1}}),{c(){i=f("p"),i.textContent=u,s=r(),b(o.$$.fragment)},l(m){i=h(m,"P",{"data-svelte-h":!0}),g(i)!=="svelte-ounz1j"&&(i.textContent=u),s=a(m),w(o.$$.fragment,m)},m(m,v){l(m,i,v),l(m,s,v),M(o,m,v),d=!0},p:ze,i(m){d||(k(o.$$.fragment,m),d=!0)},o(m){T(o.$$.fragment,m),d=!1},d(m){m&&(t(i),t(s)),_(o,m)}}}function wn(C){let i,u;return i=new je({props:{$$slots:{default:[bn]},$$scope:{ctx:C}}}),{c(){b(i.$$.fragment)},l(s){w(i.$$.fragment,s)},m(s,o){M(i,s,o),u=!0},p(s,o){const d={};o&2&&(d.$$scope={dirty:o,ctx:s}),i.$set(d)},i(s){u||(k(i.$$.fragment,s),u=!0)},o(s){T(i.$$.fragment,s),u=!1},d(s){_(i,s)}}}function Mn(C){let i,u,s,o='Die Weitergabe eines Modells an den Hub ist so einfach wie das Hinzuf√ºgen eines zus√§tzlichen Parameters oder R√ºckrufs. Erinnern Sie sich an das <a href="training">Feinabstimmungs-Tutorial</a>, in der Klasse <code>TrainingArguments</code> geben Sie Hyperparameter und zus√§tzliche Trainingsoptionen an. Eine dieser Trainingsoptionen beinhaltet die M√∂glichkeit, ein Modell direkt an den Hub zu pushen. Setzen Sie <code>push_to_hub=True</code> in Ihrer <code>TrainingArguments</code>:',d,m,v,J,H="√úbergeben Sie Ihre Trainingsargumente wie gewohnt an <code>Trainer</code>:",j,c,y,Z,$="Nach der Feinabstimmung Ihres Modells rufen Sie <code>push_to_hub()</code> auf <code>Trainer</code> auf, um das trainierte Modell an den Hub zu √ºbertragen. Transformers f√ºgt sogar automatisch Trainings-Hyperparameter, Trainingsergebnisse und Framework-Versionen zu Ihrer Modellkarte hinzu!",S,z,L;return i=new dn({props:{id:"Z1-XMy-GNLQ"}}),m=new I({props:{code:"dHJhaW5pbmdfYXJncyUyMCUzRCUyMFRyYWluaW5nQXJndW1lbnRzKG91dHB1dF9kaXIlM0QlMjJteS1hd2Vzb21lLW1vZGVsJTIyJTJDJTIwcHVzaF90b19odWIlM0RUcnVlKQ==",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>training_args = TrainingArguments(output_dir=<span class="hljs-string">&quot;my-awesome-model&quot;</span>, push_to_hub=<span class="hljs-literal">True</span>)',wrap:!1}}),c=new I({props:{code:"dHJhaW5lciUyMCUzRCUyMFRyYWluZXIoJTBBJTIwJTIwJTIwJTIwbW9kZWwlM0Rtb2RlbCUyQyUwQSUyMCUyMCUyMCUyMGFyZ3MlM0R0cmFpbmluZ19hcmdzJTJDJTBBJTIwJTIwJTIwJTIwdHJhaW5fZGF0YXNldCUzRHNtYWxsX3RyYWluX2RhdGFzZXQlMkMlMEElMjAlMjAlMjAlMjBldmFsX2RhdGFzZXQlM0RzbWFsbF9ldmFsX2RhdGFzZXQlMkMlMEElMjAlMjAlMjAlMjBjb21wdXRlX21ldHJpY3MlM0Rjb21wdXRlX21ldHJpY3MlMkMlMEEp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>trainer = Trainer(
<span class="hljs-meta">... </span>    model=model,
<span class="hljs-meta">... </span>    args=training_args,
<span class="hljs-meta">... </span>    train_dataset=small_train_dataset,
<span class="hljs-meta">... </span>    eval_dataset=small_eval_dataset,
<span class="hljs-meta">... </span>    compute_metrics=compute_metrics,
<span class="hljs-meta">... </span>)`,wrap:!1}}),z=new I({props:{code:"dHJhaW5lci5wdXNoX3RvX2h1Yigp",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>trainer.push_to_hub()',wrap:!1}}),{c(){b(i.$$.fragment),u=r(),s=f("p"),s.innerHTML=o,d=r(),b(m.$$.fragment),v=r(),J=f("p"),J.innerHTML=H,j=r(),b(c.$$.fragment),y=r(),Z=f("p"),Z.innerHTML=$,S=r(),b(z.$$.fragment)},l(p){w(i.$$.fragment,p),u=a(p),s=h(p,"P",{"data-svelte-h":!0}),g(s)!=="svelte-b21kvb"&&(s.innerHTML=o),d=a(p),w(m.$$.fragment,p),v=a(p),J=h(p,"P",{"data-svelte-h":!0}),g(J)!=="svelte-11cyeei"&&(J.innerHTML=H),j=a(p),w(c.$$.fragment,p),y=a(p),Z=h(p,"P",{"data-svelte-h":!0}),g(Z)!=="svelte-q6f9sn"&&(Z.innerHTML=$),S=a(p),w(z.$$.fragment,p)},m(p,W){M(i,p,W),l(p,u,W),l(p,s,W),l(p,d,W),M(m,p,W),l(p,v,W),l(p,J,W),l(p,j,W),M(c,p,W),l(p,y,W),l(p,Z,W),l(p,S,W),M(z,p,W),L=!0},p:ze,i(p){L||(k(i.$$.fragment,p),k(m.$$.fragment,p),k(c.$$.fragment,p),k(z.$$.fragment,p),L=!0)},o(p){T(i.$$.fragment,p),T(m.$$.fragment,p),T(c.$$.fragment,p),T(z.$$.fragment,p),L=!1},d(p){p&&(t(u),t(s),t(d),t(v),t(J),t(j),t(y),t(Z),t(S)),_(i,p),_(m,p),_(c,p),_(z,p)}}}function kn(C){let i,u;return i=new je({props:{$$slots:{default:[Mn]},$$scope:{ctx:C}}}),{c(){b(i.$$.fragment)},l(s){w(i.$$.fragment,s)},m(s,o){M(i,s,o),u=!0},p(s,o){const d={};o&2&&(d.$$scope={dirty:o,ctx:s}),i.$set(d)},i(s){u||(k(i.$$.fragment,s),u=!0)},o(s){T(i.$$.fragment,s),u=!1},d(s){_(i,s)}}}function Tn(C){let i,u="Geben Sie ein Modell mit <code>PushToHubCallback</code> an den Hub weiter. In der <code>PushToHubCallback</code> Funktion, f√ºgen Sie hinzu:",s,o,d="<li>Ein Ausgabeverzeichnis f√ºr Ihr Modell.</li> <li>Einen Tokenizer.</li> <li>Die <code>hub_model_id</code>, die Ihr Hub-Benutzername und Modellname ist.</li>",m,v,J,H,j='F√ºgen Sie den Callback zu <a href="https://keras.io/api/models/model_training_apis/" rel="nofollow"><code>fit</code></a> hinzu, und ü§ó Transformers wird das trainierte Modell an den Hub weiterleiten:',c,y,Z;return v=new I({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMFB1c2hUb0h1YkNhbGxiYWNrJTBBJTBBcHVzaF90b19odWJfY2FsbGJhY2slMjAlM0QlMjBQdXNoVG9IdWJDYWxsYmFjayglMEElMjAlMjAlMjAlMjBvdXRwdXRfZGlyJTNEJTIyLiUyRnlvdXJfbW9kZWxfc2F2ZV9wYXRoJTIyJTJDJTIwdG9rZW5pemVyJTNEdG9rZW5pemVyJTJDJTIwaHViX21vZGVsX2lkJTNEJTIyeW91ci11c2VybmFtZSUyRm15LWF3ZXNvbWUtbW9kZWwlMjIlMEEp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> PushToHubCallback

<span class="hljs-meta">&gt;&gt;&gt; </span>push_to_hub_callback = PushToHubCallback(
<span class="hljs-meta">... </span>    output_dir=<span class="hljs-string">&quot;./your_model_save_path&quot;</span>, tokenizer=tokenizer, hub_model_id=<span class="hljs-string">&quot;your-username/my-awesome-model&quot;</span>
<span class="hljs-meta">... </span>)`,wrap:!1}}),y=new I({props:{code:"bW9kZWwuZml0KHRmX3RyYWluX2RhdGFzZXQlMkMlMjB2YWxpZGF0aW9uX2RhdGElM0R0Zl92YWxpZGF0aW9uX2RhdGFzZXQlMkMlMjBlcG9jaHMlM0QzJTJDJTIwY2FsbGJhY2tzJTNEcHVzaF90b19odWJfY2FsbGJhY2sp",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>model.fit(tf_train_dataset, validation_data=tf_validation_dataset, epochs=<span class="hljs-number">3</span>, callbacks=push_to_hub_callback)',wrap:!1}}),{c(){i=f("p"),i.innerHTML=u,s=r(),o=f("ul"),o.innerHTML=d,m=r(),b(v.$$.fragment),J=r(),H=f("p"),H.innerHTML=j,c=r(),b(y.$$.fragment)},l($){i=h($,"P",{"data-svelte-h":!0}),g(i)!=="svelte-1ru0jyl"&&(i.innerHTML=u),s=a($),o=h($,"UL",{"data-svelte-h":!0}),g(o)!=="svelte-19up033"&&(o.innerHTML=d),m=a($),w(v.$$.fragment,$),J=a($),H=h($,"P",{"data-svelte-h":!0}),g(H)!=="svelte-cl0rfw"&&(H.innerHTML=j),c=a($),w(y.$$.fragment,$)},m($,S){l($,i,S),l($,s,S),l($,o,S),l($,m,S),M(v,$,S),l($,J,S),l($,H,S),l($,c,S),M(y,$,S),Z=!0},p:ze,i($){Z||(k(v.$$.fragment,$),k(y.$$.fragment,$),Z=!0)},o($){T(v.$$.fragment,$),T(y.$$.fragment,$),Z=!1},d($){$&&(t(i),t(s),t(o),t(m),t(J),t(H),t(c)),_(v,$),_(y,$)}}}function _n(C){let i,u;return i=new je({props:{$$slots:{default:[Tn]},$$scope:{ctx:C}}}),{c(){b(i.$$.fragment)},l(s){w(i.$$.fragment,s)},m(s,o){M(i,s,o),u=!0},p(s,o){const d={};o&2&&(d.$$scope={dirty:o,ctx:s}),i.$set(d)},i(s){u||(k(i.$$.fragment,s),u=!0)},o(s){T(i.$$.fragment,s),u=!1},d(s){_(i,s)}}}function vn(C){let i,u,s,o,d,m,v,J="Die letzten beiden Tutorials haben gezeigt, wie man ein Modell mit PyTorch, Keras und ü§ó Accelerate f√ºr verteilte Setups feinabstimmen kann. Der n√§chste Schritt besteht darin, Ihr Modell mit der Community zu teilen! Bei Hugging Face glauben wir an den offenen Austausch von Wissen und Ressourcen, um k√ºnstliche Intelligenz f√ºr alle zu demokratisieren. Wir ermutigen Sie, Ihr Modell mit der Community zu teilen, um anderen zu helfen, Zeit und Ressourcen zu sparen.",H,j,c='In diesem Tutorial lernen Sie zwei Methoden kennen, wie Sie ein trainiertes oder verfeinertes Modell auf dem <a href="https://huggingface.co/models" rel="nofollow">Model Hub</a> teilen k√∂nnen:',y,Z,$="<li>Programmgesteuertes √úbertragen Ihrer Dateien auf den Hub.</li> <li>Ziehen Sie Ihre Dateien per Drag-and-Drop √ºber die Weboberfl√§che in den Hub.</li>",S,z,L,p,W,Ze,G,Se,X,Ht="Jedes Repository im Model Hub verh√§lt sich wie ein typisches GitHub-Repository. Unsere Repositorys bieten Versionierung, Commit-Historie und die M√∂glichkeit, Unterschiede zu visualisieren.",Ie,P,Wt='Die integrierte Versionierung des Model Hub basiert auf Git und <a href="https://git-lfs.github.com/" rel="nofollow">git-lfs</a>. Mit anderen Worten: Sie k√∂nnen ein Modell als ein Repository behandeln, was eine bessere Zugriffskontrolle und Skalierbarkeit erm√∂glicht. Die Versionskontrolle erm√∂glicht <em>Revisionen</em>, eine Methode zum Anheften einer bestimmten Version eines Modells mit einem Commit-Hash, Tag oder Branch.',Fe,B,Ct="Folglich k√∂nnen Sie eine bestimmte Modellversion mit dem Parameter ‚ÄúRevision‚Äù laden:",Re,Y,xe,V,zt="Dateien lassen sich auch in einem Repository leicht bearbeiten, und Sie k√∂nnen die Commit-Historie sowie die Unterschiede einsehen:",Ue,E,Jt='<img src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/vis_diff.png" alt="vis_diff"/>',Le,D,Ge,q,jt="Bevor Sie ein Modell f√ºr den Hub freigeben, ben√∂tigen Sie Ihre Hugging Face-Anmeldedaten. Wenn Sie Zugang zu einem Terminal haben, f√ºhren Sie den folgenden Befehl in der virtuellen Umgebung aus, in der ü§ó Transformers installiert ist. Dadurch werden Ihre Zugangsdaten in Ihrem Hugging Face-Cache-Ordner (standardm√§√üig <code>~/.cache/</code>) gespeichert:",Xe,N,Pe,Q,Zt='Wenn Sie ein Notebook wie Jupyter oder Colaboratory verwenden, stellen Sie sicher, dass Sie die <a href="https://huggingface.co/docs/hub/adding-a-library" rel="nofollow"><code>huggingface_hub</code></a> Bibliothek installiert haben. Diese Bibliothek erm√∂glicht Ihnen die programmatische Interaktion mit dem Hub.',Be,A,Ye,K,St='Verwenden Sie dann <code>notebook_login</code>, um sich beim Hub anzumelden, und folgen Sie dem Link <a href="https://huggingface.co/settings/token" rel="nofollow">hier</a>, um ein Token f√ºr die Anmeldung zu generieren:',Ve,O,Ee,ee,De,te,It="Um sicherzustellen, dass Ihr Modell von jemandem verwendet werden kann, der mit einem anderen Framework arbeitet, empfehlen wir Ihnen, Ihr Modell sowohl mit PyTorch- als auch mit TensorFlow-Checkpoints zu konvertieren und hochzuladen. W√§hrend Benutzer immer noch in der Lage sind, Ihr Modell von einem anderen Framework zu laden, wenn Sie diesen Schritt √ºberspringen, wird es langsamer sein, weil ü§ó Transformers den Checkpoint on-the-fly konvertieren m√ºssen.",qe,ne,Ft='Die Konvertierung eines Checkpoints f√ºr ein anderes Framework ist einfach. Stellen Sie sicher, dass Sie PyTorch und TensorFlow installiert haben (siehe <a href="installation">hier</a> f√ºr Installationsanweisungen), und finden Sie dann das spezifische Modell f√ºr Ihre Aufgabe in dem anderen Framework.',Ne,F,Qe,le,Ae,R,Ke,ie,Oe,se,Rt="Sie k√∂nnen <code>push_to_hub</code> auch direkt f√ºr Ihr Modell aufrufen, um es in den Hub hochzuladen.",et,re,xt="Geben Sie den Namen Ihres Modells in ‚Äúpush_to_hub‚Äù an:",tt,ae,nt,oe,Ut="Dadurch wird ein Repository unter Ihrem Benutzernamen mit dem Modellnamen <code>my-awesome-model</code> erstellt. Benutzer k√∂nnen nun Ihr Modell mit der Funktion <code>from_pretrained</code> laden:",lt,me,it,ue,Lt="Wenn Sie zu einer Organisation geh√∂ren und Ihr Modell stattdessen unter dem Namen der Organisation pushen wollen, f√ºgen Sie diesen einfach zur <code>repo_id</code> hinzu:",st,pe,rt,de,Gt="Die Funktion ‚Äúpush_to_hub‚Äù kann auch verwendet werden, um andere Dateien zu einem Modell-Repository hinzuzuf√ºgen. Zum Beispiel kann man einen Tokenizer zu einem Modell-Repository hinzuf√ºgen:",at,fe,ot,he,Xt="Oder vielleicht m√∂chten Sie die TensorFlow-Version Ihres fein abgestimmten PyTorch-Modells hinzuf√ºgen:",mt,ce,ut,ge,Pt="Wenn Sie nun zu Ihrem Hugging Face-Profil navigieren, sollten Sie Ihr neu erstelltes Modell-Repository sehen. Wenn Sie auf die Registerkarte <strong>Dateien</strong> klicken, werden alle Dateien angezeigt, die Sie in das Repository hochgeladen haben.",pt,$e,Bt='Weitere Einzelheiten zum Erstellen und Hochladen von Dateien in ein Repository finden Sie in der Hub-Dokumentation <a href="https://huggingface.co/docs/hub/how-to-upstream" rel="nofollow">hier</a>.',dt,be,ft,we,Yt='Benutzer, die einen no-code Ansatz bevorzugen, k√∂nnen ein Modell √ºber das Webinterface des Hubs hochladen. Besuchen Sie <a href="https://huggingface.co/new" rel="nofollow">huggingface.co/new</a> um ein neues Repository zu erstellen:',ht,Me,Vt='<img src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/new_model_repo.png" alt="new_model_repo"/>',ct,ke,Et="F√ºgen Sie von hier aus einige Informationen √ºber Ihr Modell hinzu:",gt,Te,Dt="<li>W√§hlen Sie den <strong>Besitzer</strong> des Repositorys. Dies k√∂nnen Sie selbst oder eine der Organisationen sein, denen Sie angeh√∂ren.</li> <li>W√§hlen Sie einen Namen f√ºr Ihr Modell, der auch der Name des Repositorys sein wird.</li> <li>W√§hlen Sie, ob Ihr Modell √∂ffentlich oder privat ist.</li> <li>Geben Sie die Lizenzverwendung f√ºr Ihr Modell an.</li>",$t,_e,qt="Klicken Sie nun auf die Registerkarte <strong>Dateien</strong> und klicken Sie auf die Schaltfl√§che <strong>Datei hinzuf√ºgen</strong>, um eine neue Datei in Ihr Repository hochzuladen. Ziehen Sie dann eine Datei per Drag-and-Drop hoch und f√ºgen Sie eine √úbergabemeldung hinzu.",bt,ve,Nt='<img src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/upload_file.png" alt="upload_file"/>',wt,ye,Mt,He,Qt="Um sicherzustellen, dass die Benutzer die F√§higkeiten, Grenzen, m√∂glichen Verzerrungen und ethischen Aspekte Ihres Modells verstehen, f√ºgen Sie bitte eine Modellkarte zu Ihrem Repository hinzu. Die Modellkarte wird in der Datei <code>README.md</code> definiert. Sie k√∂nnen eine Modellkarte hinzuf√ºgen, indem Sie:",kt,We,At="<li>Manuelles Erstellen und Hochladen einer ‚ÄúREADME.md‚Äù-Datei.</li> <li>Klicken Sie auf die Schaltfl√§che <strong>Modellkarte bearbeiten</strong> in Ihrem Modell-Repository.</li>",Tt,Ce,Kt='Werfen Sie einen Blick auf die DistilBert <a href="https://huggingface.co/distilbert/distilbert-base-uncased" rel="nofollow">model card</a> als gutes Beispiel f√ºr die Art von Informationen, die eine Modellkarte enthalten sollte. Weitere Details √ºber andere Optionen, die Sie in der Datei ‚ÄúREADME.md‚Äù einstellen k√∂nnen, wie z.B. den Kohlenstoff-Fu√üabdruck eines Modells oder Beispiele f√ºr Widgets, finden Sie in der Dokumentation <a href="https://huggingface.co/docs/hub/models-cards" rel="nofollow">hier</a>.',_t,Je,vt;return d=new U({props:{title:"Ein Modell teilen",local:"ein-modell-teilen",headingTag:"h1"}}),W=new pn({props:{$$slots:{default:[fn]},$$scope:{ctx:C}}}),G=new U({props:{title:"Repository-Funktionen",local:"repository-funktionen",headingTag:"h2"}}),Y=new I({props:{code:"bW9kZWwlMjAlM0QlMjBBdXRvTW9kZWwuZnJvbV9wcmV0cmFpbmVkKCUwQSUyMCUyMCUyMCUyMCUyMmp1bGllbi1jJTJGRXNwZXJCRVJUby1zbWFsbCUyMiUyQyUyMHJldmlzaW9uJTNEJTIydjIuMC4xJTIyJTIwJTIwJTIzJTIwdGFnJTIwbmFtZSUyQyUyMG9yJTIwYnJhbmNoJTIwbmFtZSUyQyUyMG9yJTIwY29tbWl0JTIwaGFzaCUwQSk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>model = AutoModel.from_pretrained(
<span class="hljs-meta">... </span>    <span class="hljs-string">&quot;julien-c/EsperBERTo-small&quot;</span>, revision=<span class="hljs-string">&quot;v2.0.1&quot;</span>  <span class="hljs-comment"># tag name, or branch name, or commit hash</span>
<span class="hljs-meta">... </span>)`,wrap:!1}}),D=new U({props:{title:"Einrichtung",local:"einrichtung",headingTag:"h2"}}),N=new I({props:{code:"aHVnZ2luZ2ZhY2UtY2xpJTIwbG9naW4=",highlighted:"huggingface-cli login",wrap:!1}}),A=new I({props:{code:"cGlwJTIwaW5zdGFsbCUyMGh1Z2dpbmdmYWNlX2h1Yg==",highlighted:"pip install huggingface_hub",wrap:!1}}),O=new I({props:{code:"ZnJvbSUyMGh1Z2dpbmdmYWNlX2h1YiUyMGltcG9ydCUyMG5vdGVib29rX2xvZ2luJTBBJTBBbm90ZWJvb2tfbG9naW4oKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> notebook_login

<span class="hljs-meta">&gt;&gt;&gt; </span>notebook_login()`,wrap:!1}}),ee=new U({props:{title:"Ein Modell f√ºr alle Frameworks konvertieren",local:"ein-modell-f√ºr-alle-frameworks-konvertieren",headingTag:"h2"}}),F=new nn({props:{pytorch:!0,tensorflow:!0,jax:!0,$$slots:{jax:[wn],tensorflow:[$n],pytorch:[cn]},$$scope:{ctx:C}}}),le=new U({props:{title:"Ein Modell w√§hrend des Trainings hochladen",local:"ein-modell-w√§hrend-des-trainings-hochladen",headingTag:"h2"}}),R=new nn({props:{pytorch:!0,tensorflow:!0,jax:!1,$$slots:{tensorflow:[_n],pytorch:[kn]},$$scope:{ctx:C}}}),ie=new U({props:{title:"Verwenden Sie die Funktion push_to_hub .",local:"verwenden-sie-die-funktion-pushtohub-",headingTag:"h2"}}),ae=new I({props:{code:"cHRfbW9kZWwucHVzaF90b19odWIoJTIybXktYXdlc29tZS1tb2RlbCUyMik=",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>pt_model.push_to_hub(<span class="hljs-string">&quot;my-awesome-model&quot;</span>)',wrap:!1}}),me=new I({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMEF1dG9Nb2RlbCUwQSUwQW1vZGVsJTIwJTNEJTIwQXV0b01vZGVsLmZyb21fcHJldHJhaW5lZCglMjJ5b3VyX3VzZXJuYW1lJTJGbXktYXdlc29tZS1tb2RlbCUyMik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoModel

<span class="hljs-meta">&gt;&gt;&gt; </span>model = AutoModel.from_pretrained(<span class="hljs-string">&quot;your_username/my-awesome-model&quot;</span>)`,wrap:!1}}),pe=new I({props:{code:"cHRfbW9kZWwucHVzaF90b19odWIoJTIybXktYXdlc29tZS1vcmclMkZteS1hd2Vzb21lLW1vZGVsJTIyKQ==",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>pt_model.push_to_hub(<span class="hljs-string">&quot;my-awesome-org/my-awesome-model&quot;</span>)',wrap:!1}}),fe=new I({props:{code:"dG9rZW5pemVyLnB1c2hfdG9faHViKCUyMm15LWF3ZXNvbWUtbW9kZWwlMjIp",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer.push_to_hub(<span class="hljs-string">&quot;my-awesome-model&quot;</span>)',wrap:!1}}),ce=new I({props:{code:"dGZfbW9kZWwucHVzaF90b19odWIoJTIybXktYXdlc29tZS1tb2RlbCUyMik=",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>tf_model.push_to_hub(<span class="hljs-string">&quot;my-awesome-model&quot;</span>)',wrap:!1}}),be=new U({props:{title:"Hochladen mit der Weboberfl√§che",local:"hochladen-mit-der-weboberfl√§che",headingTag:"h2"}}),ye=new U({props:{title:"Hinzuf√ºgen einer Modellkarte",local:"hinzuf√ºgen-einer-modellkarte",headingTag:"h2"}}),{c(){i=f("meta"),u=r(),s=f("p"),o=r(),b(d.$$.fragment),m=r(),v=f("p"),v.textContent=J,H=r(),j=f("p"),j.innerHTML=c,y=r(),Z=f("ul"),Z.innerHTML=$,S=r(),z=f("iframe"),p=r(),b(W.$$.fragment),Ze=r(),b(G.$$.fragment),Se=r(),X=f("p"),X.textContent=Ht,Ie=r(),P=f("p"),P.innerHTML=Wt,Fe=r(),B=f("p"),B.textContent=Ct,Re=r(),b(Y.$$.fragment),xe=r(),V=f("p"),V.textContent=zt,Ue=r(),E=f("p"),E.innerHTML=Jt,Le=r(),b(D.$$.fragment),Ge=r(),q=f("p"),q.innerHTML=jt,Xe=r(),b(N.$$.fragment),Pe=r(),Q=f("p"),Q.innerHTML=Zt,Be=r(),b(A.$$.fragment),Ye=r(),K=f("p"),K.innerHTML=St,Ve=r(),b(O.$$.fragment),Ee=r(),b(ee.$$.fragment),De=r(),te=f("p"),te.textContent=It,qe=r(),ne=f("p"),ne.innerHTML=Ft,Ne=r(),b(F.$$.fragment),Qe=r(),b(le.$$.fragment),Ae=r(),b(R.$$.fragment),Ke=r(),b(ie.$$.fragment),Oe=r(),se=f("p"),se.innerHTML=Rt,et=r(),re=f("p"),re.textContent=xt,tt=r(),b(ae.$$.fragment),nt=r(),oe=f("p"),oe.innerHTML=Ut,lt=r(),b(me.$$.fragment),it=r(),ue=f("p"),ue.innerHTML=Lt,st=r(),b(pe.$$.fragment),rt=r(),de=f("p"),de.textContent=Gt,at=r(),b(fe.$$.fragment),ot=r(),he=f("p"),he.textContent=Xt,mt=r(),b(ce.$$.fragment),ut=r(),ge=f("p"),ge.innerHTML=Pt,pt=r(),$e=f("p"),$e.innerHTML=Bt,dt=r(),b(be.$$.fragment),ft=r(),we=f("p"),we.innerHTML=Yt,ht=r(),Me=f("p"),Me.innerHTML=Vt,ct=r(),ke=f("p"),ke.textContent=Et,gt=r(),Te=f("ul"),Te.innerHTML=Dt,$t=r(),_e=f("p"),_e.innerHTML=qt,bt=r(),ve=f("p"),ve.innerHTML=Nt,wt=r(),b(ye.$$.fragment),Mt=r(),He=f("p"),He.innerHTML=Qt,kt=r(),We=f("ul"),We.innerHTML=At,Tt=r(),Ce=f("p"),Ce.innerHTML=Kt,_t=r(),Je=f("p"),this.h()},l(e){const n=mn("svelte-u9bgzb",document.head);i=h(n,"META",{name:!0,content:!0}),n.forEach(t),u=a(e),s=h(e,"P",{}),yt(s).forEach(t),o=a(e),w(d.$$.fragment,e),m=a(e),v=h(e,"P",{"data-svelte-h":!0}),g(v)!=="svelte-18wq9i"&&(v.textContent=J),H=a(e),j=h(e,"P",{"data-svelte-h":!0}),g(j)!=="svelte-rdeb8m"&&(j.innerHTML=c),y=a(e),Z=h(e,"UL",{"data-svelte-h":!0}),g(Z)!=="svelte-1jmq0la"&&(Z.innerHTML=$),S=a(e),z=h(e,"IFRAME",{width:!0,height:!0,src:!0,title:!0,frameborder:!0,allow:!0}),yt(z).forEach(t),p=a(e),w(W.$$.fragment,e),Ze=a(e),w(G.$$.fragment,e),Se=a(e),X=h(e,"P",{"data-svelte-h":!0}),g(X)!=="svelte-1pqcgde"&&(X.textContent=Ht),Ie=a(e),P=h(e,"P",{"data-svelte-h":!0}),g(P)!=="svelte-1gmkeiv"&&(P.innerHTML=Wt),Fe=a(e),B=h(e,"P",{"data-svelte-h":!0}),g(B)!=="svelte-f1jmck"&&(B.textContent=Ct),Re=a(e),w(Y.$$.fragment,e),xe=a(e),V=h(e,"P",{"data-svelte-h":!0}),g(V)!=="svelte-5ffc0v"&&(V.textContent=zt),Ue=a(e),E=h(e,"P",{"data-svelte-h":!0}),g(E)!=="svelte-hnu2bf"&&(E.innerHTML=Jt),Le=a(e),w(D.$$.fragment,e),Ge=a(e),q=h(e,"P",{"data-svelte-h":!0}),g(q)!=="svelte-117ol68"&&(q.innerHTML=jt),Xe=a(e),w(N.$$.fragment,e),Pe=a(e),Q=h(e,"P",{"data-svelte-h":!0}),g(Q)!=="svelte-1jbdc3h"&&(Q.innerHTML=Zt),Be=a(e),w(A.$$.fragment,e),Ye=a(e),K=h(e,"P",{"data-svelte-h":!0}),g(K)!=="svelte-1c2ry48"&&(K.innerHTML=St),Ve=a(e),w(O.$$.fragment,e),Ee=a(e),w(ee.$$.fragment,e),De=a(e),te=h(e,"P",{"data-svelte-h":!0}),g(te)!=="svelte-9mlxm"&&(te.textContent=It),qe=a(e),ne=h(e,"P",{"data-svelte-h":!0}),g(ne)!=="svelte-14szr4n"&&(ne.innerHTML=Ft),Ne=a(e),w(F.$$.fragment,e),Qe=a(e),w(le.$$.fragment,e),Ae=a(e),w(R.$$.fragment,e),Ke=a(e),w(ie.$$.fragment,e),Oe=a(e),se=h(e,"P",{"data-svelte-h":!0}),g(se)!=="svelte-hn77f2"&&(se.innerHTML=Rt),et=a(e),re=h(e,"P",{"data-svelte-h":!0}),g(re)!=="svelte-iz0plm"&&(re.textContent=xt),tt=a(e),w(ae.$$.fragment,e),nt=a(e),oe=h(e,"P",{"data-svelte-h":!0}),g(oe)!=="svelte-u2vo9v"&&(oe.innerHTML=Ut),lt=a(e),w(me.$$.fragment,e),it=a(e),ue=h(e,"P",{"data-svelte-h":!0}),g(ue)!=="svelte-6lqkhk"&&(ue.innerHTML=Lt),st=a(e),w(pe.$$.fragment,e),rt=a(e),de=h(e,"P",{"data-svelte-h":!0}),g(de)!=="svelte-251pdm"&&(de.textContent=Gt),at=a(e),w(fe.$$.fragment,e),ot=a(e),he=h(e,"P",{"data-svelte-h":!0}),g(he)!=="svelte-bxfp42"&&(he.textContent=Xt),mt=a(e),w(ce.$$.fragment,e),ut=a(e),ge=h(e,"P",{"data-svelte-h":!0}),g(ge)!=="svelte-96hdsm"&&(ge.innerHTML=Pt),pt=a(e),$e=h(e,"P",{"data-svelte-h":!0}),g($e)!=="svelte-4r343i"&&($e.innerHTML=Bt),dt=a(e),w(be.$$.fragment,e),ft=a(e),we=h(e,"P",{"data-svelte-h":!0}),g(we)!=="svelte-huok31"&&(we.innerHTML=Yt),ht=a(e),Me=h(e,"P",{"data-svelte-h":!0}),g(Me)!=="svelte-ahj3l9"&&(Me.innerHTML=Vt),ct=a(e),ke=h(e,"P",{"data-svelte-h":!0}),g(ke)!=="svelte-ayxfv8"&&(ke.textContent=Et),gt=a(e),Te=h(e,"UL",{"data-svelte-h":!0}),g(Te)!=="svelte-40ovo4"&&(Te.innerHTML=Dt),$t=a(e),_e=h(e,"P",{"data-svelte-h":!0}),g(_e)!=="svelte-jigz4f"&&(_e.innerHTML=qt),bt=a(e),ve=h(e,"P",{"data-svelte-h":!0}),g(ve)!=="svelte-32sxm9"&&(ve.innerHTML=Nt),wt=a(e),w(ye.$$.fragment,e),Mt=a(e),He=h(e,"P",{"data-svelte-h":!0}),g(He)!=="svelte-80pzs2"&&(He.innerHTML=Qt),kt=a(e),We=h(e,"UL",{"data-svelte-h":!0}),g(We)!=="svelte-19dkbb3"&&(We.innerHTML=At),Tt=a(e),Ce=h(e,"P",{"data-svelte-h":!0}),g(Ce)!=="svelte-auebwl"&&(Ce.innerHTML=Kt),_t=a(e),Je=h(e,"P",{}),yt(Je).forEach(t),this.h()},h(){x(i,"name","hf:doc:metadata"),x(i,"content",yn),x(z,"width","560"),x(z,"height","315"),sn(z.src,L="https://www.youtube.com/embed/XvSGPZFEjDY")||x(z,"src",L),x(z,"title","YouTube video player"),x(z,"frameborder","0"),x(z,"allow",`accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope;
picture-in-picture`),z.allowFullscreen=""},m(e,n){un(document.head,i),l(e,u,n),l(e,s,n),l(e,o,n),M(d,e,n),l(e,m,n),l(e,v,n),l(e,H,n),l(e,j,n),l(e,y,n),l(e,Z,n),l(e,S,n),l(e,z,n),l(e,p,n),M(W,e,n),l(e,Ze,n),M(G,e,n),l(e,Se,n),l(e,X,n),l(e,Ie,n),l(e,P,n),l(e,Fe,n),l(e,B,n),l(e,Re,n),M(Y,e,n),l(e,xe,n),l(e,V,n),l(e,Ue,n),l(e,E,n),l(e,Le,n),M(D,e,n),l(e,Ge,n),l(e,q,n),l(e,Xe,n),M(N,e,n),l(e,Pe,n),l(e,Q,n),l(e,Be,n),M(A,e,n),l(e,Ye,n),l(e,K,n),l(e,Ve,n),M(O,e,n),l(e,Ee,n),M(ee,e,n),l(e,De,n),l(e,te,n),l(e,qe,n),l(e,ne,n),l(e,Ne,n),M(F,e,n),l(e,Qe,n),M(le,e,n),l(e,Ae,n),M(R,e,n),l(e,Ke,n),M(ie,e,n),l(e,Oe,n),l(e,se,n),l(e,et,n),l(e,re,n),l(e,tt,n),M(ae,e,n),l(e,nt,n),l(e,oe,n),l(e,lt,n),M(me,e,n),l(e,it,n),l(e,ue,n),l(e,st,n),M(pe,e,n),l(e,rt,n),l(e,de,n),l(e,at,n),M(fe,e,n),l(e,ot,n),l(e,he,n),l(e,mt,n),M(ce,e,n),l(e,ut,n),l(e,ge,n),l(e,pt,n),l(e,$e,n),l(e,dt,n),M(be,e,n),l(e,ft,n),l(e,we,n),l(e,ht,n),l(e,Me,n),l(e,ct,n),l(e,ke,n),l(e,gt,n),l(e,Te,n),l(e,$t,n),l(e,_e,n),l(e,bt,n),l(e,ve,n),l(e,wt,n),M(ye,e,n),l(e,Mt,n),l(e,He,n),l(e,kt,n),l(e,We,n),l(e,Tt,n),l(e,Ce,n),l(e,_t,n),l(e,Je,n),vt=!0},p(e,[n]){const Ot={};n&2&&(Ot.$$scope={dirty:n,ctx:e}),W.$set(Ot);const en={};n&2&&(en.$$scope={dirty:n,ctx:e}),F.$set(en);const tn={};n&2&&(tn.$$scope={dirty:n,ctx:e}),R.$set(tn)},i(e){vt||(k(d.$$.fragment,e),k(W.$$.fragment,e),k(G.$$.fragment,e),k(Y.$$.fragment,e),k(D.$$.fragment,e),k(N.$$.fragment,e),k(A.$$.fragment,e),k(O.$$.fragment,e),k(ee.$$.fragment,e),k(F.$$.fragment,e),k(le.$$.fragment,e),k(R.$$.fragment,e),k(ie.$$.fragment,e),k(ae.$$.fragment,e),k(me.$$.fragment,e),k(pe.$$.fragment,e),k(fe.$$.fragment,e),k(ce.$$.fragment,e),k(be.$$.fragment,e),k(ye.$$.fragment,e),vt=!0)},o(e){T(d.$$.fragment,e),T(W.$$.fragment,e),T(G.$$.fragment,e),T(Y.$$.fragment,e),T(D.$$.fragment,e),T(N.$$.fragment,e),T(A.$$.fragment,e),T(O.$$.fragment,e),T(ee.$$.fragment,e),T(F.$$.fragment,e),T(le.$$.fragment,e),T(R.$$.fragment,e),T(ie.$$.fragment,e),T(ae.$$.fragment,e),T(me.$$.fragment,e),T(pe.$$.fragment,e),T(fe.$$.fragment,e),T(ce.$$.fragment,e),T(be.$$.fragment,e),T(ye.$$.fragment,e),vt=!1},d(e){e&&(t(u),t(s),t(o),t(m),t(v),t(H),t(j),t(y),t(Z),t(S),t(z),t(p),t(Ze),t(Se),t(X),t(Ie),t(P),t(Fe),t(B),t(Re),t(xe),t(V),t(Ue),t(E),t(Le),t(Ge),t(q),t(Xe),t(Pe),t(Q),t(Be),t(Ye),t(K),t(Ve),t(Ee),t(De),t(te),t(qe),t(ne),t(Ne),t(Qe),t(Ae),t(Ke),t(Oe),t(se),t(et),t(re),t(tt),t(nt),t(oe),t(lt),t(it),t(ue),t(st),t(rt),t(de),t(at),t(ot),t(he),t(mt),t(ut),t(ge),t(pt),t($e),t(dt),t(ft),t(we),t(ht),t(Me),t(ct),t(ke),t(gt),t(Te),t($t),t(_e),t(bt),t(ve),t(wt),t(Mt),t(He),t(kt),t(We),t(Tt),t(Ce),t(_t),t(Je)),t(i),_(d,e),_(W,e),_(G,e),_(Y,e),_(D,e),_(N,e),_(A,e),_(O,e),_(ee,e),_(F,e),_(le,e),_(R,e),_(ie,e),_(ae,e),_(me,e),_(pe,e),_(fe,e),_(ce,e),_(be,e),_(ye,e)}}}const yn='{"title":"Ein Modell teilen","local":"ein-modell-teilen","sections":[{"title":"Repository-Funktionen","local":"repository-funktionen","sections":[],"depth":2},{"title":"Einrichtung","local":"einrichtung","sections":[],"depth":2},{"title":"Ein Modell f√ºr alle Frameworks konvertieren","local":"ein-modell-f√ºr-alle-frameworks-konvertieren","sections":[],"depth":2},{"title":"Ein Modell w√§hrend des Trainings hochladen","local":"ein-modell-w√§hrend-des-trainings-hochladen","sections":[],"depth":2},{"title":"Verwenden Sie die Funktion push_to_hub .","local":"verwenden-sie-die-funktion-pushtohub-","sections":[],"depth":2},{"title":"Hochladen mit der Weboberfl√§che","local":"hochladen-mit-der-weboberfl√§che","sections":[],"depth":2},{"title":"Hinzuf√ºgen einer Modellkarte","local":"hinzuf√ºgen-einer-modellkarte","sections":[],"depth":2}],"depth":1}';function Hn(C){return rn(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class In extends an{constructor(i){super(),on(this,i,Hn,vn,ln,{})}}export{In as component};
