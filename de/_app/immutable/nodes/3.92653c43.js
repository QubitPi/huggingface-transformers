import{s as Tu,f as ku,o as yu,n as bu}from"../chunks/scheduler.987d3921.js";import{S as zu,i as vu,g as r,s as l,r as u,A as Ju,h as a,f as t,c as s,j as gu,u as o,x as d,k as T,y as ju,a as i,v as h,d as m,t as p,w as f}from"../chunks/index.c8b1fed4.js";import{T as wu}from"../chunks/Tip.6bc1e794.js";import{C as M}from"../chunks/CodeBlock.18094d58.js";import{H as w}from"../chunks/Heading.3fa3b67f.js";function Cu(qt){let c,b='Wenn Sie daran interessiert sind, ein TensorFlow-Modell zu implementieren, werfen Sie einen Blick in die Anleitung <a href="add_tensorflow_model">How to convert a ü§ó Transformers model to TensorFlow</a>!';return{c(){c=r("p"),c.innerHTML=b},l(g){c=a(g,"P",{"data-svelte-h":!0}),d(c)!=="svelte-pr1uh8"&&(c.innerHTML=b)},m(g,k){i(g,c,k)},p:bu,d(g){g&&t(c)}}}function Iu(qt){let c,b="Falls Sie Windows verwenden, sollten Sie <code>RUN_SLOW=1</code> durch <code>SET RUN_SLOW=1</code> ersetzen.";return{c(){c=r("p"),c.innerHTML=b},l(g){c=a(g,"P",{"data-svelte-h":!0}),d(c)!=="svelte-a5zndq"&&(c.innerHTML=b)},m(g,k){i(g,c,k)},p:bu,d(g){g&&t(c)}}}function Uu(qt){let c,b,g,k,_,ni,A,Ar='Die ü§ó Transformers-Bibliothek ist dank der Beitr√§ge der Community oft in der Lage, neue Modelle anzubieten. Aber das kann ein anspruchsvolles Projekt sein und erfordert eine eingehende Kenntnis der ü§ó Transformers-Bibliothek und des zu implementierenden Modells. Bei Hugging Face versuchen wir, mehr Mitgliedern der Community die M√∂glichkeit zu geben, aktiv Modelle hinzuzuf√ºgen, und wir haben diese Anleitung zusammengestellt, die Sie durch den Prozess des Hinzuf√ºgens eines PyTorch-Modells f√ºhrt (stellen Sie sicher, dass Sie <a href="https://pytorch.org/get-started/locally/" rel="nofollow">PyTorch installiert haben</a>).',ti,y,ii,$,$r="Auf dem Weg dorthin, werden Sie:",li,L,Lr="<li>Einblicke in bew√§hrte Open-Source-Verfahren erhalten</li> <li>die Konstruktionsprinzipien hinter einer der beliebtesten Deep-Learning-Bibliotheken verstehen</li> <li>lernen Sie, wie Sie gro√üe Modelle effizient testen k√∂nnen</li> <li>lernen Sie, wie Sie Python-Hilfsprogramme wie <code>black</code>, <code>ruff</code> und <code>make fix-copies</code> integrieren, um sauberen und lesbaren Code zu gew√§hrleisten</li>",si,x,xr="Ein Mitglied des Hugging Face-Teams wird Ihnen dabei zur Seite stehen, damit Sie nicht alleine sind. ü§ó ‚ù§Ô∏è",ri,H,Hr='Um loszulegen, √∂ffnen Sie eine <a href="https://github.com/huggingface/transformers/issues/new?assignees=&amp;labels=New+model&amp;template=new-model-addition.yml" rel="nofollow">New model addition</a> Ausgabe f√ºr das Modell, das Sie in ü§ó Transformers sehen m√∂chten. Wenn Sie nicht besonders w√§hlerisch sind, wenn es darum geht, ein bestimmtes Modell beizusteuern, k√∂nnen Sie nach dem <a href="https://github.com/huggingface/transformers/labels/New%20model" rel="nofollow">New model label</a> filtern, um zu sehen, ob es noch unbeanspruchte Modellanfragen gibt, und daran arbeiten.',ai,B,Br="Sobald Sie eine neue Modellanfrage er√∂ffnet haben, sollten Sie sich zun√§chst mit ü§ó Transformers vertraut machen, falls Sie das noch nicht sind!",di,Z,ui,W,Zr=`Zun√§chst sollten Sie sich einen allgemeinen √úberblick √ºber ü§ó Transformers verschaffen. ü§ó Transformers ist eine sehr meinungsfreudige Bibliothek, es ist also m√∂glich, dass
Es besteht also die M√∂glichkeit, dass Sie mit einigen der Philosophien oder Designentscheidungen der Bibliothek nicht einverstanden sind. Aus unserer Erfahrung heraus haben wir jedoch
dass die grundlegenden Designentscheidungen und Philosophien der Bibliothek entscheidend sind, um ü§ó Transformers effizient zu skalieren.
Transformatoren zu skalieren und gleichzeitig die Wartungskosten auf einem vern√ºnftigen Niveau zu halten.`,oi,D,Wr='Ein guter erster Ansatzpunkt, um die Bibliothek besser zu verstehen, ist die Lekt√ºre der <a href="Philosophie">Dokumentation unserer Philosophie</a>. Als Ergebnis unserer Arbeitsweise gibt es einige Entscheidungen, die wir versuchen, auf alle Modelle anzuwenden:',hi,E,Dr=`<li>Komposition wird im Allgemeinen gegen√ºber Abstraktion bevorzugt</li> <li>Die Duplizierung von Code ist nicht immer schlecht, wenn sie die Lesbarkeit oder Zug√§nglichkeit eines Modells stark verbessert</li> <li>Modelldateien sind so in sich geschlossen wie m√∂glich, so dass Sie, wenn Sie den Code eines bestimmten Modells lesen, idealerweise nur
in die entsprechende Datei <code>modeling_....py</code> schauen m√ºssen.</li>`,mi,N,Er=`Unserer Meinung nach ist der Code der Bibliothek nicht nur ein Mittel, um ein Produkt bereitzustellen, <em>z.B.</em> die M√∂glichkeit, BERT f√ºr
Inferenz zu verwenden, sondern auch als das Produkt selbst, das wir verbessern wollen. Wenn Sie also ein Modell hinzuf√ºgen, ist der Benutzer nicht nur die
Person, die Ihr Modell verwenden wird, sondern auch jeder, der Ihren Code liest, zu verstehen versucht und ihn m√∂glicherweise verbessert.`,pi,R,Nr="Lassen Sie uns daher ein wenig tiefer in das allgemeine Design der Bibliothek einsteigen.",fi,P,Mi,G,Rr=`Um ein Modell erfolgreich hinzuzuf√ºgen, ist es wichtig, die Interaktion zwischen Ihrem Modell und seiner Konfiguration zu verstehen,
<code>PreTrainedModel</code> und <code>PretrainedConfig</code>. Als Beispiel werden wir
das Modell, das zu ü§ó Transformers hinzugef√ºgt werden soll, <code>BrandNewBert</code> nennen.`,ci,F,Pr="Schauen wir uns das mal an:",gi,Ot,Gr,wi,V,Fr=`Wie Sie sehen, machen wir in ü§ó Transformers von der Vererbung Gebrauch, aber wir beschr√§nken die Abstraktionsebene auf ein absolutes Minimum.
Minimum. Es gibt nie mehr als zwei Abstraktionsebenen f√ºr ein Modell in der Bibliothek. <code>BrandNewBertModel</code>
erbt von <code>BrandNewBertPreTrainedModel</code>, das wiederum von <code>PreTrainedModel</code> erbt und
das war‚Äôs. In der Regel wollen wir sicherstellen, dass ein neues Modell nur von
<code>PreTrainedModel</code> abh√§ngt. Die wichtigen Funktionalit√§ten, die jedem neuen Modell automatisch zur Verf√ºgung gestellt werden, sind
Modell automatisch bereitgestellt werden, sind <code>from_pretrained()</code> und
<code>save_pretrained()</code>, die f√ºr die Serialisierung und Deserialisierung verwendet werden. Alle
anderen wichtigen Funktionalit√§ten, wie <code>BrandNewBertModel.forward</code> sollten vollst√§ndig in der neuen
Skript <code>modeling_brand_new_bert.py</code> definiert werden. Als n√§chstes wollen wir sicherstellen, dass ein Modell mit einer bestimmten Kopfebene, wie z.B.
<code>BrandNewBertForMaskedLM</code> nicht von <code>BrandNewBertModel</code> erbt, sondern <code>BrandNewBertModel</code> verwendet
als Komponente, die im Forward Pass aufgerufen werden kann, um die Abstraktionsebene niedrig zu halten. Jedes neue Modell erfordert eine
Konfigurationsklasse, genannt <code>BrandNewBertConfig</code>. Diese Konfiguration wird immer als ein Attribut in
[PreTrainedModel] gespeichert und kann daher √ºber das Attribut <code>config</code> f√ºr alle Klassen aufgerufen werden
die von <code>BrandNewBertPreTrainedModel</code> erben:`,bi,Q,Ti,X,Vr=`√Ñhnlich wie das Modell erbt die Konfiguration grundlegende Serialisierungs- und Deserialisierungsfunktionalit√§ten von
<code>PretrainedConfig</code>. Beachten Sie, dass die Konfiguration und das Modell immer in zwei verschiedene Formate serialisiert werden
unterschiedliche Formate serialisiert werden - das Modell in eine <em>pytorch_model.bin</em> Datei und die Konfiguration in eine <em>config.json</em> Datei. Aufruf von
<code>save_pretrained()</code> wird automatisch
<code>save_pretrained()</code> auf, so dass sowohl das Modell als auch die Konfiguration gespeichert werden.`,ki,Y,yi,K,Qr=`Wenn Sie Ihr neues Modell kodieren, sollten Sie daran denken, dass Transformers eine Bibliothek mit vielen Meinungen ist und dass wir selbst ein paar Macken haben
wie der Code geschrieben werden sollte :-)`,zi,q,Xr=`<li>Der Vorw√§rtsdurchlauf Ihres Modells sollte vollst√§ndig in die Modellierungsdatei geschrieben werden und dabei v√∂llig unabh√§ngig von anderen
Modellen in der Bibliothek. Wenn Sie einen Block aus einem anderen Modell wiederverwenden m√∂chten, kopieren Sie den Code und f√ºgen ihn mit einem
<code># Kopiert von</code> ein (siehe <a href="https://github.com/huggingface/transformers/blob/v4.17.0/src/transformers/models/roberta/modeling_roberta.py#L160" rel="nofollow">hier</a>
f√ºr ein gutes Beispiel und <a href="pr_checks#check-copies">hier</a> f√ºr weitere Dokumentation zu Copied from).</li> <li>Der Code sollte vollst√§ndig verst√§ndlich sein, auch f√ºr einen Nicht-Muttersprachler. Das hei√üt, Sie sollten
beschreibende Variablennamen w√§hlen und Abk√ºrzungen vermeiden. Ein Beispiel: <code>activation</code> ist <code>act</code> vorzuziehen.
Von Variablennamen mit nur einem Buchstaben wird dringend abgeraten, es sei denn, es handelt sich um einen Index in einer for-Schleife.</li> <li>Generell ziehen wir l√§ngeren expliziten Code einem kurzen magischen Code vor.</li> <li>Vermeiden Sie die Unterklassifizierung von <code>nn.Sequential</code> in PyTorch, sondern unterklassifizieren Sie <code>nn.Module</code> und schreiben Sie den Vorw√§rtspass, so dass jeder
so dass jeder, der Ihren Code verwendet, ihn schnell debuggen kann, indem er Druckanweisungen oder Haltepunkte hinzuf√ºgt.</li> <li>Ihre Funktionssignatur sollte mit einer Typ-Annotation versehen sein. Im √úbrigen sind gute Variablennamen viel lesbarer und verst√§ndlicher
verst√§ndlicher als Typ-Anmerkungen.</li>`,vi,O,Ji,ee,Yr="Noch nicht ganz fertig :-( Dieser Abschnitt wird bald hinzugef√ºgt!",ji,ne,Ci,te,Kr=`Jeder hat andere Vorlieben, was die Portierung eines Modells angeht. Daher kann es sehr hilfreich sein, wenn Sie sich Zusammenfassungen ansehen
wie andere Mitwirkende Modelle auf Hugging Face portiert haben. Hier ist eine Liste von Blogbeitr√§gen aus der Community, wie man ein Modell portiert:`,Ii,ie,qr='<li><a href="https://medium.com/huggingface/from-tensorflow-to-pytorch-265f40ef2a28" rel="nofollow">Portierung eines GPT2-Modells</a> von <a href="https://huggingface.co/thomwolf" rel="nofollow">Thomas</a></li> <li><a href="https://huggingface.co/blog/porting-fsmt" rel="nofollow">Portierung des WMT19 MT-Modells</a> von <a href="https://huggingface.co/stas" rel="nofollow">Stas</a></li>',Ui,le,Or="Aus Erfahrung k√∂nnen wir Ihnen sagen, dass die wichtigsten Dinge, die Sie beim Hinzuf√ºgen eines Modells beachten m√ºssen, sind:",Si,se,ea=`<li>Erfinden Sie das Rad nicht neu! Die meisten Teile des Codes, den Sie f√ºr das neue ü§ó Transformers-Modell hinzuf√ºgen werden, existieren bereits
irgendwo in ü§ó Transformers. Nehmen Sie sich etwas Zeit, um √§hnliche, bereits vorhandene Modelle und Tokenizer zu finden, die Sie kopieren k√∂nnen
von. <a href="https://www.gnu.org/software/grep/" rel="nofollow">grep</a> und <a href="https://github.com/BurntSushi/ripgrep" rel="nofollow">rg</a> sind Ihre
Freunde. Beachten Sie, dass es sehr gut m√∂glich ist, dass der Tokenizer Ihres Modells auf einer Modellimplementierung basiert und
und der Modellierungscode Ihres Modells auf einer anderen. <em>Z.B.</em> Der Modellierungscode von FSMT basiert auf BART, w√§hrend der Tokenizer-Code von FSMT
auf XLM basiert.</li> <li>Es handelt sich eher um eine technische als um eine wissenschaftliche Herausforderung. Sie sollten mehr Zeit auf die Schaffung einer
eine effiziente Debugging-Umgebung zu schaffen, als zu versuchen, alle theoretischen Aspekte des Modells in dem Papier zu verstehen.</li> <li>Bitten Sie um Hilfe, wenn Sie nicht weiterkommen! Modelle sind der Kernbestandteil von ü§ó Transformers, so dass wir bei Hugging Face mehr als
mehr als gl√ºcklich, Ihnen bei jedem Schritt zu helfen, um Ihr Modell hinzuzuf√ºgen. Z√∂gern Sie nicht zu fragen, wenn Sie merken, dass Sie nicht weiterkommen.
Fortschritte machen.</li>`,_i,re,na="Im Folgenden versuchen wir, Ihnen ein allgemeines Rezept an die Hand zu geben, das uns bei der Portierung eines Modells auf ü§ó Transformers am n√ºtzlichsten erschien.",Ai,ae,ta=`Die folgende Liste ist eine Zusammenfassung all dessen, was getan werden muss, um ein Modell hinzuzuf√ºgen und kann von Ihnen als To-Do verwendet werden
Liste verwenden:`,$i,de,ia=`‚òê (Optional) Verstehen der theoretischen Aspekte des Modells<br/>
‚òê Vorbereiten der ü§ó Transformers-Entwicklungsumgebung<br/>
‚òê Debugging-Umgebung des urspr√ºnglichen Repositorys eingerichtet<br/>
‚òê Skript erstellt, das den Durchlauf <code>forward()</code> unter Verwendung des urspr√ºnglichen Repositorys und des Checkpoints erfolgreich durchf√ºhrt<br/>
‚òê Erfolgreich das Modellskelett zu ü§ó Transformers hinzugef√ºgt<br/>
‚òê Erfolgreiche Umwandlung des urspr√ºnglichen Pr√ºfpunkts in den ü§ó Transformers-Pr√ºfpunkt<br/>
‚òê Erfolgreich den Durchlauf <code>forward()</code> in ü§ó Transformers ausgef√ºhrt, der eine identische Ausgabe wie der urspr√ºngliche Pr√ºfpunkt liefert<br/>
‚òê Modell-Tests in ü§ó Transformers abgeschlossen<br/>
‚òê Erfolgreich Tokenizer in ü§ó Transformers hinzugef√ºgt<br/>
‚òê End-to-End-Integrationstests ausgef√ºhrt<br/>
‚òê Docs fertiggestellt<br/>
‚òê Modellgewichte in den Hub hochgeladen<br/>
‚òê Die Pull-Anfrage eingereicht<br/>
‚òê (Optional) Hinzuf√ºgen eines Demo-Notizbuchs`,Li,ue,la=`F√ºr den Anfang empfehlen wir in der Regel, mit einem guten theoretischen Verst√§ndnis von <code>BrandNewBert</code> zu beginnen. Wie auch immer,
wenn Sie es vorziehen, die theoretischen Aspekte des Modells <em>on-the-job</em> zu verstehen, dann ist es v√∂llig in Ordnung, direkt in die
in die Code-Basis von <code>BrandNewBert</code> einzutauchen. Diese Option k√∂nnte f√ºr Sie besser geeignet sein, wenn Ihre technischen F√§higkeiten besser sind als
als Ihre theoretischen F√§higkeiten, wenn Sie Schwierigkeiten haben, die Arbeit von <code>BrandNewBert</code> zu verstehen, oder wenn Sie einfach Spa√ü am Programmieren
mehr Spa√ü am Programmieren haben als am Lesen wissenschaftlicher Abhandlungen.`,xi,oe,Hi,he,sa=`Sie sollten sich etwas Zeit nehmen, um die Abhandlung von <em>BrandNewBert</em> zu lesen, falls eine solche Beschreibung existiert. M√∂glicherweise gibt es gro√üe
Abschnitte des Papiers, die schwer zu verstehen sind. Wenn das der Fall ist, ist das in Ordnung - machen Sie sich keine Sorgen! Das Ziel ist
ist es nicht, ein tiefes theoretisches Verst√§ndnis des Papiers zu erlangen, sondern die notwendigen Informationen zu extrahieren, um
das Modell effektiv in ü§ó Transformers zu implementieren. Das hei√üt, Sie m√ºssen nicht zu viel Zeit auf die
theoretischen Aspekten verbringen, sondern sich lieber auf die praktischen Aspekte konzentrieren, n√§mlich:`,Bi,me,ra=`<li>Welche Art von Modell ist <em>brand_new_bert</em>? BERT-√§hnliches Modell nur f√ºr den Encoder? GPT2-√§hnliches reines Decoder-Modell? BART-√§hnliches
Encoder-Decoder-Modell? Sehen Sie sich die <a href="model_summary">model_summary</a> an, wenn Sie mit den Unterschieden zwischen diesen Modellen nicht vertraut sind.</li> <li>Was sind die Anwendungen von <em>brand_new_bert</em>? Textklassifizierung? Texterzeugung? Seq2Seq-Aufgaben, <em>z.B.,</em>
Zusammenfassungen?</li> <li>Was ist die neue Eigenschaft des Modells, die es von BERT/GPT-2/BART unterscheidet?</li> <li>Welches der bereits existierenden <a href="https://huggingface.co/transformers/#contents" rel="nofollow">ü§ó Transformers-Modelle</a> ist am √§hnlichsten
√§hnlich wie <em>brand_new_bert</em>?</li> <li>Welche Art von Tokenizer wird verwendet? Ein Satzteil-Tokenisierer? Ein Wortst√ºck-Tokenisierer? Ist es derselbe Tokenisierer, der f√ºr
f√ºr BERT oder BART?</li>`,Zi,pe,aa=`Nachdem Sie das Gef√ºhl haben, einen guten √úberblick √ºber die Architektur des Modells erhalten zu haben, k√∂nnen Sie dem
Hugging Face Team schreiben und Ihre Fragen stellen. Dazu k√∂nnen Fragen zur Architektur des Modells geh√∂ren,
seiner Aufmerksamkeitsebene usw. Wir werden Ihnen gerne weiterhelfen.`,Wi,fe,Di,Me,da=`<li><p>Forken Sie das <a href="https://github.com/huggingface/transformers" rel="nofollow">Repository</a>, indem Sie auf der Seite des Repositorys auf die Schaltfl√§che ‚ÄòFork‚Äô klicken.
Seite des Repositorys klicken. Dadurch wird eine Kopie des Codes unter Ihrem GitHub-Benutzerkonto erstellt.</p></li> <li><p>Klonen Sie Ihren <code>transformers</code> Fork auf Ihre lokale Festplatte und f√ºgen Sie das Basis-Repository als Remote hinzu:</p></li>`,Ei,ce,Ni,z,ua="<li>Richten Sie eine Entwicklungsumgebung ein, indem Sie z.B. den folgenden Befehl ausf√ºhren:</li>",Ri,ge,Pi,we,oa=`Abh√§ngig von Ihrem Betriebssystem und da die Anzahl der optionalen Abh√§ngigkeiten von Transformers w√§chst, kann es sein, dass Sie bei diesem Befehl einen
Fehler mit diesem Befehl. Stellen Sie in diesem Fall sicher, dass Sie das Deep Learning Framework, mit dem Sie arbeiten, installieren
(PyTorch, TensorFlow und/oder Flax) und f√ºhren Sie es aus:`,Gi,be,Fi,Te,ha="was f√ºr die meisten Anwendungsf√§lle ausreichend sein sollte. Sie k√∂nnen dann zum √ºbergeordneten Verzeichnis zur√ºckkehren",Vi,ke,Qi,v,ma=`<li>Wir empfehlen, die PyTorch-Version von <em>brand_new_bert</em> zu Transformers hinzuzuf√ºgen. Um PyTorch zu installieren, folgen Sie bitte den
Anweisungen auf <a href="https://pytorch.org/get-started/locally/" rel="nofollow">https://pytorch.org/get-started/locally/</a>.</li>`,Xi,ye,pa="<strong>Anmerkung:</strong> Sie m√ºssen CUDA nicht installiert haben. Es reicht aus, das neue Modell auf der CPU zum Laufen zu bringen.",Yi,J,fa="<li>Um <em>brand_new_bert</em> zu portieren, ben√∂tigen Sie au√üerdem Zugriff auf das Original-Repository:</li>",Ki,ze,qi,ve,Ma="Jetzt haben Sie eine Entwicklungsumgebung eingerichtet, um <em>brand_new_bert</em> auf ü§ó Transformers zu portieren.",Oi,Je,el,je,ca=`Zun√§chst werden Sie mit dem urspr√ºnglichen <em>brand_new_bert</em> Repository arbeiten. Oft ist die urspr√ºngliche Implementierung sehr
‚Äúforschungslastig‚Äù. Das bedeutet, dass es an Dokumentation mangeln kann und der Code schwer zu verstehen sein kann. Aber das sollte
genau Ihre Motivation sein, <em>brand_new_bert</em> neu zu implementieren. Eines unserer Hauptziele bei Hugging Face ist es, <em>die Menschen dazu zu bringen
auf den Schultern von Giganten zu stehen</em>, was sich hier sehr gut darin ausdr√ºckt, dass wir ein funktionierendes Modell nehmen und es umschreiben, um es so
es so <strong>zug√§nglich, benutzerfreundlich und sch√∂n</strong> wie m√∂glich zu machen. Dies ist die wichtigste Motivation f√ºr die Neuimplementierung von
Modelle in ü§ó Transformers umzuwandeln - der Versuch, komplexe neue NLP-Technologie f√ºr <strong>jeden</strong> zug√§nglich zu machen.`,nl,Ce,ga="Sie sollten damit beginnen, indem Sie in das Original-Repository eintauchen.",tl,Ie,wa=`Die erfolgreiche Ausf√ºhrung des offiziellen Pre-Trainingsmodells im Original-Repository ist oft <strong>der schwierigste</strong> Schritt.
Unserer Erfahrung nach ist es sehr wichtig, dass Sie einige Zeit damit verbringen, sich mit der urspr√ºnglichen Code-Basis vertraut zu machen. Sie m√ºssen
das Folgende herausfinden:`,il,Ue,ba=`<li>Wo finden Sie die vortrainierten Gewichte?</li> <li>Wie l√§dt man die vorab trainierten Gewichte in das entsprechende Modell?</li> <li>Wie kann der Tokenizer unabh√§ngig vom Modell ausgef√ºhrt werden?</li> <li>Verfolgen Sie einen Forward Pass, damit Sie wissen, welche Klassen und Funktionen f√ºr einen einfachen Forward Pass erforderlich sind. Normalerweise,
m√ºssen Sie nur diese Funktionen reimplementieren.</li> <li>Sie m√ºssen in der Lage sein, die wichtigen Komponenten des Modells zu finden: Wo befindet sich die Klasse des Modells? Gibt es Unterklassen des Modells,
<em>z.B.</em> EncoderModel, DecoderModel? Wo befindet sich die Selbstaufmerksamkeitsschicht? Gibt es mehrere verschiedene Aufmerksamkeitsebenen,
<em>z.B.</em> <em>Selbstaufmerksamkeit</em>, <em>Kreuzaufmerksamkeit</em>‚Ä¶?</li> <li>Wie k√∂nnen Sie das Modell in der urspr√ºnglichen Umgebung des Repo debuggen? M√ºssen Sie <em>print</em> Anweisungen hinzuf√ºgen, k√∂nnen Sie
mit einem interaktiven Debugger wie <em>ipdb</em> arbeiten oder sollten Sie eine effiziente IDE zum Debuggen des Modells verwenden, wie z.B. PyCharm?</li>`,ll,Se,Ta=`Es ist sehr wichtig, dass Sie, bevor Sie mit der Portierung beginnen, den Code im Original-Repository <strong>effizient</strong> debuggen k√∂nnen
Repository k√∂nnen! Denken Sie auch daran, dass Sie mit einer Open-Source-Bibliothek arbeiten, also z√∂gern Sie nicht, ein Problem oder
oder sogar eine Pull-Anfrage im Original-Repository zu stellen. Die Betreuer dieses Repositorys sind wahrscheinlich sehr froh dar√ºber
dass jemand in ihren Code schaut!`,sl,_e,ka=`An diesem Punkt liegt es wirklich an Ihnen, welche Debugging-Umgebung und Strategie Sie zum Debuggen des urspr√ºnglichen
Modell zu debuggen. Wir raten dringend davon ab, eine kostspielige GPU-Umgebung einzurichten, sondern arbeiten Sie einfach auf einer CPU, sowohl wenn Sie mit dem
in das urspr√ºngliche Repository einzutauchen und auch, wenn Sie beginnen, die ü§ó Transformers-Implementierung des Modells zu schreiben. Nur
ganz am Ende, wenn das Modell bereits erfolgreich auf ü§ó Transformers portiert wurde, sollte man √ºberpr√ºfen, ob das
Modell auch auf der GPU wie erwartet funktioniert.`,rl,Ae,ya="Im Allgemeinen gibt es zwei m√∂gliche Debugging-Umgebungen f√ºr die Ausf√ºhrung des Originalmodells",al,$e,za='<li><a href="https://jupyter.org/" rel="nofollow">Jupyter notebooks</a> / <a href="https://colab.research.google.com/notebooks/intro.ipynb" rel="nofollow">google colab</a></li> <li>Lokale Python-Skripte.</li>',dl,Le,va=`Jupyter-Notebooks haben den Vorteil, dass sie eine zellenweise Ausf√ºhrung erm√∂glichen, was hilfreich sein kann, um logische Komponenten besser voneinander zu trennen und
logische Komponenten voneinander zu trennen und schnellere Debugging-Zyklen zu haben, da Zwischenergebnisse gespeichert werden k√∂nnen. Au√üerdem,
Au√üerdem lassen sich Notebooks oft leichter mit anderen Mitwirkenden teilen, was sehr hilfreich sein kann, wenn Sie das Hugging Face Team um Hilfe bitten m√∂chten.
Face Team um Hilfe bitten. Wenn Sie mit Jupyter-Notizb√ºchern vertraut sind, empfehlen wir Ihnen dringend, mit ihnen zu arbeiten.`,ul,xe,Ja=`Der offensichtliche Nachteil von Jupyter-Notizb√ºchern ist, dass Sie, wenn Sie nicht daran gew√∂hnt sind, mit ihnen zu arbeiten, einige Zeit damit verbringen m√ºssen
einige Zeit damit verbringen m√ºssen, sich an die neue Programmierumgebung zu gew√∂hnen, und dass Sie m√∂glicherweise Ihre bekannten Debugging-Tools nicht mehr verwenden k√∂nnen
wie z.B. <code>ipdb</code> nicht mehr verwenden k√∂nnen.`,ol,He,ja=`F√ºr jede Codebasis ist es immer ein guter erster Schritt, einen <strong>kleinen</strong> vortrainierten Checkpoint zu laden und in der Lage zu sein, einen
einzelnen Vorw√§rtsdurchlauf mit einem Dummy-Integer-Vektor von Eingabe-IDs als Eingabe zu reproduzieren. Ein solches Skript k√∂nnte wie folgt aussehen (in
Pseudocode):`,hl,Be,ml,Ze,Ca="Was die Debugging-Strategie anbelangt, so k√∂nnen Sie im Allgemeinen aus mehreren Strategien w√§hlen:",pl,We,Ia=`<li>Zerlegen Sie das urspr√ºngliche Modell in viele kleine testbare Komponenten und f√ºhren Sie f√ºr jede dieser Komponenten einen Vorw√§rtsdurchlauf zur
√úberpr√ºfung</li> <li>Zerlegen Sie das urspr√ºngliche Modell nur in den urspr√ºnglichen <em>Tokenizer</em> und das urspr√ºngliche <em>Modell</em>, f√ºhren Sie einen Vorw√§rtsdurchlauf f√ºr diese Komponenten durch
und verwenden Sie dazwischenliegende Druckanweisungen oder Haltepunkte zur √úberpr√ºfung.</li>`,fl,De,Ua=`Auch hier bleibt es Ihnen √ºberlassen, welche Strategie Sie w√§hlen. Oft ist die eine oder die andere Strategie vorteilhaft, je nach der urspr√ºnglichen Codebasis
Basis.`,Ml,Ee,Sa=`Wenn die urspr√ºngliche Codebasis es Ihnen erlaubt, das Modell in kleinere Teilkomponenten zu zerlegen, <em>z.B.</em> wenn die urspr√ºngliche
Code-Basis problemlos im Eager-Modus ausgef√ºhrt werden kann, lohnt es sich in der Regel, dies zu tun. Es gibt einige wichtige Vorteile
am Anfang den schwierigeren Weg zu gehen:`,cl,Ne,_a=`<li>Wenn Sie sp√§ter das urspr√ºngliche Modell mit der Hugging Face-Implementierung vergleichen, k√∂nnen Sie automatisch √ºberpr√ºfen, ob
f√ºr jede Komponente einzeln √ºberpr√ºfen, ob die entsprechende Komponente der ü§ó Transformers-Implementierung √ºbereinstimmt, anstatt sich auf
anstatt sich auf den visuellen Vergleich √ºber Druckanweisungen zu verlassen</li> <li>k√∂nnen Sie das gro√üe Problem der Portierung eines Modells in kleinere Probleme der Portierung einzelner Komponenten zerlegen
einzelnen Komponenten zu zerlegen und so Ihre Arbeit besser zu strukturieren</li> <li>Die Aufteilung des Modells in logisch sinnvolle Komponenten hilft Ihnen, einen besseren √úberblick √ºber das Design des Modells zu bekommen
und somit das Modell besser zu verstehen</li> <li>In einem sp√§teren Stadium helfen Ihnen diese komponentenweisen Tests dabei, sicherzustellen, dass keine Regressionen auftreten, w√§hrend Sie fortfahren
Ihren Code √§ndern</li>`,gl,Re,Aa=`<a href="https://gist.github.com/LysandreJik/db4c948f6b4483960de5cbac598ad4ed" rel="nofollow">Lysandre‚Äôs</a> Integrationstests f√ºr ELECTRA
gibt ein sch√∂nes Beispiel daf√ºr, wie dies geschehen kann.`,wl,Pe,$a=`Wenn die urspr√ºngliche Codebasis jedoch sehr komplex ist oder nur die Ausf√ºhrung von Zwischenkomponenten in einem kompilierten Modus erlaubt,
k√∂nnte es zu zeitaufw√§ndig oder sogar unm√∂glich sein, das Modell in kleinere testbare Teilkomponenten zu zerlegen. Ein gutes
Beispiel ist die <a href="https://github.com/tensorflow/mesh/tree/master/mesh_tensorflow" rel="nofollow">T5‚Äôs MeshTensorFlow</a> Bibliothek, die sehr komplex ist
sehr komplex ist und keine einfache M√∂glichkeit bietet, das Modell in seine Unterkomponenten zu zerlegen. Bei solchen Bibliotheken ist man
oft auf die √úberpr√ºfung von Druckanweisungen angewiesen.`,bl,Ge,La=`Unabh√§ngig davon, welche Strategie Sie w√§hlen, ist die empfohlene Vorgehensweise oft die gleiche, n√§mlich dass Sie mit der Fehlersuche in den
die Anfangsebenen zuerst und die Endebenen zuletzt debuggen.`,Tl,Fe,xa=`Es wird empfohlen, dass Sie die Ausgaben der folgenden Ebenen abrufen, entweder durch Druckanweisungen oder Unterkomponentenfunktionen
Schichten in der folgenden Reihenfolge abrufen:`,kl,Ve,Ha="<li>Rufen Sie die Eingabe-IDs ab, die an das Modell √ºbergeben wurden</li> <li>Rufen Sie die Worteinbettungen ab</li> <li>Rufen Sie die Eingabe der ersten Transformer-Schicht ab</li> <li>Rufen Sie die Ausgabe der ersten Transformer-Schicht ab</li> <li>Rufen Sie die Ausgabe der folgenden n - 1 Transformer-Schichten ab</li> <li>Rufen Sie die Ausgabe des gesamten BrandNewBert Modells ab</li>",yl,Qe,Ba="Die Eingabe-IDs sollten dabei aus einem Array von Ganzzahlen bestehen, <em>z.B.</em> <code>input_ids = [0, 4, 4, 3, 2, 4, 1, 7, 19]</code>",zl,Xe,Za="Die Ausgaben der folgenden Schichten bestehen oft aus mehrdimensionalen Float-Arrays und k√∂nnen wie folgt aussehen:",vl,Ye,Jl,Ke,Wa=`Wir erwarten, dass jedes zu ü§ó Transformers hinzugef√ºgte Modell eine Reihe von Integrationstests besteht, was bedeutet, dass das urspr√ºngliche
Modell und die neu implementierte Version in ü§ó Transformers exakt dieselbe Ausgabe liefern m√ºssen, und zwar mit einer Genauigkeit von 0,001!
Da es normal ist, dass das exakt gleiche Modell, das in verschiedenen Bibliotheken geschrieben wurde, je nach Bibliotheksrahmen eine leicht unterschiedliche Ausgabe liefern kann
eine leicht unterschiedliche Ausgabe liefern kann, akzeptieren wir eine Fehlertoleranz von 1e-3 (0,001). Es reicht nicht aus, wenn das Modell
fast das gleiche Ergebnis liefert, sie m√ºssen fast identisch sein. Daher werden Sie sicherlich die Zwischenergebnisse
Zwischenergebnisse der ü§ó Transformers-Version mehrfach mit den Zwischenergebnissen der urspr√ºnglichen Implementierung von
<em>brand_new_bert</em> vergleichen. In diesem Fall ist eine <strong>effiziente</strong> Debugging-Umgebung des urspr√ºnglichen Repositorys absolut
wichtig ist. Hier sind einige Ratschl√§ge, um Ihre Debugging-Umgebung so effizient wie m√∂glich zu gestalten.`,jl,qe,Da=`<li>Finden Sie den besten Weg, um Zwischenergebnisse zu debuggen. Ist das urspr√ºngliche Repository in PyTorch geschrieben? Dann sollten Sie
dann sollten Sie sich wahrscheinlich die Zeit nehmen, ein l√§ngeres Skript zu schreiben, das das urspr√ºngliche Modell in kleinere Unterkomponenten zerlegt, um
Zwischenwerte abzurufen. Ist das urspr√ºngliche Repository in Tensorflow 1 geschrieben? Dann m√ºssen Sie sich m√∂glicherweise auf die
TensorFlow Druckoperationen wie <a href="https://www.tensorflow.org/api_docs/python/tf/print" rel="nofollow">tf.print</a> verlassen, um die
Zwischenwerte auszugeben. Ist das urspr√ºngliche Repository in Jax geschrieben? Dann stellen Sie sicher, dass das Modell <strong>nicht jitted</strong> ist, wenn
wenn Sie den Vorw√§rtsdurchlauf ausf√ºhren, <em>z.B.</em> schauen Sie sich <a href="https://github.com/google/jax/issues/196" rel="nofollow">dieser Link</a> an.</li> <li>Verwenden Sie den kleinsten vortrainierten Pr√ºfpunkt, den Sie finden k√∂nnen. Je kleiner der Pr√ºfpunkt ist, desto schneller wird Ihr Debugging-Zyklus
wird. Es ist nicht effizient, wenn Ihr vorab trainiertes Modell so gro√ü ist, dass Ihr Vorw√§rtsdurchlauf mehr als 10 Sekunden dauert.
Falls nur sehr gro√üe Checkpoints verf√ºgbar sind, kann es sinnvoller sein, ein Dummy-Modell in der neuen
Umgebung mit zuf√§llig initialisierten Gewichten zu erstellen und diese Gewichte zum Vergleich mit der ü§ó Transformers-Version
Ihres Modells</li> <li>Vergewissern Sie sich, dass Sie den einfachsten Weg w√§hlen, um einen Forward Pass im urspr√ºnglichen Repository aufzurufen. Idealerweise sollten Sie
die Funktion im originalen Repository finden, die <strong>nur</strong> einen einzigen Vorw√§rtspass aufruft, <em>d.h.</em> die oft aufgerufen wird
Vorhersagen‚Äù, ‚ÄúAuswerten‚Äù, ‚ÄúVorw√§rts‚Äù oder ‚ÄúAufruf‚Äù genannt wird. Sie wollen keine Funktion debuggen, die <code>forward</code> aufruft
mehrfach aufruft, <em>z.B.</em> um Text zu erzeugen, wie <code>autoregressive_sample</code>, <code>generate</code>.</li> <li>Versuchen Sie, die Tokenisierung vom <em>Forward</em>-Pass des Modells zu trennen. Wenn das Original-Repository Beispiele zeigt, bei denen
Sie eine Zeichenkette eingeben m√ºssen, dann versuchen Sie herauszufinden, an welcher Stelle im Vorw√§rtsaufruf die Zeichenketteneingabe in Eingabe-IDs ge√§ndert wird
ge√§ndert wird und beginnen Sie an dieser Stelle. Das k√∂nnte bedeuten, dass Sie m√∂glicherweise selbst ein kleines Skript schreiben oder den
Originalcode so √§ndern m√ºssen, dass Sie die ids direkt eingeben k√∂nnen, anstatt eine Zeichenkette einzugeben.</li> <li>Vergewissern Sie sich, dass sich das Modell in Ihrem Debugging-Setup <strong>nicht</strong> im Trainingsmodus befindet, der oft dazu f√ºhrt, dass das Modell
Dies f√ºhrt h√§ufig zu zuf√§lligen Ergebnissen, da das Modell mehrere Dropout-Schichten enth√§lt. Stellen Sie sicher, dass der Vorw√§rtsdurchlauf in Ihrer Debugging
Umgebung <strong>deterministisch</strong> ist, damit die Dropout-Schichten nicht verwendet werden. Oder verwenden Sie <em>transformers.utils.set_seed</em>.
wenn sich die alte und die neue Implementierung im selben Framework befinden.</li>`,Cl,Oe,Ea="Im folgenden Abschnitt finden Sie genauere Details/Tipps, wie Sie dies f√ºr <em>brand_new_bert</em> tun k√∂nnen.",Il,en,Ul,nn,Na="Als n√§chstes k√∂nnen Sie endlich damit beginnen, neuen Code zu ü§ó Transformers hinzuzuf√ºgen. Gehen Sie in den Klon Ihres ü§ó Transformers Forks:",Sl,tn,_l,ln,Ra=`In dem speziellen Fall, dass Sie ein Modell hinzuf√ºgen, dessen Architektur genau mit der Modellarchitektur eines
Modells √ºbereinstimmt, m√ºssen Sie nur ein Konvertierungsskript hinzuf√ºgen, wie in <a href="#write-a-conversion-script">diesem Abschnitt</a> beschrieben.
In diesem Fall k√∂nnen Sie einfach die gesamte Modellarchitektur des bereits vorhandenen Modells wiederverwenden.`,Al,sn,Pa="Andernfalls beginnen wir mit der Erstellung eines neuen Modells. Sie haben hier zwei M√∂glichkeiten:",$l,rn,Ga="<li><code>transformers-cli add-new-model-like</code>, um ein neues Modell wie ein bestehendes hinzuzuf√ºgen</li> <li><code>transformers-cli add-new-model</code>, um ein neues Modell aus unserer Vorlage hinzuzuf√ºgen (sieht dann aus wie BERT oder Bart, je nachdem, welche Art von Modell Sie w√§hlen)</li>",Ll,an,Fa='In beiden F√§llen werden Sie mit einem Fragebogen aufgefordert, die grundlegenden Informationen zu Ihrem Modell auszuf√ºllen. F√ºr den zweiten Befehl m√ºssen Sie <code>cookiecutter</code> installieren, weitere Informationen dazu finden Sie <a href="https://github.com/huggingface/transformers/tree/main/templates/adding_a_new_model" rel="nofollow">hier</a>.',xl,dn,Va="<strong>Er√∂ffnen Sie einen Pull Request auf dem Haupt-Repositorium huggingface/transformers</strong>",Hl,un,Qa=`Bevor Sie mit der Anpassung des automatisch generierten Codes beginnen, ist es nun an der Zeit, einen ‚ÄúWork in progress (WIP)‚Äù Pull
Anfrage, <em>z.B.</em> ‚Äù[WIP] Add <em>brand_new_bert</em>‚Äù, in ü§ó Transformers zu √∂ffnen, damit Sie und das Hugging Face Team
Seite an Seite an der Integration des Modells in ü§ó Transformers arbeiten k√∂nnen.`,Bl,on,Xa="Sie sollten Folgendes tun:",Zl,hn,Ya="<li>Erstellen Sie eine Verzweigung mit einem beschreibenden Namen von Ihrer Hauptverzweigung</li>",Wl,mn,Dl,j,Ka="<li>Best√§tigen Sie den automatisch generierten Code:</li>",El,pn,Nl,C,qa="<li>Abrufen und zur√ºcksetzen auf die aktuelle Haupt</li>",Rl,fn,Pl,I,Oa="<li>√úbertragen Sie die √Ñnderungen auf Ihr Konto mit:</li>",Gl,Mn,Fl,U,ed=`<li><p>Wenn Sie zufrieden sind, gehen Sie auf die Webseite Ihrer Abspaltung auf GitHub. Klicken Sie auf ‚ÄúPull request‚Äù. Stellen Sie sicher, dass Sie das
GitHub-Handle einiger Mitglieder des Hugging Face-Teams als Reviewer hinzuzuf√ºgen, damit das Hugging Face-Team √ºber zuk√ºnftige √Ñnderungen informiert wird.
zuk√ºnftige √Ñnderungen benachrichtigt wird.</p></li> <li><p>√Ñndern Sie den PR in einen Entwurf, indem Sie auf der rechten Seite der GitHub-Pull-Request-Webseite auf ‚ÄúIn Entwurf umwandeln‚Äù klicken.</p></li>`,Vl,cn,nd=`Vergessen Sie im Folgenden nicht, wenn Sie Fortschritte gemacht haben, Ihre Arbeit zu committen und in Ihr Konto zu pushen, damit sie in der Pull-Anfrage erscheint.
damit sie in der Pull-Anfrage angezeigt wird. Au√üerdem sollten Sie darauf achten, dass Sie Ihre Arbeit von Zeit zu Zeit mit dem aktuellen main
von Zeit zu Zeit zu aktualisieren, indem Sie dies tun:`,Ql,gn,Xl,wn,td=`Generell sollten Sie alle Fragen, die Sie in Bezug auf das Modell oder Ihre Implementierung haben, in Ihrem PR stellen und
in der PR diskutiert/gel√∂st werden. Auf diese Weise wird das Hugging Face Team immer benachrichtigt, wenn Sie neuen Code einreichen oder
wenn Sie eine Frage haben. Es ist oft sehr hilfreich, das Hugging Face-Team auf Ihren hinzugef√ºgten Code hinzuweisen, damit das Hugging Face-Team Ihr Problem oder Ihre Frage besser verstehen kann.
Face-Team Ihr Problem oder Ihre Frage besser verstehen kann.`,Yl,bn,id=`Gehen Sie dazu auf die Registerkarte ‚ÄúGe√§nderte Dateien‚Äù, auf der Sie alle Ihre √Ñnderungen sehen, gehen Sie zu einer Zeile, zu der Sie eine Frage stellen m√∂chten
eine Frage stellen m√∂chten, und klicken Sie auf das ‚Äù+‚Äú-Symbol, um einen Kommentar hinzuzuf√ºgen. Wenn eine Frage oder ein Problem gel√∂st wurde,
k√∂nnen Sie auf die Schaltfl√§che ‚ÄúL√∂sen‚Äù des erstellten Kommentars klicken.`,Kl,Tn,ld=`Auf dieselbe Weise wird das Hugging Face-Team Kommentare √∂ffnen, wenn es Ihren Code √ºberpr√ºft. Wir empfehlen, die meisten Fragen
auf GitHub in Ihrem PR zu stellen. F√ºr einige sehr allgemeine Fragen, die f√ºr die √ñffentlichkeit nicht sehr n√ºtzlich sind, k√∂nnen Sie das
Hugging Face Team per Slack oder E-Mail zu stellen.`,ql,kn,sd="<strong>5. Passen Sie den Code der generierten Modelle f√ºr brand_new_bert</strong> an.",Ol,yn,rd=`Zun√§chst werden wir uns nur auf das Modell selbst konzentrieren und uns nicht um den Tokenizer k√ºmmern. Den gesamten relevanten Code sollten Sie
finden Sie in den generierten Dateien <code>src/transformers/models/brand_new_bert/modeling_brand_new_bert.py</code> und
<code>src/transformers/models/brand_new_bert/configuration_brand_new_bert.py</code>.`,es,zn,ad=`Jetzt k√∂nnen Sie endlich mit dem Programmieren beginnen :). Der generierte Code in
<code>src/transformers/models/brand_new_bert/modeling_brand_new_bert.py</code> wird entweder die gleiche Architektur wie BERT haben, wenn
wenn es sich um ein reines Encoder-Modell handelt oder BART, wenn es sich um ein Encoder-Decoder-Modell handelt. An diesem Punkt sollten Sie sich daran erinnern, was
was Sie am Anfang √ºber die theoretischen Aspekte des Modells gelernt haben: <em>Wie unterscheidet sich das Modell von BERT oder
BART?</em>‚Äù. Implementieren Sie diese √Ñnderungen, was oft bedeutet, dass Sie die <em>Selbstaufmerksamkeitsschicht</em>, die Reihenfolge der Normalisierungsschicht usw. √§ndern m√ºssen.
Schicht usw‚Ä¶ Auch hier ist es oft n√ºtzlich, sich die √§hnliche Architektur bereits bestehender Modelle in Transformers anzusehen, um ein besseres Gef√ºhl daf√ºr zu bekommen
ein besseres Gef√ºhl daf√ºr zu bekommen, wie Ihr Modell implementiert werden sollte.`,ns,vn,dd=`<strong>Beachten Sie</strong>, dass Sie an diesem Punkt nicht sehr sicher sein m√ºssen, dass Ihr Code v√∂llig korrekt oder sauber ist. Vielmehr ist es
Sie sollten vielmehr eine erste <em>unbereinigte</em>, kopierte Version des urspr√ºnglichen Codes in
src/transformers/models/brand_new_bert/modeling_brand_new_bert.py‚Äù hinzuzuf√ºgen, bis Sie das Gef√ºhl haben, dass der gesamte notwendige Code
hinzugef√ºgt wurde. Unserer Erfahrung nach ist es viel effizienter, schnell eine erste Version des erforderlichen Codes hinzuzuf√ºgen und
den Code iterativ mit dem Konvertierungsskript zu verbessern/korrigieren, wie im n√§chsten Abschnitt beschrieben. Das einzige, was
zu diesem Zeitpunkt funktionieren muss, ist, dass Sie die ü§ó Transformers-Implementierung von <em>brand_new_bert</em> instanziieren k√∂nnen, <em>d.h.</em> der
folgende Befehl sollte funktionieren:`,ts,Jn,is,jn,ud=`Der obige Befehl erstellt ein Modell gem√§√ü den Standardparametern, die in <code>BrandNewBertConfig()</code> definiert sind, mit
zuf√§lligen Gewichten und stellt damit sicher, dass die <code>init()</code> Methoden aller Komponenten funktionieren.`,ls,Cn,od=`Beachten Sie, dass alle zuf√§lligen Initialisierungen in der Methode <code>_init_weights</code> Ihres <code>BrandnewBertPreTrainedModel</code> stattfinden sollten.
Klasse erfolgen sollte. Sie sollte alle Blattmodule in Abh√§ngigkeit von den Variablen der Konfiguration initialisieren. Hier ist ein Beispiel mit der
BERT <code>_init_weights</code> Methode:`,ss,In,rs,Un,hd=`Sie k√∂nnen weitere benutzerdefinierte Schemata verwenden, wenn Sie eine spezielle Initialisierung f√ºr einige Module ben√∂tigen. Zum Beispiel in
<code>Wav2Vec2ForPreTraining</code> m√ºssen die letzten beiden linearen Schichten die Initialisierung des regul√§ren PyTorch <code>nn.Linear</code> haben.
aber alle anderen sollten eine Initialisierung wie oben verwenden. Dies ist wie folgt kodiert:`,as,Sn,ds,_n,md=`Das Flag <code>_is_hf_initialized</code> wird intern verwendet, um sicherzustellen, dass wir ein Submodul nur einmal initialisieren. Wenn Sie es auf
<code>True</code> f√ºr <code>module.project_q</code> und <code>module.project_hid</code> setzen, stellen wir sicher, dass die benutzerdefinierte Initialisierung, die wir vorgenommen haben, sp√§ter nicht √ºberschrieben wird,
die Funktion <code>_init_weights</code> nicht auf sie angewendet wird.`,us,An,pd="<strong>6. Schreiben Sie ein Konvertierungsskript</strong>",os,$n,fd=`Als n√§chstes sollten Sie ein Konvertierungsskript schreiben, mit dem Sie den Checkpoint, den Sie zum Debuggen von <em>brand_new_bert</em> im
im urspr√ºnglichen Repository in einen Pr√ºfpunkt konvertieren, der mit Ihrer gerade erstellten ü§ó Transformers-Implementierung von
<em>brand_new_bert</em>. Es ist nicht ratsam, das Konvertierungsskript von Grund auf neu zu schreiben, sondern die bereits
bestehenden Konvertierungsskripten in ü§ó Transformers nach einem Skript zu suchen, das f√ºr die Konvertierung eines √§hnlichen Modells verwendet wurde, das im
demselben Framework wie <em>brand_new_bert</em> geschrieben wurde. Normalerweise reicht es aus, ein bereits vorhandenes Konvertierungsskript zu kopieren und
es f√ºr Ihren Anwendungsfall leicht anzupassen. Z√∂gern Sie nicht, das Hugging Face Team zu bitten, Sie auf ein √§hnliches, bereits vorhandenes
Konvertierungsskript f√ºr Ihr Modell zu finden.`,hs,Ln,Md='<li>Wenn Sie ein Modell von TensorFlow nach PyTorch portieren, ist ein guter Ausgangspunkt das Konvertierungsskript von BERT <a href="https://github.com/huggingface/transformers/blob/7acfa95afb8194f8f9c1f4d2c6028224dbed35a2/src/transformers/models/bert/modeling_bert.py#L91" rel="nofollow">hier</a></li> <li>Wenn Sie ein Modell von PyTorch nach PyTorch portieren, ist ein guter Ausgangspunkt das Konvertierungsskript von BART <a href="https://github.com/huggingface/transformers/blob/main/src/transformers/models/bart/convert_bart_original_pytorch_checkpoint_to_pytorch.py" rel="nofollow">hier</a></li>',ms,xn,cd=`Im Folgenden werden wir kurz erkl√§ren, wie PyTorch-Modelle Ebenengewichte speichern und Ebenennamen definieren. In PyTorch wird der
Name einer Ebene durch den Namen des Klassenattributs definiert, das Sie der Ebene geben. Lassen Sie uns ein Dummy-Modell in
PyTorch, das wir <code>SimpleModel</code> nennen, wie folgt:`,ps,Hn,fs,Bn,gd=`Jetzt k√∂nnen wir eine Instanz dieser Modelldefinition erstellen, die alle Gewichte ausf√ºllt: <code>dense</code>, <code>intermediate</code>,
<code>layer_norm</code> mit zuf√§lligen Gewichten. Wir k√∂nnen das Modell ausdrucken, um seine Architektur zu sehen`,Ms,Zn,cs,Wn,wd="Dies gibt folgendes aus:",gs,Dn,ws,En,bd=`Wir k√∂nnen sehen, dass die Ebenennamen durch den Namen des Klassenattributs in PyTorch definiert sind. Sie k√∂nnen die Gewichtswerte
Werte einer bestimmten Ebene anzeigen lassen:`,bs,Nn,Ts,Rn,Td="um zu sehen, dass die Gewichte zuf√§llig initialisiert wurden",ks,Pn,ys,Gn,kd=`Im Konvertierungsskript sollten Sie diese zuf√§llig initialisierten Gewichte mit den genauen Gewichten der
entsprechenden Ebene im Kontrollpunkt. <em>Z.B.</em>`,zs,Fn,vs,Vn,yd=`Dabei m√ºssen Sie sicherstellen, dass jedes zuf√§llig initialisierte Gewicht Ihres PyTorch-Modells und sein entsprechendes
Checkpoint-Gewicht in <strong>Form und Name</strong> genau √ºbereinstimmen. Zu diesem Zweck ist es <strong>notwendig</strong>, assert
Anweisungen f√ºr die Form hinzuzuf√ºgen und die Namen der Checkpoint-Gewichte auszugeben. Sie sollten z.B. Anweisungen hinzuf√ºgen wie:`,Js,Qn,js,Xn,zd="Au√üerdem sollten Sie die Namen der beiden Gewichte ausdrucken, um sicherzustellen, dass sie √ºbereinstimmen, <em>z.B.</em>.",Cs,Yn,Is,Kn,vd=`Wenn entweder die Form oder der Name nicht √ºbereinstimmt, haben Sie wahrscheinlich das falsche Kontrollpunktgewicht einer zuf√§llig
Ebene der ü§ó Transformers-Implementierung zugewiesen.`,Us,qn,Jd=`Eine falsche Form ist h√∂chstwahrscheinlich auf eine falsche Einstellung der Konfigurationsparameter in <code>BrandNewBertConfig()</code> zur√ºckzuf√ºhren, die
nicht genau mit denen √ºbereinstimmen, die f√ºr den zu konvertierenden Pr√ºfpunkt verwendet wurden. Es k√∂nnte aber auch sein, dass
die PyTorch-Implementierung eines Layers erfordert, dass das Gewicht vorher transponiert wird.`,Ss,On,jd=`Schlie√ülich sollten Sie auch √ºberpr√ºfen, ob <strong>alle</strong> erforderlichen Gewichte initialisiert sind und alle Checkpoint-Gewichte ausgeben, die
die nicht zur Initialisierung verwendet wurden, um sicherzustellen, dass das Modell korrekt konvertiert wurde. Es ist v√∂llig normal, dass die
Konvertierungsversuche entweder mit einer falschen Shape-Anweisung oder einer falschen Namenszuweisung fehlschlagen. Das liegt h√∂chstwahrscheinlich daran, dass entweder
Sie haben falsche Parameter in <code>BrandNewBertConfig()</code> verwendet, haben eine falsche Architektur in der ü§ó Transformers
Implementierung, Sie haben einen Fehler in den <code>init()</code> Funktionen einer der Komponenten der ü§ó Transformers
Implementierung oder Sie m√ºssen eine der Kontrollpunktgewichte transponieren.`,_s,et,Cd=`Dieser Schritt sollte mit dem vorherigen Schritt wiederholt werden, bis alle Gewichte des Kontrollpunkts korrekt in das
Transformers-Modell geladen sind. Nachdem Sie den Pr√ºfpunkt korrekt in die ü§ó Transformers-Implementierung geladen haben, k√∂nnen Sie das Modell
das Modell unter einem Ordner Ihrer Wahl <code>/path/to/converted/checkpoint/folder</code> speichern, der dann sowohl ein
Datei <code>pytorch_model.bin</code> und eine Datei <code>config.json</code> enthalten sollte:`,As,nt,$s,tt,Id="<strong>7. Implementieren Sie den Vorw√§rtspass</strong>",Ls,it,Ud=`Nachdem es Ihnen gelungen ist, die trainierten Gewichte korrekt in die ü§ó Transformers-Implementierung zu laden, sollten Sie nun daf√ºr sorgen
sicherstellen, dass der Forward Pass korrekt implementiert ist. In <a href="#3-4-f%C3%BChren-sie-einen-pre-training-checkpoint-mit-dem-original-repository-durch">Machen Sie sich mit dem urspr√ºnglichen Repository vertraut</a> haben Sie bereits ein Skript erstellt, das einen Forward Pass
Durchlauf des Modells unter Verwendung des Original-Repositorys durchf√ºhrt. Jetzt sollten Sie ein analoges Skript schreiben, das die ü§ó Transformers
Implementierung anstelle der Originalimplementierung verwenden. Es sollte wie folgt aussehen:`,xs,lt,Hs,st,Sd=`Es ist sehr wahrscheinlich, dass die ü§ó Transformers-Implementierung und die urspr√ºngliche Modell-Implementierung nicht genau die gleiche Ausgabe liefern.
beim ersten Mal nicht die gleiche Ausgabe liefern oder dass der Vorw√§rtsdurchlauf einen Fehler ausl√∂st. Seien Sie nicht entt√§uscht - das ist zu erwarten! Erstens,
sollten Sie sicherstellen, dass der Vorw√§rtsdurchlauf keine Fehler ausl√∂st. Es passiert oft, dass die falschen Dimensionen verwendet werden
verwendet werden, was zu einem <em>Dimensionality mismatch</em> Fehler f√ºhrt oder dass der falsche Datentyp verwendet wird, <em>z.B.</em> <code>torch.long</code>
anstelle von <code>torch.float32</code>. Z√∂gern Sie nicht, das Hugging Face Team um Hilfe zu bitten, wenn Sie bestimmte Fehler nicht l√∂sen k√∂nnen.
bestimmte Fehler nicht l√∂sen k√∂nnen.`,Bs,rt,_d=`Um sicherzustellen, dass die Implementierung von ü§ó Transformers korrekt funktioniert, m√ºssen Sie sicherstellen, dass die Ausgaben
einer Genauigkeit von <code>1e-3</code> entsprechen. Zun√§chst sollten Sie sicherstellen, dass die Ausgabeformen identisch sind, <em>d.h.</em>.
Die Ausgabeform <em>outputs.shape</em> sollte f√ºr das Skript der ü§ó Transformers-Implementierung und die urspr√ºngliche
Implementierung ergeben. Als n√§chstes sollten Sie sicherstellen, dass auch die Ausgabewerte identisch sind. Dies ist einer der schwierigsten
Teile des Hinzuf√ºgens eines neuen Modells. H√§ufige Fehler, warum die Ausgaben nicht identisch sind, sind:`,Zs,at,Ad=`<li>Einige Ebenen wurden nicht hinzugef√ºgt, <em>d.h.</em> eine <em>Aktivierungsebene</em> wurde nicht hinzugef√ºgt, oder die Restverbindung wurde vergessen</li> <li>Die Worteinbettungsmatrix wurde nicht gebunden</li> <li>Es werden die falschen Positionseinbettungen verwendet, da die urspr√ºngliche Implementierung einen Offset verwendet</li> <li>Dropout wird w√§hrend des Vorw√§rtsdurchlaufs angewendet. Um dies zu beheben, stellen Sie sicher, dass <em>model.training auf False</em> steht und dass keine Dropout
Schicht w√§hrend des Vorw√§rtsdurchlaufs f√§lschlicherweise aktiviert wird, <em>d.h.</em> √ºbergeben Sie <em>self.training</em> an <a href="https://pytorch.org/docs/stable/nn.functional.html?highlight=dropout#torch.nn.functional.dropout" rel="nofollow">PyTorch‚Äôs functional dropout</a></li>`,Ws,dt,$d=`Der beste Weg, das Problem zu beheben, besteht normalerweise darin, sich den Vorw√§rtsdurchlauf der urspr√ºnglichen Implementierung und die ü§ó
Transformers-Implementierung nebeneinander zu sehen und zu pr√ºfen, ob es Unterschiede gibt. Idealerweise sollten Sie die
Zwischenergebnisse beider Implementierungen des Vorw√§rtsdurchlaufs debuggen/ausdrucken, um die genaue Position im Netzwerk zu finden, an der die ü§ó
Transformers-Implementierung eine andere Ausgabe zeigt als die urspr√ºngliche Implementierung. Stellen Sie zun√§chst sicher, dass die
hartcodierten <code>input_ids</code> in beiden Skripten identisch sind. √úberpr√ºfen Sie dann, ob die Ausgaben der ersten Transformation von
der <code>input_ids</code> (normalerweise die Worteinbettungen) identisch sind. Und dann arbeiten Sie sich bis zur allerletzten Schicht des
Netzwerks. Irgendwann werden Sie einen Unterschied zwischen den beiden Implementierungen feststellen, der Sie auf den Fehler
in der Implementierung von ü§ó Transformers hinweist. Unserer Erfahrung nach ist ein einfacher und effizienter Weg, viele Druckanweisungen hinzuzuf√ºgen
sowohl in der Original-Implementierung als auch in der ü§ó Transformers-Implementierung an den gleichen Stellen im Netzwerk
hinzuzuf√ºgen und nacheinander Druckanweisungen zu entfernen, die dieselben Werte f√ºr Zwischenpr√§sentationen anzeigen.`,Ds,ut,Ld=`Wenn Sie sicher sind, dass beide Implementierungen die gleiche Ausgabe liefern, √ºberpr√ºfen Sie die Ausgaben mit
<code>torch.allclose(original_output, output, atol=1e-3)</code> √ºberpr√ºfen, haben Sie den schwierigsten Teil hinter sich! Herzlichen Gl√ºckwunsch - die
Arbeit, die noch zu erledigen ist, sollte ein Kinderspiel sein üòä.`,Es,ot,xd="<strong>8. Hinzuf√ºgen aller notwendigen Modelltests</strong>",Ns,ht,Hd=`An diesem Punkt haben Sie erfolgreich ein neues Modell hinzugef√ºgt. Es ist jedoch sehr gut m√∂glich, dass das Modell noch nicht
noch nicht vollst√§ndig mit dem erforderlichen Design √ºbereinstimmt. Um sicherzustellen, dass die Implementierung vollst√§ndig kompatibel mit ü§ó Transformers ist, sollten alle
gemeinsamen Tests bestehen. Der Cookiecutter sollte automatisch eine Testdatei f√ºr Ihr Modell hinzugef√ºgt haben, wahrscheinlich unter
demselben <code>tests/models/brand_new_bert/test_modeling_brand_new_bert.py</code>. F√ºhren Sie diese Testdatei aus, um zu √ºberpr√ºfen, ob alle g√§ngigen
Tests bestehen:`,Rs,mt,Ps,pt,Bd="Nachdem Sie alle allgemeinen Tests festgelegt haben, m√ºssen Sie nun sicherstellen, dass all die sch√∂ne Arbeit, die Sie geleistet haben, gut getestet ist, damit",Gs,ft,Zd="<li>a) die Community Ihre Arbeit leicht nachvollziehen kann, indem sie sich spezifische Tests von <em>brand_new_bert</em> ansieht</li> <li>b) zuk√ºnftige √Ñnderungen an Ihrem Modell keine wichtigen Funktionen des Modells zerst√∂ren.</li>",Fs,Mt,Wd=`Als erstes sollten Sie Integrationstests hinzuf√ºgen. Diese Integrationstests tun im Wesentlichen dasselbe wie die Debugging-Skripte
die Sie zuvor zur Implementierung des Modells in ü§ó Transformers verwendet haben. Eine Vorlage f√ºr diese Modelltests wurde bereits von dem
Cookiecutter hinzugef√ºgt, die <code>BrandNewBertModelIntegrationTests</code> hei√üt und nur noch von Ihnen ausgef√ºllt werden muss. Um sicherzustellen, dass diese
Tests erfolgreich sind, f√ºhren Sie`,Vs,ct,Qs,S,Xs,gt,Dd=`Zweitens sollten alle Funktionen, die speziell f√ºr <em>brand_new_bert</em> sind, zus√§tzlich in einem separaten Test getestet werden unter
<code>BrandNewBertModelTester</code>/<code>BrandNewBertModelTest</code>. Dieser Teil wird oft vergessen, ist aber in zweierlei Hinsicht √§u√üerst n√ºtzlich
Weise:`,Ys,wt,Ed=`<li>Er hilft dabei, das Wissen, das Sie w√§hrend der Modellerweiterung erworben haben, an die Community weiterzugeben, indem er zeigt, wie die
speziellen Funktionen von <em>brand_new_bert</em> funktionieren sollten.</li> <li>K√ºnftige Mitwirkende k√∂nnen √Ñnderungen am Modell schnell testen, indem sie diese speziellen Tests ausf√ºhren.</li>`,Ks,bt,Nd="<strong>9. Implementieren Sie den Tokenizer</strong>",qs,Tt,Rd=`Als n√§chstes sollten wir den Tokenizer von <em>brand_new_bert</em> hinzuf√ºgen. Normalerweise ist der Tokenizer √§quivalent oder sehr √§hnlich zu einem
bereits vorhandenen Tokenizer von ü§ó Transformers.`,Os,kt,Pd=`Es ist sehr wichtig, die urspr√ºngliche Tokenizer-Datei zu finden/extrahieren und es zu schaffen, diese Datei in die ü§ó
Transformers Implementierung des Tokenizers zu laden.`,er,yt,Gd=`Um sicherzustellen, dass der Tokenizer korrekt funktioniert, empfiehlt es sich, zun√§chst ein Skript im urspr√ºnglichen Repository zu erstellen
zu erstellen, das eine Zeichenkette eingibt und die <code>input_ids</code> zur√ºckgibt. Es k√∂nnte etwa so aussehen (in Pseudocode):`,nr,zt,tr,vt,Fd=`M√∂glicherweise m√ºssen Sie noch einmal einen Blick in das urspr√ºngliche Repository werfen, um die richtige Tokenizer-Funktion zu finden, oder Sie m√ºssen
Sie m√ºssen vielleicht sogar √Ñnderungen an Ihrem Klon des Original-Repositorys vornehmen, um nur die <code>input_ids</code> auszugeben. Nach dem Schreiben
ein funktionierendes Tokenisierungsskript geschrieben, das das urspr√ºngliche Repository verwendet, sollten Sie ein analoges Skript f√ºr ü§ó Transformers
erstellt werden. Es sollte √§hnlich wie dieses aussehen:`,ir,Jt,lr,jt,Vd="Wenn beide <code>input_ids</code> die gleichen Werte ergeben, sollte als letzter Schritt auch eine Tokenizer-Testdatei hinzugef√ºgt werden.",sr,Ct,Qd=`Analog zu den Modellierungstestdateien von <em>brand_new_bert</em> sollten auch die Tokenisierungs-Testdateien von <em>brand_new_bert</em>
eine Reihe von fest kodierten Integrationstests enthalten.`,rr,It,Xd="<strong>10. F√ºhren Sie End-to-End-Integrationstests aus</strong>",ar,Ut,Yd=`Nachdem Sie den Tokenizer hinzugef√ºgt haben, sollten Sie auch ein paar End-to-End-Integrationstests, die sowohl das Modell als auch den
Tokenizer zu <code>tests/models/brand_new_bert/test_modeling_brand_new_bert.py</code> in ü§ó Transformers.
Ein solcher Test sollte bei einem aussagekr√§ftigen
Text-zu-Text-Beispiel zeigen, dass die Implementierung von ü§ó Transformers wie erwartet funktioniert. Ein aussagekr√§ftiges Text-zu-Text-Beispiel kann
z.B. *ein Quell-zu-Ziel-√úbersetzungspaar, ein Artikel-zu-Zusammenfassung-Paar, ein Frage-zu-Antwort-Paar, usw‚Ä¶ Wenn keiner der
der portierten Pr√ºfpunkte in einer nachgelagerten Aufgabe feinabgestimmt wurde, gen√ºgt es, sich einfach auf die Modelltests zu verlassen. In einem
letzten Schritt, um sicherzustellen, dass das Modell voll funktionsf√§hig ist, sollten Sie alle Tests auch auf der GPU durchf√ºhren. Es kann
Es kann vorkommen, dass Sie vergessen haben, einige <code>.to(self.device)</code> Anweisungen zu internen Tensoren des Modells hinzuzuf√ºgen, was in einem solchen
Test zu einem Fehler f√ºhren w√ºrde. Falls Sie keinen Zugang zu einem Grafikprozessor haben, kann das Hugging Face Team diese Tests f√ºr Sie durchf√ºhren.
Tests f√ºr Sie √ºbernehmen.`,dr,St,Kd="<strong>11. Docstring hinzuf√ºgen</strong>",ur,_t,qd=`Nun sind alle notwendigen Funktionen f√ºr <em>brand_new_bert</em> hinzugef√ºgt - Sie sind fast fertig! Das Einzige, was Sie noch hinzuf√ºgen m√ºssen, ist
ein sch√∂ner Docstring und eine Doku-Seite. Der Cookiecutter sollte eine Vorlagendatei namens
<code>docs/source/model_doc/brand_new_bert.md</code> hinzugef√ºgt haben, die Sie ausf√ºllen sollten. Die Benutzer Ihres Modells werden in der Regel zuerst einen Blick auf
diese Seite ansehen, bevor sie Ihr Modell verwenden. Daher muss die Dokumentation verst√§ndlich und pr√§gnant sein. Es ist sehr n√ºtzlich f√ºr
die Gemeinschaft, einige <em>Tipps</em> hinzuzuf√ºgen, um zu zeigen, wie das Modell verwendet werden sollte. Z√∂gern Sie nicht, das Hugging Face-Team anzupingen
bez√ºglich der Docstrings.`,or,At,Od=`Stellen Sie als n√§chstes sicher, dass der zu <code>src/transformers/models/brand_new_bert/modeling_brand_new_bert.py</code> hinzugef√ºgte docstring
korrekt ist und alle erforderlichen Eingaben und Ausgaben enth√§lt. Wir haben eine ausf√ºhrliche Anleitung zum Schreiben von Dokumentationen und unserem Docstring-Format <a href="writing-documentation">hier</a>. Es ist immer gut, sich daran zu erinnern, dass die Dokumentation
mindestens so sorgf√§ltig behandelt werden sollte wie der Code in ü§ó Transformers, denn die Dokumentation ist in der Regel der erste Kontaktpunkt der
Ber√ºhrungspunkt der Community mit dem Modell ist.`,hr,$t,eu="<strong>Code refactor</strong>",mr,Lt,nu=`Gro√üartig, jetzt haben Sie den gesamten erforderlichen Code f√ºr <em>brand_new_bert</em> hinzugef√ºgt. An diesem Punkt sollten Sie einige m√∂gliche
falschen Codestil korrigieren, indem Sie ausf√ºhren:`,pr,xt,fr,Ht,tu="und √ºberpr√ºfen Sie, ob Ihr Kodierungsstil die Qualit√§tspr√ºfung besteht:",Mr,Bt,cr,Zt,iu=`Es gibt noch ein paar andere sehr strenge Designtests in ü§ó Transformers, die m√∂glicherweise noch fehlschlagen, was sich in den
den Tests Ihres Pull Requests. Dies liegt oft an fehlenden Informationen im Docstring oder an einer falschen
Benennung. Das Hugging Face Team wird Ihnen sicherlich helfen, wenn Sie hier nicht weiterkommen.`,gr,Wt,lu=`Und schlie√ülich ist es immer eine gute Idee, den eigenen Code zu refaktorisieren, nachdem man sichergestellt hat, dass er korrekt funktioniert. Wenn alle
Tests bestanden haben, ist es nun an der Zeit, den hinzugef√ºgten Code noch einmal durchzugehen und einige √úberarbeitungen vorzunehmen.`,wr,Dt,su="Sie haben nun den Codierungsteil abgeschlossen, herzlichen Gl√ºckwunsch! üéâ Sie sind gro√üartig! üòé",br,Et,ru="<strong>12. Laden Sie die Modelle in den Model Hub hoch</strong>",Tr,Nt,au=`In diesem letzten Teil sollten Sie alle Checkpoints konvertieren und in den Modell-Hub hochladen und eine Modellkarte f√ºr jeden
hochgeladenen Modell-Kontrollpunkt. Sie k√∂nnen sich mit den Hub-Funktionen vertraut machen, indem Sie unsere <a href="model_sharing">Model sharing and uploading Page</a> lesen. Hier sollten Sie mit dem Hugging Face-Team zusammenarbeiten, um einen passenden Namen f√ºr jeden
Checkpoint festzulegen und die erforderlichen Zugriffsrechte zu erhalten, um das Modell unter der Organisation des Autors <em>brand_new_bert</em> hochladen zu k√∂nnen.
<em>brand_new_bert</em>. Die Methode <code>push_to_hub</code>, die in allen Modellen in <code>transformers</code> vorhanden ist, ist ein schneller und effizienter Weg, Ihren Checkpoint in den Hub zu pushen. Ein kleines Snippet ist unten eingef√ºgt:`,kr,Rt,yr,Pt,du=`Es lohnt sich, etwas Zeit darauf zu verwenden, f√ºr jeden Kontrollpunkt passende Musterkarten zu erstellen. Die Modellkarten sollten die
spezifischen Merkmale dieses bestimmten Pr√ºfpunkts hervorheben, <em>z.B.</em> auf welchem Datensatz wurde der Pr√ºfpunkt
vortrainiert/abgestimmt? F√ºr welche nachgelagerte Aufgabe sollte das Modell verwendet werden? Und f√ºgen Sie auch etwas Code bei, wie Sie
wie das Modell korrekt verwendet wird.`,zr,Gt,uu="<strong>13. (Optional) Notizbuch hinzuf√ºgen</strong>",vr,Ft,ou=`Es ist sehr hilfreich, ein Notizbuch hinzuzuf√ºgen, in dem im Detail gezeigt wird, wie <em>brand_new_bert</em> f√ºr Schlussfolgerungen verwendet werden kann und/oder
bei einer nachgelagerten Aufgabe feinabgestimmt wird. Dies ist nicht zwingend erforderlich, um Ihren PR zusammenzuf√ºhren, aber sehr n√ºtzlich f√ºr die Gemeinschaft.`,Jr,Vt,hu="<strong>14. Reichen Sie Ihren fertigen PR ein</strong>",jr,Qt,mu=`Sie sind jetzt mit der Programmierung fertig und k√∂nnen zum letzten Schritt √ºbergehen, n√§mlich der Zusammenf√ºhrung Ihres PR mit main. Normalerweise hat das
Hugging Face Team Ihnen an diesem Punkt bereits geholfen haben, aber es lohnt sich, sich etwas Zeit zu nehmen, um Ihrem fertigen
PR eine sch√∂ne Beschreibung zu geben und eventuell Kommentare zu Ihrem Code hinzuzuf√ºgen, wenn Sie Ihren Gutachter auf bestimmte Designentscheidungen hinweisen wollen.
Gutachter hinweisen wollen.`,Cr,Xt,Ir,Yt,pu=`Jetzt ist es an der Zeit, von der Community Anerkennung f√ºr Ihre Arbeit zu bekommen! Die Fertigstellung einer Modellerg√§nzung ist ein wichtiger
Beitrag zu Transformers und der gesamten NLP-Gemeinschaft. Ihr Code und die portierten vortrainierten Modelle werden sicherlich
von Hunderten und vielleicht sogar Tausenden von Entwicklern und Forschern genutzt werden. Sie sollten stolz auf Ihre Arbeit sein und Ihre
Ihre Leistung mit der Gemeinschaft teilen.`,Ur,Kt,fu="<strong>Sie haben ein weiteres Modell erstellt, das f√ºr jeden in der Community super einfach zug√§nglich ist! ü§Ø</strong>",Sr,ei,_r;return _=new w({props:{title:"Wie kann ich ein Modell zu ü§ó Transformers hinzuf√ºgen?",local:"wie-kann-ich-ein-modell-zu--transformers-hinzuf√ºgen",headingTag:"h1"}}),y=new wu({props:{$$slots:{default:[Cu]},$$scope:{ctx:qt}}}),Z=new w({props:{title:"Allgemeiner √úberblick √ºber ü§ó Transformers",local:"allgemeiner-√ºberblick-√ºber--transformers",headingTag:"h2"}}),P=new w({props:{title:"√úberblick √ºber die Modelle",local:"√ºberblick-√ºber-die-modelle",headingTag:"h3"}}),Q=new M({props:{code:"bW9kZWwlMjAlM0QlMjBCcmFuZE5ld0JlcnRNb2RlbC5mcm9tX3ByZXRyYWluZWQoJTIyYnJhbmR5JTJGYnJhbmRfbmV3X2JlcnQlMjIpJTBBbW9kZWwuY29uZmlnJTIwJTIwJTIzJTIwbW9kZWwlMjBoYXMlMjBhY2Nlc3MlMjB0byUyMGl0cyUyMGNvbmZpZw==",highlighted:`model = BrandNewBertModel.from_pretrained(<span class="hljs-string">&quot;brandy/brand_new_bert&quot;</span>)
model.config  <span class="hljs-comment"># model has access to its config</span>`,wrap:!1}}),Y=new w({props:{title:"Code-Stil",local:"code-stil",headingTag:"h3"}}),O=new w({props:{title:"√úbersicht der Tokenizer",local:"√ºbersicht-der-tokenizer",headingTag:"h3"}}),ne=new w({props:{title:"Schritt-f√ºr-Schritt-Rezept zum Hinzuf√ºgen eines Modells zu ü§ó Transformers",local:"schritt-f√ºr-schritt-rezept-zum-hinzuf√ºgen-eines-modells-zu--transformers",headingTag:"h2"}}),oe=new w({props:{title:"1. (Optional) Theoretische Aspekte von BrandNewBert",local:"1-optional-theoretische-aspekte-von-brandnewbert",headingTag:"h3"}}),fe=new w({props:{title:"2. Bereiten Sie als n√§chstes Ihre Umgebung vor",local:"2-bereiten-sie-als-n√§chstes-ihre-umgebung-vor",headingTag:"h3"}}),ce=new M({props:{code:"Z2l0JTIwY2xvbmUlMjBodHRwcyUzQSUyRiUyRmdpdGh1Yi5jb20lMkYlNUJ5b3VyJTIwR2l0aHViJTIwaGFuZGxlJTVEJTJGdHJhbnNmb3JtZXJzLmdpdCUwQWNkJTIwdHJhbnNmb3JtZXJzJTBBZ2l0JTIwcmVtb3RlJTIwYWRkJTIwdXBzdHJlYW0lMjBodHRwcyUzQSUyRiUyRmdpdGh1Yi5jb20lMkZodWdnaW5nZmFjZSUyRnRyYW5zZm9ybWVycy5naXQ=",highlighted:`git <span class="hljs-built_in">clone</span> https://github.com/[your Github handle]/transformers.git
<span class="hljs-built_in">cd</span> transformers
git remote add upstream https://github.com/huggingface/transformers.git`,wrap:!1}}),ge=new M({props:{code:"cHl0aG9uJTIwLW0lMjB2ZW52JTIwLmVudiUwQXNvdXJjZSUyMC5lbnYlMkZiaW4lMkZhY3RpdmF0ZSUwQXBpcCUyMGluc3RhbGwlMjAtZSUyMCUyMi4lNUJkZXYlNUQlMjI=",highlighted:`python -m venv .<span class="hljs-built_in">env</span>
<span class="hljs-built_in">source</span> .<span class="hljs-built_in">env</span>/bin/activate
pip install -e <span class="hljs-string">&quot;.[dev]&quot;</span>`,wrap:!1}}),be=new M({props:{code:"cGlwJTIwaW5zdGFsbCUyMC1lJTIwJTIyLiU1QnF1YWxpdHklNUQlMjI=",highlighted:'pip install -e <span class="hljs-string">&quot;.[quality]&quot;</span>',wrap:!1}}),ke=new M({props:{code:"Y2QlMjAuLg==",highlighted:'<span class="hljs-built_in">cd</span> ..',wrap:!1}}),ze=new M({props:{code:"Z2l0JTIwY2xvbmUlMjBodHRwcyUzQSUyRiUyRmdpdGh1Yi5jb20lMkZvcmdfdGhhdF9jcmVhdGVkX2JyYW5kX25ld19iZXJ0X29yZyUyRmJyYW5kX25ld19iZXJ0LmdpdCUwQWNkJTIwYnJhbmRfbmV3X2JlcnQlMEFwaXAlMjBpbnN0YWxsJTIwLWUlMjAu",highlighted:`git <span class="hljs-built_in">clone</span> https://github.com/org_that_created_brand_new_bert_org/brand_new_bert.git
<span class="hljs-built_in">cd</span> brand_new_bert
pip install -e .`,wrap:!1}}),Je=new w({props:{title:"3.-4. F√ºhren Sie einen Pre-Training-Checkpoint mit dem Original-Repository durch",local:"3-4-f√ºhren-sie-einen-pre-training-checkpoint-mit-dem-original-repository-durch",headingTag:"h3"}}),Be=new M({props:{code:"bW9kZWwlMjAlM0QlMjBCcmFuZE5ld0JlcnRNb2RlbC5sb2FkX3ByZXRyYWluZWRfY2hlY2twb2ludCglMjIlMkZwYXRoJTJGdG8lMkZjaGVja3BvaW50JTJGJTIyKSUwQWlucHV0X2lkcyUyMCUzRCUyMCU1QjAlMkMlMjA0JTJDJTIwNSUyQyUyMDIlMkMlMjAzJTJDJTIwNyUyQyUyMDklNUQlMjAlMjAlMjMlMjB2ZWN0b3IlMjBvZiUyMGlucHV0JTIwaWRzJTBBb3JpZ2luYWxfb3V0cHV0JTIwJTNEJTIwbW9kZWwucHJlZGljdChpbnB1dF9pZHMp",highlighted:`model = BrandNewBertModel.load_pretrained_checkpoint(<span class="hljs-string">&quot;/path/to/checkpoint/&quot;</span>)
input_ids = [<span class="hljs-number">0</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">7</span>, <span class="hljs-number">9</span>]  <span class="hljs-comment"># vector of input ids</span>
original_output = model.predict(input_ids)`,wrap:!1}}),Ye=new M({props:{code:"JTVCJTVCJTBBJTIwJTVCLTAuMTQ2NSUyQyUyMC0wLjY1MDElMkMlMjAlMjAwLjE5OTMlMkMlMjAlMjAuLi4lMkMlMjAlMjAwLjE0NTElMkMlMjAlMjAwLjM0MzAlMkMlMjAlMjAwLjYwMjQlNUQlMkMlMEElMjAlNUItMC40NDE3JTJDJTIwLTAuNTkyMCUyQyUyMCUyMDAuMzQ1MCUyQyUyMCUyMC4uLiUyQyUyMC0wLjMwNjIlMkMlMjAlMjAwLjYxODIlMkMlMjAlMjAwLjcxMzIlNUQlMkMlMEElMjAlNUItMC41MDA5JTJDJTIwLTAuNzEyMiUyQyUyMCUyMDAuNDU0OCUyQyUyMCUyMC4uLiUyQyUyMC0wLjM2NjIlMkMlMjAlMjAwLjYwOTElMkMlMjAlMjAwLjc2NDglNUQlMkMlMEElMjAuLi4lMkMlMEElMjAlNUItMC41NjEzJTJDJTIwLTAuNjMzMiUyQyUyMCUyMDAuNDMyNCUyQyUyMCUyMC4uLiUyQyUyMC0wLjM3OTIlMkMlMjAlMjAwLjczNzIlMkMlMjAlMjAwLjkyODglNUQlMkMlMEElMjAlNUItMC41NDE2JTJDJTIwLTAuNjM0NSUyQyUyMCUyMDAuNDE4MCUyQyUyMCUyMC4uLiUyQyUyMC0wLjM1NjQlMkMlMjAlMjAwLjY5OTIlMkMlMjAlMjAwLjkxOTElNUQlMkMlMEElMjAlNUItMC41MzM0JTJDJTIwLTAuNjQwMyUyQyUyMCUyMDAuNDI3MSUyQyUyMCUyMC4uLiUyQyUyMC0wLjMzMzklMkMlMjAlMjAwLjY1MzMlMkMlMjAlMjAwLjg2OTQlNUQlNUQlNUQlMkM=",highlighted:`<span class="hljs-comment">[<span class="hljs-comment">[
 <span class="hljs-comment">[-0.1465, -0.6501,  0.1993,  ...,  0.1451,  0.3430,  0.6024]</span>,
 <span class="hljs-comment">[-0.4417, -0.5920,  0.3450,  ..., -0.3062,  0.6182,  0.7132]</span>,
 <span class="hljs-comment">[-0.5009, -0.7122,  0.4548,  ..., -0.3662,  0.6091,  0.7648]</span>,
 ...,
 <span class="hljs-comment">[-0.5613, -0.6332,  0.4324,  ..., -0.3792,  0.7372,  0.9288]</span>,
 <span class="hljs-comment">[-0.5416, -0.6345,  0.4180,  ..., -0.3564,  0.6992,  0.9191]</span>,
 <span class="hljs-comment">[-0.5334, -0.6403,  0.4271,  ..., -0.3339,  0.6533,  0.8694]</span>]</span>]</span>,`,wrap:!1}}),en=new w({props:{title:"5.-14. Portierung von BrandNewBert auf ü§ó Transformatoren",local:"5-14-portierung-von-brandnewbert-auf--transformatoren",headingTag:"h3"}}),tn=new M({props:{code:"Y2QlMjB0cmFuc2Zvcm1lcnM=",highlighted:'<span class="hljs-built_in">cd</span> transformers',wrap:!1}}),mn=new M({props:{code:"Z2l0JTIwY2hlY2tvdXQlMjAtYiUyMGFkZF9icmFuZF9uZXdfYmVydA==",highlighted:"git checkout -b add_brand_new_bert",wrap:!1}}),pn=new M({props:{code:"Z2l0JTIwYWRkJTIwLiUwQWdpdCUyMGNvbW1pdA==",highlighted:`git add .
git commit`,wrap:!1}}),fn=new M({props:{code:"Z2l0JTIwZmV0Y2glMjB1cHN0cmVhbSUwQWdpdCUyMHJlYmFzZSUyMHVwc3RyZWFtJTJGbWFpbg==",highlighted:`git fetch upstream
git rebase upstream/main`,wrap:!1}}),Mn=new M({props:{code:"Z2l0JTIwcHVzaCUyMC11JTIwb3JpZ2luJTIwYS1kZXNjcmlwdGl2ZS1uYW1lLWZvci1teS1jaGFuZ2Vz",highlighted:"git push -u origin a-descriptive-name-for-my-changes",wrap:!1}}),gn=new M({props:{code:"Z2l0JTIwZmV0Y2glMjB1cHN0cmVhbSUwQWdpdCUyMG1lcmdlJTIwdXBzdHJlYW0lMkZtYWlu",highlighted:`git fetch upstream
git merge upstream/main`,wrap:!1}}),Jn=new M({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMEJyYW5kTmV3QmVydE1vZGVsJTJDJTIwQnJhbmROZXdCZXJ0Q29uZmlnJTBBJTBBbW9kZWwlMjAlM0QlMjBCcmFuZE5ld0JlcnRNb2RlbChCcmFuZE5ld0JlcnRDb25maWcoKSk=",highlighted:`<span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> BrandNewBertModel, BrandNewBertConfig

model = BrandNewBertModel(BrandNewBertConfig())`,wrap:!1}}),In=new M({props:{code:"ZGVmJTIwX2luaXRfd2VpZ2h0cyhzZWxmJTJDJTIwbW9kdWxlKSUzQSUwQSUyMCUyMCUyMCUyMCUyMiUyMiUyMkluaXRpYWxpemUlMjB0aGUlMjB3ZWlnaHRzJTIyJTIyJTIyJTBBJTIwJTIwJTIwJTIwaWYlMjBpc2luc3RhbmNlKG1vZHVsZSUyQyUyMG5uLkxpbmVhciklM0ElMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjBtb2R1bGUud2VpZ2h0LmRhdGEubm9ybWFsXyhtZWFuJTNEMC4wJTJDJTIwc3RkJTNEc2VsZi5jb25maWcuaW5pdGlhbGl6ZXJfcmFuZ2UpJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwaWYlMjBtb2R1bGUuYmlhcyUyMGlzJTIwbm90JTIwTm9uZSUzQSUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMG1vZHVsZS5iaWFzLmRhdGEuemVyb18oKSUwQSUyMCUyMCUyMCUyMGVsaWYlMjBpc2luc3RhbmNlKG1vZHVsZSUyQyUyMG5uLkVtYmVkZGluZyklM0ElMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjBtb2R1bGUud2VpZ2h0LmRhdGEubm9ybWFsXyhtZWFuJTNEMC4wJTJDJTIwc3RkJTNEc2VsZi5jb25maWcuaW5pdGlhbGl6ZXJfcmFuZ2UpJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwaWYlMjBtb2R1bGUucGFkZGluZ19pZHglMjBpcyUyMG5vdCUyME5vbmUlM0ElMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjBtb2R1bGUud2VpZ2h0LmRhdGElNUJtb2R1bGUucGFkZGluZ19pZHglNUQuemVyb18oKSUwQSUyMCUyMCUyMCUyMGVsaWYlMjBpc2luc3RhbmNlKG1vZHVsZSUyQyUyMG5uLkxheWVyTm9ybSklM0ElMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjBtb2R1bGUuYmlhcy5kYXRhLnplcm9fKCklMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjBtb2R1bGUud2VpZ2h0LmRhdGEuZmlsbF8oMS4wKQ==",highlighted:`<span class="hljs-keyword">def</span> <span class="hljs-title function_">_init_weights</span>(<span class="hljs-params">self, module</span>):
    <span class="hljs-string">&quot;&quot;&quot;Initialize the weights&quot;&quot;&quot;</span>
    <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(module, nn.Linear):
        module.weight.data.normal_(mean=<span class="hljs-number">0.0</span>, std=self.config.initializer_range)
        <span class="hljs-keyword">if</span> module.bias <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:
            module.bias.data.zero_()
    <span class="hljs-keyword">elif</span> <span class="hljs-built_in">isinstance</span>(module, nn.Embedding):
        module.weight.data.normal_(mean=<span class="hljs-number">0.0</span>, std=self.config.initializer_range)
        <span class="hljs-keyword">if</span> module.padding_idx <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:
            module.weight.data[module.padding_idx].zero_()
    <span class="hljs-keyword">elif</span> <span class="hljs-built_in">isinstance</span>(module, nn.LayerNorm):
        module.bias.data.zero_()
        module.weight.data.fill_(<span class="hljs-number">1.0</span>)`,wrap:!1}}),Sn=new M({props:{code:"ZGVmJTIwX2luaXRfd2VpZ2h0cyhzZWxmJTJDJTIwbW9kdWxlKSUzQSUwQSUyMCUyMCUyMCUyMCUyMiUyMiUyMkluaXRpYWxpemUlMjB0aGUlMjB3ZWlnaHRzJTIyJTIyJTIyJTBBJTIwJTIwJTIwJTIwaWYlMjBpc2luc3RhbmNlKG1vZHVsZSUyQyUyMFdhdjJWZWMyRm9yUHJlVHJhaW5pbmcpJTNBJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwbW9kdWxlLnByb2plY3RfaGlkLnJlc2V0X3BhcmFtZXRlcnMoKSUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMG1vZHVsZS5wcm9qZWN0X3EucmVzZXRfcGFyYW1ldGVycygpJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwbW9kdWxlLnByb2plY3RfaGlkLl9pc19oZl9pbml0aWFsaXplZCUyMCUzRCUyMFRydWUlMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjBtb2R1bGUucHJvamVjdF9xLl9pc19oZl9pbml0aWFsaXplZCUyMCUzRCUyMFRydWUlMEElMjAlMjAlMjAlMjBlbGlmJTIwaXNpbnN0YW5jZShtb2R1bGUlMkMlMjBubi5MaW5lYXIpJTNBJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwbW9kdWxlLndlaWdodC5kYXRhLm5vcm1hbF8obWVhbiUzRDAuMCUyQyUyMHN0ZCUzRHNlbGYuY29uZmlnLmluaXRpYWxpemVyX3JhbmdlKSUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMGlmJTIwbW9kdWxlLmJpYXMlMjBpcyUyMG5vdCUyME5vbmUlM0ElMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjBtb2R1bGUuYmlhcy5kYXRhLnplcm9fKCk=",highlighted:`<span class="hljs-keyword">def</span> <span class="hljs-title function_">_init_weights</span>(<span class="hljs-params">self, module</span>):
    <span class="hljs-string">&quot;&quot;&quot;Initialize the weights&quot;&quot;&quot;</span>
    <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(module, Wav2Vec2ForPreTraining):
        module.project_hid.reset_parameters()
        module.project_q.reset_parameters()
        module.project_hid._is_hf_initialized = <span class="hljs-literal">True</span>
        module.project_q._is_hf_initialized = <span class="hljs-literal">True</span>
    <span class="hljs-keyword">elif</span> <span class="hljs-built_in">isinstance</span>(module, nn.Linear):
        module.weight.data.normal_(mean=<span class="hljs-number">0.0</span>, std=self.config.initializer_range)
        <span class="hljs-keyword">if</span> module.bias <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:
            module.bias.data.zero_()`,wrap:!1}}),Hn=new M({props:{code:"ZnJvbSUyMHRvcmNoJTIwaW1wb3J0JTIwbm4lMEElMEElMEFjbGFzcyUyMFNpbXBsZU1vZGVsKG5uLk1vZHVsZSklM0ElMEElMjAlMjAlMjAlMjBkZWYlMjBfX2luaXRfXyhzZWxmKSUzQSUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMHN1cGVyKCkuX19pbml0X18oKSUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMHNlbGYuZGVuc2UlMjAlM0QlMjBubi5MaW5lYXIoMTAlMkMlMjAxMCklMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjBzZWxmLmludGVybWVkaWF0ZSUyMCUzRCUyMG5uLkxpbmVhcigxMCUyQyUyMDEwKSUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMHNlbGYubGF5ZXJfbm9ybSUyMCUzRCUyMG5uLkxheWVyTm9ybSgxMCk=",highlighted:`<span class="hljs-keyword">from</span> torch <span class="hljs-keyword">import</span> nn


<span class="hljs-keyword">class</span> <span class="hljs-title class_">SimpleModel</span>(nn.Module):
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):
        <span class="hljs-built_in">super</span>().__init__()
        self.dense = nn.Linear(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>)
        self.intermediate = nn.Linear(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>)
        self.layer_norm = nn.LayerNorm(<span class="hljs-number">10</span>)`,wrap:!1}}),Zn=new M({props:{code:"bW9kZWwlMjAlM0QlMjBTaW1wbGVNb2RlbCgpJTBBJTBBcHJpbnQobW9kZWwp",highlighted:`model = SimpleModel()

<span class="hljs-built_in">print</span>(model)`,wrap:!1}}),Dn=new M({props:{code:"U2ltcGxlTW9kZWwoJTBBJTIwJTIwKGRlbnNlKSUzQSUyMExpbmVhcihpbl9mZWF0dXJlcyUzRDEwJTJDJTIwb3V0X2ZlYXR1cmVzJTNEMTAlMkMlMjBiaWFzJTNEVHJ1ZSklMEElMjAlMjAoaW50ZXJtZWRpYXRlKSUzQSUyMExpbmVhcihpbl9mZWF0dXJlcyUzRDEwJTJDJTIwb3V0X2ZlYXR1cmVzJTNEMTAlMkMlMjBiaWFzJTNEVHJ1ZSklMEElMjAlMjAobGF5ZXJfbm9ybSklM0ElMjBMYXllck5vcm0oKDEwJTJDKSUyQyUyMGVwcyUzRDFlLTA1JTJDJTIwZWxlbWVudHdpc2VfYWZmaW5lJTNEVHJ1ZSklMEEp",highlighted:`SimpleModel(
  (dense): Linear(<span class="hljs-attribute">in_features</span>=10, <span class="hljs-attribute">out_features</span>=10, <span class="hljs-attribute">bias</span>=<span class="hljs-literal">True</span>)
  (intermediate): Linear(<span class="hljs-attribute">in_features</span>=10, <span class="hljs-attribute">out_features</span>=10, <span class="hljs-attribute">bias</span>=<span class="hljs-literal">True</span>)
  (layer_norm): LayerNorm((10,), <span class="hljs-attribute">eps</span>=1e-05, <span class="hljs-attribute">elementwise_affine</span>=<span class="hljs-literal">True</span>)
)`,wrap:!1}}),Nn=new M({props:{code:"cHJpbnQobW9kZWwuZGVuc2Uud2VpZ2h0LmRhdGEp",highlighted:'<span class="hljs-built_in">print</span>(model.dense.weight.data)',wrap:!1}}),Pn=new M({props:{code:"dGVuc29yKCU1QiU1Qi0wLjA4MTglMkMlMjAlMjAwLjIyMDclMkMlMjAtMC4wNzQ5JTJDJTIwLTAuMDAzMCUyQyUyMCUyMDAuMDA0NSUyQyUyMC0wLjE1NjklMkMlMjAtMC4xNTk4JTJDJTIwJTIwMC4wMjEyJTJDJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwLTAuMjA3NyUyQyUyMCUyMDAuMjE1NyU1RCUyQyUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCU1QiUyMDAuMTA0NCUyQyUyMCUyMDAuMDIwMSUyQyUyMCUyMDAuMDk5MCUyQyUyMCUyMDAuMjQ4MiUyQyUyMCUyMDAuMzExNiUyQyUyMCUyMDAuMjUwOSUyQyUyMCUyMDAuMjg2NiUyQyUyMC0wLjIxOTAlMkMlMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAwLjIxNjYlMkMlMjAtMC4wMjEyJTVEJTJDJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTVCLTAuMjAwMCUyQyUyMCUyMDAuMTEwNyUyQyUyMC0wLjE5OTklMkMlMjAtMC4zMTE5JTJDJTIwJTIwMC4xNTU5JTJDJTIwJTIwMC4wOTkzJTJDJTIwJTIwMC4xNzc2JTJDJTIwLTAuMTk1MCUyQyUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMC0wLjEwMjMlMkMlMjAtMC4wNDQ3JTVEJTJDJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTVCLTAuMDg4OCUyQyUyMC0wLjEwOTIlMkMlMjAlMjAwLjIyODElMkMlMjAlMjAwLjAzMzYlMkMlMjAlMjAwLjE4MTclMkMlMjAtMC4wMTE1JTJDJTIwJTIwMC4yMDk2JTJDJTIwJTIwMC4xNDE1JTJDJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwLTAuMTg3NiUyQyUyMC0wLjI0NjclNUQlMkMlMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlNUIlMjAwLjIyMDglMkMlMjAtMC4yMzUyJTJDJTIwLTAuMTQyNiUyQyUyMC0wLjI2MzYlMkMlMjAtMC4yODg5JTJDJTIwLTAuMjA2MSUyQyUyMC0wLjI4NDklMkMlMjAtMC4wNDY1JTJDJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwMC4yNTc3JTJDJTIwJTIwMC4wNDAyJTVEJTJDJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTVCJTIwMC4xNTAyJTJDJTIwJTIwMC4yNDY1JTJDJTIwJTIwMC4yNTY2JTJDJTIwJTIwMC4wNjkzJTJDJTIwJTIwMC4yMzUyJTJDJTIwLTAuMDUzMCUyQyUyMCUyMDAuMTg1OSUyQyUyMC0wLjA2MDQlMkMlMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAwLjIxMzIlMkMlMjAlMjAwLjE2ODAlNUQlMkMlMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlNUIlMjAwLjE3MzMlMkMlMjAtMC4yNDA3JTJDJTIwLTAuMTcyMSUyQyUyMCUyMDAuMTQ4NCUyQyUyMCUyMDAuMDM1OCUyQyUyMC0wLjA2MzMlMkMlMjAtMC4wNzIxJTJDJTIwLTAuMDA5MCUyQyUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMDAuMjcwNyUyQyUyMC0wLjI1MDklNUQlMkMlMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlNUItMC4xMTczJTJDJTIwJTIwMC4xNTYxJTJDJTIwJTIwMC4yOTQ1JTJDJTIwJTIwMC4wNTk1JTJDJTIwLTAuMTk5NiUyQyUyMCUyMDAuMjk4OCUyQyUyMC0wLjA4MDIlMkMlMjAlMjAwLjA0MDclMkMlMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAwLjE4MjklMkMlMjAtMC4xNTY4JTVEJTJDJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTVCLTAuMTE2NCUyQyUyMC0wLjIyMjglMkMlMjAtMC4wNDAzJTJDJTIwJTIwMC4wNDI4JTJDJTIwJTIwMC4xMzM5JTJDJTIwJTIwMC4wMDQ3JTJDJTIwJTIwMC4xOTY3JTJDJTIwJTIwMC4yOTIzJTJDJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwMC4wMzMzJTJDJTIwLTAuMDUzNiU1RCUyQyUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCU1Qi0wLjE0OTIlMkMlMjAtMC4xNjE2JTJDJTIwJTIwMC4xMDU3JTJDJTIwJTIwMC4xOTUwJTJDJTIwLTAuMjgwNyUyQyUyMC0wLjI3MTAlMkMlMjAtMC4xNTg2JTJDJTIwJTIwMC4wNzM5JTJDJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwMC4yMjIwJTJDJTIwJTIwMC4yMzU4JTVEJTVEKS4=",highlighted:`tensor([[<span class="hljs-string">-0</span>.0818,  0.2207, <span class="hljs-string">-0</span>.0749, <span class="hljs-string">-0</span>.0030,  0.0045, <span class="hljs-string">-0</span>.1569, <span class="hljs-string">-0</span>.1598,  0.0212,
         <span class="hljs-string">-0</span>.2077,  0.2157],
        [ 0.1044,  0.0201,  0.0990,  0.2482,  0.3116,  0.2509,  0.2866, <span class="hljs-string">-0</span>.2190,
          0.2166, <span class="hljs-string">-0</span>.0212],
        [<span class="hljs-string">-0</span>.2000,  0.1107, <span class="hljs-string">-0</span>.1999, <span class="hljs-string">-0</span>.3119,  0.1559,  0.0993,  0.1776, <span class="hljs-string">-0</span>.1950,
         <span class="hljs-string">-0</span>.1023, <span class="hljs-string">-0</span>.0447],
        [<span class="hljs-string">-0</span>.0888, <span class="hljs-string">-0</span>.1092,  0.2281,  0.0336,  0.1817, <span class="hljs-string">-0</span>.0115,  0.2096,  0.1415,
         <span class="hljs-string">-0</span>.1876, <span class="hljs-string">-0</span>.2467],
        [ 0.2208, <span class="hljs-string">-0</span>.2352, <span class="hljs-string">-0</span>.1426, <span class="hljs-string">-0</span>.2636, <span class="hljs-string">-0</span>.2889, <span class="hljs-string">-0</span>.2061, <span class="hljs-string">-0</span>.2849, <span class="hljs-string">-0</span>.0465,
          0.2577,  0.0402],
        [ 0.1502,  0.2465,  0.2566,  0.0693,  0.2352, <span class="hljs-string">-0</span>.0530,  0.1859, <span class="hljs-string">-0</span>.0604,
          0.2132,  0.1680],
        [ 0.1733, <span class="hljs-string">-0</span>.2407, <span class="hljs-string">-0</span>.1721,  0.1484,  0.0358, <span class="hljs-string">-0</span>.0633, <span class="hljs-string">-0</span>.0721, <span class="hljs-string">-0</span>.0090,
          0.2707, <span class="hljs-string">-0</span>.2509],
        [<span class="hljs-string">-0</span>.1173,  0.1561,  0.2945,  0.0595, <span class="hljs-string">-0</span>.1996,  0.2988, <span class="hljs-string">-0</span>.0802,  0.0407,
          0.1829, <span class="hljs-string">-0</span>.1568],
        [<span class="hljs-string">-0</span>.1164, <span class="hljs-string">-0</span>.2228, <span class="hljs-string">-0</span>.0403,  0.0428,  0.1339,  0.0047,  0.1967,  0.2923,
          0.0333, <span class="hljs-string">-0</span>.0536],
        [<span class="hljs-string">-0</span>.1492, <span class="hljs-string">-0</span>.1616,  0.1057,  0.1950, <span class="hljs-string">-0</span>.2807, <span class="hljs-string">-0</span>.2710, <span class="hljs-string">-0</span>.1586,  0.0739,
          0.2220,  0.2358]]).`,wrap:!1}}),Fn=new M({props:{code:"JTIzJTIwcmV0cmlldmUlMjBtYXRjaGluZyUyMGxheWVyJTIwd2VpZ2h0cyUyQyUyMGUuZy4lMjBieSUwQSUyMyUyMHJlY3Vyc2l2ZSUyMGFsZ29yaXRobSUwQWxheWVyX25hbWUlMjAlM0QlMjAlMjJkZW5zZSUyMiUwQXByZXRyYWluZWRfd2VpZ2h0JTIwJTNEJTIwYXJyYXlfb2ZfZGVuc2VfbGF5ZXIlMEElMEFtb2RlbF9wb2ludGVyJTIwJTNEJTIwZ2V0YXR0cihtb2RlbCUyQyUyMCUyMmRlbnNlJTIyKSUwQSUwQW1vZGVsX3BvaW50ZXIud2VpZ2h0LmRhdGElMjAlM0QlMjB0b3JjaC5mcm9tX251bXB5KHByZXRyYWluZWRfd2VpZ2h0KQ==",highlighted:`<span class="hljs-comment"># retrieve matching layer weights, e.g. by</span>
<span class="hljs-comment"># recursive algorithm</span>
layer_name = <span class="hljs-string">&quot;dense&quot;</span>
pretrained_weight = array_of_dense_layer

model_pointer = <span class="hljs-built_in">getattr</span>(model, <span class="hljs-string">&quot;dense&quot;</span>)

model_pointer.weight.data = torch.from_numpy(pretrained_weight)`,wrap:!1}}),Qn=new M({props:{code:"YXNzZXJ0JTIwKCUwQSUyMCUyMCUyMCUyMG1vZGVsX3BvaW50ZXIud2VpZ2h0LnNoYXBlJTIwJTNEJTNEJTIwcHJldHJhaW5lZF93ZWlnaHQuc2hhcGUlMEEpJTJDJTIwZiUyMlBvaW50ZXIlMjBzaGFwZSUyMG9mJTIwcmFuZG9tJTIwd2VpZ2h0JTIwJTdCbW9kZWxfcG9pbnRlci5zaGFwZSU3RCUyMGFuZCUyMGFycmF5JTIwc2hhcGUlMjBvZiUyMGNoZWNrcG9pbnQlMjB3ZWlnaHQlMjAlN0JwcmV0cmFpbmVkX3dlaWdodC5zaGFwZSU3RCUyMG1pc21hdGNoZWQlMjI=",highlighted:`<span class="hljs-keyword">assert</span> (
    model_pointer.weight.shape == pretrained_weight.shape
), <span class="hljs-string">f&quot;Pointer shape of random weight <span class="hljs-subst">{model_pointer.shape}</span> and array shape of checkpoint weight <span class="hljs-subst">{pretrained_weight.shape}</span> mismatched&quot;</span>`,wrap:!1}}),Yn=new M({props:{code:"bG9nZ2VyLmluZm8oZiUyMkluaXRpYWxpemUlMjBQeVRvcmNoJTIwd2VpZ2h0JTIwJTdCbGF5ZXJfbmFtZSU3RCUyMGZyb20lMjAlN0JwcmV0cmFpbmVkX3dlaWdodC5uYW1lJTdEJTIyKQ==",highlighted:'logger.info(<span class="hljs-string">f&quot;Initialize PyTorch weight <span class="hljs-subst">{layer_name}</span> from <span class="hljs-subst">{pretrained_weight.name}</span>&quot;</span>)',wrap:!1}}),nt=new M({props:{code:"bW9kZWwuc2F2ZV9wcmV0cmFpbmVkKCUyMiUyRnBhdGglMkZ0byUyRmNvbnZlcnRlZCUyRmNoZWNrcG9pbnQlMkZmb2xkZXIlMjIp",highlighted:'model.save_pretrained(<span class="hljs-string">&quot;/path/to/converted/checkpoint/folder&quot;</span>)',wrap:!1}}),lt=new M({props:{code:"bW9kZWwlMjAlM0QlMjBCcmFuZE5ld0JlcnRNb2RlbC5mcm9tX3ByZXRyYWluZWQoJTIyJTJGcGF0aCUyRnRvJTJGY29udmVydGVkJTJGY2hlY2twb2ludCUyRmZvbGRlciUyMiklMEFpbnB1dF9pZHMlMjAlM0QlMjAlNUIwJTJDJTIwNCUyQyUyMDQlMkMlMjAzJTJDJTIwMiUyQyUyMDQlMkMlMjAxJTJDJTIwNyUyQyUyMDE5JTVEJTBBb3V0cHV0JTIwJTNEJTIwbW9kZWwoaW5wdXRfaWRzKS5sYXN0X2hpZGRlbl9zdGF0ZXM=",highlighted:`model = BrandNewBertModel.from_pretrained(<span class="hljs-string">&quot;/path/to/converted/checkpoint/folder&quot;</span>)
input_ids = [<span class="hljs-number">0</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">1</span>, <span class="hljs-number">7</span>, <span class="hljs-number">19</span>]
output = model(input_ids).last_hidden_states`,wrap:!1}}),mt=new M({props:{code:"cHl0ZXN0JTIwdGVzdHMlMkZtb2RlbHMlMkZicmFuZF9uZXdfYmVydCUyRnRlc3RfbW9kZWxpbmdfYnJhbmRfbmV3X2JlcnQucHk=",highlighted:"pytest tests/models/brand_new_bert/test_modeling_brand_new_bert.py",wrap:!1}}),ct=new M({props:{code:"UlVOX1NMT1clM0QxJTIwcHl0ZXN0JTIwLXN2JTIwdGVzdHMlMkZtb2RlbHMlMkZicmFuZF9uZXdfYmVydCUyRnRlc3RfbW9kZWxpbmdfYnJhbmRfbmV3X2JlcnQucHklM0ElM0FCcmFuZE5ld0JlcnRNb2RlbEludGVncmF0aW9uVGVzdHM=",highlighted:"RUN_SLOW=1 pytest -sv tests/models/brand_new_bert/test_modeling_brand_new_bert.py::BrandNewBertModelIntegrationTests",wrap:!1}}),S=new wu({props:{$$slots:{default:[Iu]},$$scope:{ctx:qt}}}),zt=new M({props:{code:"aW5wdXRfc3RyJTIwJTNEJTIwJTIyVGhpcyUyMGlzJTIwYSUyMGxvbmclMjBleGFtcGxlJTIwaW5wdXQlMjBzdHJpbmclMjBjb250YWluaW5nJTIwc3BlY2lhbCUyMGNoYXJhY3RlcnMlMjAuJTI0JTNGLSUyQyUyMG51bWJlcnMlMjAyODcyJTIwMjM0JTIwMTIlMjBhbmQlMjB3b3Jkcy4lMjIlMEFtb2RlbCUyMCUzRCUyMEJyYW5kTmV3QmVydE1vZGVsLmxvYWRfcHJldHJhaW5lZF9jaGVja3BvaW50KCUyMiUyRnBhdGglMkZ0byUyRmNoZWNrcG9pbnQlMkYlMjIpJTBBaW5wdXRfaWRzJTIwJTNEJTIwbW9kZWwudG9rZW5pemUoaW5wdXRfc3RyKQ==",highlighted:`input_str = <span class="hljs-string">&quot;This is a long example input string containing special characters .$?-, numbers 2872 234 12 and words.&quot;</span>
model = BrandNewBertModel.load_pretrained_checkpoint(<span class="hljs-string">&quot;/path/to/checkpoint/&quot;</span>)
input_ids = model.tokenize(input_str)`,wrap:!1}}),Jt=new M({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMEJyYW5kTmV3QmVydFRva2VuaXplciUwQSUwQWlucHV0X3N0ciUyMCUzRCUyMCUyMlRoaXMlMjBpcyUyMGElMjBsb25nJTIwZXhhbXBsZSUyMGlucHV0JTIwc3RyaW5nJTIwY29udGFpbmluZyUyMHNwZWNpYWwlMjBjaGFyYWN0ZXJzJTIwLiUyNCUzRi0lMkMlMjBudW1iZXJzJTIwMjg3MiUyMDIzNCUyMDEyJTIwYW5kJTIwd29yZHMuJTIyJTBBJTBBdG9rZW5pemVyJTIwJTNEJTIwQnJhbmROZXdCZXJ0VG9rZW5pemVyLmZyb21fcHJldHJhaW5lZCglMjIlMkZwYXRoJTJGdG8lMkZ0b2tlbml6ZXIlMkZmb2xkZXIlMkYlMjIpJTBBJTBBaW5wdXRfaWRzJTIwJTNEJTIwdG9rZW5pemVyKGlucHV0X3N0cikuaW5wdXRfaWRz",highlighted:`<span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> BrandNewBertTokenizer

input_str = <span class="hljs-string">&quot;This is a long example input string containing special characters .$?-, numbers 2872 234 12 and words.&quot;</span>

tokenizer = BrandNewBertTokenizer.from_pretrained(<span class="hljs-string">&quot;/path/to/tokenizer/folder/&quot;</span>)

input_ids = tokenizer(input_str).input_ids`,wrap:!1}}),xt=new M({props:{code:"bWFrZSUyMHN0eWxl",highlighted:"make style",wrap:!1}}),Bt=new M({props:{code:"bWFrZSUyMHF1YWxpdHk=",highlighted:"make quality",wrap:!1}}),Rt=new M({props:{code:"YnJhbmRfbmV3X2JlcnQucHVzaF90b19odWIoJTIyYnJhbmRfbmV3X2JlcnQlMjIpJTBBJTIzJTIwVW5jb21tZW50JTIwdGhlJTIwZm9sbG93aW5nJTIwbGluZSUyMHRvJTIwcHVzaCUyMHRvJTIwYW4lMjBvcmdhbml6YXRpb24uJTBBJTIzJTIwYnJhbmRfbmV3X2JlcnQucHVzaF90b19odWIoJTIyJTNDb3JnYW5pemF0aW9uJTNFJTJGYnJhbmRfbmV3X2JlcnQlMjIp",highlighted:`brand_new_bert.push_to_hub(<span class="hljs-string">&quot;brand_new_bert&quot;</span>)
<span class="hljs-comment"># Uncomment the following line to push to an organization.</span>
<span class="hljs-comment"># brand_new_bert.push_to_hub(&quot;&lt;organization&gt;/brand_new_bert&quot;)</span>`,wrap:!1}}),Xt=new w({props:{title:"Teilen Sie Ihre Arbeit!!",local:"teilen-sie-ihre-arbeit",headingTag:"h3"}}),{c(){c=r("meta"),b=l(),g=r("p"),k=l(),u(_.$$.fragment),ni=l(),A=r("p"),A.innerHTML=Ar,ti=l(),u(y.$$.fragment),ii=l(),$=r("p"),$.textContent=$r,li=l(),L=r("ul"),L.innerHTML=Lr,si=l(),x=r("p"),x.textContent=xr,ri=l(),H=r("p"),H.innerHTML=Hr,ai=l(),B=r("p"),B.textContent=Br,di=l(),u(Z.$$.fragment),ui=l(),W=r("p"),W.textContent=Zr,oi=l(),D=r("p"),D.innerHTML=Wr,hi=l(),E=r("ul"),E.innerHTML=Dr,mi=l(),N=r("p"),N.innerHTML=Er,pi=l(),R=r("p"),R.textContent=Nr,fi=l(),u(P.$$.fragment),Mi=l(),G=r("p"),G.innerHTML=Rr,ci=l(),F=r("p"),F.textContent=Pr,gi=l(),Ot=r("img"),wi=l(),V=r("p"),V.innerHTML=Fr,bi=l(),u(Q.$$.fragment),Ti=l(),X=r("p"),X.innerHTML=Vr,ki=l(),u(Y.$$.fragment),yi=l(),K=r("p"),K.textContent=Qr,zi=l(),q=r("ol"),q.innerHTML=Xr,vi=l(),u(O.$$.fragment),Ji=l(),ee=r("p"),ee.textContent=Yr,ji=l(),u(ne.$$.fragment),Ci=l(),te=r("p"),te.textContent=Kr,Ii=l(),ie=r("ol"),ie.innerHTML=qr,Ui=l(),le=r("p"),le.textContent=Or,Si=l(),se=r("ul"),se.innerHTML=ea,_i=l(),re=r("p"),re.textContent=na,Ai=l(),ae=r("p"),ae.textContent=ta,$i=l(),de=r("p"),de.innerHTML=ia,Li=l(),ue=r("p"),ue.innerHTML=la,xi=l(),u(oe.$$.fragment),Hi=l(),he=r("p"),he.innerHTML=sa,Bi=l(),me=r("ul"),me.innerHTML=ra,Zi=l(),pe=r("p"),pe.textContent=aa,Wi=l(),u(fe.$$.fragment),Di=l(),Me=r("ol"),Me.innerHTML=da,Ei=l(),u(ce.$$.fragment),Ni=l(),z=r("ol"),z.innerHTML=ua,Ri=l(),u(ge.$$.fragment),Pi=l(),we=r("p"),we.textContent=oa,Gi=l(),u(be.$$.fragment),Fi=l(),Te=r("p"),Te.textContent=ha,Vi=l(),u(ke.$$.fragment),Qi=l(),v=r("ol"),v.innerHTML=ma,Xi=l(),ye=r("p"),ye.innerHTML=pa,Yi=l(),J=r("ol"),J.innerHTML=fa,Ki=l(),u(ze.$$.fragment),qi=l(),ve=r("p"),ve.innerHTML=Ma,Oi=l(),u(Je.$$.fragment),el=l(),je=r("p"),je.innerHTML=ca,nl=l(),Ce=r("p"),Ce.textContent=ga,tl=l(),Ie=r("p"),Ie.innerHTML=wa,il=l(),Ue=r("ul"),Ue.innerHTML=ba,ll=l(),Se=r("p"),Se.innerHTML=Ta,sl=l(),_e=r("p"),_e.textContent=ka,rl=l(),Ae=r("p"),Ae.textContent=ya,al=l(),$e=r("ul"),$e.innerHTML=za,dl=l(),Le=r("p"),Le.textContent=va,ul=l(),xe=r("p"),xe.innerHTML=Ja,ol=l(),He=r("p"),He.innerHTML=ja,hl=l(),u(Be.$$.fragment),ml=l(),Ze=r("p"),Ze.textContent=Ca,pl=l(),We=r("ul"),We.innerHTML=Ia,fl=l(),De=r("p"),De.textContent=Ua,Ml=l(),Ee=r("p"),Ee.innerHTML=Sa,cl=l(),Ne=r("ul"),Ne.innerHTML=_a,gl=l(),Re=r("p"),Re.innerHTML=Aa,wl=l(),Pe=r("p"),Pe.innerHTML=$a,bl=l(),Ge=r("p"),Ge.textContent=La,Tl=l(),Fe=r("p"),Fe.textContent=xa,kl=l(),Ve=r("ol"),Ve.innerHTML=Ha,yl=l(),Qe=r("p"),Qe.innerHTML=Ba,zl=l(),Xe=r("p"),Xe.textContent=Za,vl=l(),u(Ye.$$.fragment),Jl=l(),Ke=r("p"),Ke.innerHTML=Wa,jl=l(),qe=r("ul"),qe.innerHTML=Da,Cl=l(),Oe=r("p"),Oe.innerHTML=Ea,Il=l(),u(en.$$.fragment),Ul=l(),nn=r("p"),nn.textContent=Na,Sl=l(),u(tn.$$.fragment),_l=l(),ln=r("p"),ln.innerHTML=Ra,Al=l(),sn=r("p"),sn.textContent=Pa,$l=l(),rn=r("ul"),rn.innerHTML=Ga,Ll=l(),an=r("p"),an.innerHTML=Fa,xl=l(),dn=r("p"),dn.innerHTML=Va,Hl=l(),un=r("p"),un.innerHTML=Qa,Bl=l(),on=r("p"),on.textContent=Xa,Zl=l(),hn=r("ol"),hn.innerHTML=Ya,Wl=l(),u(mn.$$.fragment),Dl=l(),j=r("ol"),j.innerHTML=Ka,El=l(),u(pn.$$.fragment),Nl=l(),C=r("ol"),C.innerHTML=qa,Rl=l(),u(fn.$$.fragment),Pl=l(),I=r("ol"),I.innerHTML=Oa,Gl=l(),u(Mn.$$.fragment),Fl=l(),U=r("ol"),U.innerHTML=ed,Vl=l(),cn=r("p"),cn.textContent=nd,Ql=l(),u(gn.$$.fragment),Xl=l(),wn=r("p"),wn.textContent=td,Yl=l(),bn=r("p"),bn.textContent=id,Kl=l(),Tn=r("p"),Tn.textContent=ld,ql=l(),kn=r("p"),kn.innerHTML=sd,Ol=l(),yn=r("p"),yn.innerHTML=rd,es=l(),zn=r("p"),zn.innerHTML=ad,ns=l(),vn=r("p"),vn.innerHTML=dd,ts=l(),u(Jn.$$.fragment),is=l(),jn=r("p"),jn.innerHTML=ud,ls=l(),Cn=r("p"),Cn.innerHTML=od,ss=l(),u(In.$$.fragment),rs=l(),Un=r("p"),Un.innerHTML=hd,as=l(),u(Sn.$$.fragment),ds=l(),_n=r("p"),_n.innerHTML=md,us=l(),An=r("p"),An.innerHTML=pd,os=l(),$n=r("p"),$n.innerHTML=fd,hs=l(),Ln=r("ul"),Ln.innerHTML=Md,ms=l(),xn=r("p"),xn.innerHTML=cd,ps=l(),u(Hn.$$.fragment),fs=l(),Bn=r("p"),Bn.innerHTML=gd,Ms=l(),u(Zn.$$.fragment),cs=l(),Wn=r("p"),Wn.textContent=wd,gs=l(),u(Dn.$$.fragment),ws=l(),En=r("p"),En.textContent=bd,bs=l(),u(Nn.$$.fragment),Ts=l(),Rn=r("p"),Rn.textContent=Td,ks=l(),u(Pn.$$.fragment),ys=l(),Gn=r("p"),Gn.innerHTML=kd,zs=l(),u(Fn.$$.fragment),vs=l(),Vn=r("p"),Vn.innerHTML=yd,Js=l(),u(Qn.$$.fragment),js=l(),Xn=r("p"),Xn.innerHTML=zd,Cs=l(),u(Yn.$$.fragment),Is=l(),Kn=r("p"),Kn.textContent=vd,Us=l(),qn=r("p"),qn.innerHTML=Jd,Ss=l(),On=r("p"),On.innerHTML=jd,_s=l(),et=r("p"),et.innerHTML=Cd,As=l(),u(nt.$$.fragment),$s=l(),tt=r("p"),tt.innerHTML=Id,Ls=l(),it=r("p"),it.innerHTML=Ud,xs=l(),u(lt.$$.fragment),Hs=l(),st=r("p"),st.innerHTML=Sd,Bs=l(),rt=r("p"),rt.innerHTML=_d,Zs=l(),at=r("ul"),at.innerHTML=Ad,Ws=l(),dt=r("p"),dt.innerHTML=$d,Ds=l(),ut=r("p"),ut.innerHTML=Ld,Es=l(),ot=r("p"),ot.innerHTML=xd,Ns=l(),ht=r("p"),ht.innerHTML=Hd,Rs=l(),u(mt.$$.fragment),Ps=l(),pt=r("p"),pt.textContent=Bd,Gs=l(),ft=r("ul"),ft.innerHTML=Zd,Fs=l(),Mt=r("p"),Mt.innerHTML=Wd,Vs=l(),u(ct.$$.fragment),Qs=l(),u(S.$$.fragment),Xs=l(),gt=r("p"),gt.innerHTML=Dd,Ys=l(),wt=r("ul"),wt.innerHTML=Ed,Ks=l(),bt=r("p"),bt.innerHTML=Nd,qs=l(),Tt=r("p"),Tt.innerHTML=Rd,Os=l(),kt=r("p"),kt.textContent=Pd,er=l(),yt=r("p"),yt.innerHTML=Gd,nr=l(),u(zt.$$.fragment),tr=l(),vt=r("p"),vt.innerHTML=Fd,ir=l(),u(Jt.$$.fragment),lr=l(),jt=r("p"),jt.innerHTML=Vd,sr=l(),Ct=r("p"),Ct.innerHTML=Qd,rr=l(),It=r("p"),It.innerHTML=Xd,ar=l(),Ut=r("p"),Ut.innerHTML=Yd,dr=l(),St=r("p"),St.innerHTML=Kd,ur=l(),_t=r("p"),_t.innerHTML=qd,or=l(),At=r("p"),At.innerHTML=Od,hr=l(),$t=r("p"),$t.innerHTML=eu,mr=l(),Lt=r("p"),Lt.innerHTML=nu,pr=l(),u(xt.$$.fragment),fr=l(),Ht=r("p"),Ht.textContent=tu,Mr=l(),u(Bt.$$.fragment),cr=l(),Zt=r("p"),Zt.textContent=iu,gr=l(),Wt=r("p"),Wt.textContent=lu,wr=l(),Dt=r("p"),Dt.textContent=su,br=l(),Et=r("p"),Et.innerHTML=ru,Tr=l(),Nt=r("p"),Nt.innerHTML=au,kr=l(),u(Rt.$$.fragment),yr=l(),Pt=r("p"),Pt.innerHTML=du,zr=l(),Gt=r("p"),Gt.innerHTML=uu,vr=l(),Ft=r("p"),Ft.innerHTML=ou,Jr=l(),Vt=r("p"),Vt.innerHTML=hu,jr=l(),Qt=r("p"),Qt.textContent=mu,Cr=l(),u(Xt.$$.fragment),Ir=l(),Yt=r("p"),Yt.textContent=pu,Ur=l(),Kt=r("p"),Kt.innerHTML=fu,Sr=l(),ei=r("p"),this.h()},l(e){const n=Ju("svelte-u9bgzb",document.head);c=a(n,"META",{name:!0,content:!0}),n.forEach(t),b=s(e),g=a(e,"P",{}),gu(g).forEach(t),k=s(e),o(_.$$.fragment,e),ni=s(e),A=a(e,"P",{"data-svelte-h":!0}),d(A)!=="svelte-i9paco"&&(A.innerHTML=Ar),ti=s(e),o(y.$$.fragment,e),ii=s(e),$=a(e,"P",{"data-svelte-h":!0}),d($)!=="svelte-bezc3h"&&($.textContent=$r),li=s(e),L=a(e,"UL",{"data-svelte-h":!0}),d(L)!=="svelte-k2p2vo"&&(L.innerHTML=Lr),si=s(e),x=a(e,"P",{"data-svelte-h":!0}),d(x)!=="svelte-1wqp6zf"&&(x.textContent=xr),ri=s(e),H=a(e,"P",{"data-svelte-h":!0}),d(H)!=="svelte-1x0q5de"&&(H.innerHTML=Hr),ai=s(e),B=a(e,"P",{"data-svelte-h":!0}),d(B)!=="svelte-1cybjq5"&&(B.textContent=Br),di=s(e),o(Z.$$.fragment,e),ui=s(e),W=a(e,"P",{"data-svelte-h":!0}),d(W)!=="svelte-izypdp"&&(W.textContent=Zr),oi=s(e),D=a(e,"P",{"data-svelte-h":!0}),d(D)!=="svelte-1vg1xbl"&&(D.innerHTML=Wr),hi=s(e),E=a(e,"UL",{"data-svelte-h":!0}),d(E)!=="svelte-1bh47k1"&&(E.innerHTML=Dr),mi=s(e),N=a(e,"P",{"data-svelte-h":!0}),d(N)!=="svelte-rwavim"&&(N.innerHTML=Er),pi=s(e),R=a(e,"P",{"data-svelte-h":!0}),d(R)!=="svelte-19s0joh"&&(R.textContent=Nr),fi=s(e),o(P.$$.fragment,e),Mi=s(e),G=a(e,"P",{"data-svelte-h":!0}),d(G)!=="svelte-ffr3hu"&&(G.innerHTML=Rr),ci=s(e),F=a(e,"P",{"data-svelte-h":!0}),d(F)!=="svelte-3m7jp4"&&(F.textContent=Pr),gi=s(e),Ot=a(e,"IMG",{src:!0}),wi=s(e),V=a(e,"P",{"data-svelte-h":!0}),d(V)!=="svelte-1elayqs"&&(V.innerHTML=Fr),bi=s(e),o(Q.$$.fragment,e),Ti=s(e),X=a(e,"P",{"data-svelte-h":!0}),d(X)!=="svelte-1rf7j75"&&(X.innerHTML=Vr),ki=s(e),o(Y.$$.fragment,e),yi=s(e),K=a(e,"P",{"data-svelte-h":!0}),d(K)!=="svelte-1bzws73"&&(K.textContent=Qr),zi=s(e),q=a(e,"OL",{"data-svelte-h":!0}),d(q)!=="svelte-11lmouf"&&(q.innerHTML=Xr),vi=s(e),o(O.$$.fragment,e),Ji=s(e),ee=a(e,"P",{"data-svelte-h":!0}),d(ee)!=="svelte-1bw4urp"&&(ee.textContent=Yr),ji=s(e),o(ne.$$.fragment,e),Ci=s(e),te=a(e,"P",{"data-svelte-h":!0}),d(te)!=="svelte-1xojh5h"&&(te.textContent=Kr),Ii=s(e),ie=a(e,"OL",{"data-svelte-h":!0}),d(ie)!=="svelte-1heaq2"&&(ie.innerHTML=qr),Ui=s(e),le=a(e,"P",{"data-svelte-h":!0}),d(le)!=="svelte-2q4qx4"&&(le.textContent=Or),Si=s(e),se=a(e,"UL",{"data-svelte-h":!0}),d(se)!=="svelte-1iyfo3t"&&(se.innerHTML=ea),_i=s(e),re=a(e,"P",{"data-svelte-h":!0}),d(re)!=="svelte-1gukx0t"&&(re.textContent=na),Ai=s(e),ae=a(e,"P",{"data-svelte-h":!0}),d(ae)!=="svelte-19evqv2"&&(ae.textContent=ta),$i=s(e),de=a(e,"P",{"data-svelte-h":!0}),d(de)!=="svelte-1jiufad"&&(de.innerHTML=ia),Li=s(e),ue=a(e,"P",{"data-svelte-h":!0}),d(ue)!=="svelte-qnv4qd"&&(ue.innerHTML=la),xi=s(e),o(oe.$$.fragment,e),Hi=s(e),he=a(e,"P",{"data-svelte-h":!0}),d(he)!=="svelte-10a4gjm"&&(he.innerHTML=sa),Bi=s(e),me=a(e,"UL",{"data-svelte-h":!0}),d(me)!=="svelte-kvx7zf"&&(me.innerHTML=ra),Zi=s(e),pe=a(e,"P",{"data-svelte-h":!0}),d(pe)!=="svelte-1owiho5"&&(pe.textContent=aa),Wi=s(e),o(fe.$$.fragment,e),Di=s(e),Me=a(e,"OL",{"data-svelte-h":!0}),d(Me)!=="svelte-ty4cix"&&(Me.innerHTML=da),Ei=s(e),o(ce.$$.fragment,e),Ni=s(e),z=a(e,"OL",{start:!0,"data-svelte-h":!0}),d(z)!=="svelte-oahl5t"&&(z.innerHTML=ua),Ri=s(e),o(ge.$$.fragment,e),Pi=s(e),we=a(e,"P",{"data-svelte-h":!0}),d(we)!=="svelte-bnan2z"&&(we.textContent=oa),Gi=s(e),o(be.$$.fragment,e),Fi=s(e),Te=a(e,"P",{"data-svelte-h":!0}),d(Te)!=="svelte-19mzwuq"&&(Te.textContent=ha),Vi=s(e),o(ke.$$.fragment,e),Qi=s(e),v=a(e,"OL",{start:!0,"data-svelte-h":!0}),d(v)!=="svelte-8q3kmq"&&(v.innerHTML=ma),Xi=s(e),ye=a(e,"P",{"data-svelte-h":!0}),d(ye)!=="svelte-ty5ho6"&&(ye.innerHTML=pa),Yi=s(e),J=a(e,"OL",{start:!0,"data-svelte-h":!0}),d(J)!=="svelte-1vchc05"&&(J.innerHTML=fa),Ki=s(e),o(ze.$$.fragment,e),qi=s(e),ve=a(e,"P",{"data-svelte-h":!0}),d(ve)!=="svelte-umafkt"&&(ve.innerHTML=Ma),Oi=s(e),o(Je.$$.fragment,e),el=s(e),je=a(e,"P",{"data-svelte-h":!0}),d(je)!=="svelte-17f2344"&&(je.innerHTML=ca),nl=s(e),Ce=a(e,"P",{"data-svelte-h":!0}),d(Ce)!=="svelte-bei59w"&&(Ce.textContent=ga),tl=s(e),Ie=a(e,"P",{"data-svelte-h":!0}),d(Ie)!=="svelte-902jel"&&(Ie.innerHTML=wa),il=s(e),Ue=a(e,"UL",{"data-svelte-h":!0}),d(Ue)!=="svelte-g6mr3s"&&(Ue.innerHTML=ba),ll=s(e),Se=a(e,"P",{"data-svelte-h":!0}),d(Se)!=="svelte-1i5mvsh"&&(Se.innerHTML=Ta),sl=s(e),_e=a(e,"P",{"data-svelte-h":!0}),d(_e)!=="svelte-1sucb9i"&&(_e.textContent=ka),rl=s(e),Ae=a(e,"P",{"data-svelte-h":!0}),d(Ae)!=="svelte-6pf931"&&(Ae.textContent=ya),al=s(e),$e=a(e,"UL",{"data-svelte-h":!0}),d($e)!=="svelte-19ih1j9"&&($e.innerHTML=za),dl=s(e),Le=a(e,"P",{"data-svelte-h":!0}),d(Le)!=="svelte-v4s9e2"&&(Le.textContent=va),ul=s(e),xe=a(e,"P",{"data-svelte-h":!0}),d(xe)!=="svelte-125adfu"&&(xe.innerHTML=Ja),ol=s(e),He=a(e,"P",{"data-svelte-h":!0}),d(He)!=="svelte-bvh065"&&(He.innerHTML=ja),hl=s(e),o(Be.$$.fragment,e),ml=s(e),Ze=a(e,"P",{"data-svelte-h":!0}),d(Ze)!=="svelte-n1a79h"&&(Ze.textContent=Ca),pl=s(e),We=a(e,"UL",{"data-svelte-h":!0}),d(We)!=="svelte-1xc3btw"&&(We.innerHTML=Ia),fl=s(e),De=a(e,"P",{"data-svelte-h":!0}),d(De)!=="svelte-abhwin"&&(De.textContent=Ua),Ml=s(e),Ee=a(e,"P",{"data-svelte-h":!0}),d(Ee)!=="svelte-dcxpp0"&&(Ee.innerHTML=Sa),cl=s(e),Ne=a(e,"UL",{"data-svelte-h":!0}),d(Ne)!=="svelte-bcii69"&&(Ne.innerHTML=_a),gl=s(e),Re=a(e,"P",{"data-svelte-h":!0}),d(Re)!=="svelte-141pzuk"&&(Re.innerHTML=Aa),wl=s(e),Pe=a(e,"P",{"data-svelte-h":!0}),d(Pe)!=="svelte-1wjnzv3"&&(Pe.innerHTML=$a),bl=s(e),Ge=a(e,"P",{"data-svelte-h":!0}),d(Ge)!=="svelte-v230jt"&&(Ge.textContent=La),Tl=s(e),Fe=a(e,"P",{"data-svelte-h":!0}),d(Fe)!=="svelte-17ba8sv"&&(Fe.textContent=xa),kl=s(e),Ve=a(e,"OL",{"data-svelte-h":!0}),d(Ve)!=="svelte-1lemgs2"&&(Ve.innerHTML=Ha),yl=s(e),Qe=a(e,"P",{"data-svelte-h":!0}),d(Qe)!=="svelte-em0xcu"&&(Qe.innerHTML=Ba),zl=s(e),Xe=a(e,"P",{"data-svelte-h":!0}),d(Xe)!=="svelte-1a3p0jj"&&(Xe.textContent=Za),vl=s(e),o(Ye.$$.fragment,e),Jl=s(e),Ke=a(e,"P",{"data-svelte-h":!0}),d(Ke)!=="svelte-b4pjuh"&&(Ke.innerHTML=Wa),jl=s(e),qe=a(e,"UL",{"data-svelte-h":!0}),d(qe)!=="svelte-d97qwy"&&(qe.innerHTML=Da),Cl=s(e),Oe=a(e,"P",{"data-svelte-h":!0}),d(Oe)!=="svelte-f38y09"&&(Oe.innerHTML=Ea),Il=s(e),o(en.$$.fragment,e),Ul=s(e),nn=a(e,"P",{"data-svelte-h":!0}),d(nn)!=="svelte-54j2et"&&(nn.textContent=Na),Sl=s(e),o(tn.$$.fragment,e),_l=s(e),ln=a(e,"P",{"data-svelte-h":!0}),d(ln)!=="svelte-1yq6p2i"&&(ln.innerHTML=Ra),Al=s(e),sn=a(e,"P",{"data-svelte-h":!0}),d(sn)!=="svelte-10mz5dz"&&(sn.textContent=Pa),$l=s(e),rn=a(e,"UL",{"data-svelte-h":!0}),d(rn)!=="svelte-8sqr66"&&(rn.innerHTML=Ga),Ll=s(e),an=a(e,"P",{"data-svelte-h":!0}),d(an)!=="svelte-1ora8bd"&&(an.innerHTML=Fa),xl=s(e),dn=a(e,"P",{"data-svelte-h":!0}),d(dn)!=="svelte-1hxbwnn"&&(dn.innerHTML=Va),Hl=s(e),un=a(e,"P",{"data-svelte-h":!0}),d(un)!=="svelte-1lqhpmo"&&(un.innerHTML=Qa),Bl=s(e),on=a(e,"P",{"data-svelte-h":!0}),d(on)!=="svelte-1b4wt6s"&&(on.textContent=Xa),Zl=s(e),hn=a(e,"OL",{"data-svelte-h":!0}),d(hn)!=="svelte-wxohg6"&&(hn.innerHTML=Ya),Wl=s(e),o(mn.$$.fragment,e),Dl=s(e),j=a(e,"OL",{start:!0,"data-svelte-h":!0}),d(j)!=="svelte-grebc4"&&(j.innerHTML=Ka),El=s(e),o(pn.$$.fragment,e),Nl=s(e),C=a(e,"OL",{start:!0,"data-svelte-h":!0}),d(C)!=="svelte-57j8vk"&&(C.innerHTML=qa),Rl=s(e),o(fn.$$.fragment,e),Pl=s(e),I=a(e,"OL",{start:!0,"data-svelte-h":!0}),d(I)!=="svelte-14ujgoj"&&(I.innerHTML=Oa),Gl=s(e),o(Mn.$$.fragment,e),Fl=s(e),U=a(e,"OL",{start:!0,"data-svelte-h":!0}),d(U)!=="svelte-1ygu26u"&&(U.innerHTML=ed),Vl=s(e),cn=a(e,"P",{"data-svelte-h":!0}),d(cn)!=="svelte-xoefco"&&(cn.textContent=nd),Ql=s(e),o(gn.$$.fragment,e),Xl=s(e),wn=a(e,"P",{"data-svelte-h":!0}),d(wn)!=="svelte-9c83iz"&&(wn.textContent=td),Yl=s(e),bn=a(e,"P",{"data-svelte-h":!0}),d(bn)!=="svelte-q2a9ys"&&(bn.textContent=id),Kl=s(e),Tn=a(e,"P",{"data-svelte-h":!0}),d(Tn)!=="svelte-1w2uo7q"&&(Tn.textContent=ld),ql=s(e),kn=a(e,"P",{"data-svelte-h":!0}),d(kn)!=="svelte-ll38of"&&(kn.innerHTML=sd),Ol=s(e),yn=a(e,"P",{"data-svelte-h":!0}),d(yn)!=="svelte-qnebit"&&(yn.innerHTML=rd),es=s(e),zn=a(e,"P",{"data-svelte-h":!0}),d(zn)!=="svelte-a9ik7e"&&(zn.innerHTML=ad),ns=s(e),vn=a(e,"P",{"data-svelte-h":!0}),d(vn)!=="svelte-73c19n"&&(vn.innerHTML=dd),ts=s(e),o(Jn.$$.fragment,e),is=s(e),jn=a(e,"P",{"data-svelte-h":!0}),d(jn)!=="svelte-90r1pl"&&(jn.innerHTML=ud),ls=s(e),Cn=a(e,"P",{"data-svelte-h":!0}),d(Cn)!=="svelte-ear7wv"&&(Cn.innerHTML=od),ss=s(e),o(In.$$.fragment,e),rs=s(e),Un=a(e,"P",{"data-svelte-h":!0}),d(Un)!=="svelte-1h8zqgg"&&(Un.innerHTML=hd),as=s(e),o(Sn.$$.fragment,e),ds=s(e),_n=a(e,"P",{"data-svelte-h":!0}),d(_n)!=="svelte-skup66"&&(_n.innerHTML=md),us=s(e),An=a(e,"P",{"data-svelte-h":!0}),d(An)!=="svelte-ur7hxy"&&(An.innerHTML=pd),os=s(e),$n=a(e,"P",{"data-svelte-h":!0}),d($n)!=="svelte-1887wxu"&&($n.innerHTML=fd),hs=s(e),Ln=a(e,"UL",{"data-svelte-h":!0}),d(Ln)!=="svelte-7qxefo"&&(Ln.innerHTML=Md),ms=s(e),xn=a(e,"P",{"data-svelte-h":!0}),d(xn)!=="svelte-eqntak"&&(xn.innerHTML=cd),ps=s(e),o(Hn.$$.fragment,e),fs=s(e),Bn=a(e,"P",{"data-svelte-h":!0}),d(Bn)!=="svelte-1fb12n5"&&(Bn.innerHTML=gd),Ms=s(e),o(Zn.$$.fragment,e),cs=s(e),Wn=a(e,"P",{"data-svelte-h":!0}),d(Wn)!=="svelte-8cmo4d"&&(Wn.textContent=wd),gs=s(e),o(Dn.$$.fragment,e),ws=s(e),En=a(e,"P",{"data-svelte-h":!0}),d(En)!=="svelte-8oefeh"&&(En.textContent=bd),bs=s(e),o(Nn.$$.fragment,e),Ts=s(e),Rn=a(e,"P",{"data-svelte-h":!0}),d(Rn)!=="svelte-1kchuav"&&(Rn.textContent=Td),ks=s(e),o(Pn.$$.fragment,e),ys=s(e),Gn=a(e,"P",{"data-svelte-h":!0}),d(Gn)!=="svelte-rumnlz"&&(Gn.innerHTML=kd),zs=s(e),o(Fn.$$.fragment,e),vs=s(e),Vn=a(e,"P",{"data-svelte-h":!0}),d(Vn)!=="svelte-qgbu5v"&&(Vn.innerHTML=yd),Js=s(e),o(Qn.$$.fragment,e),js=s(e),Xn=a(e,"P",{"data-svelte-h":!0}),d(Xn)!=="svelte-oc3fat"&&(Xn.innerHTML=zd),Cs=s(e),o(Yn.$$.fragment,e),Is=s(e),Kn=a(e,"P",{"data-svelte-h":!0}),d(Kn)!=="svelte-3apem9"&&(Kn.textContent=vd),Us=s(e),qn=a(e,"P",{"data-svelte-h":!0}),d(qn)!=="svelte-10wi6h1"&&(qn.innerHTML=Jd),Ss=s(e),On=a(e,"P",{"data-svelte-h":!0}),d(On)!=="svelte-1q7v1k3"&&(On.innerHTML=jd),_s=s(e),et=a(e,"P",{"data-svelte-h":!0}),d(et)!=="svelte-w6kn2j"&&(et.innerHTML=Cd),As=s(e),o(nt.$$.fragment,e),$s=s(e),tt=a(e,"P",{"data-svelte-h":!0}),d(tt)!=="svelte-1geun7s"&&(tt.innerHTML=Id),Ls=s(e),it=a(e,"P",{"data-svelte-h":!0}),d(it)!=="svelte-9nbx00"&&(it.innerHTML=Ud),xs=s(e),o(lt.$$.fragment,e),Hs=s(e),st=a(e,"P",{"data-svelte-h":!0}),d(st)!=="svelte-1pp0qlg"&&(st.innerHTML=Sd),Bs=s(e),rt=a(e,"P",{"data-svelte-h":!0}),d(rt)!=="svelte-hs7ji1"&&(rt.innerHTML=_d),Zs=s(e),at=a(e,"UL",{"data-svelte-h":!0}),d(at)!=="svelte-1onkr0h"&&(at.innerHTML=Ad),Ws=s(e),dt=a(e,"P",{"data-svelte-h":!0}),d(dt)!=="svelte-17ezdwx"&&(dt.innerHTML=$d),Ds=s(e),ut=a(e,"P",{"data-svelte-h":!0}),d(ut)!=="svelte-iy2lhh"&&(ut.innerHTML=Ld),Es=s(e),ot=a(e,"P",{"data-svelte-h":!0}),d(ot)!=="svelte-1avpnf1"&&(ot.innerHTML=xd),Ns=s(e),ht=a(e,"P",{"data-svelte-h":!0}),d(ht)!=="svelte-q5nihx"&&(ht.innerHTML=Hd),Rs=s(e),o(mt.$$.fragment,e),Ps=s(e),pt=a(e,"P",{"data-svelte-h":!0}),d(pt)!=="svelte-1llft13"&&(pt.textContent=Bd),Gs=s(e),ft=a(e,"UL",{"data-svelte-h":!0}),d(ft)!=="svelte-1nhvjur"&&(ft.innerHTML=Zd),Fs=s(e),Mt=a(e,"P",{"data-svelte-h":!0}),d(Mt)!=="svelte-1emdyhy"&&(Mt.innerHTML=Wd),Vs=s(e),o(ct.$$.fragment,e),Qs=s(e),o(S.$$.fragment,e),Xs=s(e),gt=a(e,"P",{"data-svelte-h":!0}),d(gt)!=="svelte-u9moe3"&&(gt.innerHTML=Dd),Ys=s(e),wt=a(e,"UL",{"data-svelte-h":!0}),d(wt)!=="svelte-1ddhh04"&&(wt.innerHTML=Ed),Ks=s(e),bt=a(e,"P",{"data-svelte-h":!0}),d(bt)!=="svelte-95ciqp"&&(bt.innerHTML=Nd),qs=s(e),Tt=a(e,"P",{"data-svelte-h":!0}),d(Tt)!=="svelte-wlz287"&&(Tt.innerHTML=Rd),Os=s(e),kt=a(e,"P",{"data-svelte-h":!0}),d(kt)!=="svelte-z2z9ka"&&(kt.textContent=Pd),er=s(e),yt=a(e,"P",{"data-svelte-h":!0}),d(yt)!=="svelte-o2i00k"&&(yt.innerHTML=Gd),nr=s(e),o(zt.$$.fragment,e),tr=s(e),vt=a(e,"P",{"data-svelte-h":!0}),d(vt)!=="svelte-wu0giy"&&(vt.innerHTML=Fd),ir=s(e),o(Jt.$$.fragment,e),lr=s(e),jt=a(e,"P",{"data-svelte-h":!0}),d(jt)!=="svelte-gfezuk"&&(jt.innerHTML=Vd),sr=s(e),Ct=a(e,"P",{"data-svelte-h":!0}),d(Ct)!=="svelte-mqbydi"&&(Ct.innerHTML=Qd),rr=s(e),It=a(e,"P",{"data-svelte-h":!0}),d(It)!=="svelte-krfyk7"&&(It.innerHTML=Xd),ar=s(e),Ut=a(e,"P",{"data-svelte-h":!0}),d(Ut)!=="svelte-qfdn6n"&&(Ut.innerHTML=Yd),dr=s(e),St=a(e,"P",{"data-svelte-h":!0}),d(St)!=="svelte-rc5sl0"&&(St.innerHTML=Kd),ur=s(e),_t=a(e,"P",{"data-svelte-h":!0}),d(_t)!=="svelte-4vcp3n"&&(_t.innerHTML=qd),or=s(e),At=a(e,"P",{"data-svelte-h":!0}),d(At)!=="svelte-1bu5gq7"&&(At.innerHTML=Od),hr=s(e),$t=a(e,"P",{"data-svelte-h":!0}),d($t)!=="svelte-1h13ics"&&($t.innerHTML=eu),mr=s(e),Lt=a(e,"P",{"data-svelte-h":!0}),d(Lt)!=="svelte-197tqgk"&&(Lt.innerHTML=nu),pr=s(e),o(xt.$$.fragment,e),fr=s(e),Ht=a(e,"P",{"data-svelte-h":!0}),d(Ht)!=="svelte-aa6cfn"&&(Ht.textContent=tu),Mr=s(e),o(Bt.$$.fragment,e),cr=s(e),Zt=a(e,"P",{"data-svelte-h":!0}),d(Zt)!=="svelte-vqzosi"&&(Zt.textContent=iu),gr=s(e),Wt=a(e,"P",{"data-svelte-h":!0}),d(Wt)!=="svelte-1qfa1oh"&&(Wt.textContent=lu),wr=s(e),Dt=a(e,"P",{"data-svelte-h":!0}),d(Dt)!=="svelte-19q8pt9"&&(Dt.textContent=su),br=s(e),Et=a(e,"P",{"data-svelte-h":!0}),d(Et)!=="svelte-1eycwib"&&(Et.innerHTML=ru),Tr=s(e),Nt=a(e,"P",{"data-svelte-h":!0}),d(Nt)!=="svelte-9co08s"&&(Nt.innerHTML=au),kr=s(e),o(Rt.$$.fragment,e),yr=s(e),Pt=a(e,"P",{"data-svelte-h":!0}),d(Pt)!=="svelte-185ud5h"&&(Pt.innerHTML=du),zr=s(e),Gt=a(e,"P",{"data-svelte-h":!0}),d(Gt)!=="svelte-17azmlk"&&(Gt.innerHTML=uu),vr=s(e),Ft=a(e,"P",{"data-svelte-h":!0}),d(Ft)!=="svelte-ul3mz1"&&(Ft.innerHTML=ou),Jr=s(e),Vt=a(e,"P",{"data-svelte-h":!0}),d(Vt)!=="svelte-1yq44nf"&&(Vt.innerHTML=hu),jr=s(e),Qt=a(e,"P",{"data-svelte-h":!0}),d(Qt)!=="svelte-mcjr88"&&(Qt.textContent=mu),Cr=s(e),o(Xt.$$.fragment,e),Ir=s(e),Yt=a(e,"P",{"data-svelte-h":!0}),d(Yt)!=="svelte-xtrmkj"&&(Yt.textContent=pu),Ur=s(e),Kt=a(e,"P",{"data-svelte-h":!0}),d(Kt)!=="svelte-9wixar"&&(Kt.innerHTML=fu),Sr=s(e),ei=a(e,"P",{}),gu(ei).forEach(t),this.h()},h(){T(c,"name","hf:doc:metadata"),T(c,"content",Su),ku(Ot.src,Gr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/transformers_overview.png")||T(Ot,"src",Gr),T(z,"start","3"),T(v,"start","4"),T(J,"start","5"),T(j,"start","2"),T(C,"start","3"),T(I,"start","4"),T(U,"start","5")},m(e,n){ju(document.head,c),i(e,b,n),i(e,g,n),i(e,k,n),h(_,e,n),i(e,ni,n),i(e,A,n),i(e,ti,n),h(y,e,n),i(e,ii,n),i(e,$,n),i(e,li,n),i(e,L,n),i(e,si,n),i(e,x,n),i(e,ri,n),i(e,H,n),i(e,ai,n),i(e,B,n),i(e,di,n),h(Z,e,n),i(e,ui,n),i(e,W,n),i(e,oi,n),i(e,D,n),i(e,hi,n),i(e,E,n),i(e,mi,n),i(e,N,n),i(e,pi,n),i(e,R,n),i(e,fi,n),h(P,e,n),i(e,Mi,n),i(e,G,n),i(e,ci,n),i(e,F,n),i(e,gi,n),i(e,Ot,n),i(e,wi,n),i(e,V,n),i(e,bi,n),h(Q,e,n),i(e,Ti,n),i(e,X,n),i(e,ki,n),h(Y,e,n),i(e,yi,n),i(e,K,n),i(e,zi,n),i(e,q,n),i(e,vi,n),h(O,e,n),i(e,Ji,n),i(e,ee,n),i(e,ji,n),h(ne,e,n),i(e,Ci,n),i(e,te,n),i(e,Ii,n),i(e,ie,n),i(e,Ui,n),i(e,le,n),i(e,Si,n),i(e,se,n),i(e,_i,n),i(e,re,n),i(e,Ai,n),i(e,ae,n),i(e,$i,n),i(e,de,n),i(e,Li,n),i(e,ue,n),i(e,xi,n),h(oe,e,n),i(e,Hi,n),i(e,he,n),i(e,Bi,n),i(e,me,n),i(e,Zi,n),i(e,pe,n),i(e,Wi,n),h(fe,e,n),i(e,Di,n),i(e,Me,n),i(e,Ei,n),h(ce,e,n),i(e,Ni,n),i(e,z,n),i(e,Ri,n),h(ge,e,n),i(e,Pi,n),i(e,we,n),i(e,Gi,n),h(be,e,n),i(e,Fi,n),i(e,Te,n),i(e,Vi,n),h(ke,e,n),i(e,Qi,n),i(e,v,n),i(e,Xi,n),i(e,ye,n),i(e,Yi,n),i(e,J,n),i(e,Ki,n),h(ze,e,n),i(e,qi,n),i(e,ve,n),i(e,Oi,n),h(Je,e,n),i(e,el,n),i(e,je,n),i(e,nl,n),i(e,Ce,n),i(e,tl,n),i(e,Ie,n),i(e,il,n),i(e,Ue,n),i(e,ll,n),i(e,Se,n),i(e,sl,n),i(e,_e,n),i(e,rl,n),i(e,Ae,n),i(e,al,n),i(e,$e,n),i(e,dl,n),i(e,Le,n),i(e,ul,n),i(e,xe,n),i(e,ol,n),i(e,He,n),i(e,hl,n),h(Be,e,n),i(e,ml,n),i(e,Ze,n),i(e,pl,n),i(e,We,n),i(e,fl,n),i(e,De,n),i(e,Ml,n),i(e,Ee,n),i(e,cl,n),i(e,Ne,n),i(e,gl,n),i(e,Re,n),i(e,wl,n),i(e,Pe,n),i(e,bl,n),i(e,Ge,n),i(e,Tl,n),i(e,Fe,n),i(e,kl,n),i(e,Ve,n),i(e,yl,n),i(e,Qe,n),i(e,zl,n),i(e,Xe,n),i(e,vl,n),h(Ye,e,n),i(e,Jl,n),i(e,Ke,n),i(e,jl,n),i(e,qe,n),i(e,Cl,n),i(e,Oe,n),i(e,Il,n),h(en,e,n),i(e,Ul,n),i(e,nn,n),i(e,Sl,n),h(tn,e,n),i(e,_l,n),i(e,ln,n),i(e,Al,n),i(e,sn,n),i(e,$l,n),i(e,rn,n),i(e,Ll,n),i(e,an,n),i(e,xl,n),i(e,dn,n),i(e,Hl,n),i(e,un,n),i(e,Bl,n),i(e,on,n),i(e,Zl,n),i(e,hn,n),i(e,Wl,n),h(mn,e,n),i(e,Dl,n),i(e,j,n),i(e,El,n),h(pn,e,n),i(e,Nl,n),i(e,C,n),i(e,Rl,n),h(fn,e,n),i(e,Pl,n),i(e,I,n),i(e,Gl,n),h(Mn,e,n),i(e,Fl,n),i(e,U,n),i(e,Vl,n),i(e,cn,n),i(e,Ql,n),h(gn,e,n),i(e,Xl,n),i(e,wn,n),i(e,Yl,n),i(e,bn,n),i(e,Kl,n),i(e,Tn,n),i(e,ql,n),i(e,kn,n),i(e,Ol,n),i(e,yn,n),i(e,es,n),i(e,zn,n),i(e,ns,n),i(e,vn,n),i(e,ts,n),h(Jn,e,n),i(e,is,n),i(e,jn,n),i(e,ls,n),i(e,Cn,n),i(e,ss,n),h(In,e,n),i(e,rs,n),i(e,Un,n),i(e,as,n),h(Sn,e,n),i(e,ds,n),i(e,_n,n),i(e,us,n),i(e,An,n),i(e,os,n),i(e,$n,n),i(e,hs,n),i(e,Ln,n),i(e,ms,n),i(e,xn,n),i(e,ps,n),h(Hn,e,n),i(e,fs,n),i(e,Bn,n),i(e,Ms,n),h(Zn,e,n),i(e,cs,n),i(e,Wn,n),i(e,gs,n),h(Dn,e,n),i(e,ws,n),i(e,En,n),i(e,bs,n),h(Nn,e,n),i(e,Ts,n),i(e,Rn,n),i(e,ks,n),h(Pn,e,n),i(e,ys,n),i(e,Gn,n),i(e,zs,n),h(Fn,e,n),i(e,vs,n),i(e,Vn,n),i(e,Js,n),h(Qn,e,n),i(e,js,n),i(e,Xn,n),i(e,Cs,n),h(Yn,e,n),i(e,Is,n),i(e,Kn,n),i(e,Us,n),i(e,qn,n),i(e,Ss,n),i(e,On,n),i(e,_s,n),i(e,et,n),i(e,As,n),h(nt,e,n),i(e,$s,n),i(e,tt,n),i(e,Ls,n),i(e,it,n),i(e,xs,n),h(lt,e,n),i(e,Hs,n),i(e,st,n),i(e,Bs,n),i(e,rt,n),i(e,Zs,n),i(e,at,n),i(e,Ws,n),i(e,dt,n),i(e,Ds,n),i(e,ut,n),i(e,Es,n),i(e,ot,n),i(e,Ns,n),i(e,ht,n),i(e,Rs,n),h(mt,e,n),i(e,Ps,n),i(e,pt,n),i(e,Gs,n),i(e,ft,n),i(e,Fs,n),i(e,Mt,n),i(e,Vs,n),h(ct,e,n),i(e,Qs,n),h(S,e,n),i(e,Xs,n),i(e,gt,n),i(e,Ys,n),i(e,wt,n),i(e,Ks,n),i(e,bt,n),i(e,qs,n),i(e,Tt,n),i(e,Os,n),i(e,kt,n),i(e,er,n),i(e,yt,n),i(e,nr,n),h(zt,e,n),i(e,tr,n),i(e,vt,n),i(e,ir,n),h(Jt,e,n),i(e,lr,n),i(e,jt,n),i(e,sr,n),i(e,Ct,n),i(e,rr,n),i(e,It,n),i(e,ar,n),i(e,Ut,n),i(e,dr,n),i(e,St,n),i(e,ur,n),i(e,_t,n),i(e,or,n),i(e,At,n),i(e,hr,n),i(e,$t,n),i(e,mr,n),i(e,Lt,n),i(e,pr,n),h(xt,e,n),i(e,fr,n),i(e,Ht,n),i(e,Mr,n),h(Bt,e,n),i(e,cr,n),i(e,Zt,n),i(e,gr,n),i(e,Wt,n),i(e,wr,n),i(e,Dt,n),i(e,br,n),i(e,Et,n),i(e,Tr,n),i(e,Nt,n),i(e,kr,n),h(Rt,e,n),i(e,yr,n),i(e,Pt,n),i(e,zr,n),i(e,Gt,n),i(e,vr,n),i(e,Ft,n),i(e,Jr,n),i(e,Vt,n),i(e,jr,n),i(e,Qt,n),i(e,Cr,n),h(Xt,e,n),i(e,Ir,n),i(e,Yt,n),i(e,Ur,n),i(e,Kt,n),i(e,Sr,n),i(e,ei,n),_r=!0},p(e,[n]){const Mu={};n&2&&(Mu.$$scope={dirty:n,ctx:e}),y.$set(Mu);const cu={};n&2&&(cu.$$scope={dirty:n,ctx:e}),S.$set(cu)},i(e){_r||(m(_.$$.fragment,e),m(y.$$.fragment,e),m(Z.$$.fragment,e),m(P.$$.fragment,e),m(Q.$$.fragment,e),m(Y.$$.fragment,e),m(O.$$.fragment,e),m(ne.$$.fragment,e),m(oe.$$.fragment,e),m(fe.$$.fragment,e),m(ce.$$.fragment,e),m(ge.$$.fragment,e),m(be.$$.fragment,e),m(ke.$$.fragment,e),m(ze.$$.fragment,e),m(Je.$$.fragment,e),m(Be.$$.fragment,e),m(Ye.$$.fragment,e),m(en.$$.fragment,e),m(tn.$$.fragment,e),m(mn.$$.fragment,e),m(pn.$$.fragment,e),m(fn.$$.fragment,e),m(Mn.$$.fragment,e),m(gn.$$.fragment,e),m(Jn.$$.fragment,e),m(In.$$.fragment,e),m(Sn.$$.fragment,e),m(Hn.$$.fragment,e),m(Zn.$$.fragment,e),m(Dn.$$.fragment,e),m(Nn.$$.fragment,e),m(Pn.$$.fragment,e),m(Fn.$$.fragment,e),m(Qn.$$.fragment,e),m(Yn.$$.fragment,e),m(nt.$$.fragment,e),m(lt.$$.fragment,e),m(mt.$$.fragment,e),m(ct.$$.fragment,e),m(S.$$.fragment,e),m(zt.$$.fragment,e),m(Jt.$$.fragment,e),m(xt.$$.fragment,e),m(Bt.$$.fragment,e),m(Rt.$$.fragment,e),m(Xt.$$.fragment,e),_r=!0)},o(e){p(_.$$.fragment,e),p(y.$$.fragment,e),p(Z.$$.fragment,e),p(P.$$.fragment,e),p(Q.$$.fragment,e),p(Y.$$.fragment,e),p(O.$$.fragment,e),p(ne.$$.fragment,e),p(oe.$$.fragment,e),p(fe.$$.fragment,e),p(ce.$$.fragment,e),p(ge.$$.fragment,e),p(be.$$.fragment,e),p(ke.$$.fragment,e),p(ze.$$.fragment,e),p(Je.$$.fragment,e),p(Be.$$.fragment,e),p(Ye.$$.fragment,e),p(en.$$.fragment,e),p(tn.$$.fragment,e),p(mn.$$.fragment,e),p(pn.$$.fragment,e),p(fn.$$.fragment,e),p(Mn.$$.fragment,e),p(gn.$$.fragment,e),p(Jn.$$.fragment,e),p(In.$$.fragment,e),p(Sn.$$.fragment,e),p(Hn.$$.fragment,e),p(Zn.$$.fragment,e),p(Dn.$$.fragment,e),p(Nn.$$.fragment,e),p(Pn.$$.fragment,e),p(Fn.$$.fragment,e),p(Qn.$$.fragment,e),p(Yn.$$.fragment,e),p(nt.$$.fragment,e),p(lt.$$.fragment,e),p(mt.$$.fragment,e),p(ct.$$.fragment,e),p(S.$$.fragment,e),p(zt.$$.fragment,e),p(Jt.$$.fragment,e),p(xt.$$.fragment,e),p(Bt.$$.fragment,e),p(Rt.$$.fragment,e),p(Xt.$$.fragment,e),_r=!1},d(e){e&&(t(b),t(g),t(k),t(ni),t(A),t(ti),t(ii),t($),t(li),t(L),t(si),t(x),t(ri),t(H),t(ai),t(B),t(di),t(ui),t(W),t(oi),t(D),t(hi),t(E),t(mi),t(N),t(pi),t(R),t(fi),t(Mi),t(G),t(ci),t(F),t(gi),t(Ot),t(wi),t(V),t(bi),t(Ti),t(X),t(ki),t(yi),t(K),t(zi),t(q),t(vi),t(Ji),t(ee),t(ji),t(Ci),t(te),t(Ii),t(ie),t(Ui),t(le),t(Si),t(se),t(_i),t(re),t(Ai),t(ae),t($i),t(de),t(Li),t(ue),t(xi),t(Hi),t(he),t(Bi),t(me),t(Zi),t(pe),t(Wi),t(Di),t(Me),t(Ei),t(Ni),t(z),t(Ri),t(Pi),t(we),t(Gi),t(Fi),t(Te),t(Vi),t(Qi),t(v),t(Xi),t(ye),t(Yi),t(J),t(Ki),t(qi),t(ve),t(Oi),t(el),t(je),t(nl),t(Ce),t(tl),t(Ie),t(il),t(Ue),t(ll),t(Se),t(sl),t(_e),t(rl),t(Ae),t(al),t($e),t(dl),t(Le),t(ul),t(xe),t(ol),t(He),t(hl),t(ml),t(Ze),t(pl),t(We),t(fl),t(De),t(Ml),t(Ee),t(cl),t(Ne),t(gl),t(Re),t(wl),t(Pe),t(bl),t(Ge),t(Tl),t(Fe),t(kl),t(Ve),t(yl),t(Qe),t(zl),t(Xe),t(vl),t(Jl),t(Ke),t(jl),t(qe),t(Cl),t(Oe),t(Il),t(Ul),t(nn),t(Sl),t(_l),t(ln),t(Al),t(sn),t($l),t(rn),t(Ll),t(an),t(xl),t(dn),t(Hl),t(un),t(Bl),t(on),t(Zl),t(hn),t(Wl),t(Dl),t(j),t(El),t(Nl),t(C),t(Rl),t(Pl),t(I),t(Gl),t(Fl),t(U),t(Vl),t(cn),t(Ql),t(Xl),t(wn),t(Yl),t(bn),t(Kl),t(Tn),t(ql),t(kn),t(Ol),t(yn),t(es),t(zn),t(ns),t(vn),t(ts),t(is),t(jn),t(ls),t(Cn),t(ss),t(rs),t(Un),t(as),t(ds),t(_n),t(us),t(An),t(os),t($n),t(hs),t(Ln),t(ms),t(xn),t(ps),t(fs),t(Bn),t(Ms),t(cs),t(Wn),t(gs),t(ws),t(En),t(bs),t(Ts),t(Rn),t(ks),t(ys),t(Gn),t(zs),t(vs),t(Vn),t(Js),t(js),t(Xn),t(Cs),t(Is),t(Kn),t(Us),t(qn),t(Ss),t(On),t(_s),t(et),t(As),t($s),t(tt),t(Ls),t(it),t(xs),t(Hs),t(st),t(Bs),t(rt),t(Zs),t(at),t(Ws),t(dt),t(Ds),t(ut),t(Es),t(ot),t(Ns),t(ht),t(Rs),t(Ps),t(pt),t(Gs),t(ft),t(Fs),t(Mt),t(Vs),t(Qs),t(Xs),t(gt),t(Ys),t(wt),t(Ks),t(bt),t(qs),t(Tt),t(Os),t(kt),t(er),t(yt),t(nr),t(tr),t(vt),t(ir),t(lr),t(jt),t(sr),t(Ct),t(rr),t(It),t(ar),t(Ut),t(dr),t(St),t(ur),t(_t),t(or),t(At),t(hr),t($t),t(mr),t(Lt),t(pr),t(fr),t(Ht),t(Mr),t(cr),t(Zt),t(gr),t(Wt),t(wr),t(Dt),t(br),t(Et),t(Tr),t(Nt),t(kr),t(yr),t(Pt),t(zr),t(Gt),t(vr),t(Ft),t(Jr),t(Vt),t(jr),t(Qt),t(Cr),t(Ir),t(Yt),t(Ur),t(Kt),t(Sr),t(ei)),t(c),f(_,e),f(y,e),f(Z,e),f(P,e),f(Q,e),f(Y,e),f(O,e),f(ne,e),f(oe,e),f(fe,e),f(ce,e),f(ge,e),f(be,e),f(ke,e),f(ze,e),f(Je,e),f(Be,e),f(Ye,e),f(en,e),f(tn,e),f(mn,e),f(pn,e),f(fn,e),f(Mn,e),f(gn,e),f(Jn,e),f(In,e),f(Sn,e),f(Hn,e),f(Zn,e),f(Dn,e),f(Nn,e),f(Pn,e),f(Fn,e),f(Qn,e),f(Yn,e),f(nt,e),f(lt,e),f(mt,e),f(ct,e),f(S,e),f(zt,e),f(Jt,e),f(xt,e),f(Bt,e),f(Rt,e),f(Xt,e)}}}const Su='{"title":"Wie kann ich ein Modell zu ü§ó Transformers hinzuf√ºgen?","local":"wie-kann-ich-ein-modell-zu--transformers-hinzuf√ºgen","sections":[{"title":"Allgemeiner √úberblick √ºber ü§ó Transformers","local":"allgemeiner-√ºberblick-√ºber--transformers","sections":[{"title":"√úberblick √ºber die Modelle","local":"√ºberblick-√ºber-die-modelle","sections":[],"depth":3},{"title":"Code-Stil","local":"code-stil","sections":[],"depth":3},{"title":"√úbersicht der Tokenizer","local":"√ºbersicht-der-tokenizer","sections":[],"depth":3}],"depth":2},{"title":"Schritt-f√ºr-Schritt-Rezept zum Hinzuf√ºgen eines Modells zu ü§ó Transformers","local":"schritt-f√ºr-schritt-rezept-zum-hinzuf√ºgen-eines-modells-zu--transformers","sections":[{"title":"1. (Optional) Theoretische Aspekte von BrandNewBert","local":"1-optional-theoretische-aspekte-von-brandnewbert","sections":[],"depth":3},{"title":"2. Bereiten Sie als n√§chstes Ihre Umgebung vor","local":"2-bereiten-sie-als-n√§chstes-ihre-umgebung-vor","sections":[],"depth":3},{"title":"3.-4. F√ºhren Sie einen Pre-Training-Checkpoint mit dem Original-Repository durch","local":"3-4-f√ºhren-sie-einen-pre-training-checkpoint-mit-dem-original-repository-durch","sections":[],"depth":3},{"title":"5.-14. Portierung von BrandNewBert auf ü§ó Transformatoren","local":"5-14-portierung-von-brandnewbert-auf--transformatoren","sections":[],"depth":3},{"title":"Teilen Sie Ihre Arbeit!!","local":"teilen-sie-ihre-arbeit","sections":[],"depth":3}],"depth":2}],"depth":1}';function _u(qt){return yu(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Bu extends zu{constructor(c){super(),vu(this,c,_u,Uu,Tu,{})}}export{Bu as component};
