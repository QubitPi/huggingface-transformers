import{s as xt,f as is,n as F,c as ee,i as ga,u as te,g as se,d as le,o as sn,b as ln,h as ha,t as va}from"../chunks/scheduler.987d3921.js";import{S as St,i as Qt,g as $,h as M,j as q,f as i,k as G,a as c,y as R,B as Vl,d as f,t as h,C as Pn,D as Dn,l as ja,s as d,c as g,p as D,b as O,r as _,u as j,v as w,w as y,m as ba,e as K,n as $a,o as Ma,q as zl,z as _a,A as Ta,x as C}from"../chunks/index.c8b1fed4.js";import{C as W,T as cs}from"../chunks/CodeBlock.a6b7bf84.js";import{g as ka,F as Yt,M as Y}from"../chunks/Markdown.506a0c7c.js";import{e as Gl}from"../chunks/each.e59479a4.js";import{H as P}from"../chunks/Heading.3fa3b67f.js";function Ja(o){let e,n;return{c(){e=$("iframe"),this.h()},l(t){e=M(t,"IFRAME",{class:!0,src:!0,title:!0,frameborder:!0,allow:!0}),q(e).forEach(i),this.h()},h(){G(e,"class","w-full xl:w-4/6 h-80"),is(e.src,n="https://www.youtube-nocookie.com/embed/"+o[0])||G(e,"src",n),G(e,"title","YouTube video player"),G(e,"frameborder","0"),G(e,"allow","accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"),e.allowFullscreen=!0},m(t,s){c(t,e,s)},p(t,[s]){s&1&&!is(e.src,n="https://www.youtube-nocookie.com/embed/"+t[0])&&G(e,"src",n)},i:F,o:F,d(t){t&&i(e)}}}function Ua(o,e,n){let{id:t}=e;return o.$$set=s=>{"id"in s&&n(0,t=s.id)},[t]}class On extends St{constructor(e){super(),Qt(this,e,Ua,Ja,xt,{id:0})}}function Ca(o){let e,n,t,s,r,a;const m=o[7].default,p=ee(m,o,o[6],null);return{c(){e=$("div"),n=$("ul"),p&&p.c(),this.h()},l(T){e=M(T,"DIV",{class:!0});var V=q(e);n=M(V,"UL",{class:!0});var v=q(n);p&&p.l(v),v.forEach(i),V.forEach(i),this.h()},h(){G(n,"class","min-w-full w-auto"),G(e,"class",t="absolute top-full mt-1 min-w-full w-auto bg-white rounded-xl overflow-hidden shadow-lg z-10 border border-gray-100 "+(o[2]==="right"?"right-0":"left-0")+" "+o[0])},m(T,V){c(T,e,V),R(e,n),p&&p.m(n,null),o[8](e),s=!0,r||(a=Vl(e,"click",function(){ga(o[1])&&o[1].apply(this,arguments)}),r=!0)},p(T,[V]){o=T,p&&p.p&&(!s||V&64)&&te(p,m,o,o[6],s?le(m,o[6],V,null):se(o[6]),null),(!s||V&5&&t!==(t="absolute top-full mt-1 min-w-full w-auto bg-white rounded-xl overflow-hidden shadow-lg z-10 border border-gray-100 "+(o[2]==="right"?"right-0":"left-0")+" "+o[0]))&&G(e,"class",t)},i(T){s||(f(p,T),s=!0)},o(T){h(p,T),s=!1},d(T){T&&i(e),p&&p.d(T),o[8](null),r=!1,a()}}}function Za(o,e,n){let{$$slots:t={},$$scope:s}=e,{classNames:r=""}=e,{dropdownElement:a=void 0}=e,{forceAlignement:m=void 0}=e,{onClose:p}=e,T=m??"left",V;sn(()=>{if(document.addEventListener("click",v),!m){const z=document.documentElement.clientWidth,k=V==null?void 0:V.getBoundingClientRect(),U=(k==null?void 0:k.left)??0,I=(k==null?void 0:k.width)??0;n(2,T=U+I>z?"right":"left")}return()=>{document.removeEventListener("click",v)}});function v(z){const k=z.target;k!==a&&!(a!=null&&a.contains(k))&&p()}function Z(z){ln[z?"unshift":"push"](()=>{V=z,n(3,V)})}return o.$$set=z=>{"classNames"in z&&n(0,r=z.classNames),"dropdownElement"in z&&n(4,a=z.dropdownElement),"forceAlignement"in z&&n(5,m=z.forceAlignement),"onClose"in z&&n(1,p=z.onClose),"$$scope"in z&&n(6,s=z.$$scope)},[r,p,T,V,a,m,s,t,Z]}class za extends St{constructor(e){super(),Qt(this,e,Za,Ca,xt,{classNames:0,dropdownElement:4,forceAlignement:5,onClose:1})}}function Ga(o){let e,n;return{c(){e=Pn("svg"),n=Pn("path"),this.h()},l(t){e=Dn(t,"svg",{class:!0,xmlns:!0,"xmlns:xlink":!0,"aria-hidden":!0,focusable:!0,role:!0,width:!0,height:!0,preserveAspectRatio:!0,viewBox:!0,style:!0});var s=q(e);n=Dn(s,"path",{d:!0,fill:!0}),q(n).forEach(i),s.forEach(i),this.h()},h(){G(n,"d","M7 10l5 5l5-5z"),G(n,"fill","currentColor"),G(e,"class",o[0]),G(e,"xmlns","http://www.w3.org/2000/svg"),G(e,"xmlns:xlink","http://www.w3.org/1999/xlink"),G(e,"aria-hidden","true"),G(e,"focusable","false"),G(e,"role","img"),G(e,"width","1em"),G(e,"height","1em"),G(e,"preserveAspectRatio","xMidYMid meet"),G(e,"viewBox","0 0 24 24"),ja(e,"transform","rotate(360deg)")},m(t,s){c(t,e,s),R(e,n)},p(t,[s]){s&1&&G(e,"class",t[0])},i:F,o:F,d(t){t&&i(e)}}}function Va(o,e,n){let{classNames:t=""}=e;return o.$$set=s=>{"classNames"in s&&n(0,t=s.classNames)},[t]}class Ra extends St{constructor(e){super(),Qt(this,e,Va,Ga,xt,{classNames:0})}}const Ia=o=>({}),Kn=o=>({}),Wa=o=>({}),ea=o=>({});function Ha(o){let e,n,t,s,r,a=o[2]&&ta(o),m=o[9]&&sa();return{c(){a&&a.c(),e=d(),n=ba(o[4]),t=d(),m&&m.c(),s=K()},l(p){a&&a.l(p),e=g(p),n=$a(p,o[4]),t=g(p),m&&m.l(p),s=K()},m(p,T){a&&a.m(p,T),c(p,e,T),c(p,n,T),c(p,t,T),m&&m.m(p,T),c(p,s,T),r=!0},p(p,T){p[2]?a?(a.p(p,T),T&4&&f(a,1)):(a=ta(p),a.c(),f(a,1),a.m(e.parentNode,e)):a&&(D(),h(a,1,1,()=>{a=null}),O()),(!r||T&16)&&Ma(n,p[4]),p[9]?m?T&512&&f(m,1):(m=sa(),m.c(),f(m,1),m.m(s.parentNode,s)):m&&(D(),h(m,1,1,()=>{m=null}),O())},i(p){r||(f(a),f(m),r=!0)},o(p){h(a),h(m),r=!1},d(p){p&&(i(e),i(n),i(t),i(s)),a&&a.d(p),m&&m.d(p)}}}function Na(o){let e;const n=o[14].button,t=ee(n,o,o[18],ea);return{c(){t&&t.c()},l(s){t&&t.l(s)},m(s,r){t&&t.m(s,r),e=!0},p(s,r){t&&t.p&&(!e||r&262144)&&te(t,n,s,s[18],e?le(n,s[18],r,Wa):se(s[18]),ea)},i(s){e||(f(t,s),e=!0)},o(s){h(t,s),e=!1},d(s){t&&t.d(s)}}}function ta(o){let e,n,t;var s=o[2];function r(a,m){return{props:{classNames:"mr-1.5 "+a[3]}}}return s&&(e=zl(s,r(o))),{c(){e&&_(e.$$.fragment),n=K()},l(a){e&&j(e.$$.fragment,a),n=K()},m(a,m){e&&w(e,a,m),c(a,n,m),t=!0},p(a,m){if(m&4&&s!==(s=a[2])){if(e){D();const p=e;h(p.$$.fragment,1,0,()=>{y(p,1)}),O()}s?(e=zl(s,r(a)),_(e.$$.fragment),f(e.$$.fragment,1),w(e,n.parentNode,n)):e=null}else if(s){const p={};m&8&&(p.classNames="mr-1.5 "+a[3]),e.$set(p)}},i(a){t||(e&&f(e.$$.fragment,a),t=!0)},o(a){e&&h(e.$$.fragment,a),t=!1},d(a){a&&i(n),e&&y(e,a)}}}function sa(o){let e,n;return e=new Ra({props:{classNames:"-mr-1 text-gray-500"}}),{c(){_(e.$$.fragment)},l(t){j(e.$$.fragment,t)},m(t,s){w(e,t,s),n=!0},i(t){n||(f(e.$$.fragment,t),n=!0)},o(t){h(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function la(o){let e,n;return e=new za({props:{classNames:o[6]+" "+(o[8]?"v2-dropdown-menu hidden":""),dropdownElement:o[10],forceAlignement:o[5],onClose:o[16],$$slots:{default:[Xa]},$$scope:{ctx:o}}}),{c(){_(e.$$.fragment)},l(t){j(e.$$.fragment,t)},m(t,s){w(e,t,s),n=!0},p(t,s){const r={};s&320&&(r.classNames=t[6]+" "+(t[8]?"v2-dropdown-menu hidden":"")),s&1024&&(r.dropdownElement=t[10]),s&32&&(r.forceAlignement=t[5]),s&2048&&(r.onClose=t[16]),s&262144&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(f(e.$$.fragment,t),n=!0)},o(t){h(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function Xa(o){let e;const n=o[14].menu,t=ee(n,o,o[18],Kn);return{c(){t&&t.c()},l(s){t&&t.l(s)},m(s,r){t&&t.m(s,r),e=!0},p(s,r){t&&t.p&&(!e||r&262144)&&te(t,n,s,s[18],e?le(n,s[18],r,Ia):se(s[18]),Kn)},i(s){e||(f(t,s),e=!0)},o(s){h(t,s),e=!1},d(s){t&&t.d(s)}}}function Fa(o){let e,n,t,s,r,a,m,p,T,V;const v=[Na,Ha],Z=[];function z(U,I){return U[12].button?0:1}t=z(o),s=Z[t]=v[t](o);let k=(o[11]||o[8])&&la(o);return{c(){e=$("div"),n=$("button"),s.c(),a=d(),k&&k.c(),this.h()},l(U){e=M(U,"DIV",{class:!0});var I=q(e);n=M(I,"BUTTON",{class:!0,type:!0});var N=q(n);s.l(N),N.forEach(i),a=g(I),k&&k.l(I),I.forEach(i),this.h()},h(){G(n,"class",r=""+o[1]+" "+(o[7]?"":"cursor-pointer w-full btn text-sm")+" "+(o[8]?"v2-dropdown-button":"")),G(n,"type","button"),G(e,"class",m="relative "+o[0]+" "+(o[8]?"v2-dropdown":""))},m(U,I){c(U,e,I),R(e,n),Z[t].m(n,null),R(e,a),k&&k.m(e,null),o[17](e),p=!0,T||(V=Vl(n,"click",o[15]),T=!0)},p(U,[I]){let N=t;t=z(U),t===N?Z[t].p(U,I):(D(),h(Z[N],1,1,()=>{Z[N]=null}),O(),s=Z[t],s?s.p(U,I):(s=Z[t]=v[t](U),s.c()),f(s,1),s.m(n,null)),(!p||I&386&&r!==(r=""+U[1]+" "+(U[7]?"":"cursor-pointer w-full btn text-sm")+" "+(U[8]?"v2-dropdown-button":"")))&&G(n,"class",r),U[11]||U[8]?k?(k.p(U,I),I&2304&&f(k,1)):(k=la(U),k.c(),f(k,1),k.m(e,null)):k&&(D(),h(k,1,1,()=>{k=null}),O()),(!p||I&257&&m!==(m="relative "+U[0]+" "+(U[8]?"v2-dropdown":"")))&&G(e,"class",m)},i(U){p||(f(s),f(k),p=!0)},o(U){h(s),h(k),p=!1},d(U){U&&i(e),Z[t].d(),k&&k.d(),o[17](null),T=!1,V()}}}function qa(o,e,n){let{$$slots:t={},$$scope:s}=e;const r=ha(t);let{classNames:a=""}=e,{btnClassNames:m=""}=e,{btnIcon:p=void 0}=e,{btnIconClassNames:T=""}=e,{btnLabel:V=""}=e,{forceMenuAlignement:v=void 0}=e,{menuClassNames:Z=""}=e,{noBtnClass:z=void 0}=e,{selectedValue:k=void 0}=e,{useDeprecatedJS:U=!0}=e,{withBtnCaret:I=!1}=e,N,b=!1;const J=()=>n(11,b=!b),H=()=>n(11,b=!1);function E(X){ln[X?"unshift":"push"](()=>{N=X,n(10,N)})}return o.$$set=X=>{"classNames"in X&&n(0,a=X.classNames),"btnClassNames"in X&&n(1,m=X.btnClassNames),"btnIcon"in X&&n(2,p=X.btnIcon),"btnIconClassNames"in X&&n(3,T=X.btnIconClassNames),"btnLabel"in X&&n(4,V=X.btnLabel),"forceMenuAlignement"in X&&n(5,v=X.forceMenuAlignement),"menuClassNames"in X&&n(6,Z=X.menuClassNames),"noBtnClass"in X&&n(7,z=X.noBtnClass),"selectedValue"in X&&n(13,k=X.selectedValue),"useDeprecatedJS"in X&&n(8,U=X.useDeprecatedJS),"withBtnCaret"in X&&n(9,I=X.withBtnCaret),"$$scope"in X&&n(18,s=X.$$scope)},[a,m,p,T,V,v,Z,z,U,I,N,b,r,k,t,J,H,E,s]}class wa extends St{constructor(e){super(),Qt(this,e,qa,Fa,xt,{classNames:0,btnClassNames:1,btnIcon:2,btnIconClassNames:3,btnLabel:4,forceMenuAlignement:5,menuClassNames:6,noBtnClass:7,selectedValue:13,useDeprecatedJS:8,withBtnCaret:9})}}function Ea(o){let e,n,t,s=o[5]&&na(o);return{c(){s&&s.c(),e=d(),n=ba(o[7])},l(r){s&&s.l(r),e=g(r),n=$a(r,o[7])},m(r,a){s&&s.m(r,a),c(r,e,a),c(r,n,a),t=!0},p(r,a){r[5]?s?(s.p(r,a),a&32&&f(s,1)):(s=na(r),s.c(),f(s,1),s.m(e.parentNode,e)):s&&(D(),h(s,1,1,()=>{s=null}),O()),(!t||a&128)&&Ma(n,r[7])},i(r){t||(f(s),t=!0)},o(r){h(s),t=!1},d(r){r&&(i(e),i(n)),s&&s.d(r)}}}function Ba(o){let e;const n=o[15].default,t=ee(n,o,o[14],null);return{c(){t&&t.c()},l(s){t&&t.l(s)},m(s,r){t&&t.m(s,r),e=!0},p(s,r){t&&t.p&&(!e||r&16384)&&te(t,n,s,s[14],e?le(n,s[14],r,null):se(s[14]),null)},i(s){e||(f(t,s),e=!0)},o(s){h(t,s),e=!1},d(s){t&&t.d(s)}}}function na(o){let e,n,t;var s=o[5];function r(a,m){return{props:{classNames:"mr-1.5 "+a[6]}}}return s&&(e=zl(s,r(o))),{c(){e&&_(e.$$.fragment),n=K()},l(a){e&&j(e.$$.fragment,a),n=K()},m(a,m){e&&w(e,a,m),c(a,n,m),t=!0},p(a,m){if(m&32&&s!==(s=a[5])){if(e){D();const p=e;h(p.$$.fragment,1,0,()=>{y(p,1)}),O()}s?(e=zl(s,r(a)),_(e.$$.fragment),f(e.$$.fragment,1),w(e,n.parentNode,n)):e=null}else if(s){const p={};m&64&&(p.classNames="mr-1.5 "+a[6]),e.$set(p)}},i(a){t||(e&&f(e.$$.fragment,a),t=!0)},o(a){e&&h(e.$$.fragment,a),t=!1},d(a){a&&i(n),e&&y(e,a)}}}function La(o){let e,n,t,s,r,a,m,p,T,V;const v=[Ba,Ea],Z=[];function z(k,U){return k[13].default?0:1}return t=z(o),s=Z[t]=v[t](o),{c(){e=$("li"),n=$("a"),s.c(),this.h()},l(k){e=M(k,"LI",{class:!0});var U=q(e);n=M(U,"A",{class:!0,"data-label":!0,"data-url":!0,"data-value":!0,href:!0,rel:!0,target:!0});var I=q(n);s.l(I),I.forEach(i),U.forEach(i),this.h()},h(){G(n,"class",r="flex items-center hover:bg-gray-50 dark:hover:bg-gray-800 cursor-pointer px-3 py-1.5 whitespace-nowrap "+o[0]+" "+(o[9]?"hover:underline":"")+" "+(o[12]?"v2-dropdown-entry":"")),G(n,"data-label",o[1]),G(n,"data-url",o[2]),G(n,"data-value",o[3]),G(n,"href",o[4]),G(n,"rel",a=o[8]?"nofollow":void 0),G(n,"target",m=o[11]?"_blank":void 0),G(e,"class","not-prose")},m(k,U){c(k,e,U),R(e,n),Z[t].m(n,null),p=!0,T||(V=Vl(n,"click",function(){ga(o[10])&&o[10].apply(this,arguments)}),T=!0)},p(k,[U]){o=k;let I=t;t=z(o),t===I?Z[t].p(o,U):(D(),h(Z[I],1,1,()=>{Z[I]=null}),O(),s=Z[t],s?s.p(o,U):(s=Z[t]=v[t](o),s.c()),f(s,1),s.m(n,null)),(!p||U&4609&&r!==(r="flex items-center hover:bg-gray-50 dark:hover:bg-gray-800 cursor-pointer px-3 py-1.5 whitespace-nowrap "+o[0]+" "+(o[9]?"hover:underline":"")+" "+(o[12]?"v2-dropdown-entry":"")))&&G(n,"class",r),(!p||U&2)&&G(n,"data-label",o[1]),(!p||U&4)&&G(n,"data-url",o[2]),(!p||U&8)&&G(n,"data-value",o[3]),(!p||U&16)&&G(n,"href",o[4]),(!p||U&256&&a!==(a=o[8]?"nofollow":void 0))&&G(n,"rel",a),(!p||U&2048&&m!==(m=o[11]?"_blank":void 0))&&G(n,"target",m)},i(k){p||(f(s),p=!0)},o(k){h(s),p=!1},d(k){k&&i(e),Z[t].d(),T=!1,V()}}}function Aa(o,e,n){let{$$slots:t={},$$scope:s}=e;const r=ha(t);let{classNames:a=""}=e,{dataLabel:m=void 0}=e,{dataUrl:p=void 0}=e,{dataValue:T=void 0}=e,{href:V=void 0}=e,{icon:v=void 0}=e,{iconClassNames:Z=""}=e,{label:z=""}=e,{noFollow:k=!1}=e,{underline:U=!1}=e,{onClick:I=()=>{}}=e,{targetBlank:N=!1}=e,{useDeprecatedJS:b=!0}=e;return o.$$set=J=>{"classNames"in J&&n(0,a=J.classNames),"dataLabel"in J&&n(1,m=J.dataLabel),"dataUrl"in J&&n(2,p=J.dataUrl),"dataValue"in J&&n(3,T=J.dataValue),"href"in J&&n(4,V=J.href),"icon"in J&&n(5,v=J.icon),"iconClassNames"in J&&n(6,Z=J.iconClassNames),"label"in J&&n(7,z=J.label),"noFollow"in J&&n(8,k=J.noFollow),"underline"in J&&n(9,U=J.underline),"onClick"in J&&n(10,I=J.onClick),"targetBlank"in J&&n(11,N=J.targetBlank),"useDeprecatedJS"in J&&n(12,b=J.useDeprecatedJS),"$$scope"in J&&n(14,s=J.$$scope)},[a,m,p,T,V,v,Z,z,k,U,I,N,b,r,s,t]}class ya extends St{constructor(e){super(),Qt(this,e,Aa,La,xt,{classNames:0,dataLabel:1,dataUrl:2,dataValue:3,href:4,icon:5,iconClassNames:6,label:7,noFollow:8,underline:9,onClick:10,targetBlank:11,useDeprecatedJS:12})}}const{window:Ya}=ka,xa=o=>({}),aa=o=>({slot:"button"});function ra(o,e,n){const t=o.slice();return t[11]=e[n].label,t[12]=e[n].value,t}const Sa=o=>({}),oa=o=>({slot:"menu"}),Qa=o=>({}),ia=o=>({slot:"button"});function ua(o,e,n){const t=o.slice();return t[11]=e[n].label,t[12]=e[n].value,t}const Pa=o=>({}),ca=o=>({slot:"menu"}),Da=o=>({}),pa=o=>({});function Oa(o){let e,n;return e=new wa({props:{btnLabel:"",classNames:"colab-dropdown",noBtnClass:!0,useDeprecatedJS:!1,$$slots:{menu:[lr],button:[tr]},$$scope:{ctx:o}}}),{c(){_(e.$$.fragment)},l(t){j(e.$$.fragment,t)},m(t,s){w(e,t,s),n=!0},p(t,s){const r={};s&1024&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(f(e.$$.fragment,t),n=!0)},o(t){h(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function Ka(o){let e,n,t;return{c(){e=$("a"),n=$("img"),this.h()},l(s){e=M(s,"A",{href:!0,target:!0});var r=q(e);n=M(r,"IMG",{alt:!0,class:!0,src:!0}),r.forEach(i),this.h()},h(){G(n,"alt","Open In Colab"),G(n,"class","!m-0"),is(n.src,t="https://colab.research.google.com/assets/colab-badge.svg")||G(n,"src",t),G(e,"href",o[2][0].value),G(e,"target","_blank")},m(s,r){c(s,e,r),R(e,n)},p:F,i:F,o:F,d(s){s&&i(e)}}}function er(o){let e,n;return{c(){e=$("img"),this.h()},l(t){e=M(t,"IMG",{alt:!0,class:!0,src:!0}),this.h()},h(){G(e,"alt","Open In Colab"),G(e,"class","!m-0"),is(e.src,n="https://colab.research.google.com/assets/colab-badge.svg")||G(e,"src",n)},m(t,s){c(t,e,s)},p:F,d(t){t&&i(e)}}}function tr(o){let e;const n=o[6].default,t=ee(n,o,o[10],ia),s=t||er();return{c(){s&&s.c()},l(r){s&&s.l(r)},m(r,a){s&&s.m(r,a),e=!0},p(r,a){t&&t.p&&(!e||a&1024)&&te(t,n,r,r[10],e?le(n,r[10],a,Qa):se(r[10]),ia)},i(r){e||(f(s,r),e=!0)},o(r){h(s,r),e=!1},d(r){s&&s.d(r)}}}function ma(o){let e,n;function t(){return o[7](o[12])}return e=new ya({props:{classNames:"text-sm !no-underline",iconClassNames:"text-gray-500",label:o[11],onClick:t,useDeprecatedJS:!1}}),{c(){_(e.$$.fragment)},l(s){j(e.$$.fragment,s)},m(s,r){w(e,s,r),n=!0},p(s,r){o=s},i(s){n||(f(e.$$.fragment,s),n=!0)},o(s){h(e.$$.fragment,s),n=!1},d(s){y(e,s)}}}function sr(o){let e,n,t=Gl(o[2]),s=[];for(let a=0;a<t.length;a+=1)s[a]=ma(ua(o,t,a));const r=a=>h(s[a],1,1,()=>{s[a]=null});return{c(){for(let a=0;a<s.length;a+=1)s[a].c();e=K()},l(a){for(let m=0;m<s.length;m+=1)s[m].l(a);e=K()},m(a,m){for(let p=0;p<s.length;p+=1)s[p]&&s[p].m(a,m);c(a,e,m),n=!0},p(a,m){if(m&4){t=Gl(a[2]);let p;for(p=0;p<t.length;p+=1){const T=ua(a,t,p);s[p]?(s[p].p(T,m),f(s[p],1)):(s[p]=ma(T),s[p].c(),f(s[p],1),s[p].m(e.parentNode,e))}for(D(),p=t.length;p<s.length;p+=1)r(p);O()}},i(a){if(!n){for(let m=0;m<t.length;m+=1)f(s[m]);n=!0}},o(a){s=s.filter(Boolean);for(let m=0;m<s.length;m+=1)h(s[m]);n=!1},d(a){a&&i(e),_a(s,a)}}}function lr(o){let e;const n=o[6].default,t=ee(n,o,o[10],ca),s=t||sr(o);return{c(){s&&s.c()},l(r){s&&s.l(r)},m(r,a){s&&s.m(r,a),e=!0},p(r,a){t&&t.p&&(!e||a&1024)&&te(t,n,r,r[10],e?le(n,r[10],a,Pa):se(r[10]),ca)},i(r){e||(f(s,r),e=!0)},o(r){h(s,r),e=!1},d(r){s&&s.d(r)}}}function nr(o){let e,n;return e=new wa({props:{btnLabel:"",classNames:"colab-dropdown",noBtnClass:!0,useDeprecatedJS:!1,$$slots:{menu:[ur],button:[or]},$$scope:{ctx:o}}}),{c(){_(e.$$.fragment)},l(t){j(e.$$.fragment,t)},m(t,s){w(e,t,s),n=!0},p(t,s){const r={};s&1024&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(f(e.$$.fragment,t),n=!0)},o(t){h(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function ar(o){let e,n,t;return{c(){e=$("a"),n=$("img"),this.h()},l(s){e=M(s,"A",{href:!0,target:!0});var r=q(e);n=M(r,"IMG",{alt:!0,class:!0,src:!0}),r.forEach(i),this.h()},h(){G(n,"alt","Open In Studio Lab"),G(n,"class","!m-0"),is(n.src,t="https://studiolab.sagemaker.aws/studiolab.svg")||G(n,"src",t),G(e,"href",o[3][0].value),G(e,"target","_blank")},m(s,r){c(s,e,r),R(e,n)},p:F,i:F,o:F,d(s){s&&i(e)}}}function rr(o){let e,n;return{c(){e=$("img"),this.h()},l(t){e=M(t,"IMG",{alt:!0,class:!0,src:!0}),this.h()},h(){G(e,"alt","Open In Studio Lab"),G(e,"class","!m-0"),is(e.src,n="https://studiolab.sagemaker.aws/studiolab.svg")||G(e,"src",n)},m(t,s){c(t,e,s)},p:F,d(t){t&&i(e)}}}function or(o){let e;const n=o[6].default,t=ee(n,o,o[10],aa),s=t||rr();return{c(){s&&s.c()},l(r){s&&s.l(r)},m(r,a){s&&s.m(r,a),e=!0},p(r,a){t&&t.p&&(!e||a&1024)&&te(t,n,r,r[10],e?le(n,r[10],a,xa):se(r[10]),aa)},i(r){e||(f(s,r),e=!0)},o(r){h(s,r),e=!1},d(r){s&&s.d(r)}}}function fa(o){let e,n;function t(){return o[8](o[12])}return e=new ya({props:{classNames:"text-sm !no-underline",iconClassNames:"text-gray-500",label:o[11],onClick:t,useDeprecatedJS:!1}}),{c(){_(e.$$.fragment)},l(s){j(e.$$.fragment,s)},m(s,r){w(e,s,r),n=!0},p(s,r){o=s},i(s){n||(f(e.$$.fragment,s),n=!0)},o(s){h(e.$$.fragment,s),n=!1},d(s){y(e,s)}}}function ir(o){let e,n,t=Gl(o[3]),s=[];for(let a=0;a<t.length;a+=1)s[a]=fa(ra(o,t,a));const r=a=>h(s[a],1,1,()=>{s[a]=null});return{c(){for(let a=0;a<s.length;a+=1)s[a].c();e=K()},l(a){for(let m=0;m<s.length;m+=1)s[m].l(a);e=K()},m(a,m){for(let p=0;p<s.length;p+=1)s[p]&&s[p].m(a,m);c(a,e,m),n=!0},p(a,m){if(m&8){t=Gl(a[3]);let p;for(p=0;p<t.length;p+=1){const T=ra(a,t,p);s[p]?(s[p].p(T,m),f(s[p],1)):(s[p]=fa(T),s[p].c(),f(s[p],1),s[p].m(e.parentNode,e))}for(D(),p=t.length;p<s.length;p+=1)r(p);O()}},i(a){if(!n){for(let m=0;m<t.length;m+=1)f(s[m]);n=!0}},o(a){s=s.filter(Boolean);for(let m=0;m<s.length;m+=1)h(s[m]);n=!1},d(a){a&&i(e),_a(s,a)}}}function ur(o){let e;const n=o[6].default,t=ee(n,o,o[10],oa),s=t||ir(o);return{c(){s&&s.c()},l(r){s&&s.l(r)},m(r,a){s&&s.m(r,a),e=!0},p(r,a){t&&t.p&&(!e||a&1024)&&te(t,n,r,r[10],e?le(n,r[10],a,Sa):se(r[10]),oa)},i(r){e||(f(s,r),e=!0)},o(r){h(s,r),e=!1},d(r){s&&s.d(r)}}}function cr(o){let e,n,t,s,r,a,m,p,T,V,v;const Z=o[6].alwaysVisible,z=ee(Z,o,o[10],pa),k=[Ka,Oa],U=[];function I(H,E){return H[2].length===1?0:H[2].length>1?1:-1}~(t=I(o))&&(s=U[t]=k[t](o));const N=[ar,nr],b=[];function J(H,E){return H[3].length===1?0:H[3].length>1?1:-1}return~(a=J(o))&&(m=b[a]=N[a](o)),{c(){e=$("div"),z&&z.c(),n=d(),s&&s.c(),r=d(),m&&m.c(),this.h()},l(H){e=M(H,"DIV",{class:!0});var E=q(e);z&&z.l(E),n=g(E),s&&s.l(E),r=g(E),m&&m.l(E),E.forEach(i),this.h()},h(){G(e,"class",p="flex space-x-1 "+o[0])},m(H,E){c(H,e,E),z&&z.m(e,null),R(e,n),~t&&U[t].m(e,null),R(e,r),~a&&b[a].m(e,null),o[9](e),T=!0,V||(v=Vl(Ya,"resize",o[4]),V=!0)},p(H,[E]){z&&z.p&&(!T||E&1024)&&te(z,Z,H,H[10],T?le(Z,H[10],E,Da):se(H[10]),pa),s&&s.p(H,E),m&&m.p(H,E),(!T||E&1&&p!==(p="flex space-x-1 "+H[0]))&&G(e,"class",p)},i(H){T||(f(z,H),f(s),f(m),T=!0)},o(H){h(z,H),h(s),h(m),T=!1},d(H){H&&i(e),z&&z.d(H),~t&&U[t].d(),~a&&b[a].d(),o[9](null),V=!1,v()}}}function da(o){window.open(o)}function pr(o,e,n){let{$$slots:t={},$$scope:s}=e,{options:r=[]}=e,{classNames:a=""}=e,m;const p=r.filter(k=>k.value.includes("colab.research.google.com")),T=r.filter(k=>k.value.includes("studiolab.sagemaker.aws"));function V(){const k=document.querySelector(".prose-doc h1"),U=document.querySelector(".prose-doc h1 > span");if(k&&U){const{width:I}=k.getBoundingClientRect(),{width:N}=U.getBoundingClientRect();let b=0;for(let H=0;H<m.children.length;H++){const E=m.children.item(H);E&&(b+=E.clientWidth)}const J=20;I-N<b+J?m.classList.remove("absolute"):m.classList.add("absolute")}}sn(()=>{(async()=>(await va(),V()))()});const v=k=>da(k),Z=k=>da(k);function z(k){ln[k?"unshift":"push"](()=>{m=k,n(1,m)})}return o.$$set=k=>{"options"in k&&n(5,r=k.options),"classNames"in k&&n(0,a=k.classNames),"$$scope"in k&&n(10,s=k.$$scope)},[a,m,p,T,V,r,t,v,Z,z,s]}class mr extends St{constructor(e){super(),Qt(this,e,pr,cr,xt,{options:5,classNames:0})}}function fr(o){let e,n;return e=new W({props:{code:"cGlwJTIwaW5zdGFsbCUyMHRvcmNo",highlighted:"pip install torch",wrap:!1}}),{c(){_(e.$$.fragment)},l(t){j(e.$$.fragment,t)},m(t,s){w(e,t,s),n=!0},p:F,i(t){n||(f(e.$$.fragment,t),n=!0)},o(t){h(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function dr(o){let e,n;return e=new Y({props:{$$slots:{default:[fr]},$$scope:{ctx:o}}}),{c(){_(e.$$.fragment)},l(t){j(e.$$.fragment,t)},m(t,s){w(e,t,s),n=!0},p(t,s){const r={};s&2&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(f(e.$$.fragment,t),n=!0)},o(t){h(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function gr(o){let e,n;return e=new W({props:{code:"cGlwJTIwaW5zdGFsbCUyMHRlbnNvcmZsb3c=",highlighted:"pip install tensorflow",wrap:!1}}),{c(){_(e.$$.fragment)},l(t){j(e.$$.fragment,t)},m(t,s){w(e,t,s),n=!0},p:F,i(t){n||(f(e.$$.fragment,t),n=!0)},o(t){h(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function hr(o){let e,n;return e=new Y({props:{$$slots:{default:[gr]},$$scope:{ctx:o}}}),{c(){_(e.$$.fragment)},l(t){j(e.$$.fragment,t)},m(t,s){w(e,t,s),n=!0},p(t,s){const r={};s&2&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(f(e.$$.fragment,t),n=!0)},o(t){h(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function br(o){let e,n="Utilisez <code>AutoModelForSequenceClassification</code> et <code>AutoTokenizer</code> pour charger le modèle pré-entraîné et le tokenizer adapté (plus de détails sur une <code>AutoClass</code> dans la section suivante) :",t,s,r;return s=new W({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMEF1dG9Ub2tlbml6ZXIlMkMlMjBBdXRvTW9kZWxGb3JTZXF1ZW5jZUNsYXNzaWZpY2F0aW9uJTBBJTBBbW9kZWwlMjAlM0QlMjBBdXRvTW9kZWxGb3JTZXF1ZW5jZUNsYXNzaWZpY2F0aW9uLmZyb21fcHJldHJhaW5lZChtb2RlbF9uYW1lKSUwQXRva2VuaXplciUyMCUzRCUyMEF1dG9Ub2tlbml6ZXIuZnJvbV9wcmV0cmFpbmVkKG1vZGVsX25hbWUp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoTokenizer, AutoModelForSequenceClassification

<span class="hljs-meta">&gt;&gt;&gt; </span>model = AutoModelForSequenceClassification.from_pretrained(model_name)
<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer = AutoTokenizer.from_pretrained(model_name)`,wrap:!1}}),{c(){e=$("p"),e.innerHTML=n,t=d(),_(s.$$.fragment)},l(a){e=M(a,"P",{"data-svelte-h":!0}),C(e)!=="svelte-grhx8"&&(e.innerHTML=n),t=g(a),j(s.$$.fragment,a)},m(a,m){c(a,e,m),c(a,t,m),w(s,a,m),r=!0},p:F,i(a){r||(f(s.$$.fragment,a),r=!0)},o(a){h(s.$$.fragment,a),r=!1},d(a){a&&(i(e),i(t)),y(s,a)}}}function $r(o){let e,n;return e=new Y({props:{$$slots:{default:[br]},$$scope:{ctx:o}}}),{c(){_(e.$$.fragment)},l(t){j(e.$$.fragment,t)},m(t,s){w(e,t,s),n=!0},p(t,s){const r={};s&2&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(f(e.$$.fragment,t),n=!0)},o(t){h(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function Mr(o){let e,n="Utilisez <code>TFAutoModelForSequenceClassification</code> et <code>AutoTokenizer</code> pour charger le modèle pré-entraîné et le tokenizer adapté (plus de détails sur une <code>TFAutoClass</code> dans la section suivante) :",t,s,r;return s=new W({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMEF1dG9Ub2tlbml6ZXIlMkMlMjBURkF1dG9Nb2RlbEZvclNlcXVlbmNlQ2xhc3NpZmljYXRpb24lMEElMEFtb2RlbCUyMCUzRCUyMFRGQXV0b01vZGVsRm9yU2VxdWVuY2VDbGFzc2lmaWNhdGlvbi5mcm9tX3ByZXRyYWluZWQobW9kZWxfbmFtZSklMEF0b2tlbml6ZXIlMjAlM0QlMjBBdXRvVG9rZW5pemVyLmZyb21fcHJldHJhaW5lZChtb2RlbF9uYW1lKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoTokenizer, TFAutoModelForSequenceClassification

<span class="hljs-meta">&gt;&gt;&gt; </span>model = TFAutoModelForSequenceClassification.from_pretrained(model_name)
<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer = AutoTokenizer.from_pretrained(model_name)`,wrap:!1}}),{c(){e=$("p"),e.innerHTML=n,t=d(),_(s.$$.fragment)},l(a){e=M(a,"P",{"data-svelte-h":!0}),C(e)!=="svelte-jve90c"&&(e.innerHTML=n),t=g(a),j(s.$$.fragment,a)},m(a,m){c(a,e,m),c(a,t,m),w(s,a,m),r=!0},p:F,i(a){r||(f(s.$$.fragment,a),r=!0)},o(a){h(s.$$.fragment,a),r=!1},d(a){a&&(i(e),i(t)),y(s,a)}}}function _r(o){let e,n;return e=new Y({props:{$$slots:{default:[Mr]},$$scope:{ctx:o}}}),{c(){_(e.$$.fragment)},l(t){j(e.$$.fragment,t)},m(t,s){w(e,t,s),n=!0},p(t,s){const r={};s&2&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(f(e.$$.fragment,t),n=!0)},o(t){h(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function wr(o){let e,n;return e=new W({props:{code:"cHRfYmF0Y2glMjAlM0QlMjB0b2tlbml6ZXIoJTBBJTIwJTIwJTIwJTIwJTVCJTIyV2UlMjBhcmUlMjB2ZXJ5JTIwaGFwcHklMjB0byUyMHNob3clMjB5b3UlMjB0aGUlMjAlRjAlOUYlQTQlOTclMjBUcmFuc2Zvcm1lcnMlMjBsaWJyYXJ5LiUyMiUyQyUyMCUyMldlJTIwaG9wZSUyMHlvdSUyMGRvbid0JTIwaGF0ZSUyMGl0LiUyMiU1RCUyQyUwQSUyMCUyMCUyMCUyMHBhZGRpbmclM0RUcnVlJTJDJTBBJTIwJTIwJTIwJTIwdHJ1bmNhdGlvbiUzRFRydWUlMkMlMEElMjAlMjAlMjAlMjBtYXhfbGVuZ3RoJTNENTEyJTJDJTBBJTIwJTIwJTIwJTIwcmV0dXJuX3RlbnNvcnMlM0QlMjJwdCUyMiUyQyUwQSk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>pt_batch = tokenizer(
<span class="hljs-meta">... </span>    [<span class="hljs-string">&quot;We are very happy to show you the 🤗 Transformers library.&quot;</span>, <span class="hljs-string">&quot;We hope you don&#x27;t hate it.&quot;</span>],
<span class="hljs-meta">... </span>    padding=<span class="hljs-literal">True</span>,
<span class="hljs-meta">... </span>    truncation=<span class="hljs-literal">True</span>,
<span class="hljs-meta">... </span>    max_length=<span class="hljs-number">512</span>,
<span class="hljs-meta">... </span>    return_tensors=<span class="hljs-string">&quot;pt&quot;</span>,
<span class="hljs-meta">... </span>)`,wrap:!1}}),{c(){_(e.$$.fragment)},l(t){j(e.$$.fragment,t)},m(t,s){w(e,t,s),n=!0},p:F,i(t){n||(f(e.$$.fragment,t),n=!0)},o(t){h(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function yr(o){let e,n;return e=new Y({props:{$$slots:{default:[wr]},$$scope:{ctx:o}}}),{c(){_(e.$$.fragment)},l(t){j(e.$$.fragment,t)},m(t,s){w(e,t,s),n=!0},p(t,s){const r={};s&2&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(f(e.$$.fragment,t),n=!0)},o(t){h(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function vr(o){let e,n;return e=new W({props:{code:"dGZfYmF0Y2glMjAlM0QlMjB0b2tlbml6ZXIoJTBBJTIwJTIwJTIwJTIwJTVCJTIyV2UlMjBhcmUlMjB2ZXJ5JTIwaGFwcHklMjB0byUyMHNob3clMjB5b3UlMjB0aGUlMjAlRjAlOUYlQTQlOTclMjBUcmFuc2Zvcm1lcnMlMjBsaWJyYXJ5LiUyMiUyQyUyMCUyMldlJTIwaG9wZSUyMHlvdSUyMGRvbid0JTIwaGF0ZSUyMGl0LiUyMiU1RCUyQyUwQSUyMCUyMCUyMCUyMHBhZGRpbmclM0RUcnVlJTJDJTBBJTIwJTIwJTIwJTIwdHJ1bmNhdGlvbiUzRFRydWUlMkMlMEElMjAlMjAlMjAlMjBtYXhfbGVuZ3RoJTNENTEyJTJDJTBBJTIwJTIwJTIwJTIwcmV0dXJuX3RlbnNvcnMlM0QlMjJ0ZiUyMiUyQyUwQSk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>tf_batch = tokenizer(
<span class="hljs-meta">... </span>    [<span class="hljs-string">&quot;We are very happy to show you the 🤗 Transformers library.&quot;</span>, <span class="hljs-string">&quot;We hope you don&#x27;t hate it.&quot;</span>],
<span class="hljs-meta">... </span>    padding=<span class="hljs-literal">True</span>,
<span class="hljs-meta">... </span>    truncation=<span class="hljs-literal">True</span>,
<span class="hljs-meta">... </span>    max_length=<span class="hljs-number">512</span>,
<span class="hljs-meta">... </span>    return_tensors=<span class="hljs-string">&quot;tf&quot;</span>,
<span class="hljs-meta">... </span>)`,wrap:!1}}),{c(){_(e.$$.fragment)},l(t){j(e.$$.fragment,t)},m(t,s){w(e,t,s),n=!0},p:F,i(t){n||(f(e.$$.fragment,t),n=!0)},o(t){h(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function jr(o){let e,n;return e=new Y({props:{$$slots:{default:[vr]},$$scope:{ctx:o}}}),{c(){_(e.$$.fragment)},l(t){j(e.$$.fragment,t)},m(t,s){w(e,t,s),n=!0},p(t,s){const r={};s&2&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(f(e.$$.fragment,t),n=!0)},o(t){h(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function Tr(o){let e,n='Consultez le tutoriel <a href="./preprocessing">prétraitement</a> pour plus de détails sur la tokenisation, et sur la manière d’utiliser un <code>AutoImageProcessor</code>, un <code>AutoFeatureExtractor</code> et un <code>AutoProcessor</code> pour prétraiter les images, l’audio et les contenus multimodaux.';return{c(){e=$("p"),e.innerHTML=n},l(t){e=M(t,"P",{"data-svelte-h":!0}),C(e)!=="svelte-19vw127"&&(e.innerHTML=n)},m(t,s){c(t,e,s)},p:F,d(t){t&&i(e)}}}function kr(o){let e,n='Voir le <a href="./task_summary">résumé de la tâche</a> pour vérifier si elle est prise en charge par une classe <code>AutoModel</code>.';return{c(){e=$("p"),e.innerHTML=n},l(t){e=M(t,"P",{"data-svelte-h":!0}),C(e)!=="svelte-1piklxl"&&(e.innerHTML=n)},m(t,s){c(t,e,s)},p:F,d(t){t&&i(e)}}}function Jr(o){let e,n="🤗 Transformers fournit un moyen simple et unifié de charger des instances pré-entraînées. Cela signifie que vous pouvez charger un <code>AutoModel</code> comme vous chargeriez un <code>AutoTokenizer</code>. La seule différence est de sélectionner l’<code>AutoModel</code> approprié pour la tâche. Pour une classification de texte (ou de séquence de textes), vous devez charger <code>AutoModelForSequenceClassification</code> :",t,s,r,a,m,p,T="Maintenant, passez votre échantillon d’entrées prétraitées directement au modèle. Il vous suffit de décompresser le dictionnaire en ajoutant <code>**</code> :",V,v,Z,z,k="Le modèle produit les activations finales dans l’attribut <code>logits</code>. Appliquez la fonction softmax aux <code>logits</code> pour récupérer les probabilités :",U,I,N;return s=new W({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMEF1dG9Nb2RlbEZvclNlcXVlbmNlQ2xhc3NpZmljYXRpb24lMEElMEFtb2RlbF9uYW1lJTIwJTNEJTIwJTIybmxwdG93biUyRmJlcnQtYmFzZS1tdWx0aWxpbmd1YWwtdW5jYXNlZC1zZW50aW1lbnQlMjIlMEFwdF9tb2RlbCUyMCUzRCUyMEF1dG9Nb2RlbEZvclNlcXVlbmNlQ2xhc3NpZmljYXRpb24uZnJvbV9wcmV0cmFpbmVkKG1vZGVsX25hbWUp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoModelForSequenceClassification

<span class="hljs-meta">&gt;&gt;&gt; </span>model_name = <span class="hljs-string">&quot;nlptown/bert-base-multilingual-uncased-sentiment&quot;</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>pt_model = AutoModelForSequenceClassification.from_pretrained(model_name)`,wrap:!1}}),a=new cs({props:{$$slots:{default:[kr]},$$scope:{ctx:o}}}),v=new W({props:{code:"cHRfb3V0cHV0cyUyMCUzRCUyMHB0X21vZGVsKCoqcHRfYmF0Y2gp",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>pt_outputs = pt_model(**pt_batch)',wrap:!1}}),I=new W({props:{code:"ZnJvbSUyMHRvcmNoJTIwaW1wb3J0JTIwbm4lMEElMEFwdF9wcmVkaWN0aW9ucyUyMCUzRCUyMG5uLmZ1bmN0aW9uYWwuc29mdG1heChwdF9vdXRwdXRzLmxvZ2l0cyUyQyUyMGRpbSUzRC0xKSUwQXByaW50KHB0X3ByZWRpY3Rpb25zKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> torch <span class="hljs-keyword">import</span> nn

<span class="hljs-meta">&gt;&gt;&gt; </span>pt_predictions = nn.functional.softmax(pt_outputs.logits, dim=-<span class="hljs-number">1</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(pt_predictions)
tensor([[<span class="hljs-number">0.0021</span>, <span class="hljs-number">0.0018</span>, <span class="hljs-number">0.0115</span>, <span class="hljs-number">0.2121</span>, <span class="hljs-number">0.7725</span>],
        [<span class="hljs-number">0.2084</span>, <span class="hljs-number">0.1826</span>, <span class="hljs-number">0.1969</span>, <span class="hljs-number">0.1755</span>, <span class="hljs-number">0.2365</span>]], grad_fn=&lt;SoftmaxBackward0&gt;)`,wrap:!1}}),{c(){e=$("p"),e.innerHTML=n,t=d(),_(s.$$.fragment),r=d(),_(a.$$.fragment),m=d(),p=$("p"),p.innerHTML=T,V=d(),_(v.$$.fragment),Z=d(),z=$("p"),z.innerHTML=k,U=d(),_(I.$$.fragment)},l(b){e=M(b,"P",{"data-svelte-h":!0}),C(e)!=="svelte-sxirj1"&&(e.innerHTML=n),t=g(b),j(s.$$.fragment,b),r=g(b),j(a.$$.fragment,b),m=g(b),p=M(b,"P",{"data-svelte-h":!0}),C(p)!=="svelte-1ugeabg"&&(p.innerHTML=T),V=g(b),j(v.$$.fragment,b),Z=g(b),z=M(b,"P",{"data-svelte-h":!0}),C(z)!=="svelte-1wp59i5"&&(z.innerHTML=k),U=g(b),j(I.$$.fragment,b)},m(b,J){c(b,e,J),c(b,t,J),w(s,b,J),c(b,r,J),w(a,b,J),c(b,m,J),c(b,p,J),c(b,V,J),w(v,b,J),c(b,Z,J),c(b,z,J),c(b,U,J),w(I,b,J),N=!0},p(b,J){const H={};J&2&&(H.$$scope={dirty:J,ctx:b}),a.$set(H)},i(b){N||(f(s.$$.fragment,b),f(a.$$.fragment,b),f(v.$$.fragment,b),f(I.$$.fragment,b),N=!0)},o(b){h(s.$$.fragment,b),h(a.$$.fragment,b),h(v.$$.fragment,b),h(I.$$.fragment,b),N=!1},d(b){b&&(i(e),i(t),i(r),i(m),i(p),i(V),i(Z),i(z),i(U)),y(s,b),y(a,b),y(v,b),y(I,b)}}}function Ur(o){let e,n;return e=new Y({props:{$$slots:{default:[Jr]},$$scope:{ctx:o}}}),{c(){_(e.$$.fragment)},l(t){j(e.$$.fragment,t)},m(t,s){w(e,t,s),n=!0},p(t,s){const r={};s&2&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(f(e.$$.fragment,t),n=!0)},o(t){h(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function Cr(o){let e,n='Voir le <a href="./task_summary">résumé de la tâche</a> pour vérifier si elle est prise en charge par une classe <code>AutoModel</code>.';return{c(){e=$("p"),e.innerHTML=n},l(t){e=M(t,"P",{"data-svelte-h":!0}),C(e)!=="svelte-1piklxl"&&(e.innerHTML=n)},m(t,s){c(t,e,s)},p:F,d(t){t&&i(e)}}}function Zr(o){let e,n="🤗 Transformers fournit un moyen simple et unifié de charger des instances pré-entraînés. Cela signifie que vous pouvez charger un <code>TFAutoModel</code> comme vous chargeriez un <code>AutoTokenizer</code>. La seule différence est de sélectionner le <code>TFAutoModel</code> approprié pour la tâche. Pour une classification de texte (ou de séquence de textes), vous devez charger <code>TFAutoModelForSequenceClassification</code> :",t,s,r,a,m,p,T="Passez maintenant votre échantillon d’entrées prétraitées directement au modèle en passant les clés du dictionnaire directement aux tensors :",V,v,Z,z,k="Le modèle produit les activations finales dans l’attribut <code>logits</code>. Appliquez la fonction softmax aux <code>logits</code> pour récupérer les probabilités :",U,I,N;return s=new W({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMFRGQXV0b01vZGVsRm9yU2VxdWVuY2VDbGFzc2lmaWNhdGlvbiUwQSUwQW1vZGVsX25hbWUlMjAlM0QlMjAlMjJubHB0b3duJTJGYmVydC1iYXNlLW11bHRpbGluZ3VhbC11bmNhc2VkLXNlbnRpbWVudCUyMiUwQXRmX21vZGVsJTIwJTNEJTIwVEZBdXRvTW9kZWxGb3JTZXF1ZW5jZUNsYXNzaWZpY2F0aW9uLmZyb21fcHJldHJhaW5lZChtb2RlbF9uYW1lKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> TFAutoModelForSequenceClassification

<span class="hljs-meta">&gt;&gt;&gt; </span>model_name = <span class="hljs-string">&quot;nlptown/bert-base-multilingual-uncased-sentiment&quot;</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>tf_model = TFAutoModelForSequenceClassification.from_pretrained(model_name)`,wrap:!1}}),a=new cs({props:{$$slots:{default:[Cr]},$$scope:{ctx:o}}}),v=new W({props:{code:"dGZfb3V0cHV0cyUyMCUzRCUyMHRmX21vZGVsKHRmX2JhdGNoKQ==",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>tf_outputs = tf_model(tf_batch)',wrap:!1}}),I=new W({props:{code:"aW1wb3J0JTIwdGVuc29yZmxvdyUyMGFzJTIwdGYlMEElMEF0Zl9wcmVkaWN0aW9ucyUyMCUzRCUyMHRmLm5uLnNvZnRtYXgodGZfb3V0cHV0cy5sb2dpdHMlMkMlMjBheGlzJTNELTEpJTBBdGZfcHJlZGljdGlvbnM=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> tensorflow <span class="hljs-keyword">as</span> tf

<span class="hljs-meta">&gt;&gt;&gt; </span>tf_predictions = tf.nn.softmax(tf_outputs.logits, axis=-<span class="hljs-number">1</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>tf_predictions`,wrap:!1}}),{c(){e=$("p"),e.innerHTML=n,t=d(),_(s.$$.fragment),r=d(),_(a.$$.fragment),m=d(),p=$("p"),p.textContent=T,V=d(),_(v.$$.fragment),Z=d(),z=$("p"),z.innerHTML=k,U=d(),_(I.$$.fragment)},l(b){e=M(b,"P",{"data-svelte-h":!0}),C(e)!=="svelte-1s0izv6"&&(e.innerHTML=n),t=g(b),j(s.$$.fragment,b),r=g(b),j(a.$$.fragment,b),m=g(b),p=M(b,"P",{"data-svelte-h":!0}),C(p)!=="svelte-zr5hq0"&&(p.textContent=T),V=g(b),j(v.$$.fragment,b),Z=g(b),z=M(b,"P",{"data-svelte-h":!0}),C(z)!=="svelte-1wp59i5"&&(z.innerHTML=k),U=g(b),j(I.$$.fragment,b)},m(b,J){c(b,e,J),c(b,t,J),w(s,b,J),c(b,r,J),w(a,b,J),c(b,m,J),c(b,p,J),c(b,V,J),w(v,b,J),c(b,Z,J),c(b,z,J),c(b,U,J),w(I,b,J),N=!0},p(b,J){const H={};J&2&&(H.$$scope={dirty:J,ctx:b}),a.$set(H)},i(b){N||(f(s.$$.fragment,b),f(a.$$.fragment,b),f(v.$$.fragment,b),f(I.$$.fragment,b),N=!0)},o(b){h(s.$$.fragment,b),h(a.$$.fragment,b),h(v.$$.fragment,b),h(I.$$.fragment,b),N=!1},d(b){b&&(i(e),i(t),i(r),i(m),i(p),i(V),i(Z),i(z),i(U)),y(s,b),y(a,b),y(v,b),y(I,b)}}}function zr(o){let e,n;return e=new Y({props:{$$slots:{default:[Zr]},$$scope:{ctx:o}}}),{c(){_(e.$$.fragment)},l(t){j(e.$$.fragment,t)},m(t,s){w(e,t,s),n=!0},p(t,s){const r={};s&2&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(f(e.$$.fragment,t),n=!0)},o(t){h(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function Gr(o){let e,n="Tous les modèles 🤗 Transformers (PyTorch ou TensorFlow) produisent les tensors <em>avant</em> la fonction d’activation finale (comme softmax) car la fonction d’activation finale est souvent fusionnée avec le calcul de la perte. Les structures produites par le modèle sont des classes de données spéciales, de sorte que leurs attributs sont autocomplétés dans un environnement de développement. Les structures produites par le modèle se comportent comme un tuple ou un dictionnaire (vous pouvez les indexer avec un entier, une tranche ou une chaîne), auquel cas les attributs qui sont None sont ignorés.";return{c(){e=$("p"),e.innerHTML=n},l(t){e=M(t,"P",{"data-svelte-h":!0}),C(e)!=="svelte-112y7aw"&&(e.innerHTML=n)},m(t,s){c(t,e,s)},p:F,d(t){t&&i(e)}}}function Vr(o){let e,n="Une fois que votre modèle est finetuné, vous pouvez le sauvegarder avec son tokenizer en utilisant <code>PreTrainedModel.save_pretrained()</code> :",t,s,r,a,m="Lorsque vous voulez réutiliser le modèle, rechargez-le avec <code>PreTrainedModel.from_pretrained()</code> :",p,T,V;return s=new W({props:{code:"cHRfc2F2ZV9kaXJlY3RvcnklMjAlM0QlMjAlMjIuJTJGcHRfc2F2ZV9wcmV0cmFpbmVkJTIyJTBBdG9rZW5pemVyLnNhdmVfcHJldHJhaW5lZChwdF9zYXZlX2RpcmVjdG9yeSklMEFwdF9tb2RlbC5zYXZlX3ByZXRyYWluZWQocHRfc2F2ZV9kaXJlY3Rvcnkp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>pt_save_directory = <span class="hljs-string">&quot;./pt_save_pretrained&quot;</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer.save_pretrained(pt_save_directory)
<span class="hljs-meta">&gt;&gt;&gt; </span>pt_model.save_pretrained(pt_save_directory)`,wrap:!1}}),T=new W({props:{code:"cHRfbW9kZWwlMjAlM0QlMjBBdXRvTW9kZWxGb3JTZXF1ZW5jZUNsYXNzaWZpY2F0aW9uLmZyb21fcHJldHJhaW5lZCglMjIuJTJGcHRfc2F2ZV9wcmV0cmFpbmVkJTIyKQ==",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>pt_model = AutoModelForSequenceClassification.from_pretrained(<span class="hljs-string">&quot;./pt_save_pretrained&quot;</span>)',wrap:!1}}),{c(){e=$("p"),e.innerHTML=n,t=d(),_(s.$$.fragment),r=d(),a=$("p"),a.innerHTML=m,p=d(),_(T.$$.fragment)},l(v){e=M(v,"P",{"data-svelte-h":!0}),C(e)!=="svelte-5ecdze"&&(e.innerHTML=n),t=g(v),j(s.$$.fragment,v),r=g(v),a=M(v,"P",{"data-svelte-h":!0}),C(a)!=="svelte-1p0rw17"&&(a.innerHTML=m),p=g(v),j(T.$$.fragment,v)},m(v,Z){c(v,e,Z),c(v,t,Z),w(s,v,Z),c(v,r,Z),c(v,a,Z),c(v,p,Z),w(T,v,Z),V=!0},p:F,i(v){V||(f(s.$$.fragment,v),f(T.$$.fragment,v),V=!0)},o(v){h(s.$$.fragment,v),h(T.$$.fragment,v),V=!1},d(v){v&&(i(e),i(t),i(r),i(a),i(p)),y(s,v),y(T,v)}}}function Rr(o){let e,n;return e=new Y({props:{$$slots:{default:[Vr]},$$scope:{ctx:o}}}),{c(){_(e.$$.fragment)},l(t){j(e.$$.fragment,t)},m(t,s){w(e,t,s),n=!0},p(t,s){const r={};s&2&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(f(e.$$.fragment,t),n=!0)},o(t){h(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function Ir(o){let e,n="Une fois que votre modèle est finetuné, vous pouvez le sauvegarder avec son tokenizer en utilisant <code>TFPreTrainedModel.save_pretrained()</code> :",t,s,r,a,m="Lorsque vous voulez réutiliser le modèle, rechargez-le avec <code>TFPreTrainedModel.from_pretrained()</code> :",p,T,V;return s=new W({props:{code:"dGZfc2F2ZV9kaXJlY3RvcnklMjAlM0QlMjAlMjIuJTJGdGZfc2F2ZV9wcmV0cmFpbmVkJTIyJTBBdG9rZW5pemVyLnNhdmVfcHJldHJhaW5lZCh0Zl9zYXZlX2RpcmVjdG9yeSklMEF0Zl9tb2RlbC5zYXZlX3ByZXRyYWluZWQodGZfc2F2ZV9kaXJlY3Rvcnkp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>tf_save_directory = <span class="hljs-string">&quot;./tf_save_pretrained&quot;</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer.save_pretrained(tf_save_directory)
<span class="hljs-meta">&gt;&gt;&gt; </span>tf_model.save_pretrained(tf_save_directory)`,wrap:!1}}),T=new W({props:{code:"dGZfbW9kZWwlMjAlM0QlMjBURkF1dG9Nb2RlbEZvclNlcXVlbmNlQ2xhc3NpZmljYXRpb24uZnJvbV9wcmV0cmFpbmVkKCUyMi4lMkZ0Zl9zYXZlX3ByZXRyYWluZWQlMjIp",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>tf_model = TFAutoModelForSequenceClassification.from_pretrained(<span class="hljs-string">&quot;./tf_save_pretrained&quot;</span>)',wrap:!1}}),{c(){e=$("p"),e.innerHTML=n,t=d(),_(s.$$.fragment),r=d(),a=$("p"),a.innerHTML=m,p=d(),_(T.$$.fragment)},l(v){e=M(v,"P",{"data-svelte-h":!0}),C(e)!=="svelte-492m3s"&&(e.innerHTML=n),t=g(v),j(s.$$.fragment,v),r=g(v),a=M(v,"P",{"data-svelte-h":!0}),C(a)!=="svelte-r1rvq9"&&(a.innerHTML=m),p=g(v),j(T.$$.fragment,v)},m(v,Z){c(v,e,Z),c(v,t,Z),w(s,v,Z),c(v,r,Z),c(v,a,Z),c(v,p,Z),w(T,v,Z),V=!0},p:F,i(v){V||(f(s.$$.fragment,v),f(T.$$.fragment,v),V=!0)},o(v){h(s.$$.fragment,v),h(T.$$.fragment,v),V=!1},d(v){v&&(i(e),i(t),i(r),i(a),i(p)),y(s,v),y(T,v)}}}function Wr(o){let e,n;return e=new Y({props:{$$slots:{default:[Ir]},$$scope:{ctx:o}}}),{c(){_(e.$$.fragment)},l(t){j(e.$$.fragment,t)},m(t,s){w(e,t,s),n=!0},p(t,s){const r={};s&2&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(f(e.$$.fragment,t),n=!0)},o(t){h(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function Hr(o){let e,n;return e=new W({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMEF1dG9Nb2RlbCUwQSUwQXRva2VuaXplciUyMCUzRCUyMEF1dG9Ub2tlbml6ZXIuZnJvbV9wcmV0cmFpbmVkKHRmX3NhdmVfZGlyZWN0b3J5KSUwQXB0X21vZGVsJTIwJTNEJTIwQXV0b01vZGVsRm9yU2VxdWVuY2VDbGFzc2lmaWNhdGlvbi5mcm9tX3ByZXRyYWluZWQodGZfc2F2ZV9kaXJlY3RvcnklMkMlMjBmcm9tX3RmJTNEVHJ1ZSk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoModel

<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer = AutoTokenizer.from_pretrained(tf_save_directory)
<span class="hljs-meta">&gt;&gt;&gt; </span>pt_model = AutoModelForSequenceClassification.from_pretrained(tf_save_directory, from_tf=<span class="hljs-literal">True</span>)`,wrap:!1}}),{c(){_(e.$$.fragment)},l(t){j(e.$$.fragment,t)},m(t,s){w(e,t,s),n=!0},p:F,i(t){n||(f(e.$$.fragment,t),n=!0)},o(t){h(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function Nr(o){let e,n;return e=new Y({props:{$$slots:{default:[Hr]},$$scope:{ctx:o}}}),{c(){_(e.$$.fragment)},l(t){j(e.$$.fragment,t)},m(t,s){w(e,t,s),n=!0},p(t,s){const r={};s&2&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(f(e.$$.fragment,t),n=!0)},o(t){h(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function Xr(o){let e,n;return e=new W({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMFRGQXV0b01vZGVsJTBBJTBBdG9rZW5pemVyJTIwJTNEJTIwQXV0b1Rva2VuaXplci5mcm9tX3ByZXRyYWluZWQocHRfc2F2ZV9kaXJlY3RvcnkpJTBBdGZfbW9kZWwlMjAlM0QlMjBURkF1dG9Nb2RlbEZvclNlcXVlbmNlQ2xhc3NpZmljYXRpb24uZnJvbV9wcmV0cmFpbmVkKHB0X3NhdmVfZGlyZWN0b3J5JTJDJTIwZnJvbV9wdCUzRFRydWUp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> TFAutoModel

<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer = AutoTokenizer.from_pretrained(pt_save_directory)
<span class="hljs-meta">&gt;&gt;&gt; </span>tf_model = TFAutoModelForSequenceClassification.from_pretrained(pt_save_directory, from_pt=<span class="hljs-literal">True</span>)`,wrap:!1}}),{c(){_(e.$$.fragment)},l(t){j(e.$$.fragment,t)},m(t,s){w(e,t,s),n=!0},p:F,i(t){n||(f(e.$$.fragment,t),n=!0)},o(t){h(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function Fr(o){let e,n;return e=new Y({props:{$$slots:{default:[Xr]},$$scope:{ctx:o}}}),{c(){_(e.$$.fragment)},l(t){j(e.$$.fragment,t)},m(t,s){w(e,t,s),n=!0},p(t,s){const r={};s&2&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(f(e.$$.fragment,t),n=!0)},o(t){h(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function qr(o){let e,n="Créez un modèle personnalisé à partir de votre configuration avec <code>AutoModel.from_config()</code> :",t,s,r;return s=new W({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMEF1dG9Nb2RlbCUwQSUwQW15X21vZGVsJTIwJTNEJTIwQXV0b01vZGVsLmZyb21fY29uZmlnKG15X2NvbmZpZyk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoModel

<span class="hljs-meta">&gt;&gt;&gt; </span>my_model = AutoModel.from_config(my_config)`,wrap:!1}}),{c(){e=$("p"),e.innerHTML=n,t=d(),_(s.$$.fragment)},l(a){e=M(a,"P",{"data-svelte-h":!0}),C(e)!=="svelte-1d3yt0j"&&(e.innerHTML=n),t=g(a),j(s.$$.fragment,a)},m(a,m){c(a,e,m),c(a,t,m),w(s,a,m),r=!0},p:F,i(a){r||(f(s.$$.fragment,a),r=!0)},o(a){h(s.$$.fragment,a),r=!1},d(a){a&&(i(e),i(t)),y(s,a)}}}function Er(o){let e,n;return e=new Y({props:{$$slots:{default:[qr]},$$scope:{ctx:o}}}),{c(){_(e.$$.fragment)},l(t){j(e.$$.fragment,t)},m(t,s){w(e,t,s),n=!0},p(t,s){const r={};s&2&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(f(e.$$.fragment,t),n=!0)},o(t){h(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function Br(o){let e,n="Créez un modèle personnalisé à partir de votre configuration avec <code>TFAutoModel.from_config()</code> :",t,s,r;return s=new W({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMFRGQXV0b01vZGVsJTBBJTBBbXlfbW9kZWwlMjAlM0QlMjBURkF1dG9Nb2RlbC5mcm9tX2NvbmZpZyhteV9jb25maWcp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> TFAutoModel

<span class="hljs-meta">&gt;&gt;&gt; </span>my_model = TFAutoModel.from_config(my_config)`,wrap:!1}}),{c(){e=$("p"),e.innerHTML=n,t=d(),_(s.$$.fragment)},l(a){e=M(a,"P",{"data-svelte-h":!0}),C(e)!=="svelte-1pj8o25"&&(e.innerHTML=n),t=g(a),j(s.$$.fragment,a)},m(a,m){c(a,e,m),c(a,t,m),w(s,a,m),r=!0},p:F,i(a){r||(f(s.$$.fragment,a),r=!0)},o(a){h(s.$$.fragment,a),r=!1},d(a){a&&(i(e),i(t)),y(s,a)}}}function Lr(o){let e,n;return e=new Y({props:{$$slots:{default:[Br]},$$scope:{ctx:o}}}),{c(){_(e.$$.fragment)},l(t){j(e.$$.fragment,t)},m(t,s){w(e,t,s),n=!0},p(t,s){const r={};s&2&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(f(e.$$.fragment,t),n=!0)},o(t){h(e.$$.fragment,t),n=!1},d(t){y(e,t)}}}function Ar(o){let e,n="Pour les tâches - comme la traduction ou la génération de résumé - qui utilisent un modèle séquence à séquence, utilisez plutôt les classes <code>Seq2SeqTrainer</code> et <code>Seq2SeqTrainingArguments</code>.";return{c(){e=$("p"),e.innerHTML=n},l(t){e=M(t,"P",{"data-svelte-h":!0}),C(e)!=="svelte-1bb7k0n"&&(e.innerHTML=n)},m(t,s){c(t,e,s)},p:F,d(t){t&&i(e)}}}function Yr(o){let e,n,t,s,r,a,m,p,T,V='Soyez opérationnel avec 🤗 Transformers ! Que vous soyez un développeur ou un utilisateur lambda, cette visite rapide vous aidera à démarrer et vous montrera comment utiliser le <code>pipeline()</code> pour l’inférence, charger un modèle pré-entraîné et un préprocesseur avec une <a href="./model_doc/auto">AutoClass</a>, et entraîner rapidement un modèle avec PyTorch ou TensorFlow. Si vous êtes un débutant, nous vous recommandons de consulter nos tutoriels ou notre <a href="https://huggingface.co/course/chapter1/1" rel="nofollow">cours</a> suivant pour des explications plus approfondies des concepts présentés ici.',v,Z,z="Avant de commencer, assurez-vous que vous avez installé toutes les bibliothèques nécessaires :",k,U,I,N,b="Vous aurez aussi besoin d’installer votre bibliothèque d’apprentissage profond favorite :",J,H,E,X,ps,fe,ms,de,nn="Le <code>pipeline()</code> est le moyen le plus simple d’utiliser un modèle pré-entraîné pour l’inférence. Vous pouvez utiliser le <code>pipeline()</code> prêt à l’emploi pour de nombreuses tâches dans différentes modalités. Consultez le tableau ci-dessous pour connaître les tâches prises en charge :",fs,ge,an="<thead><tr><th><strong>Tâche</strong></th> <th><strong>Description</strong></th> <th><strong>Modalité</strong></th> <th><strong>Identifiant du pipeline</strong></th></tr></thead> <tbody><tr><td>Classification de texte</td> <td>Attribue une catégorie à une séquence de texte donnée</td> <td>Texte</td> <td>pipeline(task=“sentiment-analysis”)</td></tr> <tr><td>Génération de texte</td> <td>Génère du texte à partir d’une consigne donnée</td> <td>Texte</td> <td>pipeline(task=“text-generation”)</td></tr> <tr><td>Reconnaissance de token nommé</td> <td>Attribue une catégorie à chaque token dans une séquence (personnes, organisation, localisation, etc.)</td> <td>Texte</td> <td>pipeline(task=“ner”)</td></tr> <tr><td>Question réponse</td> <td>Extrait une réponse du texte en fonction du contexte et d’une question</td> <td>Texte</td> <td>pipeline(task=“question-answering”)</td></tr> <tr><td>Prédiction de token masqué</td> <td>Prédit correctement le token masqué dans une séquence</td> <td>Texte</td> <td>pipeline(task=“fill-mask”)</td></tr> <tr><td>Génération de résumé</td> <td>Génère un résumé d’une séquence de texte donnée ou d’un document</td> <td>Texte</td> <td>pipeline(task=“summarization”)</td></tr> <tr><td>Traduction</td> <td>Traduit du texte d’un langage à un autre</td> <td>Texte</td> <td>pipeline(task=“translation”)</td></tr> <tr><td>Classification d’image</td> <td>Attribue une catégorie à une image</td> <td>Image</td> <td>pipeline(task=“image-classification”)</td></tr> <tr><td>Segmentation d’image</td> <td>Attribue une catégorie à chaque pixel d’une image (supporte la segmentation sémantique, panoptique et d’instance)</td> <td>Image</td> <td>pipeline(task=“image-segmentation”)</td></tr> <tr><td>Détection d’objets</td> <td>Prédit les délimitations et catégories d’objets dans une image</td> <td>Image</td> <td>pipeline(task=“object-detection”)</td></tr> <tr><td>Classification d’audio</td> <td>Attribue une catégorie à un fichier audio</td> <td>Audio</td> <td>pipeline(task=“audio-classification”)</td></tr> <tr><td>Reconnaissance automatique de la parole</td> <td>Extrait le discours d’un fichier audio en texte</td> <td>Audio</td> <td>pipeline(task=“automatic-speech-recognition”)</td></tr> <tr><td>Question réponse visuels</td> <td>Etant données une image et une question, répond correctement à une question sur l’image</td> <td>Modalités multiples</td> <td>pipeline(task=“vqa”)</td></tr></tbody>",ds,he,rn='Commencez par créer une instance de <code>pipeline()</code> et spécifiez la tâche pour laquelle vous souhaitez l’utiliser. Vous pouvez utiliser le <code>pipeline()</code> pour n’importe laquelle des tâches mentionnées dans le tableau précédent. Pour obtenir une liste complète des tâches prises en charge, consultez la documentation de l’<a href="./main_classes/pipelines">API pipeline</a>. Dans ce guide, nous utiliserons le <code>pipeline()</code> pour l’analyse des sentiments à titre d’exemple :',gs,be,hs,$e,on='Le <code>pipeline()</code> télécharge et stocke en cache un <a href="https://huggingface.co/distilbert/distilbert-base-uncased-finetuned-sst-2-english" rel="nofollow">modèle pré-entraîné</a> et un tokenizer par défaut pour l’analyse des sentiments. Vous pouvez maintenant utiliser le <code>classifier</code> sur le texte de votre choix :',bs,Me,$s,_e,un="Si vous voulez classifier plus qu’un texte, donnez une liste de textes au <code>pipeline()</code> pour obtenir une liste de dictionnaires en retour :",Ms,we,_s,ye,cn="Le <code>pipeline()</code> peut aussi itérer sur un jeu de données entier pour n’importe quelle tâche. Prenons par exemple la reconnaissance automatique de la parole :",ws,ve,ys,je,pn='Chargez un jeu de données audio (voir le 🤗 Datasets <a href="https://huggingface.co/docs/datasets/quickstart#audio" rel="nofollow">Quick Start</a> pour plus de détails) sur lequel vous souhaitez itérer. Pour cet exemple, nous chargeons le jeu de données <a href="https://huggingface.co/datasets/PolyAI/minds14" rel="nofollow">MInDS-14</a> :',vs,Te,js,ke,mn='Vous devez vous assurer que le taux d’échantillonnage de l’ensemble de données correspond au taux d’échantillonnage sur lequel <a href="https://huggingface.co/facebook/wav2vec2-base-960h" rel="nofollow"><code>facebook/wav2vec2-base-960h</code></a> a été entraîné :',Ts,Je,ks,Ue,fn=`Les fichiers audio sont automatiquement chargés et rééchantillonnés lors de l’appel de la colonne <code>&quot;audio&quot;</code>.
Extrayez les tableaux de formes d’ondes brutes des quatre premiers échantillons et passez-les comme une liste au pipeline :`,Js,Ce,Us,Ze,dn='Pour les ensembles de données plus importants où les entrées sont volumineuses (comme dans les domaines de la parole ou de la vision), utilisez plutôt un générateur au lieu d’une liste pour charger toutes les entrées en mémoire. Pour plus d’informations, consultez la documentation de l’<a href="./main_classes/pipelines">API pipeline</a>.',Cs,ze,Zs,Ge,gn='Le <code>pipeline()</code> peut être utilisé avec n’importe quel modèle du <a href="https://huggingface.co/models" rel="nofollow">Hub</a>, ce qui permet d’adapter facilement le <code>pipeline()</code> à d’autres cas d’utilisation. Par exemple, si vous souhaitez un modèle capable de traiter du texte français, utilisez les filtres du Hub pour trouver un modèle approprié. Le premier résultat renvoie un <a href="https://huggingface.co/nlptown/bert-base-multilingual-uncased-sentiment" rel="nofollow">modèle BERT</a> multilingue finetuné pour l’analyse des sentiments que vous pouvez utiliser pour le texte français :',zs,Ve,Gs,ne,Vs,Re,hn="Spécifiez le modèle et le tokenizer dans le <code>pipeline()</code>, et utilisez le <code>classifier</code> sur le texte en français :",Rs,Ie,Is,We,bn='Si vous ne parvenez pas à trouver un modèle adapté à votre cas d’utilisation, vous devrez finetuner un modèle pré-entraîné sur vos données. Jetez un coup d’œil à notre <a href="./training">tutoriel sur le finetuning</a> pour apprendre comment faire. Enfin, après avoir finetuné votre modèle pré-entraîné, pensez à <a href="./model_sharing">partager</a> le modèle avec la communauté sur le Hub afin de démocratiser l’apprentissage automatique pour tous ! 🤗',Ws,He,Hs,Ne,Ns,Xe,$n='Les classes <code>AutoModelForSequenceClassification</code> et <code>AutoTokenizer</code> fonctionnent ensemble pour créer un <code>pipeline()</code> comme celui que vous avez utilisé ci-dessus. Une <a href="./model_doc/auto">AutoClass</a> est un raccourci qui récupère automatiquement l’architecture d’un modèle pré-entraîné à partir de son nom ou de son emplacement. Il vous suffit de sélectionner l’<code>AutoClass</code> appropriée à votre tâche et la classe de prétraitement qui lui est associée.',Xs,Fe,Mn="Reprenons l’exemple de la section précédente et voyons comment vous pouvez utiliser l’<code>AutoClass</code> pour reproduire les résultats du <code>pipeline()</code>.",Fs,qe,qs,Ee,_n='Un tokenizer est chargé de prétraiter le texte pour en faire un tableau de chiffres qui servira d’entrée à un modèle. De nombreuses règles régissent le processus de tokenisation, notamment la manière de diviser un mot et le niveau auquel les mots doivent être divisés (pour en savoir plus sur la tokenisation, consultez le <a href="./tokenizer_summary">résumé</a>). La chose la plus importante à retenir est que vous devez instancier un tokenizer avec le même nom de modèle pour vous assurer que vous utilisez les mêmes règles de tokenisation que celles avec lesquelles un modèle a été pré-entraîné.',Es,Be,wn="Chargez un tokenizer avec <code>AutoTokenizer</code> :",Bs,Le,Ls,Ae,yn="Passez votre texte au tokenizer :",As,Ye,Ys,xe,vn="Le tokenizer retourne un dictionnaire contenant :",xs,Se,jn='<li><a href="./glossary#input-ids">input_ids</a>: la représentation numérique des tokens.</li> <li><a href=".glossary#attention-mask">attention_mask</a>: indique quels tokens doivent faire l’objet d’une attention particulière (plus particulièrement les tokens de remplissage).</li>',Ss,Qe,Tn="Un tokenizer peut également accepter une liste de textes, et remplir et tronquer le texte pour retourner un échantillon de longueur uniforme :",Qs,ae,Ps,re,Ds,Pe,Os,oe,Ks,ie,el,De,tl,ue,sl,Oe,kn="Une fonctionnalité particulièrement cool 🤗 Transformers est la possibilité d’enregistrer un modèle et de le recharger en tant que modèle PyTorch ou TensorFlow. Le paramètre <code>from_pt</code> ou <code>from_tf</code> permet de convertir le modèle d’un framework à l’autre :",ll,ce,nl,Ke,al,et,Jn="Vous pouvez modifier la configuration du modèle pour changer la façon dont un modèle est construit. La configuration spécifie les attributs d’un modèle, tels que le nombre de couches ou de têtes d’attention. Vous partez de zéro lorsque vous initialisez un modèle à partir d’une configuration personnalisée. Les attributs du modèle sont initialisés de manière aléatoire et vous devrez entraîner le modèle avant de pouvoir l’utiliser pour obtenir des résultats significatifs.",rl,tt,Un="Commencez par importer <code>AutoConfig</code>, puis chargez le modèle pré-entraîné que vous voulez modifier. Dans <code>AutoConfig.from_pretrained()</code>, vous pouvez spécifier l’attribut que vous souhaitez modifier, tel que le nombre de têtes d’attention :",ol,st,il,pe,ul,lt,Cn='Consultez le guide <a href="./create_a_model">Créer une architecture personnalisée</a> pour plus d’informations sur la création de configurations personnalisées.',cl,nt,pl,at,Zn='Tous les modèles sont des <a href="https://pytorch.org/docs/stable/nn.html#torch.nn.Module" rel="nofollow"><code>torch.nn.Module</code></a> standard, vous pouvez donc les utiliser dans n’importe quelle boucle d’entraînement typique. Bien que vous puissiez écrire votre propre boucle d’entraînement, 🤗 Transformers fournit une classe <code>Trainer</code> pour PyTorch, qui contient la boucle d’entraînement de base et ajoute des fonctionnalités supplémentaires comme l’entraînement distribué, la précision mixte, et plus encore.',ml,rt,zn="En fonction de votre tâche, vous passerez généralement les paramètres suivants à <code>Trainer</code> :",fl,B,ot,Pt,Gn='Un <code>PreTrainedModel</code> ou un <a href="https://pytorch.org/docs/stable/nn.html#torch.nn.Module" rel="nofollow"><code>torch.nn.Module</code></a>:',Rl,it,Il,ut,Dt,Vn="<code>TrainingArguments</code> contient les hyperparamètres du modèle que vous pouvez changer comme le taux d’apprentissage, la taille de l’échantillon, et le nombre d’époques pour s’entraîner. Les valeurs par défaut sont utilisées si vous ne spécifiez pas d’hyperparamètres d’apprentissage :",Wl,ct,Hl,pt,Ot,Rn="Une classe de prétraitement comme un tokenizer, un processeur d’images ou un extracteur de caractéristiques :",Nl,mt,Xl,ft,Kt,In="Chargez un jeu de données :",Fl,dt,ql,S,es,Wn="Créez une fonction qui transforme le texte du jeu de données en token :",El,gt,Bl,ts,Hn="Puis appliquez-la à l’intégralité du jeu de données avec <code>map</code>:",Ll,ht,Al,bt,ss,Nn="Un <code>DataCollatorWithPadding</code> pour créer un échantillon d’exemples à partir de votre jeu de données :",Yl,$t,dl,Mt,Xn="Maintenant, rassemblez tous ces éléments dans un <code>Trainer</code> :",gl,_t,hl,wt,Fn="Une fois que vous êtes prêt, appelez la fonction <code>train()</code> pour commencer l’entraînement :",bl,yt,$l,me,Ml,vt,qn="Vous pouvez personnaliser le comportement de la boucle d’apprentissage en redéfinissant les méthodes à l’intérieur de <code>Trainer</code>. Cela vous permet de personnaliser des caractéristiques telles que la fonction de perte, l’optimiseur et le planificateur. Consultez la documentation de <code>Trainer</code> pour savoir quelles méthodes peuvent être redéfinies.",_l,jt,En='L’autre moyen de personnaliser la boucle d’apprentissage est d’utiliser les <a href="./main_classes/callbacks">Callbacks</a>. Vous pouvez utiliser les callbacks pour intégrer d’autres bibliothèques et inspecter la boucle d’apprentissage afin de suivre la progression ou d’arrêter l’apprentissage plus tôt. Les callbacks ne modifient rien dans la boucle d’apprentissage elle-même. Pour personnaliser quelque chose comme la fonction de perte, vous devez redéfinir le <code>Trainer</code> à la place.',wl,Tt,yl,kt,Bn='Tous les modèles sont des modèles standard <a href="https://www.tensorflow.org/api_docs/python/tf/keras/Model" rel="nofollow"><code>tf.keras.Model</code></a> afin qu’ils puissent être entraînés avec TensorFlow avec l’API <a href="https://keras.io/" rel="nofollow">Keras</a>. 🤗 Transformers fournit la fonction <code>prepare_tf_dataset()</code> pour charger facilement votre jeu de données comme un <code>tf.data.Dataset</code> afin que vous puissiez commencer l’entraînement immédiatement avec les fonctions <a href="https://keras.io/api/models/model_training_apis/#compile-method" rel="nofollow"><code>compile</code></a> et <a href="https://keras.io/api/models/model_training_apis/#fit-method" rel="nofollow"><code>fit</code></a> de Keras.',vl,A,Jt,ls,Ln='Vous commencez avec un modèle <code>TFPreTrainedModel</code> ou <a href="https://www.tensorflow.org/api_docs/python/tf/keras/Model" rel="nofollow"><code>tf.keras.Model</code></a> :',xl,Ut,Sl,Ct,ns,An="Une classe de prétraitement comme un tokenizer, un processeur d’images ou un extracteur de caractéristiques :",Ql,Zt,Pl,zt,as,Yn="Créez une fonction qui transforme le texte du jeu de données en token :",Dl,Gt,Ol,Vt,rs,xn="Appliquez le tokenizer à l’ensemble du jeu de données avec <code>map</code> et passez ensuite le jeu de données et le tokenizer à <code>prepare_tf_dataset()</code>. Vous pouvez également modifier la taille de l’échantillon et mélanger le jeu de données ici si vous le souhaitez :",Kl,Rt,en,It,os,Sn="Une fois que vous êtes prêt, appelez les fonctions <code>compile</code> et <code>fit</code> pour commencer l’entraînement :",tn,Wt,jl,Ht,Tl,Nt,Qn="Maintenant que vous avez terminé la visite rapide de 🤗 Transformers, consultez nos guides et apprenez à faire des choses plus spécifiques comme créer un modèle personnalisé, finetuner un modèle pour une tâche, et comment entraîner un modèle avec un script. Si vous souhaitez en savoir plus sur les concepts fondamentaux de 🤗 Transformers, jetez un œil à nos guides conceptuels !",kl,us,Jl;return r=new P({props:{title:"Visite rapide",local:"visite-rapide",headingTag:"h1"}}),m=new mr({props:{classNames:"absolute z-10 right-0 top-0",options:[{label:"Mixed",value:"https://colab.research.google.com/github/huggingface/notebooks/blob/main/transformers_doc/fr/quicktour.ipynb"},{label:"PyTorch",value:"https://colab.research.google.com/github/huggingface/notebooks/blob/main/transformers_doc/fr/pytorch/quicktour.ipynb"},{label:"TensorFlow",value:"https://colab.research.google.com/github/huggingface/notebooks/blob/main/transformers_doc/fr/tensorflow/quicktour.ipynb"},{label:"Mixed",value:"https://studiolab.sagemaker.aws/import/github/huggingface/notebooks/blob/main/transformers_doc/fr/quicktour.ipynb"},{label:"PyTorch",value:"https://studiolab.sagemaker.aws/import/github/huggingface/notebooks/blob/main/transformers_doc/fr/pytorch/quicktour.ipynb"},{label:"TensorFlow",value:"https://studiolab.sagemaker.aws/import/github/huggingface/notebooks/blob/main/transformers_doc/fr/tensorflow/quicktour.ipynb"}]}}),U=new W({props:{code:"IXBpcCUyMGluc3RhbGwlMjB0cmFuc2Zvcm1lcnMlMjBkYXRhc2V0cw==",highlighted:"!pip install transformers datasets",wrap:!1}}),H=new Yt({props:{pytorch:!0,tensorflow:!0,jax:!1,$$slots:{tensorflow:[hr],pytorch:[dr]},$$scope:{ctx:o}}}),X=new P({props:{title:"Pipeline",local:"pipeline",headingTag:"h2"}}),fe=new On({props:{id:"tiZFewofSLM"}}),be=new W({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMHBpcGVsaW5lJTBBJTBBY2xhc3NpZmllciUyMCUzRCUyMHBpcGVsaW5lKCUyMnNlbnRpbWVudC1hbmFseXNpcyUyMik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline

<span class="hljs-meta">&gt;&gt;&gt; </span>classifier = pipeline(<span class="hljs-string">&quot;sentiment-analysis&quot;</span>)`,wrap:!1}}),Me=new W({props:{code:"Y2xhc3NpZmllciglMjJXZSUyMGFyZSUyMHZlcnklMjBoYXBweSUyMHRvJTIwc2hvdyUyMHlvdSUyMHRoZSUyMCVGMCU5RiVBNCU5NyUyMFRyYW5zZm9ybWVycyUyMGxpYnJhcnkuJTIyKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>classifier(<span class="hljs-string">&quot;We are very happy to show you the 🤗 Transformers library.&quot;</span>)
[{<span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;POSITIVE&#x27;</span>, <span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.9998</span>}]`,wrap:!1}}),we=new W({props:{code:"cmVzdWx0cyUyMCUzRCUyMGNsYXNzaWZpZXIoJTVCJTIyV2UlMjBhcmUlMjB2ZXJ5JTIwaGFwcHklMjB0byUyMHNob3clMjB5b3UlMjB0aGUlMjAlRjAlOUYlQTQlOTclMjBUcmFuc2Zvcm1lcnMlMjBsaWJyYXJ5LiUyMiUyQyUyMCUyMldlJTIwaG9wZSUyMHlvdSUyMGRvbid0JTIwaGF0ZSUyMGl0LiUyMiU1RCklMEFmb3IlMjByZXN1bHQlMjBpbiUyMHJlc3VsdHMlM0ElMEElMjAlMjAlMjAlMjBwcmludChmJTIybGFiZWwlM0ElMjAlN0JyZXN1bHQlNUInbGFiZWwnJTVEJTdEJTJDJTIwYXZlYyUyMGxlJTIwc2NvcmUlMjBkZSUzQSUyMCU3QnJvdW5kKHJlc3VsdCU1QidzY29yZSclNUQlMkMlMjA0KSU3RCUyMik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>results = classifier([<span class="hljs-string">&quot;We are very happy to show you the 🤗 Transformers library.&quot;</span>, <span class="hljs-string">&quot;We hope you don&#x27;t hate it.&quot;</span>])
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">for</span> result <span class="hljs-keyword">in</span> results:
<span class="hljs-meta">... </span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;label: <span class="hljs-subst">{result[<span class="hljs-string">&#x27;label&#x27;</span>]}</span>, avec le score de: <span class="hljs-subst">{<span class="hljs-built_in">round</span>(result[<span class="hljs-string">&#x27;score&#x27;</span>], <span class="hljs-number">4</span>)}</span>&quot;</span>)
label: POSITIVE, avec le score de: <span class="hljs-number">0.9998</span>
label: NEGATIVE, avec le score de: <span class="hljs-number">0.5309</span>`,wrap:!1}}),ve=new W({props:{code:"aW1wb3J0JTIwdG9yY2glMEFmcm9tJTIwdHJhbnNmb3JtZXJzJTIwaW1wb3J0JTIwcGlwZWxpbmUlMEElMEFzcGVlY2hfcmVjb2duaXplciUyMCUzRCUyMHBpcGVsaW5lKCUyMmF1dG9tYXRpYy1zcGVlY2gtcmVjb2duaXRpb24lMjIlMkMlMjBtb2RlbCUzRCUyMmZhY2Vib29rJTJGd2F2MnZlYzItYmFzZS05NjBoJTIyKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> torch
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline

<span class="hljs-meta">&gt;&gt;&gt; </span>speech_recognizer = pipeline(<span class="hljs-string">&quot;automatic-speech-recognition&quot;</span>, model=<span class="hljs-string">&quot;facebook/wav2vec2-base-960h&quot;</span>)`,wrap:!1}}),Te=new W({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTJDJTIwQXVkaW8lMEElMEFkYXRhc2V0JTIwJTNEJTIwbG9hZF9kYXRhc2V0KCUyMlBvbHlBSSUyRm1pbmRzMTQlMjIlMkMlMjBuYW1lJTNEJTIyZW4tVVMlMjIlMkMlMjBzcGxpdCUzRCUyMnRyYWluJTIyKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset, Audio

<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;PolyAI/minds14&quot;</span>, name=<span class="hljs-string">&quot;en-US&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>)`,wrap:!1}}),Je=new W({props:{code:"ZGF0YXNldCUyMCUzRCUyMGRhdGFzZXQuY2FzdF9jb2x1bW4oJTIyYXVkaW8lMjIlMkMlMjBBdWRpbyhzYW1wbGluZ19yYXRlJTNEc3BlZWNoX3JlY29nbml6ZXIuZmVhdHVyZV9leHRyYWN0b3Iuc2FtcGxpbmdfcmF0ZSkp",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = dataset.cast_column(<span class="hljs-string">&quot;audio&quot;</span>, Audio(sampling_rate=speech_recognizer.feature_extractor.sampling_rate))',wrap:!1}}),Ce=new W({props:{code:"cmVzdWx0JTIwJTNEJTIwc3BlZWNoX3JlY29nbml6ZXIoZGF0YXNldCU1QiUzQTQlNUQlNUIlMjJhdWRpbyUyMiU1RCklMEFwcmludCglNUJkJTVCJTIydGV4dCUyMiU1RCUyMGZvciUyMGQlMjBpbiUyMHJlc3VsdCU1RCk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>result = speech_recognizer(dataset[:<span class="hljs-number">4</span>][<span class="hljs-string">&quot;audio&quot;</span>])
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>([d[<span class="hljs-string">&quot;text&quot;</span>] <span class="hljs-keyword">for</span> d <span class="hljs-keyword">in</span> result])
[<span class="hljs-string">&#x27;I WOULD LIKE TO SET UP A JOINT ACCOUNT WITH MY PARTNER HOW DO I PROCEED WITH DOING THAT&#x27;</span>, <span class="hljs-string">&quot;FODING HOW I&#x27;D SET UP A JOIN TO HET WITH MY WIFE AND WHERE THE AP MIGHT BE&quot;</span>, <span class="hljs-string">&quot;I I&#x27;D LIKE TOY SET UP A JOINT ACCOUNT WITH MY PARTNER I&#x27;M NOT SEEING THE OPTION TO DO IT ON THE AP SO I CALLED IN TO GET SOME HELP CAN I JUST DO IT OVER THE PHONE WITH YOU AND GIVE YOU THE INFORMATION OR SHOULD I DO IT IN THE AP AND I&#x27;M MISSING SOMETHING UQUETTE HAD PREFERRED TO JUST DO IT OVER THE PHONE OF POSSIBLE THINGS&quot;</span>, <span class="hljs-string">&#x27;HOW DO I THURN A JOIN A COUNT&#x27;</span>]`,wrap:!1}}),ze=new P({props:{title:"Utiliser une autre modèle et tokenizer dans le pipeline",local:"utiliser-une-autre-modèle-et-tokenizer-dans-le-pipeline",headingTag:"h3"}}),Ve=new W({props:{code:"bW9kZWxfbmFtZSUyMCUzRCUyMCUyMm5scHRvd24lMkZiZXJ0LWJhc2UtbXVsdGlsaW5ndWFsLXVuY2FzZWQtc2VudGltZW50JTIy",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>model_name = <span class="hljs-string">&quot;nlptown/bert-base-multilingual-uncased-sentiment&quot;</span>',wrap:!1}}),ne=new Yt({props:{pytorch:!0,tensorflow:!0,jax:!1,$$slots:{tensorflow:[_r],pytorch:[$r]},$$scope:{ctx:o}}}),Ie=new W({props:{code:"Y2xhc3NpZmllciUyMCUzRCUyMHBpcGVsaW5lKCUyMnNlbnRpbWVudC1hbmFseXNpcyUyMiUyQyUyMG1vZGVsJTNEbW9kZWwlMkMlMjB0b2tlbml6ZXIlM0R0b2tlbml6ZXIpJTBBY2xhc3NpZmllciglMjJOb3VzJTIwc29tbWVzJTIwdHIlQzMlQThzJTIwaGV1cmV1eCUyMGRlJTIwdm91cyUyMHByJUMzJUE5c2VudGVyJTIwbGElMjBiaWJsaW90aCVDMyVBOHF1ZSUyMCVGMCU5RiVBNCU5NyUyMFRyYW5zZm9ybWVycy4lMjIp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>classifier = pipeline(<span class="hljs-string">&quot;sentiment-analysis&quot;</span>, model=model, tokenizer=tokenizer)
<span class="hljs-meta">&gt;&gt;&gt; </span>classifier(<span class="hljs-string">&quot;Nous sommes très heureux de vous présenter la bibliothèque 🤗 Transformers.&quot;</span>)
[{<span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;5 stars&#x27;</span>, <span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.7273</span>}]`,wrap:!1}}),He=new P({props:{title:"AutoClass",local:"autoclass",headingTag:"h2"}}),Ne=new On({props:{id:"AhChOFRegn4"}}),qe=new P({props:{title:"AutoTokenizer",local:"autotokenizer",headingTag:"h3"}}),Le=new W({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMEF1dG9Ub2tlbml6ZXIlMEElMEFtb2RlbF9uYW1lJTIwJTNEJTIwJTIybmxwdG93biUyRmJlcnQtYmFzZS1tdWx0aWxpbmd1YWwtdW5jYXNlZC1zZW50aW1lbnQlMjIlMEF0b2tlbml6ZXIlMjAlM0QlMjBBdXRvVG9rZW5pemVyLmZyb21fcHJldHJhaW5lZChtb2RlbF9uYW1lKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoTokenizer

<span class="hljs-meta">&gt;&gt;&gt; </span>model_name = <span class="hljs-string">&quot;nlptown/bert-base-multilingual-uncased-sentiment&quot;</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer = AutoTokenizer.from_pretrained(model_name)`,wrap:!1}}),Ye=new W({props:{code:"ZW5jb2RpbmclMjAlM0QlMjB0b2tlbml6ZXIoJTIyV2UlMjBhcmUlMjB2ZXJ5JTIwaGFwcHklMjB0byUyMHNob3clMjB5b3UlMjB0aGUlMjAlRjAlOUYlQTQlOTclMjBUcmFuc2Zvcm1lcnMlMjBsaWJyYXJ5LiUyMiklMEFwcmludChlbmNvZGluZyk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>encoding = tokenizer(<span class="hljs-string">&quot;We are very happy to show you the 🤗 Transformers library.&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(encoding)
{<span class="hljs-string">&#x27;input_ids&#x27;</span>: [<span class="hljs-number">101</span>, <span class="hljs-number">11312</span>, <span class="hljs-number">10320</span>, <span class="hljs-number">12495</span>, <span class="hljs-number">19308</span>, <span class="hljs-number">10114</span>, <span class="hljs-number">11391</span>, <span class="hljs-number">10855</span>, <span class="hljs-number">10103</span>, <span class="hljs-number">100</span>, <span class="hljs-number">58263</span>, <span class="hljs-number">13299</span>, <span class="hljs-number">119</span>, <span class="hljs-number">102</span>],
 <span class="hljs-string">&#x27;token_type_ids&#x27;</span>: [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>],
 <span class="hljs-string">&#x27;attention_mask&#x27;</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>]}`,wrap:!1}}),ae=new Yt({props:{pytorch:!0,tensorflow:!0,jax:!1,$$slots:{tensorflow:[jr],pytorch:[yr]},$$scope:{ctx:o}}}),re=new cs({props:{$$slots:{default:[Tr]},$$scope:{ctx:o}}}),Pe=new P({props:{title:"AutoModel",local:"automodel",headingTag:"h3"}}),oe=new Yt({props:{pytorch:!0,tensorflow:!0,jax:!1,$$slots:{tensorflow:[zr],pytorch:[Ur]},$$scope:{ctx:o}}}),ie=new cs({props:{$$slots:{default:[Gr]},$$scope:{ctx:o}}}),De=new P({props:{title:"Sauvegarder un modèle",local:"sauvegarder-un-modèle",headingTag:"h3"}}),ue=new Yt({props:{pytorch:!0,tensorflow:!0,jax:!1,$$slots:{tensorflow:[Wr],pytorch:[Rr]},$$scope:{ctx:o}}}),ce=new Yt({props:{pytorch:!0,tensorflow:!0,jax:!1,$$slots:{tensorflow:[Fr],pytorch:[Nr]},$$scope:{ctx:o}}}),Ke=new P({props:{title:"Constructions de modèles personnalisés",local:"constructions-de-modèles-personnalisés",headingTag:"h2"}}),st=new W({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMEF1dG9Db25maWclMEElMEFteV9jb25maWclMjAlM0QlMjBBdXRvQ29uZmlnLmZyb21fcHJldHJhaW5lZCglMjJkaXN0aWxiZXJ0JTJGZGlzdGlsYmVydC1iYXNlLXVuY2FzZWQlMjIlMkMlMjBuX2hlYWRzJTNEMTIp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoConfig

<span class="hljs-meta">&gt;&gt;&gt; </span>my_config = AutoConfig.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>, n_heads=<span class="hljs-number">12</span>)`,wrap:!1}}),pe=new Yt({props:{pytorch:!0,tensorflow:!0,jax:!1,$$slots:{tensorflow:[Lr],pytorch:[Er]},$$scope:{ctx:o}}}),nt=new P({props:{title:"Trainer - une boucle d’entraînement optimisée par PyTorch",local:"trainer---une-boucle-dentraînement-optimisée-par-pytorch",headingTag:"h2"}}),it=new W({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMEF1dG9Nb2RlbEZvclNlcXVlbmNlQ2xhc3NpZmljYXRpb24lMEElMEFtb2RlbCUyMCUzRCUyMEF1dG9Nb2RlbEZvclNlcXVlbmNlQ2xhc3NpZmljYXRpb24uZnJvbV9wcmV0cmFpbmVkKCUyMmRpc3RpbGJlcnQlMkZkaXN0aWxiZXJ0LWJhc2UtdW5jYXNlZCUyMik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoModelForSequenceClassification

<span class="hljs-meta">&gt;&gt;&gt; </span>model = AutoModelForSequenceClassification.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>)`,wrap:!1}}),ct=new W({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMFRyYWluaW5nQXJndW1lbnRzJTBBJTBBdHJhaW5pbmdfYXJncyUyMCUzRCUyMFRyYWluaW5nQXJndW1lbnRzKCUwQSUyMCUyMCUyMCUyMG91dHB1dF9kaXIlM0QlMjJwYXRoJTJGdG8lMkZzYXZlJTJGZm9sZGVyJTJGJTIyJTJDJTBBJTIwJTIwJTIwJTIwbGVhcm5pbmdfcmF0ZSUzRDJlLTUlMkMlMEElMjAlMjAlMjAlMjBwZXJfZGV2aWNlX3RyYWluX2JhdGNoX3NpemUlM0Q4JTJDJTBBJTIwJTIwJTIwJTIwcGVyX2RldmljZV9ldmFsX2JhdGNoX3NpemUlM0Q4JTJDJTBBJTIwJTIwJTIwJTIwbnVtX3RyYWluX2Vwb2NocyUzRDIlMkMlMEEp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> TrainingArguments

<span class="hljs-meta">&gt;&gt;&gt; </span>training_args = TrainingArguments(
<span class="hljs-meta">... </span>    output_dir=<span class="hljs-string">&quot;path/to/save/folder/&quot;</span>,
<span class="hljs-meta">... </span>    learning_rate=<span class="hljs-number">2e-5</span>,
<span class="hljs-meta">... </span>    per_device_train_batch_size=<span class="hljs-number">8</span>,
<span class="hljs-meta">... </span>    per_device_eval_batch_size=<span class="hljs-number">8</span>,
<span class="hljs-meta">... </span>    num_train_epochs=<span class="hljs-number">2</span>,
<span class="hljs-meta">... </span>)`,wrap:!1}}),mt=new W({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMEF1dG9Ub2tlbml6ZXIlMEElMEF0b2tlbml6ZXIlMjAlM0QlMjBBdXRvVG9rZW5pemVyLmZyb21fcHJldHJhaW5lZCglMjJkaXN0aWxiZXJ0JTJGZGlzdGlsYmVydC1iYXNlLXVuY2FzZWQlMjIp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoTokenizer

<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer = AutoTokenizer.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>)`,wrap:!1}}),dt=new W({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBJTBBZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJyb3R0ZW5fdG9tYXRvZXMlMjIpJTIwJTIwJTIzJTIwZG9jdGVzdCUzQSUyMCUyQklHTk9SRV9SRVNVTFQ=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset

<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;rotten_tomatoes&quot;</span>)  <span class="hljs-comment"># doctest: +IGNORE_RESULT</span>`,wrap:!1}}),gt=new W({props:{code:"ZGVmJTIwdG9rZW5pemVfZGF0YXNldChkYXRhc2V0KSUzQSUwQSUyMCUyMCUyMCUyMHJldHVybiUyMHRva2VuaXplcihkYXRhc2V0JTVCJTIydGV4dCUyMiU1RCk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">def</span> <span class="hljs-title function_">tokenize_dataset</span>(<span class="hljs-params">dataset</span>):
<span class="hljs-meta">... </span>    <span class="hljs-keyword">return</span> tokenizer(dataset[<span class="hljs-string">&quot;text&quot;</span>])`,wrap:!1}}),ht=new W({props:{code:"ZGF0YXNldCUyMCUzRCUyMGRhdGFzZXQubWFwKHRva2VuaXplX2RhdGFzZXQlMkMlMjBiYXRjaGVkJTNEVHJ1ZSk=",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = dataset.<span class="hljs-built_in">map</span>(tokenize_dataset, batched=<span class="hljs-literal">True</span>)',wrap:!1}}),$t=new W({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMERhdGFDb2xsYXRvcldpdGhQYWRkaW5nJTBBJTBBZGF0YV9jb2xsYXRvciUyMCUzRCUyMERhdGFDb2xsYXRvcldpdGhQYWRkaW5nKHRva2VuaXplciUzRHRva2VuaXplcik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> DataCollatorWithPadding

<span class="hljs-meta">&gt;&gt;&gt; </span>data_collator = DataCollatorWithPadding(tokenizer=tokenizer)`,wrap:!1}}),_t=new W({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMFRyYWluZXIlMEElMEF0cmFpbmVyJTIwJTNEJTIwVHJhaW5lciglMEElMjAlMjAlMjAlMjBtb2RlbCUzRG1vZGVsJTJDJTBBJTIwJTIwJTIwJTIwYXJncyUzRHRyYWluaW5nX2FyZ3MlMkMlMEElMjAlMjAlMjAlMjB0cmFpbl9kYXRhc2V0JTNEZGF0YXNldCU1QiUyMnRyYWluJTIyJTVEJTJDJTBBJTIwJTIwJTIwJTIwZXZhbF9kYXRhc2V0JTNEZGF0YXNldCU1QiUyMnRlc3QlMjIlNUQlMkMlMEElMjAlMjAlMjAlMjB0b2tlbml6ZXIlM0R0b2tlbml6ZXIlMkMlMEElMjAlMjAlMjAlMjBkYXRhX2NvbGxhdG9yJTNEZGF0YV9jb2xsYXRvciUyQyUwQSklMjAlMjAlMjMlMjBkb2N0ZXN0JTNBJTIwJTJCU0tJUA==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> Trainer

<span class="hljs-meta">&gt;&gt;&gt; </span>trainer = Trainer(
<span class="hljs-meta">... </span>    model=model,
<span class="hljs-meta">... </span>    args=training_args,
<span class="hljs-meta">... </span>    train_dataset=dataset[<span class="hljs-string">&quot;train&quot;</span>],
<span class="hljs-meta">... </span>    eval_dataset=dataset[<span class="hljs-string">&quot;test&quot;</span>],
<span class="hljs-meta">... </span>    tokenizer=tokenizer,
<span class="hljs-meta">... </span>    data_collator=data_collator,
<span class="hljs-meta">... </span>)  <span class="hljs-comment"># doctest: +SKIP</span>`,wrap:!1}}),yt=new W({props:{code:"dHJhaW5lci50cmFpbigp",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>trainer.train()',wrap:!1}}),me=new cs({props:{$$slots:{default:[Ar]},$$scope:{ctx:o}}}),Tt=new P({props:{title:"Entraînement avec TensorFlow",local:"entraînement-avec-tensorflow",headingTag:"h2"}}),Ut=new W({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMFRGQXV0b01vZGVsRm9yU2VxdWVuY2VDbGFzc2lmaWNhdGlvbiUwQSUwQW1vZGVsJTIwJTNEJTIwVEZBdXRvTW9kZWxGb3JTZXF1ZW5jZUNsYXNzaWZpY2F0aW9uLmZyb21fcHJldHJhaW5lZCglMjJkaXN0aWxiZXJ0JTJGZGlzdGlsYmVydC1iYXNlLXVuY2FzZWQlMjIp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> TFAutoModelForSequenceClassification

<span class="hljs-meta">&gt;&gt;&gt; </span>model = TFAutoModelForSequenceClassification.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>)`,wrap:!1}}),Zt=new W({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMEF1dG9Ub2tlbml6ZXIlMEElMEF0b2tlbml6ZXIlMjAlM0QlMjBBdXRvVG9rZW5pemVyLmZyb21fcHJldHJhaW5lZCglMjJkaXN0aWxiZXJ0JTJGZGlzdGlsYmVydC1iYXNlLXVuY2FzZWQlMjIp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoTokenizer

<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer = AutoTokenizer.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>)`,wrap:!1}}),Gt=new W({props:{code:"ZGVmJTIwdG9rZW5pemVfZGF0YXNldChkYXRhc2V0KSUzQSUwQSUyMCUyMCUyMCUyMHJldHVybiUyMHRva2VuaXplcihkYXRhc2V0JTVCJTIydGV4dCUyMiU1RCklMjAlMjAlMjMlMjBkb2N0ZXN0JTNBJTIwJTJCU0tJUA==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">def</span> <span class="hljs-title function_">tokenize_dataset</span>(<span class="hljs-params">dataset</span>):
<span class="hljs-meta">... </span>    <span class="hljs-keyword">return</span> tokenizer(dataset[<span class="hljs-string">&quot;text&quot;</span>])  <span class="hljs-comment"># doctest: +SKIP</span>`,wrap:!1}}),Rt=new W({props:{code:"ZGF0YXNldCUyMCUzRCUyMGRhdGFzZXQubWFwKHRva2VuaXplX2RhdGFzZXQpJTIwJTIwJTIzJTIwZG9jdGVzdCUzQSUyMCUyQlNLSVAlMEF0Zl9kYXRhc2V0JTIwJTNEJTIwbW9kZWwucHJlcGFyZV90Zl9kYXRhc2V0KCUwQSUyMCUyMCUyMCUyMGRhdGFzZXQlMkMlMjBiYXRjaF9zaXplJTNEMTYlMkMlMjBzaHVmZmxlJTNEVHJ1ZSUyQyUyMHRva2VuaXplciUzRHRva2VuaXplciUwQSklMjAlMjAlMjMlMjBkb2N0ZXN0JTNBJTIwJTJCU0tJUA==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = dataset.<span class="hljs-built_in">map</span>(tokenize_dataset)  <span class="hljs-comment"># doctest: +SKIP</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>tf_dataset = model.prepare_tf_dataset(
<span class="hljs-meta">... </span>    dataset, batch_size=<span class="hljs-number">16</span>, shuffle=<span class="hljs-literal">True</span>, tokenizer=tokenizer
<span class="hljs-meta">... </span>)  <span class="hljs-comment"># doctest: +SKIP</span>`,wrap:!1}}),Wt=new W({props:{code:"ZnJvbSUyMHRlbnNvcmZsb3cua2VyYXMub3B0aW1pemVycyUyMGltcG9ydCUyMEFkYW0lMEElMEFtb2RlbC5jb21waWxlKG9wdGltaXplciUzREFkYW0oM2UtNSkpJTBBbW9kZWwuZml0KGRhdGFzZXQpJTIwJTIwJTIzJTIwZG9jdGVzdCUzQSUyMCUyQlNLSVA=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> tensorflow.keras.optimizers <span class="hljs-keyword">import</span> Adam

<span class="hljs-meta">&gt;&gt;&gt; </span>model.<span class="hljs-built_in">compile</span>(optimizer=Adam(<span class="hljs-number">3e-5</span>))
<span class="hljs-meta">&gt;&gt;&gt; </span>model.fit(dataset)  <span class="hljs-comment"># doctest: +SKIP</span>`,wrap:!1}}),Ht=new P({props:{title:"Et après ?",local:"et-après-",headingTag:"h2"}}),{c(){e=$("meta"),n=d(),t=$("p"),s=d(),_(r.$$.fragment),a=d(),_(m.$$.fragment),p=d(),T=$("p"),T.innerHTML=V,v=d(),Z=$("p"),Z.textContent=z,k=d(),_(U.$$.fragment),I=d(),N=$("p"),N.textContent=b,J=d(),_(H.$$.fragment),E=d(),_(X.$$.fragment),ps=d(),_(fe.$$.fragment),ms=d(),de=$("p"),de.innerHTML=nn,fs=d(),ge=$("table"),ge.innerHTML=an,ds=d(),he=$("p"),he.innerHTML=rn,gs=d(),_(be.$$.fragment),hs=d(),$e=$("p"),$e.innerHTML=on,bs=d(),_(Me.$$.fragment),$s=d(),_e=$("p"),_e.innerHTML=un,Ms=d(),_(we.$$.fragment),_s=d(),ye=$("p"),ye.innerHTML=cn,ws=d(),_(ve.$$.fragment),ys=d(),je=$("p"),je.innerHTML=pn,vs=d(),_(Te.$$.fragment),js=d(),ke=$("p"),ke.innerHTML=mn,Ts=d(),_(Je.$$.fragment),ks=d(),Ue=$("p"),Ue.innerHTML=fn,Js=d(),_(Ce.$$.fragment),Us=d(),Ze=$("p"),Ze.innerHTML=dn,Cs=d(),_(ze.$$.fragment),Zs=d(),Ge=$("p"),Ge.innerHTML=gn,zs=d(),_(Ve.$$.fragment),Gs=d(),_(ne.$$.fragment),Vs=d(),Re=$("p"),Re.innerHTML=hn,Rs=d(),_(Ie.$$.fragment),Is=d(),We=$("p"),We.innerHTML=bn,Ws=d(),_(He.$$.fragment),Hs=d(),_(Ne.$$.fragment),Ns=d(),Xe=$("p"),Xe.innerHTML=$n,Xs=d(),Fe=$("p"),Fe.innerHTML=Mn,Fs=d(),_(qe.$$.fragment),qs=d(),Ee=$("p"),Ee.innerHTML=_n,Es=d(),Be=$("p"),Be.innerHTML=wn,Bs=d(),_(Le.$$.fragment),Ls=d(),Ae=$("p"),Ae.textContent=yn,As=d(),_(Ye.$$.fragment),Ys=d(),xe=$("p"),xe.textContent=vn,xs=d(),Se=$("ul"),Se.innerHTML=jn,Ss=d(),Qe=$("p"),Qe.textContent=Tn,Qs=d(),_(ae.$$.fragment),Ps=d(),_(re.$$.fragment),Ds=d(),_(Pe.$$.fragment),Os=d(),_(oe.$$.fragment),Ks=d(),_(ie.$$.fragment),el=d(),_(De.$$.fragment),tl=d(),_(ue.$$.fragment),sl=d(),Oe=$("p"),Oe.innerHTML=kn,ll=d(),_(ce.$$.fragment),nl=d(),_(Ke.$$.fragment),al=d(),et=$("p"),et.textContent=Jn,rl=d(),tt=$("p"),tt.innerHTML=Un,ol=d(),_(st.$$.fragment),il=d(),_(pe.$$.fragment),ul=d(),lt=$("p"),lt.innerHTML=Cn,cl=d(),_(nt.$$.fragment),pl=d(),at=$("p"),at.innerHTML=Zn,ml=d(),rt=$("p"),rt.innerHTML=zn,fl=d(),B=$("ol"),ot=$("li"),Pt=$("p"),Pt.innerHTML=Gn,Rl=d(),_(it.$$.fragment),Il=d(),ut=$("li"),Dt=$("p"),Dt.innerHTML=Vn,Wl=d(),_(ct.$$.fragment),Hl=d(),pt=$("li"),Ot=$("p"),Ot.textContent=Rn,Nl=d(),_(mt.$$.fragment),Xl=d(),ft=$("li"),Kt=$("p"),Kt.textContent=In,Fl=d(),_(dt.$$.fragment),ql=d(),S=$("li"),es=$("p"),es.textContent=Wn,El=d(),_(gt.$$.fragment),Bl=d(),ts=$("p"),ts.innerHTML=Hn,Ll=d(),_(ht.$$.fragment),Al=d(),bt=$("li"),ss=$("p"),ss.innerHTML=Nn,Yl=d(),_($t.$$.fragment),dl=d(),Mt=$("p"),Mt.innerHTML=Xn,gl=d(),_(_t.$$.fragment),hl=d(),wt=$("p"),wt.innerHTML=Fn,bl=d(),_(yt.$$.fragment),$l=d(),_(me.$$.fragment),Ml=d(),vt=$("p"),vt.innerHTML=qn,_l=d(),jt=$("p"),jt.innerHTML=En,wl=d(),_(Tt.$$.fragment),yl=d(),kt=$("p"),kt.innerHTML=Bn,vl=d(),A=$("ol"),Jt=$("li"),ls=$("p"),ls.innerHTML=Ln,xl=d(),_(Ut.$$.fragment),Sl=d(),Ct=$("li"),ns=$("p"),ns.textContent=An,Ql=d(),_(Zt.$$.fragment),Pl=d(),zt=$("li"),as=$("p"),as.textContent=Yn,Dl=d(),_(Gt.$$.fragment),Ol=d(),Vt=$("li"),rs=$("p"),rs.innerHTML=xn,Kl=d(),_(Rt.$$.fragment),en=d(),It=$("li"),os=$("p"),os.innerHTML=Sn,tn=d(),_(Wt.$$.fragment),jl=d(),_(Ht.$$.fragment),Tl=d(),Nt=$("p"),Nt.textContent=Qn,kl=d(),us=$("p"),this.h()},l(l){const u=Ta("svelte-u9bgzb",document.head);e=M(u,"META",{name:!0,content:!0}),u.forEach(i),n=g(l),t=M(l,"P",{}),q(t).forEach(i),s=g(l),j(r.$$.fragment,l),a=g(l),j(m.$$.fragment,l),p=g(l),T=M(l,"P",{"data-svelte-h":!0}),C(T)!=="svelte-vr2sou"&&(T.innerHTML=V),v=g(l),Z=M(l,"P",{"data-svelte-h":!0}),C(Z)!=="svelte-1lwwiz3"&&(Z.textContent=z),k=g(l),j(U.$$.fragment,l),I=g(l),N=M(l,"P",{"data-svelte-h":!0}),C(N)!=="svelte-1rwo4hx"&&(N.textContent=b),J=g(l),j(H.$$.fragment,l),E=g(l),j(X.$$.fragment,l),ps=g(l),j(fe.$$.fragment,l),ms=g(l),de=M(l,"P",{"data-svelte-h":!0}),C(de)!=="svelte-diawec"&&(de.innerHTML=nn),fs=g(l),ge=M(l,"TABLE",{"data-svelte-h":!0}),C(ge)!=="svelte-j6r2oa"&&(ge.innerHTML=an),ds=g(l),he=M(l,"P",{"data-svelte-h":!0}),C(he)!=="svelte-1mnlxfw"&&(he.innerHTML=rn),gs=g(l),j(be.$$.fragment,l),hs=g(l),$e=M(l,"P",{"data-svelte-h":!0}),C($e)!=="svelte-1wywptq"&&($e.innerHTML=on),bs=g(l),j(Me.$$.fragment,l),$s=g(l),_e=M(l,"P",{"data-svelte-h":!0}),C(_e)!=="svelte-12mesn1"&&(_e.innerHTML=un),Ms=g(l),j(we.$$.fragment,l),_s=g(l),ye=M(l,"P",{"data-svelte-h":!0}),C(ye)!=="svelte-s53bue"&&(ye.innerHTML=cn),ws=g(l),j(ve.$$.fragment,l),ys=g(l),je=M(l,"P",{"data-svelte-h":!0}),C(je)!=="svelte-169znql"&&(je.innerHTML=pn),vs=g(l),j(Te.$$.fragment,l),js=g(l),ke=M(l,"P",{"data-svelte-h":!0}),C(ke)!=="svelte-1jruj82"&&(ke.innerHTML=mn),Ts=g(l),j(Je.$$.fragment,l),ks=g(l),Ue=M(l,"P",{"data-svelte-h":!0}),C(Ue)!=="svelte-xwgbt2"&&(Ue.innerHTML=fn),Js=g(l),j(Ce.$$.fragment,l),Us=g(l),Ze=M(l,"P",{"data-svelte-h":!0}),C(Ze)!=="svelte-1r0yiy1"&&(Ze.innerHTML=dn),Cs=g(l),j(ze.$$.fragment,l),Zs=g(l),Ge=M(l,"P",{"data-svelte-h":!0}),C(Ge)!=="svelte-vlb8tg"&&(Ge.innerHTML=gn),zs=g(l),j(Ve.$$.fragment,l),Gs=g(l),j(ne.$$.fragment,l),Vs=g(l),Re=M(l,"P",{"data-svelte-h":!0}),C(Re)!=="svelte-1wii3i6"&&(Re.innerHTML=hn),Rs=g(l),j(Ie.$$.fragment,l),Is=g(l),We=M(l,"P",{"data-svelte-h":!0}),C(We)!=="svelte-dyz30m"&&(We.innerHTML=bn),Ws=g(l),j(He.$$.fragment,l),Hs=g(l),j(Ne.$$.fragment,l),Ns=g(l),Xe=M(l,"P",{"data-svelte-h":!0}),C(Xe)!=="svelte-r2a25l"&&(Xe.innerHTML=$n),Xs=g(l),Fe=M(l,"P",{"data-svelte-h":!0}),C(Fe)!=="svelte-zarsne"&&(Fe.innerHTML=Mn),Fs=g(l),j(qe.$$.fragment,l),qs=g(l),Ee=M(l,"P",{"data-svelte-h":!0}),C(Ee)!=="svelte-ico8ln"&&(Ee.innerHTML=_n),Es=g(l),Be=M(l,"P",{"data-svelte-h":!0}),C(Be)!=="svelte-1443uc4"&&(Be.innerHTML=wn),Bs=g(l),j(Le.$$.fragment,l),Ls=g(l),Ae=M(l,"P",{"data-svelte-h":!0}),C(Ae)!=="svelte-hqshqp"&&(Ae.textContent=yn),As=g(l),j(Ye.$$.fragment,l),Ys=g(l),xe=M(l,"P",{"data-svelte-h":!0}),C(xe)!=="svelte-v6iyrc"&&(xe.textContent=vn),xs=g(l),Se=M(l,"UL",{"data-svelte-h":!0}),C(Se)!=="svelte-vrc8j3"&&(Se.innerHTML=jn),Ss=g(l),Qe=M(l,"P",{"data-svelte-h":!0}),C(Qe)!=="svelte-1tq6lmh"&&(Qe.textContent=Tn),Qs=g(l),j(ae.$$.fragment,l),Ps=g(l),j(re.$$.fragment,l),Ds=g(l),j(Pe.$$.fragment,l),Os=g(l),j(oe.$$.fragment,l),Ks=g(l),j(ie.$$.fragment,l),el=g(l),j(De.$$.fragment,l),tl=g(l),j(ue.$$.fragment,l),sl=g(l),Oe=M(l,"P",{"data-svelte-h":!0}),C(Oe)!=="svelte-1r7xdyt"&&(Oe.innerHTML=kn),ll=g(l),j(ce.$$.fragment,l),nl=g(l),j(Ke.$$.fragment,l),al=g(l),et=M(l,"P",{"data-svelte-h":!0}),C(et)!=="svelte-db0cw6"&&(et.textContent=Jn),rl=g(l),tt=M(l,"P",{"data-svelte-h":!0}),C(tt)!=="svelte-167u7gt"&&(tt.innerHTML=Un),ol=g(l),j(st.$$.fragment,l),il=g(l),j(pe.$$.fragment,l),ul=g(l),lt=M(l,"P",{"data-svelte-h":!0}),C(lt)!=="svelte-1r90hyn"&&(lt.innerHTML=Cn),cl=g(l),j(nt.$$.fragment,l),pl=g(l),at=M(l,"P",{"data-svelte-h":!0}),C(at)!=="svelte-1q21dsn"&&(at.innerHTML=Zn),ml=g(l),rt=M(l,"P",{"data-svelte-h":!0}),C(rt)!=="svelte-99e4ob"&&(rt.innerHTML=zn),fl=g(l),B=M(l,"OL",{});var L=q(B);ot=M(L,"LI",{});var Xt=q(ot);Pt=M(Xt,"P",{"data-svelte-h":!0}),C(Pt)!=="svelte-1jv4hhd"&&(Pt.innerHTML=Gn),Rl=g(Xt),j(it.$$.fragment,Xt),Xt.forEach(i),Il=g(L),ut=M(L,"LI",{});var Ft=q(ut);Dt=M(Ft,"P",{"data-svelte-h":!0}),C(Dt)!=="svelte-1yj0hk2"&&(Dt.innerHTML=Vn),Wl=g(Ft),j(ct.$$.fragment,Ft),Ft.forEach(i),Hl=g(L),pt=M(L,"LI",{});var qt=q(pt);Ot=M(qt,"P",{"data-svelte-h":!0}),C(Ot)!=="svelte-r825cf"&&(Ot.textContent=Rn),Nl=g(qt),j(mt.$$.fragment,qt),qt.forEach(i),Xl=g(L),ft=M(L,"LI",{});var Et=q(ft);Kt=M(Et,"P",{"data-svelte-h":!0}),C(Kt)!=="svelte-1kirs02"&&(Kt.textContent=In),Fl=g(Et),j(dt.$$.fragment,Et),Et.forEach(i),ql=g(L),S=M(L,"LI",{});var Q=q(S);es=M(Q,"P",{"data-svelte-h":!0}),C(es)!=="svelte-mrg27e"&&(es.textContent=Wn),El=g(Q),j(gt.$$.fragment,Q),Bl=g(Q),ts=M(Q,"P",{"data-svelte-h":!0}),C(ts)!=="svelte-b1wucr"&&(ts.innerHTML=Hn),Ll=g(Q),j(ht.$$.fragment,Q),Q.forEach(i),Al=g(L),bt=M(L,"LI",{});var Bt=q(bt);ss=M(Bt,"P",{"data-svelte-h":!0}),C(ss)!=="svelte-1tw7dc4"&&(ss.innerHTML=Nn),Yl=g(Bt),j($t.$$.fragment,Bt),Bt.forEach(i),L.forEach(i),dl=g(l),Mt=M(l,"P",{"data-svelte-h":!0}),C(Mt)!=="svelte-t2plaj"&&(Mt.innerHTML=Xn),gl=g(l),j(_t.$$.fragment,l),hl=g(l),wt=M(l,"P",{"data-svelte-h":!0}),C(wt)!=="svelte-8bzvuq"&&(wt.innerHTML=Fn),bl=g(l),j(yt.$$.fragment,l),$l=g(l),j(me.$$.fragment,l),Ml=g(l),vt=M(l,"P",{"data-svelte-h":!0}),C(vt)!=="svelte-dfgg6p"&&(vt.innerHTML=qn),_l=g(l),jt=M(l,"P",{"data-svelte-h":!0}),C(jt)!=="svelte-fmt849"&&(jt.innerHTML=En),wl=g(l),j(Tt.$$.fragment,l),yl=g(l),kt=M(l,"P",{"data-svelte-h":!0}),C(kt)!=="svelte-mjotdu"&&(kt.innerHTML=Bn),vl=g(l),A=M(l,"OL",{});var x=q(A);Jt=M(x,"LI",{});var Lt=q(Jt);ls=M(Lt,"P",{"data-svelte-h":!0}),C(ls)!=="svelte-lingj7"&&(ls.innerHTML=Ln),xl=g(Lt),j(Ut.$$.fragment,Lt),Lt.forEach(i),Sl=g(x),Ct=M(x,"LI",{});var At=q(Ct);ns=M(At,"P",{"data-svelte-h":!0}),C(ns)!=="svelte-r825cf"&&(ns.textContent=An),Ql=g(At),j(Zt.$$.fragment,At),At.forEach(i),Pl=g(x),zt=M(x,"LI",{});var Ul=q(zt);as=M(Ul,"P",{"data-svelte-h":!0}),C(as)!=="svelte-mrg27e"&&(as.textContent=Yn),Dl=g(Ul),j(Gt.$$.fragment,Ul),Ul.forEach(i),Ol=g(x),Vt=M(x,"LI",{});var Cl=q(Vt);rs=M(Cl,"P",{"data-svelte-h":!0}),C(rs)!=="svelte-i4hy8i"&&(rs.innerHTML=xn),Kl=g(Cl),j(Rt.$$.fragment,Cl),Cl.forEach(i),en=g(x),It=M(x,"LI",{});var Zl=q(It);os=M(Zl,"P",{"data-svelte-h":!0}),C(os)!=="svelte-67jufr"&&(os.innerHTML=Sn),tn=g(Zl),j(Wt.$$.fragment,Zl),Zl.forEach(i),x.forEach(i),jl=g(l),j(Ht.$$.fragment,l),Tl=g(l),Nt=M(l,"P",{"data-svelte-h":!0}),C(Nt)!=="svelte-103j6m"&&(Nt.textContent=Qn),kl=g(l),us=M(l,"P",{}),q(us).forEach(i),this.h()},h(){G(e,"name","hf:doc:metadata"),G(e,"content",xr)},m(l,u){R(document.head,e),c(l,n,u),c(l,t,u),c(l,s,u),w(r,l,u),c(l,a,u),w(m,l,u),c(l,p,u),c(l,T,u),c(l,v,u),c(l,Z,u),c(l,k,u),w(U,l,u),c(l,I,u),c(l,N,u),c(l,J,u),w(H,l,u),c(l,E,u),w(X,l,u),c(l,ps,u),w(fe,l,u),c(l,ms,u),c(l,de,u),c(l,fs,u),c(l,ge,u),c(l,ds,u),c(l,he,u),c(l,gs,u),w(be,l,u),c(l,hs,u),c(l,$e,u),c(l,bs,u),w(Me,l,u),c(l,$s,u),c(l,_e,u),c(l,Ms,u),w(we,l,u),c(l,_s,u),c(l,ye,u),c(l,ws,u),w(ve,l,u),c(l,ys,u),c(l,je,u),c(l,vs,u),w(Te,l,u),c(l,js,u),c(l,ke,u),c(l,Ts,u),w(Je,l,u),c(l,ks,u),c(l,Ue,u),c(l,Js,u),w(Ce,l,u),c(l,Us,u),c(l,Ze,u),c(l,Cs,u),w(ze,l,u),c(l,Zs,u),c(l,Ge,u),c(l,zs,u),w(Ve,l,u),c(l,Gs,u),w(ne,l,u),c(l,Vs,u),c(l,Re,u),c(l,Rs,u),w(Ie,l,u),c(l,Is,u),c(l,We,u),c(l,Ws,u),w(He,l,u),c(l,Hs,u),w(Ne,l,u),c(l,Ns,u),c(l,Xe,u),c(l,Xs,u),c(l,Fe,u),c(l,Fs,u),w(qe,l,u),c(l,qs,u),c(l,Ee,u),c(l,Es,u),c(l,Be,u),c(l,Bs,u),w(Le,l,u),c(l,Ls,u),c(l,Ae,u),c(l,As,u),w(Ye,l,u),c(l,Ys,u),c(l,xe,u),c(l,xs,u),c(l,Se,u),c(l,Ss,u),c(l,Qe,u),c(l,Qs,u),w(ae,l,u),c(l,Ps,u),w(re,l,u),c(l,Ds,u),w(Pe,l,u),c(l,Os,u),w(oe,l,u),c(l,Ks,u),w(ie,l,u),c(l,el,u),w(De,l,u),c(l,tl,u),w(ue,l,u),c(l,sl,u),c(l,Oe,u),c(l,ll,u),w(ce,l,u),c(l,nl,u),w(Ke,l,u),c(l,al,u),c(l,et,u),c(l,rl,u),c(l,tt,u),c(l,ol,u),w(st,l,u),c(l,il,u),w(pe,l,u),c(l,ul,u),c(l,lt,u),c(l,cl,u),w(nt,l,u),c(l,pl,u),c(l,at,u),c(l,ml,u),c(l,rt,u),c(l,fl,u),c(l,B,u),R(B,ot),R(ot,Pt),R(ot,Rl),w(it,ot,null),R(B,Il),R(B,ut),R(ut,Dt),R(ut,Wl),w(ct,ut,null),R(B,Hl),R(B,pt),R(pt,Ot),R(pt,Nl),w(mt,pt,null),R(B,Xl),R(B,ft),R(ft,Kt),R(ft,Fl),w(dt,ft,null),R(B,ql),R(B,S),R(S,es),R(S,El),w(gt,S,null),R(S,Bl),R(S,ts),R(S,Ll),w(ht,S,null),R(B,Al),R(B,bt),R(bt,ss),R(bt,Yl),w($t,bt,null),c(l,dl,u),c(l,Mt,u),c(l,gl,u),w(_t,l,u),c(l,hl,u),c(l,wt,u),c(l,bl,u),w(yt,l,u),c(l,$l,u),w(me,l,u),c(l,Ml,u),c(l,vt,u),c(l,_l,u),c(l,jt,u),c(l,wl,u),w(Tt,l,u),c(l,yl,u),c(l,kt,u),c(l,vl,u),c(l,A,u),R(A,Jt),R(Jt,ls),R(Jt,xl),w(Ut,Jt,null),R(A,Sl),R(A,Ct),R(Ct,ns),R(Ct,Ql),w(Zt,Ct,null),R(A,Pl),R(A,zt),R(zt,as),R(zt,Dl),w(Gt,zt,null),R(A,Ol),R(A,Vt),R(Vt,rs),R(Vt,Kl),w(Rt,Vt,null),R(A,en),R(A,It),R(It,os),R(It,tn),w(Wt,It,null),c(l,jl,u),w(Ht,l,u),c(l,Tl,u),c(l,Nt,u),c(l,kl,u),c(l,us,u),Jl=!0},p(l,[u]){const L={};u&2&&(L.$$scope={dirty:u,ctx:l}),H.$set(L);const Xt={};u&2&&(Xt.$$scope={dirty:u,ctx:l}),ne.$set(Xt);const Ft={};u&2&&(Ft.$$scope={dirty:u,ctx:l}),ae.$set(Ft);const qt={};u&2&&(qt.$$scope={dirty:u,ctx:l}),re.$set(qt);const Et={};u&2&&(Et.$$scope={dirty:u,ctx:l}),oe.$set(Et);const Q={};u&2&&(Q.$$scope={dirty:u,ctx:l}),ie.$set(Q);const Bt={};u&2&&(Bt.$$scope={dirty:u,ctx:l}),ue.$set(Bt);const x={};u&2&&(x.$$scope={dirty:u,ctx:l}),ce.$set(x);const Lt={};u&2&&(Lt.$$scope={dirty:u,ctx:l}),pe.$set(Lt);const At={};u&2&&(At.$$scope={dirty:u,ctx:l}),me.$set(At)},i(l){Jl||(f(r.$$.fragment,l),f(m.$$.fragment,l),f(U.$$.fragment,l),f(H.$$.fragment,l),f(X.$$.fragment,l),f(fe.$$.fragment,l),f(be.$$.fragment,l),f(Me.$$.fragment,l),f(we.$$.fragment,l),f(ve.$$.fragment,l),f(Te.$$.fragment,l),f(Je.$$.fragment,l),f(Ce.$$.fragment,l),f(ze.$$.fragment,l),f(Ve.$$.fragment,l),f(ne.$$.fragment,l),f(Ie.$$.fragment,l),f(He.$$.fragment,l),f(Ne.$$.fragment,l),f(qe.$$.fragment,l),f(Le.$$.fragment,l),f(Ye.$$.fragment,l),f(ae.$$.fragment,l),f(re.$$.fragment,l),f(Pe.$$.fragment,l),f(oe.$$.fragment,l),f(ie.$$.fragment,l),f(De.$$.fragment,l),f(ue.$$.fragment,l),f(ce.$$.fragment,l),f(Ke.$$.fragment,l),f(st.$$.fragment,l),f(pe.$$.fragment,l),f(nt.$$.fragment,l),f(it.$$.fragment,l),f(ct.$$.fragment,l),f(mt.$$.fragment,l),f(dt.$$.fragment,l),f(gt.$$.fragment,l),f(ht.$$.fragment,l),f($t.$$.fragment,l),f(_t.$$.fragment,l),f(yt.$$.fragment,l),f(me.$$.fragment,l),f(Tt.$$.fragment,l),f(Ut.$$.fragment,l),f(Zt.$$.fragment,l),f(Gt.$$.fragment,l),f(Rt.$$.fragment,l),f(Wt.$$.fragment,l),f(Ht.$$.fragment,l),Jl=!0)},o(l){h(r.$$.fragment,l),h(m.$$.fragment,l),h(U.$$.fragment,l),h(H.$$.fragment,l),h(X.$$.fragment,l),h(fe.$$.fragment,l),h(be.$$.fragment,l),h(Me.$$.fragment,l),h(we.$$.fragment,l),h(ve.$$.fragment,l),h(Te.$$.fragment,l),h(Je.$$.fragment,l),h(Ce.$$.fragment,l),h(ze.$$.fragment,l),h(Ve.$$.fragment,l),h(ne.$$.fragment,l),h(Ie.$$.fragment,l),h(He.$$.fragment,l),h(Ne.$$.fragment,l),h(qe.$$.fragment,l),h(Le.$$.fragment,l),h(Ye.$$.fragment,l),h(ae.$$.fragment,l),h(re.$$.fragment,l),h(Pe.$$.fragment,l),h(oe.$$.fragment,l),h(ie.$$.fragment,l),h(De.$$.fragment,l),h(ue.$$.fragment,l),h(ce.$$.fragment,l),h(Ke.$$.fragment,l),h(st.$$.fragment,l),h(pe.$$.fragment,l),h(nt.$$.fragment,l),h(it.$$.fragment,l),h(ct.$$.fragment,l),h(mt.$$.fragment,l),h(dt.$$.fragment,l),h(gt.$$.fragment,l),h(ht.$$.fragment,l),h($t.$$.fragment,l),h(_t.$$.fragment,l),h(yt.$$.fragment,l),h(me.$$.fragment,l),h(Tt.$$.fragment,l),h(Ut.$$.fragment,l),h(Zt.$$.fragment,l),h(Gt.$$.fragment,l),h(Rt.$$.fragment,l),h(Wt.$$.fragment,l),h(Ht.$$.fragment,l),Jl=!1},d(l){l&&(i(n),i(t),i(s),i(a),i(p),i(T),i(v),i(Z),i(k),i(I),i(N),i(J),i(E),i(ps),i(ms),i(de),i(fs),i(ge),i(ds),i(he),i(gs),i(hs),i($e),i(bs),i($s),i(_e),i(Ms),i(_s),i(ye),i(ws),i(ys),i(je),i(vs),i(js),i(ke),i(Ts),i(ks),i(Ue),i(Js),i(Us),i(Ze),i(Cs),i(Zs),i(Ge),i(zs),i(Gs),i(Vs),i(Re),i(Rs),i(Is),i(We),i(Ws),i(Hs),i(Ns),i(Xe),i(Xs),i(Fe),i(Fs),i(qs),i(Ee),i(Es),i(Be),i(Bs),i(Ls),i(Ae),i(As),i(Ys),i(xe),i(xs),i(Se),i(Ss),i(Qe),i(Qs),i(Ps),i(Ds),i(Os),i(Ks),i(el),i(tl),i(sl),i(Oe),i(ll),i(nl),i(al),i(et),i(rl),i(tt),i(ol),i(il),i(ul),i(lt),i(cl),i(pl),i(at),i(ml),i(rt),i(fl),i(B),i(dl),i(Mt),i(gl),i(hl),i(wt),i(bl),i($l),i(Ml),i(vt),i(_l),i(jt),i(wl),i(yl),i(kt),i(vl),i(A),i(jl),i(Tl),i(Nt),i(kl),i(us)),i(e),y(r,l),y(m,l),y(U,l),y(H,l),y(X,l),y(fe,l),y(be,l),y(Me,l),y(we,l),y(ve,l),y(Te,l),y(Je,l),y(Ce,l),y(ze,l),y(Ve,l),y(ne,l),y(Ie,l),y(He,l),y(Ne,l),y(qe,l),y(Le,l),y(Ye,l),y(ae,l),y(re,l),y(Pe,l),y(oe,l),y(ie,l),y(De,l),y(ue,l),y(ce,l),y(Ke,l),y(st,l),y(pe,l),y(nt,l),y(it),y(ct),y(mt),y(dt),y(gt),y(ht),y($t),y(_t,l),y(yt,l),y(me,l),y(Tt,l),y(Ut),y(Zt),y(Gt),y(Rt),y(Wt),y(Ht,l)}}}const xr='{"title":"Visite rapide","local":"visite-rapide","sections":[{"title":"Pipeline","local":"pipeline","sections":[{"title":"Utiliser une autre modèle et tokenizer dans le pipeline","local":"utiliser-une-autre-modèle-et-tokenizer-dans-le-pipeline","sections":[],"depth":3}],"depth":2},{"title":"AutoClass","local":"autoclass","sections":[{"title":"AutoTokenizer","local":"autotokenizer","sections":[],"depth":3},{"title":"AutoModel","local":"automodel","sections":[],"depth":3},{"title":"Sauvegarder un modèle","local":"sauvegarder-un-modèle","sections":[],"depth":3}],"depth":2},{"title":"Constructions de modèles personnalisés","local":"constructions-de-modèles-personnalisés","sections":[],"depth":2},{"title":"Trainer - une boucle d’entraînement optimisée par PyTorch","local":"trainer---une-boucle-dentraînement-optimisée-par-pytorch","sections":[],"depth":2},{"title":"Entraînement avec TensorFlow","local":"entraînement-avec-tensorflow","sections":[],"depth":2},{"title":"Et après ?","local":"et-après-","sections":[],"depth":2}],"depth":1}';function Sr(o){return sn(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class to extends St{constructor(e){super(),Qt(this,e,Sr,Yr,xt,{})}}export{to as component};
