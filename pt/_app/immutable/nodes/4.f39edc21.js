import{s as lt,o as rt,n as Y}from"../chunks/scheduler.d586627e.js";import{S as it,i as pt,g as u,s as r,r as g,A as mt,h as d,f as t,c as i,j as at,u as $,x as f,k as ot,y as ct,a,v as b,d as h,t as y,w as j}from"../chunks/index.8589a59c.js";import{T as ws}from"../chunks/Tip.84e2336e.js";import{C as w}from"../chunks/CodeBlock.47c46d2c.js";import{F as nt,M as ks}from"../chunks/Markdown.67fc2fa9.js";import{H as Ce}from"../chunks/Heading.a70e045b.js";function ut(Z){let o,c='Voc√™ pode tamb√©m salvar seu arquivo de configura√ß√µes como um dicion√°rio ou at√© mesmo com a diferen√ßa entre as seus atributos de configura√ß√£o customizados e os atributos de configura√ß√£o padr√µes! Olhe a documenta√ß√£o <a href="main_classes/configuration">configuration</a> para mais detalhes.';return{c(){o=u("p"),o.innerHTML=c},l(n){o=d(n,"P",{"data-svelte-h":!0}),f(o)!=="svelte-1w3c9xg"&&(o.innerHTML=c)},m(n,p){a(n,o,p)},p:Y,d(n){n&&t(o)}}}function dt(Z){let o,c="Carregar seus atributos de configura√ß√£o customizados em um modelo:",n,p,v,M,x="Isso cria um modelo com valores aleat√≥rios ao inv√©s de pr√©-treinar os pesos. Voc√™ n√£o ir√° conseguir usar usar esse modelo para nada √∫til ainda, at√© voc√™ treinar ele. Treino √© um processo caro e demorado. Geralmente √© melhor utilizar um modelo pr√©-treinado para obter melhores resultados mais r√°pido, enquanto usa apenas uma fra√ß√£o dos recursos necess√°rios para treinar.",J,_,k="Criar um modelo pr√©-treinado com <code>from_pretrained()</code>:",m,q,z,R,W="Quando voc√™ carregar os pesos pr√©-treinados, a configura√ß√£o padr√£o do modelo √© automaticamente carregada se o modelo √© provido pelo ü§ó Transformers. No entanto, voc√™ ainda consegue mudar - alguns ou todos - os atributos padr√µes de configura√ß√£o do modelo com os seus pr√≥prio atributos, se voc√™ preferir:",U,C,V;return p=new w({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMERpc3RpbEJlcnRNb2RlbCUwQSUwQW15X2NvbmZpZyUyMCUzRCUyMERpc3RpbEJlcnRDb25maWcuZnJvbV9wcmV0cmFpbmVkKCUyMi4lMkZ5b3VyX21vZGVsX3NhdmVfcGF0aCUyRm15X2NvbmZpZy5qc29uJTIyKSUwQW1vZGVsJTIwJTNEJTIwRGlzdGlsQmVydE1vZGVsKG15X2NvbmZpZyk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> DistilBertModel

<span class="hljs-meta">&gt;&gt;&gt; </span>my_config = DistilBertConfig.from_pretrained(<span class="hljs-string">&quot;./your_model_save_path/my_config.json&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>model = DistilBertModel(my_config)`,wrap:!1}}),q=new w({props:{code:"bW9kZWwlMjAlM0QlMjBEaXN0aWxCZXJ0TW9kZWwuZnJvbV9wcmV0cmFpbmVkKCUyMmRpc3RpbGJlcnQlMkZkaXN0aWxiZXJ0LWJhc2UtdW5jYXNlZCUyMik=",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>model = DistilBertModel.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>)',wrap:!1}}),C=new w({props:{code:"bW9kZWwlMjAlM0QlMjBEaXN0aWxCZXJ0TW9kZWwuZnJvbV9wcmV0cmFpbmVkKCUyMmRpc3RpbGJlcnQlMkZkaXN0aWxiZXJ0LWJhc2UtdW5jYXNlZCUyMiUyQyUyMGNvbmZpZyUzRG15X2NvbmZpZyk=",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>model = DistilBertModel.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>, config=my_config)',wrap:!1}}),{c(){o=u("p"),o.textContent=c,n=r(),g(p.$$.fragment),v=r(),M=u("p"),M.textContent=x,J=r(),_=u("p"),_.innerHTML=k,m=r(),g(q.$$.fragment),z=r(),R=u("p"),R.textContent=W,U=r(),g(C.$$.fragment)},l(l){o=d(l,"P",{"data-svelte-h":!0}),f(o)!=="svelte-1c03gen"&&(o.textContent=c),n=i(l),$(p.$$.fragment,l),v=i(l),M=d(l,"P",{"data-svelte-h":!0}),f(M)!=="svelte-13tdbko"&&(M.textContent=x),J=i(l),_=d(l,"P",{"data-svelte-h":!0}),f(_)!=="svelte-11s0isn"&&(_.innerHTML=k),m=i(l),$(q.$$.fragment,l),z=i(l),R=d(l,"P",{"data-svelte-h":!0}),f(R)!=="svelte-1c3dpxi"&&(R.textContent=W),U=i(l),$(C.$$.fragment,l)},m(l,T){a(l,o,T),a(l,n,T),b(p,l,T),a(l,v,T),a(l,M,T),a(l,J,T),a(l,_,T),a(l,m,T),b(q,l,T),a(l,z,T),a(l,R,T),a(l,U,T),b(C,l,T),V=!0},p:Y,i(l){V||(h(p.$$.fragment,l),h(q.$$.fragment,l),h(C.$$.fragment,l),V=!0)},o(l){y(p.$$.fragment,l),y(q.$$.fragment,l),y(C.$$.fragment,l),V=!1},d(l){l&&(t(o),t(n),t(v),t(M),t(J),t(_),t(m),t(z),t(R),t(U)),j(p,l),j(q,l),j(C,l)}}}function ft(Z){let o,c;return o=new ks({props:{$$slots:{default:[dt]},$$scope:{ctx:Z}}}),{c(){g(o.$$.fragment)},l(n){$(o.$$.fragment,n)},m(n,p){b(o,n,p),c=!0},p(n,p){const v={};p&2&&(v.$$scope={dirty:p,ctx:n}),o.$set(v)},i(n){c||(h(o.$$.fragment,n),c=!0)},o(n){y(o.$$.fragment,n),c=!1},d(n){j(o,n)}}}function gt(Z){let o,c="Carregar os seus pr√≥prios atributos padr√µes de contigura√ß√£o no modelo:",n,p,v,M,x="Isso cria um modelo com valores aleat√≥rios ao inv√©s de pr√©-treinar os pesos. Voc√™ n√£o ir√° conseguir usar usar esse modelo para nada √∫til ainda, at√© voc√™ treinar ele. Treino √© um processo caro e demorado. Geralmente √© melhor utilizar um modelo pr√©-treinado para obter melhores resultados mais r√°pido, enquanto usa apenas uma fra√ß√£o dos recursos necess√°rios para treinar.",J,_,k="Criar um modelo pr√©-treinado com <code>from_pretrained()</code>:",m,q,z,R,W="Quando voc√™ carregar os pesos pr√©-treinados, a configura√ß√£o padr√£o do modelo √© automaticamente carregada se o modelo √© provido pelo ü§ó Transformers. No entanto, voc√™ ainda consegue mudar - alguns ou todos - os atributos padr√µes de configura√ß√£o do modelo com os seus pr√≥prio atributos, se voc√™ preferir:",U,C,V;return p=new w({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMFRGRGlzdGlsQmVydE1vZGVsJTBBJTBBbXlfY29uZmlnJTIwJTNEJTIwRGlzdGlsQmVydENvbmZpZy5mcm9tX3ByZXRyYWluZWQoJTIyLiUyRnlvdXJfbW9kZWxfc2F2ZV9wYXRoJTJGbXlfY29uZmlnLmpzb24lMjIpJTBBdGZfbW9kZWwlMjAlM0QlMjBURkRpc3RpbEJlcnRNb2RlbChteV9jb25maWcp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> TFDistilBertModel

<span class="hljs-meta">&gt;&gt;&gt; </span>my_config = DistilBertConfig.from_pretrained(<span class="hljs-string">&quot;./your_model_save_path/my_config.json&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>tf_model = TFDistilBertModel(my_config)`,wrap:!1}}),q=new w({props:{code:"dGZfbW9kZWwlMjAlM0QlMjBURkRpc3RpbEJlcnRNb2RlbC5mcm9tX3ByZXRyYWluZWQoJTIyZGlzdGlsYmVydCUyRmRpc3RpbGJlcnQtYmFzZS11bmNhc2VkJTIyKQ==",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>tf_model = TFDistilBertModel.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>)',wrap:!1}}),C=new w({props:{code:"dGZfbW9kZWwlMjAlM0QlMjBURkRpc3RpbEJlcnRNb2RlbC5mcm9tX3ByZXRyYWluZWQoJTIyZGlzdGlsYmVydCUyRmRpc3RpbGJlcnQtYmFzZS11bmNhc2VkJTIyJTJDJTIwY29uZmlnJTNEbXlfY29uZmlnKQ==",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>tf_model = TFDistilBertModel.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>, config=my_config)',wrap:!1}}),{c(){o=u("p"),o.textContent=c,n=r(),g(p.$$.fragment),v=r(),M=u("p"),M.textContent=x,J=r(),_=u("p"),_.innerHTML=k,m=r(),g(q.$$.fragment),z=r(),R=u("p"),R.textContent=W,U=r(),g(C.$$.fragment)},l(l){o=d(l,"P",{"data-svelte-h":!0}),f(o)!=="svelte-k13ol"&&(o.textContent=c),n=i(l),$(p.$$.fragment,l),v=i(l),M=d(l,"P",{"data-svelte-h":!0}),f(M)!=="svelte-13tdbko"&&(M.textContent=x),J=i(l),_=d(l,"P",{"data-svelte-h":!0}),f(_)!=="svelte-11s0isn"&&(_.innerHTML=k),m=i(l),$(q.$$.fragment,l),z=i(l),R=d(l,"P",{"data-svelte-h":!0}),f(R)!=="svelte-1c3dpxi"&&(R.textContent=W),U=i(l),$(C.$$.fragment,l)},m(l,T){a(l,o,T),a(l,n,T),b(p,l,T),a(l,v,T),a(l,M,T),a(l,J,T),a(l,_,T),a(l,m,T),b(q,l,T),a(l,z,T),a(l,R,T),a(l,U,T),b(C,l,T),V=!0},p:Y,i(l){V||(h(p.$$.fragment,l),h(q.$$.fragment,l),h(C.$$.fragment,l),V=!0)},o(l){y(p.$$.fragment,l),y(q.$$.fragment,l),y(C.$$.fragment,l),V=!1},d(l){l&&(t(o),t(n),t(v),t(M),t(J),t(_),t(m),t(z),t(R),t(U)),j(p,l),j(q,l),j(C,l)}}}function $t(Z){let o,c;return o=new ks({props:{$$slots:{default:[gt]},$$scope:{ctx:Z}}}),{c(){g(o.$$.fragment)},l(n){$(o.$$.fragment,n)},m(n,p){b(o,n,p),c=!0},p(n,p){const v={};p&2&&(v.$$scope={dirty:p,ctx:n}),o.$set(v)},i(n){c||(h(o.$$.fragment,n),c=!0)},o(n){y(o.$$.fragment,n),c=!1},d(n){j(o,n)}}}function bt(Z){let o,c="Por exemplo, <code>DistilBertForSequenceClassification</code> √© um modelo DistilBERT base com uma head de classifica√ß√£o de sequ√™ncia. A head de calssifica√ß√£o de sequ√™ncia √© uma camada linear no topo das sa√≠das agrupadas.",n,p,v,M,x="Reutilize facilmente esse ponto de parada para outra tarefe mudando para uma head de modelo diferente. Para uma tarefe de responder quest√µes, voc√™ usaria a head do modelo <code>DistilBertForQuestionAnswering</code>. A head de responder quest√µes √© similar com a de classifica√ß√£o de sequ√™ncias exceto o fato de que ela √© uma camada no topo dos estados das sa√≠das ocultas.",J,_,k;return p=new w({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMERpc3RpbEJlcnRGb3JTZXF1ZW5jZUNsYXNzaWZpY2F0aW9uJTBBJTBBbW9kZWwlMjAlM0QlMjBEaXN0aWxCZXJ0Rm9yU2VxdWVuY2VDbGFzc2lmaWNhdGlvbi5mcm9tX3ByZXRyYWluZWQoJTIyZGlzdGlsYmVydCUyRmRpc3RpbGJlcnQtYmFzZS11bmNhc2VkJTIyKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> DistilBertForSequenceClassification

<span class="hljs-meta">&gt;&gt;&gt; </span>model = DistilBertForSequenceClassification.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>)`,wrap:!1}}),_=new w({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMERpc3RpbEJlcnRGb3JRdWVzdGlvbkFuc3dlcmluZyUwQSUwQW1vZGVsJTIwJTNEJTIwRGlzdGlsQmVydEZvclF1ZXN0aW9uQW5zd2VyaW5nLmZyb21fcHJldHJhaW5lZCglMjJkaXN0aWxiZXJ0JTJGZGlzdGlsYmVydC1iYXNlLXVuY2FzZWQlMjIp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> DistilBertForQuestionAnswering

<span class="hljs-meta">&gt;&gt;&gt; </span>model = DistilBertForQuestionAnswering.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>)`,wrap:!1}}),{c(){o=u("p"),o.innerHTML=c,n=r(),g(p.$$.fragment),v=r(),M=u("p"),M.innerHTML=x,J=r(),g(_.$$.fragment)},l(m){o=d(m,"P",{"data-svelte-h":!0}),f(o)!=="svelte-qzae0f"&&(o.innerHTML=c),n=i(m),$(p.$$.fragment,m),v=i(m),M=d(m,"P",{"data-svelte-h":!0}),f(M)!=="svelte-i9bvsw"&&(M.innerHTML=x),J=i(m),$(_.$$.fragment,m)},m(m,q){a(m,o,q),a(m,n,q),b(p,m,q),a(m,v,q),a(m,M,q),a(m,J,q),b(_,m,q),k=!0},p:Y,i(m){k||(h(p.$$.fragment,m),h(_.$$.fragment,m),k=!0)},o(m){y(p.$$.fragment,m),y(_.$$.fragment,m),k=!1},d(m){m&&(t(o),t(n),t(v),t(M),t(J)),j(p,m),j(_,m)}}}function ht(Z){let o,c;return o=new ks({props:{$$slots:{default:[bt]},$$scope:{ctx:Z}}}),{c(){g(o.$$.fragment)},l(n){$(o.$$.fragment,n)},m(n,p){b(o,n,p),c=!0},p(n,p){const v={};p&2&&(v.$$scope={dirty:p,ctx:n}),o.$set(v)},i(n){c||(h(o.$$.fragment,n),c=!0)},o(n){y(o.$$.fragment,n),c=!1},d(n){j(o,n)}}}function yt(Z){let o,c="Por exemplo, <code>TFDistilBertForSequenceClassification</code> √© um modelo DistilBERT base com uma head de classifica√ß√£o de sequ√™ncia. A head de calssifica√ß√£o de sequ√™ncia √© uma camada linear no topo das sa√≠das agrupadas.",n,p,v,M,x="Reutilize facilmente esse ponto de parada para outra tarefe mudando para uma head de modelo diferente. Para uma tarefe de responder quest√µes, voc√™ usaria a head do modelo <code>TFDistilBertForQuestionAnswering</code>. A head de responder quest√µes √© similar com a de classifica√ß√£o de sequ√™ncias exceto o fato de que ela √© uma camada no topo dos estados das sa√≠das ocultas.",J,_,k;return p=new w({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMFRGRGlzdGlsQmVydEZvclNlcXVlbmNlQ2xhc3NpZmljYXRpb24lMEElMEF0Zl9tb2RlbCUyMCUzRCUyMFRGRGlzdGlsQmVydEZvclNlcXVlbmNlQ2xhc3NpZmljYXRpb24uZnJvbV9wcmV0cmFpbmVkKCUyMmRpc3RpbGJlcnQlMkZkaXN0aWxiZXJ0LWJhc2UtdW5jYXNlZCUyMik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> TFDistilBertForSequenceClassification

<span class="hljs-meta">&gt;&gt;&gt; </span>tf_model = TFDistilBertForSequenceClassification.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>)`,wrap:!1}}),_=new w({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMFRGRGlzdGlsQmVydEZvclF1ZXN0aW9uQW5zd2VyaW5nJTBBJTBBdGZfbW9kZWwlMjAlM0QlMjBURkRpc3RpbEJlcnRGb3JRdWVzdGlvbkFuc3dlcmluZy5mcm9tX3ByZXRyYWluZWQoJTIyZGlzdGlsYmVydCUyRmRpc3RpbGJlcnQtYmFzZS11bmNhc2VkJTIyKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> TFDistilBertForQuestionAnswering

<span class="hljs-meta">&gt;&gt;&gt; </span>tf_model = TFDistilBertForQuestionAnswering.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>)`,wrap:!1}}),{c(){o=u("p"),o.innerHTML=c,n=r(),g(p.$$.fragment),v=r(),M=u("p"),M.innerHTML=x,J=r(),g(_.$$.fragment)},l(m){o=d(m,"P",{"data-svelte-h":!0}),f(o)!=="svelte-1sg0zkd"&&(o.innerHTML=c),n=i(m),$(p.$$.fragment,m),v=i(m),M=d(m,"P",{"data-svelte-h":!0}),f(M)!=="svelte-s66f56"&&(M.innerHTML=x),J=i(m),$(_.$$.fragment,m)},m(m,q){a(m,o,q),a(m,n,q),b(p,m,q),a(m,v,q),a(m,M,q),a(m,J,q),b(_,m,q),k=!0},p:Y,i(m){k||(h(p.$$.fragment,m),h(_.$$.fragment,m),k=!0)},o(m){y(p.$$.fragment,m),y(_.$$.fragment,m),k=!1},d(m){m&&(t(o),t(n),t(v),t(M),t(J)),j(p,m),j(_,m)}}}function jt(Z){let o,c;return o=new ks({props:{$$slots:{default:[yt]},$$scope:{ctx:Z}}}),{c(){g(o.$$.fragment)},l(n){$(o.$$.fragment,n)},m(n,p){b(o,n,p),c=!0},p(n,p){const v={};p&2&&(v.$$scope={dirty:p,ctx:n}),o.$set(v)},i(n){c||(h(o.$$.fragment,n),c=!0)},o(n){y(o.$$.fragment,n),c=!1},d(n){j(o,n)}}}function vt(Z){let o,c='Nem todo modelo suporta um ‚Äòfast tokenizer‚Äô. De uma olhada aqui <a href="index#supported-frameworks">table</a> pra checar se um modelo suporta ‚Äòfast tokenizer‚Äô.';return{c(){o=u("p"),o.innerHTML=c},l(n){o=d(n,"P",{"data-svelte-h":!0}),f(o)!=="svelte-za00d2"&&(o.innerHTML=c)},m(n,p){a(n,o,p)},p:Y,d(n){n&&t(o)}}}function Mt(Z){let o,c="Pos padr√£o, <code>AutoTokenizer</code> tentar√° carregar um ‚Äòfast tokenizer‚Äô. Voc√™ pode disabilitar esse comportamento colocando <code>use_fast=False</code> no <code>from_pretrained</code>.";return{c(){o=u("p"),o.innerHTML=c},l(n){o=d(n,"P",{"data-svelte-h":!0}),f(o)!=="svelte-7idicq"&&(o.innerHTML=c)},m(n,p){a(n,o,p)},p:Y,d(n){n&&t(o)}}}function _t(Z){let o,c="Se voc√™ n√£o estiver procurando por nenhuma customiza√ß√£o, apenas use o m√©todo <code>from_pretrained</code> para carregar par√¢metros do modelo de extrator de features padr√£o.";return{c(){o=u("p"),o.innerHTML=c},l(n){o=d(n,"P",{"data-svelte-h":!0}),f(o)!=="svelte-1y4q9rq"&&(o.innerHTML=c)},m(n,p){a(n,o,p)},p:Y,d(n){n&&t(o)}}}function qt(Z){let o,c,n,p,v,M,x,J='Uma <a href="model_doc/auto"><code>AutoClass</code></a> automaticamente infere a arquitetura do modelo e baixa configura√ß√µes e pesos pr√©-treinados. Geralmente, n√≥s recomendamos usar uma <code>AutoClass</code> para produzir um c√≥digo independente de checkpoints. Mas usu√°rios que querem mais contole sobre par√¢metros espec√≠ficos do modelo pode criar um modelo customizado ü§ó Transformers a partir de algumas classes bases. Isso pode ser particulamente √∫til para algu√©m que est√° interessado em estudar, treinar ou fazer experimentos com um modelo ü§ó Transformers. Nesse tutorial, ser√° explicado como criar um modelo customizado sem uma <code>AutoClass</code>. Aprenda como:',_,k,m="<li>Carregar e customizar a configura√ß√£o de um modelo.</li> <li>Criar a arquitetura de um modelo.</li> <li>Criar um tokenizer r√°pido e devagar para textos.</li> <li>Criar extrator de features para tarefas envolvendo audio e imagem.</li> <li>Criar um processador para tarefas multimodais.</li>",q,z,R,W,U='A <a href="main_classes/configuration">configuration</a> refere-se a atributos espec√≠ficos de um modelo. Cada configura√ß√£o de modelo tem atributos diferentes; por exemplo, todos modelo de PLN possuem os atributos <code>hidden_size</code>, <code>num_attention_heads</code>, <code>num_hidden_layers</code> e <code>vocab_size</code> em comum. Esse atributos especificam o numero de ‚Äòattention heads‚Äô ou ‚Äòhidden layers‚Äô para construir um modelo.',C,V,l='D√™ uma olhada a mais em <a href="model_doc/distilbert">DistilBERT</a> acessando <code>DistilBertConfig</code> para observar esses atributos:',T,L,ze,N,Js="<code>DistilBertConfig</code> mostra todos os atributos padr√µes usados para construir um <code>DistilBertModel</code> base. Todos atributos s√£o customiz√°veis, o que cria espa√ßo para experimentos. Por exemplo, voc√™ pode customizar um modelo padr√£o para:",Ve,Q,Rs="<li>Tentar uma fun√ß√£o de ativa√ß√£o diferente com o par√¢metro <code>activation</code>.</li> <li>Usar uma taxa de desist√™ncia maior para as probabilidades de ‚Äòattention‚Äô com o par√¢metro <code>attention_dropout</code>.</li>",We,I,Ue,P,Cs="Atributos de um modelo pr√©-treinado podem ser modificados na fun√ß√£o <code>from_pretrained()</code>:",Ge,D,Xe,S,xs="Uma vez que voc√™ est√° satisfeito com as configura√ß√µes do seu modelo, voc√™ consegue salvar elas com <code>save_pretrained()</code>. Seu arquivo de configura√ß√µes est√° salvo como um arquivo JSON no diret√≥rio especificado:",He,A,Fe,K,zs="Para reusar o arquivo de configura√ß√µes, carregue com <code>from_pretrained()</code>:",Ee,O,Be,G,Ye,ee,Le,se,Vs='O pr√≥ximo passo √© criar um <a href="main_classes/models">model</a>. O modelo - tamb√©m vagamente referido como arquitetura - define o que cada camada est√° fazendo e quais opera√ß√µes est√£o acontecendo. Atributos como <code>num_hidden_layers</code> das configura√ß√µes s√£o utilizados para definir a arquitetura. Todo modelo compartilha a classe base <code>PreTrainedModel</code> e alguns m√©todos em comum como redimensionar o tamanho dos embeddings de entrada e podar as ‚Äòself-attention heads‚Äô. Al√©m disso, todos os modelos tamb√©m s√£o subclasses de <a href="https://pytorch.org/docs/stable/generated/torch.nn.Module.html" rel="nofollow"><code>torch.nn.Module</code></a>, <a href="https://www.tensorflow.org/api_docs/python/tf/keras/Model" rel="nofollow"><code>tf.keras.Model</code></a> ou <a href="https://flax.readthedocs.io/en/latest/api_reference/flax.linen/module.html" rel="nofollow"><code>flax.linen.Module</code></a>. Isso significa que os modelos s√£o compat√≠veis com cada respectivo uso de framework.',Ne,X,Qe,te,Ie,ae,Ws="Neste ponto, voc√™ tem um modelo b√°sico do DistilBERT que gera os <em>estados ocultos</em>. Os estados ocultos s√£o passados como entrada para a head do moelo para produzir a sa√≠da final. ü§ó Transformers fornece uma head de modelo diferente para cada tarefa desde que o modelo suporte essa tarefa (por exemplo, voc√™ n√£o consegue utilizar o modelo DistilBERT para uma tarefa de ‚Äòsequence-to-sequence‚Äô como tradu√ß√£o).",Pe,H,De,oe,Se,ne,Us='A √∫tlima classe base que voc√™ precisa antes de usar um modelo para dados textuais √© a <a href="main_classes/tokenizer">tokenizer</a> para converter textos originais para tensores. Existem dois tipos de tokenizers que voc√™ pode usar com ü§ó Transformers:',Ae,le,Gs='<li><code>PreTrainedTokenizer</code>: uma implementa√ß√£o em Python de um tokenizer.</li> <li><code>PreTrainedTokenizerFast</code>: um tokenizer da nossa biblioteca <a href="https://huggingface.co/docs/tokenizers/python/latest/" rel="nofollow">ü§ó Tokenizer</a> baseada em Rust. Esse tipo de tokenizer √© significantemente mais rapido - especialmente durante tokenization de codifica√ß√£o - devido a implementa√ß√£o em Rust. O tokenizer r√°pido tambem oferece m√©todos adicionais como <em>offset mapping</em> que mapeia tokens para suar palavras ou caracteres originais.</li>',Ke,re,Xs="Os dois tokenizers suporta m√©todos comuns como os de codificar e decodificar, adicionar novos tokens, e gerenciar tokens especiais.",Oe,F,es,ie,Hs="Se voc√™ treinou seu pr√≥rpio tokenizer, voc√™ pode criar um a partir do seu arquivo <em>vocabulary</em>:",ss,pe,ts,me,Fs="√â importante lembrar que o vocabul√°rio de um tokenizer customizado ser√° diferente de um vocabul√°rio gerado pelo tokenizer de um modelo pr√© treinado. Voc√™ precisa usar o vocabul√°rio de um modelo pr√© treinado se voc√™ estiver usando um modelo pr√© treinado, caso contr√°rio as entradas n√£o far√£o sentido. Criando um tokenizer com um vocabul√°rio de um modelo pr√© treinado com a classe <code>DistilBertTokenizer</code>:",as,ce,os,ue,Es="Criando um ‚Äòfast tokenizer‚Äô com a classe <code>DistilBertTokenizerFast</code>:",ns,de,ls,E,rs,fe,is,ge,Bs="Um extrator de features processa entradas de imagem ou √°udio. Ele herda da classe base <code>FeatureExtractionMixin</code>, e pode tamb√©m herdar da classe <code>ImageFeatureExtractionMixin</code> para processamento de features de imagem ou da classe <code>SequenceFeatureExtractor</code> para processamento de entradas de √°udio.",ps,$e,Ys='Dependendo do que voc√™ est√° trabalhando em um audio ou uma tarefa de vis√£o, crie um estrator de features associado com o modelo que voc√™ est√° usando. Por exemplo, crie um <code>ViTFeatureExtractor</code> padr√£o se voc√™ estiver usando <a href="model_doc/vit">ViT</a> para classifica√ß√£o de imagens:',ms,be,cs,B,us,he,Ls="Modifique qualquer par√¢metro dentre os <code>ViTFeatureExtractor</code> para criar seu extrator de features customizado.",ds,ye,fs,je,Ns="Para entradas de √°utio, voc√™ pode criar um <code>Wav2Vec2FeatureExtractor</code> e customizar os par√¢metros de uma forma similar:",gs,ve,$s,Me,bs,_e,Qs="Para modelos que suportam tarefas multimodais, ü§ó Transformers oferece uma classe processadora que convenientemente cobre um extrator de features e tokenizer dentro de um √∫nico objeto. Por exemplo, vamos usar o <code>Wav2Vec2Processor</code> para uma tarefa de reconhecimento de fala autom√°tica (ASR). ASR transcreve √°udio para texto, ent√£o voc√™ ir√° precisar de um extrator de um features e um tokenizer.",hs,qe,Is="Crie um extrator de features para lidar com as entradas de √°udio.",ys,Te,js,Ze,Ps="Crie um tokenizer para lidar com a entrada de textos:",vs,we,Ms,ke,Ds="Combine o extrator de features e o tokenizer no <code>Wav2Vec2Processor</code>:",_s,Je,qs,Re,Ss="Com duas classes b√°sicas - configura√ß√£o e modelo - e um preprocessamento de classe adicional (tokenizer, extrator de features, ou processador), voc√™ pode criar qualquer modelo que suportado por ü§ó Transformers. Qualquer uma dessas classes base s√£o configur√°veis, te permitindo usar os atributos espec√≠ficos que voc√™ queira. Voc√™ pode facilmente preparar um modelo para treinamento ou modificar um modelo pr√©-treinado com poucas mudan√ßas.",Ts,xe,Zs;return v=new Ce({props:{title:"Criar uma arquitetura customizada",local:"criar-uma-arquitetura-customizada",headingTag:"h1"}}),z=new Ce({props:{title:"configuration",local:"configuration",headingTag:"h2"}}),L=new w({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMERpc3RpbEJlcnRDb25maWclMEElMEFjb25maWclMjAlM0QlMjBEaXN0aWxCZXJ0Q29uZmlnKCklMEFwcmludChjb25maWcp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> DistilBertConfig

<span class="hljs-meta">&gt;&gt;&gt; </span>config = DistilBertConfig()
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(config)
DistilBertConfig {
  <span class="hljs-string">&quot;activation&quot;</span>: <span class="hljs-string">&quot;gelu&quot;</span>,
  <span class="hljs-string">&quot;attention_dropout&quot;</span>: <span class="hljs-number">0.1</span>,
  <span class="hljs-string">&quot;dim&quot;</span>: <span class="hljs-number">768</span>,
  <span class="hljs-string">&quot;dropout&quot;</span>: <span class="hljs-number">0.1</span>,
  <span class="hljs-string">&quot;hidden_dim&quot;</span>: <span class="hljs-number">3072</span>,
  <span class="hljs-string">&quot;initializer_range&quot;</span>: <span class="hljs-number">0.02</span>,
  <span class="hljs-string">&quot;max_position_embeddings&quot;</span>: <span class="hljs-number">512</span>,
  <span class="hljs-string">&quot;model_type&quot;</span>: <span class="hljs-string">&quot;distilbert&quot;</span>,
  <span class="hljs-string">&quot;n_heads&quot;</span>: <span class="hljs-number">12</span>,
  <span class="hljs-string">&quot;n_layers&quot;</span>: <span class="hljs-number">6</span>,
  <span class="hljs-string">&quot;pad_token_id&quot;</span>: <span class="hljs-number">0</span>,
  <span class="hljs-string">&quot;qa_dropout&quot;</span>: <span class="hljs-number">0.1</span>,
  <span class="hljs-string">&quot;seq_classif_dropout&quot;</span>: <span class="hljs-number">0.2</span>,
  <span class="hljs-string">&quot;sinusoidal_pos_embds&quot;</span>: false,
  <span class="hljs-string">&quot;transformers_version&quot;</span>: <span class="hljs-string">&quot;4.16.2&quot;</span>,
  <span class="hljs-string">&quot;vocab_size&quot;</span>: <span class="hljs-number">30522</span>
}`,wrap:!1}}),I=new w({props:{code:"bXlfY29uZmlnJTIwJTNEJTIwRGlzdGlsQmVydENvbmZpZyhhY3RpdmF0aW9uJTNEJTIycmVsdSUyMiUyQyUyMGF0dGVudGlvbl9kcm9wb3V0JTNEMC40KSUwQXByaW50KG15X2NvbmZpZyk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>my_config = DistilBertConfig(activation=<span class="hljs-string">&quot;relu&quot;</span>, attention_dropout=<span class="hljs-number">0.4</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(my_config)
DistilBertConfig {
  <span class="hljs-string">&quot;activation&quot;</span>: <span class="hljs-string">&quot;relu&quot;</span>,
  <span class="hljs-string">&quot;attention_dropout&quot;</span>: <span class="hljs-number">0.4</span>,
  <span class="hljs-string">&quot;dim&quot;</span>: <span class="hljs-number">768</span>,
  <span class="hljs-string">&quot;dropout&quot;</span>: <span class="hljs-number">0.1</span>,
  <span class="hljs-string">&quot;hidden_dim&quot;</span>: <span class="hljs-number">3072</span>,
  <span class="hljs-string">&quot;initializer_range&quot;</span>: <span class="hljs-number">0.02</span>,
  <span class="hljs-string">&quot;max_position_embeddings&quot;</span>: <span class="hljs-number">512</span>,
  <span class="hljs-string">&quot;model_type&quot;</span>: <span class="hljs-string">&quot;distilbert&quot;</span>,
  <span class="hljs-string">&quot;n_heads&quot;</span>: <span class="hljs-number">12</span>,
  <span class="hljs-string">&quot;n_layers&quot;</span>: <span class="hljs-number">6</span>,
  <span class="hljs-string">&quot;pad_token_id&quot;</span>: <span class="hljs-number">0</span>,
  <span class="hljs-string">&quot;qa_dropout&quot;</span>: <span class="hljs-number">0.1</span>,
  <span class="hljs-string">&quot;seq_classif_dropout&quot;</span>: <span class="hljs-number">0.2</span>,
  <span class="hljs-string">&quot;sinusoidal_pos_embds&quot;</span>: false,
  <span class="hljs-string">&quot;transformers_version&quot;</span>: <span class="hljs-string">&quot;4.16.2&quot;</span>,
  <span class="hljs-string">&quot;vocab_size&quot;</span>: <span class="hljs-number">30522</span>
}`,wrap:!1}}),D=new w({props:{code:"bXlfY29uZmlnJTIwJTNEJTIwRGlzdGlsQmVydENvbmZpZy5mcm9tX3ByZXRyYWluZWQoJTIyZGlzdGlsYmVydCUyRmRpc3RpbGJlcnQtYmFzZS11bmNhc2VkJTIyJTJDJTIwYWN0aXZhdGlvbiUzRCUyMnJlbHUlMjIlMkMlMjBhdHRlbnRpb25fZHJvcG91dCUzRDAuNCk=",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>my_config = DistilBertConfig.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>, activation=<span class="hljs-string">&quot;relu&quot;</span>, attention_dropout=<span class="hljs-number">0.4</span>)',wrap:!1}}),A=new w({props:{code:"bXlfY29uZmlnLnNhdmVfcHJldHJhaW5lZChzYXZlX2RpcmVjdG9yeSUzRCUyMi4lMkZ5b3VyX21vZGVsX3NhdmVfcGF0aCUyMik=",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>my_config.save_pretrained(save_directory=<span class="hljs-string">&quot;./your_model_save_path&quot;</span>)',wrap:!1}}),O=new w({props:{code:"bXlfY29uZmlnJTIwJTNEJTIwRGlzdGlsQmVydENvbmZpZy5mcm9tX3ByZXRyYWluZWQoJTIyLiUyRnlvdXJfbW9kZWxfc2F2ZV9wYXRoJTJGbXlfY29uZmlnLmpzb24lMjIp",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>my_config = DistilBertConfig.from_pretrained(<span class="hljs-string">&quot;./your_model_save_path/my_config.json&quot;</span>)',wrap:!1}}),G=new ws({props:{$$slots:{default:[ut]},$$scope:{ctx:Z}}}),ee=new Ce({props:{title:"Modelo",local:"modelo",headingTag:"h2"}}),X=new nt({props:{pytorch:!0,tensorflow:!0,jax:!1,$$slots:{tensorflow:[$t],pytorch:[ft]},$$scope:{ctx:Z}}}),te=new Ce({props:{title:"Heads do modelo",local:"heads-do-modelo",headingTag:"h3"}}),H=new nt({props:{pytorch:!0,tensorflow:!0,jax:!1,$$slots:{tensorflow:[jt],pytorch:[ht]},$$scope:{ctx:Z}}}),oe=new Ce({props:{title:"Tokenizer",local:"tokenizer",headingTag:"h2"}}),F=new ws({props:{warning:!0,$$slots:{default:[vt]},$$scope:{ctx:Z}}}),pe=new w({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMERpc3RpbEJlcnRUb2tlbml6ZXIlMEElMEFteV90b2tlbml6ZXIlMjAlM0QlMjBEaXN0aWxCZXJ0VG9rZW5pemVyKHZvY2FiX2ZpbGUlM0QlMjJteV92b2NhYl9maWxlLnR4dCUyMiUyQyUyMGRvX2xvd2VyX2Nhc2UlM0RGYWxzZSUyQyUyMHBhZGRpbmdfc2lkZSUzRCUyMmxlZnQlMjIp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> DistilBertTokenizer

<span class="hljs-meta">&gt;&gt;&gt; </span>my_tokenizer = DistilBertTokenizer(vocab_file=<span class="hljs-string">&quot;my_vocab_file.txt&quot;</span>, do_lower_case=<span class="hljs-literal">False</span>, padding_side=<span class="hljs-string">&quot;left&quot;</span>)`,wrap:!1}}),ce=new w({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMERpc3RpbEJlcnRUb2tlbml6ZXIlMEElMEFzbG93X3Rva2VuaXplciUyMCUzRCUyMERpc3RpbEJlcnRUb2tlbml6ZXIuZnJvbV9wcmV0cmFpbmVkKCUyMmRpc3RpbGJlcnQlMkZkaXN0aWxiZXJ0LWJhc2UtdW5jYXNlZCUyMik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> DistilBertTokenizer

<span class="hljs-meta">&gt;&gt;&gt; </span>slow_tokenizer = DistilBertTokenizer.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>)`,wrap:!1}}),de=new w({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMERpc3RpbEJlcnRUb2tlbml6ZXJGYXN0JTBBJTBBZmFzdF90b2tlbml6ZXIlMjAlM0QlMjBEaXN0aWxCZXJ0VG9rZW5pemVyRmFzdC5mcm9tX3ByZXRyYWluZWQoJTIyZGlzdGlsYmVydCUyRmRpc3RpbGJlcnQtYmFzZS11bmNhc2VkJTIyKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> DistilBertTokenizerFast

<span class="hljs-meta">&gt;&gt;&gt; </span>fast_tokenizer = DistilBertTokenizerFast.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>)`,wrap:!1}}),E=new ws({props:{$$slots:{default:[Mt]},$$scope:{ctx:Z}}}),fe=new Ce({props:{title:"Extrator de features",local:"extrator-de-features",headingTag:"h2"}}),be=new w({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMFZpVEZlYXR1cmVFeHRyYWN0b3IlMEElMEF2aXRfZXh0cmFjdG9yJTIwJTNEJTIwVmlURmVhdHVyZUV4dHJhY3RvcigpJTBBcHJpbnQodml0X2V4dHJhY3Rvcik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> ViTFeatureExtractor

<span class="hljs-meta">&gt;&gt;&gt; </span>vit_extractor = ViTFeatureExtractor()
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(vit_extractor)
ViTFeatureExtractor {
  <span class="hljs-string">&quot;do_normalize&quot;</span>: true,
  <span class="hljs-string">&quot;do_resize&quot;</span>: true,
  <span class="hljs-string">&quot;feature_extractor_type&quot;</span>: <span class="hljs-string">&quot;ViTFeatureExtractor&quot;</span>,
  <span class="hljs-string">&quot;image_mean&quot;</span>: [
    <span class="hljs-number">0.5</span>,
    <span class="hljs-number">0.5</span>,
    <span class="hljs-number">0.5</span>
  ],
  <span class="hljs-string">&quot;image_std&quot;</span>: [
    <span class="hljs-number">0.5</span>,
    <span class="hljs-number">0.5</span>,
    <span class="hljs-number">0.5</span>
  ],
  <span class="hljs-string">&quot;resample&quot;</span>: <span class="hljs-number">2</span>,
  <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">224</span>
}`,wrap:!1}}),B=new ws({props:{$$slots:{default:[_t]},$$scope:{ctx:Z}}}),ye=new w({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMFZpVEZlYXR1cmVFeHRyYWN0b3IlMEElMEFteV92aXRfZXh0cmFjdG9yJTIwJTNEJTIwVmlURmVhdHVyZUV4dHJhY3RvcihyZXNhbXBsZSUzRCUyMlBJTC5JbWFnZS5CT1glMjIlMkMlMjBkb19ub3JtYWxpemUlM0RGYWxzZSUyQyUyMGltYWdlX21lYW4lM0QlNUIwLjMlMkMlMjAwLjMlMkMlMjAwLjMlNUQpJTBBcHJpbnQobXlfdml0X2V4dHJhY3Rvcik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> ViTFeatureExtractor

<span class="hljs-meta">&gt;&gt;&gt; </span>my_vit_extractor = ViTFeatureExtractor(resample=<span class="hljs-string">&quot;PIL.Image.BOX&quot;</span>, do_normalize=<span class="hljs-literal">False</span>, image_mean=[<span class="hljs-number">0.3</span>, <span class="hljs-number">0.3</span>, <span class="hljs-number">0.3</span>])
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(my_vit_extractor)
ViTFeatureExtractor {
  <span class="hljs-string">&quot;do_normalize&quot;</span>: false,
  <span class="hljs-string">&quot;do_resize&quot;</span>: true,
  <span class="hljs-string">&quot;feature_extractor_type&quot;</span>: <span class="hljs-string">&quot;ViTFeatureExtractor&quot;</span>,
  <span class="hljs-string">&quot;image_mean&quot;</span>: [
    <span class="hljs-number">0.3</span>,
    <span class="hljs-number">0.3</span>,
    <span class="hljs-number">0.3</span>
  ],
  <span class="hljs-string">&quot;image_std&quot;</span>: [
    <span class="hljs-number">0.5</span>,
    <span class="hljs-number">0.5</span>,
    <span class="hljs-number">0.5</span>
  ],
  <span class="hljs-string">&quot;resample&quot;</span>: <span class="hljs-string">&quot;PIL.Image.BOX&quot;</span>,
  <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">224</span>
}`,wrap:!1}}),ve=new w({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMFdhdjJWZWMyRmVhdHVyZUV4dHJhY3RvciUwQSUwQXcydjJfZXh0cmFjdG9yJTIwJTNEJTIwV2F2MlZlYzJGZWF0dXJlRXh0cmFjdG9yKCklMEFwcmludCh3MnYyX2V4dHJhY3Rvcik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> Wav2Vec2FeatureExtractor

<span class="hljs-meta">&gt;&gt;&gt; </span>w2v2_extractor = Wav2Vec2FeatureExtractor()
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(w2v2_extractor)
Wav2Vec2FeatureExtractor {
  <span class="hljs-string">&quot;do_normalize&quot;</span>: true,
  <span class="hljs-string">&quot;feature_extractor_type&quot;</span>: <span class="hljs-string">&quot;Wav2Vec2FeatureExtractor&quot;</span>,
  <span class="hljs-string">&quot;feature_size&quot;</span>: <span class="hljs-number">1</span>,
  <span class="hljs-string">&quot;padding_side&quot;</span>: <span class="hljs-string">&quot;right&quot;</span>,
  <span class="hljs-string">&quot;padding_value&quot;</span>: <span class="hljs-number">0.0</span>,
  <span class="hljs-string">&quot;return_attention_mask&quot;</span>: false,
  <span class="hljs-string">&quot;sampling_rate&quot;</span>: <span class="hljs-number">16000</span>
}`,wrap:!1}}),Me=new Ce({props:{title:"Processor",local:"processor",headingTag:"h2"}}),Te=new w({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMFdhdjJWZWMyRmVhdHVyZUV4dHJhY3RvciUwQSUwQWZlYXR1cmVfZXh0cmFjdG9yJTIwJTNEJTIwV2F2MlZlYzJGZWF0dXJlRXh0cmFjdG9yKHBhZGRpbmdfdmFsdWUlM0QxLjAlMkMlMjBkb19ub3JtYWxpemUlM0RUcnVlKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> Wav2Vec2FeatureExtractor

<span class="hljs-meta">&gt;&gt;&gt; </span>feature_extractor = Wav2Vec2FeatureExtractor(padding_value=<span class="hljs-number">1.0</span>, do_normalize=<span class="hljs-literal">True</span>)`,wrap:!1}}),we=new w({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMFdhdjJWZWMyQ1RDVG9rZW5pemVyJTBBJTBBdG9rZW5pemVyJTIwJTNEJTIwV2F2MlZlYzJDVENUb2tlbml6ZXIodm9jYWJfZmlsZSUzRCUyMm15X3ZvY2FiX2ZpbGUudHh0JTIyKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> Wav2Vec2CTCTokenizer

<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer = Wav2Vec2CTCTokenizer(vocab_file=<span class="hljs-string">&quot;my_vocab_file.txt&quot;</span>)`,wrap:!1}}),Je=new w({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMFdhdjJWZWMyUHJvY2Vzc29yJTBBJTBBcHJvY2Vzc29yJTIwJTNEJTIwV2F2MlZlYzJQcm9jZXNzb3IoZmVhdHVyZV9leHRyYWN0b3IlM0RmZWF0dXJlX2V4dHJhY3RvciUyQyUyMHRva2VuaXplciUzRHRva2VuaXplcik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> Wav2Vec2Processor

<span class="hljs-meta">&gt;&gt;&gt; </span>processor = Wav2Vec2Processor(feature_extractor=feature_extractor, tokenizer=tokenizer)`,wrap:!1}}),{c(){o=u("meta"),c=r(),n=u("p"),p=r(),g(v.$$.fragment),M=r(),x=u("p"),x.innerHTML=J,_=r(),k=u("ul"),k.innerHTML=m,q=r(),g(z.$$.fragment),R=r(),W=u("p"),W.innerHTML=U,C=r(),V=u("p"),V.innerHTML=l,T=r(),g(L.$$.fragment),ze=r(),N=u("p"),N.innerHTML=Js,Ve=r(),Q=u("ul"),Q.innerHTML=Rs,We=r(),g(I.$$.fragment),Ue=r(),P=u("p"),P.innerHTML=Cs,Ge=r(),g(D.$$.fragment),Xe=r(),S=u("p"),S.innerHTML=xs,He=r(),g(A.$$.fragment),Fe=r(),K=u("p"),K.innerHTML=zs,Ee=r(),g(O.$$.fragment),Be=r(),g(G.$$.fragment),Ye=r(),g(ee.$$.fragment),Le=r(),se=u("p"),se.innerHTML=Vs,Ne=r(),g(X.$$.fragment),Qe=r(),g(te.$$.fragment),Ie=r(),ae=u("p"),ae.innerHTML=Ws,Pe=r(),g(H.$$.fragment),De=r(),g(oe.$$.fragment),Se=r(),ne=u("p"),ne.innerHTML=Us,Ae=r(),le=u("ul"),le.innerHTML=Gs,Ke=r(),re=u("p"),re.textContent=Xs,Oe=r(),g(F.$$.fragment),es=r(),ie=u("p"),ie.innerHTML=Hs,ss=r(),g(pe.$$.fragment),ts=r(),me=u("p"),me.innerHTML=Fs,as=r(),g(ce.$$.fragment),os=r(),ue=u("p"),ue.innerHTML=Es,ns=r(),g(de.$$.fragment),ls=r(),g(E.$$.fragment),rs=r(),g(fe.$$.fragment),is=r(),ge=u("p"),ge.innerHTML=Bs,ps=r(),$e=u("p"),$e.innerHTML=Ys,ms=r(),g(be.$$.fragment),cs=r(),g(B.$$.fragment),us=r(),he=u("p"),he.innerHTML=Ls,ds=r(),g(ye.$$.fragment),fs=r(),je=u("p"),je.innerHTML=Ns,gs=r(),g(ve.$$.fragment),$s=r(),g(Me.$$.fragment),bs=r(),_e=u("p"),_e.innerHTML=Qs,hs=r(),qe=u("p"),qe.textContent=Is,ys=r(),g(Te.$$.fragment),js=r(),Ze=u("p"),Ze.textContent=Ps,vs=r(),g(we.$$.fragment),Ms=r(),ke=u("p"),ke.innerHTML=Ds,_s=r(),g(Je.$$.fragment),qs=r(),Re=u("p"),Re.textContent=Ss,Ts=r(),xe=u("p"),this.h()},l(e){const s=mt("svelte-u9bgzb",document.head);o=d(s,"META",{name:!0,content:!0}),s.forEach(t),c=i(e),n=d(e,"P",{}),at(n).forEach(t),p=i(e),$(v.$$.fragment,e),M=i(e),x=d(e,"P",{"data-svelte-h":!0}),f(x)!=="svelte-m9o5vy"&&(x.innerHTML=J),_=i(e),k=d(e,"UL",{"data-svelte-h":!0}),f(k)!=="svelte-kgsom1"&&(k.innerHTML=m),q=i(e),$(z.$$.fragment,e),R=i(e),W=d(e,"P",{"data-svelte-h":!0}),f(W)!=="svelte-n6qi8b"&&(W.innerHTML=U),C=i(e),V=d(e,"P",{"data-svelte-h":!0}),f(V)!=="svelte-1d3fcvh"&&(V.innerHTML=l),T=i(e),$(L.$$.fragment,e),ze=i(e),N=d(e,"P",{"data-svelte-h":!0}),f(N)!=="svelte-ig73dh"&&(N.innerHTML=Js),Ve=i(e),Q=d(e,"UL",{"data-svelte-h":!0}),f(Q)!=="svelte-18hur0b"&&(Q.innerHTML=Rs),We=i(e),$(I.$$.fragment,e),Ue=i(e),P=d(e,"P",{"data-svelte-h":!0}),f(P)!=="svelte-1hyxcvd"&&(P.innerHTML=Cs),Ge=i(e),$(D.$$.fragment,e),Xe=i(e),S=d(e,"P",{"data-svelte-h":!0}),f(S)!=="svelte-xw156x"&&(S.innerHTML=xs),He=i(e),$(A.$$.fragment,e),Fe=i(e),K=d(e,"P",{"data-svelte-h":!0}),f(K)!=="svelte-gyvtpp"&&(K.innerHTML=zs),Ee=i(e),$(O.$$.fragment,e),Be=i(e),$(G.$$.fragment,e),Ye=i(e),$(ee.$$.fragment,e),Le=i(e),se=d(e,"P",{"data-svelte-h":!0}),f(se)!=="svelte-dzcltn"&&(se.innerHTML=Vs),Ne=i(e),$(X.$$.fragment,e),Qe=i(e),$(te.$$.fragment,e),Ie=i(e),ae=d(e,"P",{"data-svelte-h":!0}),f(ae)!=="svelte-1lm563h"&&(ae.innerHTML=Ws),Pe=i(e),$(H.$$.fragment,e),De=i(e),$(oe.$$.fragment,e),Se=i(e),ne=d(e,"P",{"data-svelte-h":!0}),f(ne)!=="svelte-1umelbs"&&(ne.innerHTML=Us),Ae=i(e),le=d(e,"UL",{"data-svelte-h":!0}),f(le)!=="svelte-1ety8m7"&&(le.innerHTML=Gs),Ke=i(e),re=d(e,"P",{"data-svelte-h":!0}),f(re)!=="svelte-aut08s"&&(re.textContent=Xs),Oe=i(e),$(F.$$.fragment,e),es=i(e),ie=d(e,"P",{"data-svelte-h":!0}),f(ie)!=="svelte-1h3oxa5"&&(ie.innerHTML=Hs),ss=i(e),$(pe.$$.fragment,e),ts=i(e),me=d(e,"P",{"data-svelte-h":!0}),f(me)!=="svelte-2eztm5"&&(me.innerHTML=Fs),as=i(e),$(ce.$$.fragment,e),os=i(e),ue=d(e,"P",{"data-svelte-h":!0}),f(ue)!=="svelte-1v580rz"&&(ue.innerHTML=Es),ns=i(e),$(de.$$.fragment,e),ls=i(e),$(E.$$.fragment,e),rs=i(e),$(fe.$$.fragment,e),is=i(e),ge=d(e,"P",{"data-svelte-h":!0}),f(ge)!=="svelte-1t9u1z8"&&(ge.innerHTML=Bs),ps=i(e),$e=d(e,"P",{"data-svelte-h":!0}),f($e)!=="svelte-hk2gfs"&&($e.innerHTML=Ys),ms=i(e),$(be.$$.fragment,e),cs=i(e),$(B.$$.fragment,e),us=i(e),he=d(e,"P",{"data-svelte-h":!0}),f(he)!=="svelte-1g3d390"&&(he.innerHTML=Ls),ds=i(e),$(ye.$$.fragment,e),fs=i(e),je=d(e,"P",{"data-svelte-h":!0}),f(je)!=="svelte-93n9v0"&&(je.innerHTML=Ns),gs=i(e),$(ve.$$.fragment,e),$s=i(e),$(Me.$$.fragment,e),bs=i(e),_e=d(e,"P",{"data-svelte-h":!0}),f(_e)!=="svelte-1o1ieuf"&&(_e.innerHTML=Qs),hs=i(e),qe=d(e,"P",{"data-svelte-h":!0}),f(qe)!=="svelte-q3t4d0"&&(qe.textContent=Is),ys=i(e),$(Te.$$.fragment,e),js=i(e),Ze=d(e,"P",{"data-svelte-h":!0}),f(Ze)!=="svelte-xtgcfb"&&(Ze.textContent=Ps),vs=i(e),$(we.$$.fragment,e),Ms=i(e),ke=d(e,"P",{"data-svelte-h":!0}),f(ke)!=="svelte-nbytpq"&&(ke.innerHTML=Ds),_s=i(e),$(Je.$$.fragment,e),qs=i(e),Re=d(e,"P",{"data-svelte-h":!0}),f(Re)!=="svelte-bza99h"&&(Re.textContent=Ss),Ts=i(e),xe=d(e,"P",{}),at(xe).forEach(t),this.h()},h(){ot(o,"name","hf:doc:metadata"),ot(o,"content",Tt)},m(e,s){ct(document.head,o),a(e,c,s),a(e,n,s),a(e,p,s),b(v,e,s),a(e,M,s),a(e,x,s),a(e,_,s),a(e,k,s),a(e,q,s),b(z,e,s),a(e,R,s),a(e,W,s),a(e,C,s),a(e,V,s),a(e,T,s),b(L,e,s),a(e,ze,s),a(e,N,s),a(e,Ve,s),a(e,Q,s),a(e,We,s),b(I,e,s),a(e,Ue,s),a(e,P,s),a(e,Ge,s),b(D,e,s),a(e,Xe,s),a(e,S,s),a(e,He,s),b(A,e,s),a(e,Fe,s),a(e,K,s),a(e,Ee,s),b(O,e,s),a(e,Be,s),b(G,e,s),a(e,Ye,s),b(ee,e,s),a(e,Le,s),a(e,se,s),a(e,Ne,s),b(X,e,s),a(e,Qe,s),b(te,e,s),a(e,Ie,s),a(e,ae,s),a(e,Pe,s),b(H,e,s),a(e,De,s),b(oe,e,s),a(e,Se,s),a(e,ne,s),a(e,Ae,s),a(e,le,s),a(e,Ke,s),a(e,re,s),a(e,Oe,s),b(F,e,s),a(e,es,s),a(e,ie,s),a(e,ss,s),b(pe,e,s),a(e,ts,s),a(e,me,s),a(e,as,s),b(ce,e,s),a(e,os,s),a(e,ue,s),a(e,ns,s),b(de,e,s),a(e,ls,s),b(E,e,s),a(e,rs,s),b(fe,e,s),a(e,is,s),a(e,ge,s),a(e,ps,s),a(e,$e,s),a(e,ms,s),b(be,e,s),a(e,cs,s),b(B,e,s),a(e,us,s),a(e,he,s),a(e,ds,s),b(ye,e,s),a(e,fs,s),a(e,je,s),a(e,gs,s),b(ve,e,s),a(e,$s,s),b(Me,e,s),a(e,bs,s),a(e,_e,s),a(e,hs,s),a(e,qe,s),a(e,ys,s),b(Te,e,s),a(e,js,s),a(e,Ze,s),a(e,vs,s),b(we,e,s),a(e,Ms,s),a(e,ke,s),a(e,_s,s),b(Je,e,s),a(e,qs,s),a(e,Re,s),a(e,Ts,s),a(e,xe,s),Zs=!0},p(e,[s]){const As={};s&2&&(As.$$scope={dirty:s,ctx:e}),G.$set(As);const Ks={};s&2&&(Ks.$$scope={dirty:s,ctx:e}),X.$set(Ks);const Os={};s&2&&(Os.$$scope={dirty:s,ctx:e}),H.$set(Os);const et={};s&2&&(et.$$scope={dirty:s,ctx:e}),F.$set(et);const st={};s&2&&(st.$$scope={dirty:s,ctx:e}),E.$set(st);const tt={};s&2&&(tt.$$scope={dirty:s,ctx:e}),B.$set(tt)},i(e){Zs||(h(v.$$.fragment,e),h(z.$$.fragment,e),h(L.$$.fragment,e),h(I.$$.fragment,e),h(D.$$.fragment,e),h(A.$$.fragment,e),h(O.$$.fragment,e),h(G.$$.fragment,e),h(ee.$$.fragment,e),h(X.$$.fragment,e),h(te.$$.fragment,e),h(H.$$.fragment,e),h(oe.$$.fragment,e),h(F.$$.fragment,e),h(pe.$$.fragment,e),h(ce.$$.fragment,e),h(de.$$.fragment,e),h(E.$$.fragment,e),h(fe.$$.fragment,e),h(be.$$.fragment,e),h(B.$$.fragment,e),h(ye.$$.fragment,e),h(ve.$$.fragment,e),h(Me.$$.fragment,e),h(Te.$$.fragment,e),h(we.$$.fragment,e),h(Je.$$.fragment,e),Zs=!0)},o(e){y(v.$$.fragment,e),y(z.$$.fragment,e),y(L.$$.fragment,e),y(I.$$.fragment,e),y(D.$$.fragment,e),y(A.$$.fragment,e),y(O.$$.fragment,e),y(G.$$.fragment,e),y(ee.$$.fragment,e),y(X.$$.fragment,e),y(te.$$.fragment,e),y(H.$$.fragment,e),y(oe.$$.fragment,e),y(F.$$.fragment,e),y(pe.$$.fragment,e),y(ce.$$.fragment,e),y(de.$$.fragment,e),y(E.$$.fragment,e),y(fe.$$.fragment,e),y(be.$$.fragment,e),y(B.$$.fragment,e),y(ye.$$.fragment,e),y(ve.$$.fragment,e),y(Me.$$.fragment,e),y(Te.$$.fragment,e),y(we.$$.fragment,e),y(Je.$$.fragment,e),Zs=!1},d(e){e&&(t(c),t(n),t(p),t(M),t(x),t(_),t(k),t(q),t(R),t(W),t(C),t(V),t(T),t(ze),t(N),t(Ve),t(Q),t(We),t(Ue),t(P),t(Ge),t(Xe),t(S),t(He),t(Fe),t(K),t(Ee),t(Be),t(Ye),t(Le),t(se),t(Ne),t(Qe),t(Ie),t(ae),t(Pe),t(De),t(Se),t(ne),t(Ae),t(le),t(Ke),t(re),t(Oe),t(es),t(ie),t(ss),t(ts),t(me),t(as),t(os),t(ue),t(ns),t(ls),t(rs),t(is),t(ge),t(ps),t($e),t(ms),t(cs),t(us),t(he),t(ds),t(fs),t(je),t(gs),t($s),t(bs),t(_e),t(hs),t(qe),t(ys),t(js),t(Ze),t(vs),t(Ms),t(ke),t(_s),t(qs),t(Re),t(Ts),t(xe)),t(o),j(v,e),j(z,e),j(L,e),j(I,e),j(D,e),j(A,e),j(O,e),j(G,e),j(ee,e),j(X,e),j(te,e),j(H,e),j(oe,e),j(F,e),j(pe,e),j(ce,e),j(de,e),j(E,e),j(fe,e),j(be,e),j(B,e),j(ye,e),j(ve,e),j(Me,e),j(Te,e),j(we,e),j(Je,e)}}}const Tt='{"title":"Criar uma arquitetura customizada","local":"criar-uma-arquitetura-customizada","sections":[{"title":"configuration","local":"configuration","sections":[],"depth":2},{"title":"Modelo","local":"modelo","sections":[{"title":"Heads do modelo","local":"heads-do-modelo","sections":[],"depth":3}],"depth":2},{"title":"Tokenizer","local":"tokenizer","sections":[],"depth":2},{"title":"Extrator de features","local":"extrator-de-features","sections":[],"depth":2},{"title":"Processor","local":"processor","sections":[],"depth":2}],"depth":1}';function Zt(Z){return rt(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class zt extends it{constructor(o){super(),pt(this,o,Zt,qt,lt,{})}}export{zt as component};
