import{s as xt,n as ht,o as bt}from"../chunks/scheduler.36a0863c.js";import{S as yt,i as zt,g as a,s as o,r,A as Tt,h as s,f as i,c as n,j as _t,u as c,x as u,k as Ct,y as wt,a as l,v as d,d as p,t as m,w as f}from"../chunks/index.9c13489a.js";import{C as $}from"../chunks/CodeBlock.05d8ec32.js";import{H as oe}from"../chunks/Heading.7a254a62.js";function Mt(Ne){let g,ne,ie,ae,v,se,_,De="Quando apri una pull request sui ü§ó Transformers, vengono eseguiti un discreto numero di controlli per assicurarsi che la patch che stai aggiungendo non stia rompendo qualcosa di esistente. Questi controlli sono di quattro tipi:",ue,C,Ve="<li>test regolari</li> <li>costruzione della documentazione</li> <li>stile del codice e della documentazione</li> <li>coerenza generale del repository</li>",re,x,Xe="In questo documento, cercheremo di spiegare quali sono i vari controlli e le loro ragioni, oltre a spiegare come eseguire il debug locale se uno di essi fallisce sulla tua PR.",ce,h,Ye="Nota che tutti richiedono un‚Äôinstallazione dev:",de,b,pe,y,Oe="o un‚Äôinstallazione modificabile:",me,z,fe,T,Ke="all‚Äôinterno del repo Transformers.",$e,w,ge,M,et="Tutti i job che iniziano con <code>ci/circleci: run_tests_</code> eseguono parti della suite di test dei Transformers. Ognuno di questi job si concentra su una parte della libreria in un determinato ambiente: per esempio <code>ci/circleci: run_tests_pipelines_tf</code> esegue il test delle pipeline in un ambiente in cui √® installato solo TensorFlow.",ve,k,tt="Nota che per evitare di eseguire i test quando non ci sono cambiamenti reali nei moduli che si stanno testando, ogni volta viene eseguita solo una parte della suite di test: viene eseguita una utility per determinare le differenze nella libreria tra prima e dopo la PR (ci√≤ che GitHub mostra nella scheda ‚ÄúFiles changes‚Äù) e sceglie i test che sono stati impattati dalla diff. Questa utility pu√≤ essere eseguita localmente con:",_e,P,Ce,q,it="dalla root del repo Transformers. Di seguito ci√≤ che far√†:",xe,H,lt="<li>Controlla per ogni file nel diff se le modifiche sono nel codice o solo nei commenti o nelle docstrings. Vengono mantenuti solo i file con modifiche reali al codice.</li> <li>Costruisce una mappa interna che fornisce per ogni file del codice sorgente della libreria tutti i file su cui ha un impatto ricorsivo. Si dice che il modulo A ha un impatto sul modulo B se il modulo B importa il modulo A. Per l‚Äôimpatto ricorsivo, abbiamo bisogno di una catena di moduli che va dal modulo A al modulo B in cui ogni modulo importa il precedente.</li> <li>Applica questa mappa ai file raccolti nel passaggio 1, si ottiene l‚Äôelenco dei file del modello interessati dalla PR.</li> <li>Mappa ciascuno di questi file con i corrispondenti file di test e ottiene l‚Äôelenco dei test da eseguire.</li>",he,L,ot="Quando esegui lo script in locale, dovresti ottenere la stampa dei risultati dei passi 1, 3 e 4 e quindi sapere quali test sono stati eseguiti. Lo script creer√† anche un file chiamato <code>test_list.txt</code> che contiene l‚Äôelenco dei test da eseguire e che puoi eseguire localmente con il seguente comando:",be,R,ye,U,nt="Nel caso in cui qualcosa sia sfuggito, l‚Äôintera suite di test viene eseguita quotidianamente.",ze,S,Te,A,at="Il job <code>ci/circleci: build_doc</code> esegue una build della documentazione per assicurarsi che tutto sia a posto una volta che la PR √® stata unita. Se questo passaggio fallisce, puoi controllare localmente entrando nella cartella <code>docs</code> del repo Transformers e digitare",we,G,Me,W,st="Sphinx non √® noto per i suoi messaggi di errore chiari, quindi potrebbe essere necessario che provi alcune cose per trovare davvero la fonte dell‚Äôerrore.",ke,Z,Pe,j,ut="La formattazione del codice viene applicata a tutti i file sorgenti, agli esempi e ai test usando <code>black</code> e <code>isort</code>. Abbiamo anche uno strumento personalizzato che si occupa della formattazione delle docstring e dei file <code>rst</code> (<code>utils/style_doc.py</code>), cos√¨ come dell‚Äôordine dei lazy imports eseguiti nei file <code>__init__.py</code> dei Transformers (<code>utils/custom_init_isort.py</code>). Tutto questo pu√≤ essere lanciato eseguendo",qe,Q,He,F,rt="I controlli della CI sono applicati all‚Äôinterno del controllo <code>ci/circleci: check_code_quality</code>. Esegue anche <code>flake8</code>, che d√† un‚Äôocchiata di base al codice e si lamenta se trova una variabile non definita o non utilizzata. Per eseguire questo controllo localmente, usare",Le,I,Re,B,ct="Questa operazione pu√≤ richiedere molto tempo, quindi per eseguire la stessa operazione solo sui file modificati nel branch corrente, eseguire",Ue,E,Se,J,dt="Quest‚Äôultimo comando eseguir√† anche tutti i controlli aggiuntivi per la consistenza del repository. Diamogli un‚Äôocchiata.",Ae,N,Ge,D,pt="All‚Äôinterno sono raggruppati tutti i test per assicurarsi che la tua PR lasci il repository in un buono stato ed √® eseguito dal controllo <code>ci/circleci: check_repository_consistency</code>. Puoi eseguire localmente questo controllo eseguendo quanto segue:",We,V,Ze,X,mt="Questo verifica che:",je,Y,ft="<li>Tutti gli oggetti aggiunti all‚Äôinit sono documentati (eseguito da <code>utils/check_repo.py</code>)</li> <li>Tutti i file <code>__init__.py</code> hanno lo stesso contenuto nelle loro due sezioni (eseguito da <code>utils/check_inits.py</code>)</li> <li>Tutto il codice identificato come copia da un altro modulo √® coerente con l‚Äôoriginale (eseguito da <code>utils/check_copies.py</code>)</li> <li>Le traduzioni dei README e l‚Äôindice della documentazione hanno lo stesso elenco di modelli del README principale (eseguito da <code>utils/check_copies.py</code>)</li> <li>Le tabelle autogenerate nella documentazione sono aggiornate (eseguito da <code>utils/check_table.py</code>)</li> <li>La libreria ha tutti gli oggetti disponibili anche se non tutte le dipendenze opzionali sono installate (eseguito da <code>utils/check_dummies.py</code>)</li>",Qe,O,$t="Se questo controllo fallisce, le prime due voci richiedono una correzione manuale, mentre le ultime quattro possono essere corrette automaticamente per te eseguendo il comando",Fe,K,Ie,ee,gt="Ulteriori controlli riguardano le PR che aggiungono nuovi modelli, principalmente che:",Be,te,vt="<li>Tutti i modelli aggiunti sono in un Auto-mapping (eseguita da <code>utils/check_repo.py</code>)</li> <li>Tutti i modelli sono testati correttamente (eseguito da <code>utils/check_repo.py</code>)</li>",Ee,le,Je;return v=new oe({props:{title:"Controlli su una Pull Request",local:"controlli-su-una-pull-request",headingTag:"h1"}}),b=new $({props:{code:"cGlwJTIwaW5zdGFsbCUyMHRyYW5zZm9ybWVycyU1QmRldiU1RA==",highlighted:"pip install transformers[dev]",wrap:!1}}),z=new $({props:{code:"cGlwJTIwaW5zdGFsbCUyMC1lJTIwLiU1QmRldiU1RA==",highlighted:"pip install -e .[dev]",wrap:!1}}),w=new oe({props:{title:"Tests",local:"tests",headingTag:"h2"}}),P=new $({props:{code:"cHl0aG9uJTIwdXRpbHMlMkZ0ZXN0c19mZXRjaGVyLnB5",highlighted:"python utils/tests_fetcher.py",wrap:!1}}),R=new $({props:{code:"cHl0aG9uJTIwLW0lMjBweXRlc3QlMjAtbiUyMDglMjAtLWRpc3QlM0Rsb2FkZmlsZSUyMC1yQSUyMC1zJTIwJTI0KGNhdCUyMHRlc3RfbGlzdC50eHQp",highlighted:'python -m pytest -n 8 --dist=loadfile -rA -s $(<span class="hljs-built_in">cat</span> test_list.txt)',wrap:!1}}),S=new oe({props:{title:"Build della documentazione",local:"build-della-documentazione",headingTag:"h2"}}),G=new $({props:{code:"bWFrZSUyMGh0bWw=",highlighted:"make html",wrap:!1}}),Z=new oe({props:{title:"Stile del codice e della documentazione",local:"stile-del-codice-e-della-documentazione",headingTag:"h2"}}),Q=new $({props:{code:"bWFrZSUyMHN0eWxl",highlighted:"make style",wrap:!1}}),I=new $({props:{code:"bWFrZSUyMHF1YWxpdHk=",highlighted:"make quality",wrap:!1}}),E=new $({props:{code:"bWFrZSUyMGZpeHVw",highlighted:"make fixup",wrap:!1}}),N=new oe({props:{title:"Coerenza del repository",local:"coerenza-del-repository",headingTag:"h2"}}),V=new $({props:{code:"bWFrZSUyMHJlcG8tY29uc2lzdGVuY3k=",highlighted:"make repo-consistency",wrap:!1}}),K=new $({props:{code:"bWFrZSUyMGZpeC1jb3BpZXM=",highlighted:"make fix-copies",wrap:!1}}),{c(){g=a("meta"),ne=o(),ie=a("p"),ae=o(),r(v.$$.fragment),se=o(),_=a("p"),_.textContent=De,ue=o(),C=a("ul"),C.innerHTML=Ve,re=o(),x=a("p"),x.textContent=Xe,ce=o(),h=a("p"),h.textContent=Ye,de=o(),r(b.$$.fragment),pe=o(),y=a("p"),y.textContent=Oe,me=o(),r(z.$$.fragment),fe=o(),T=a("p"),T.textContent=Ke,$e=o(),r(w.$$.fragment),ge=o(),M=a("p"),M.innerHTML=et,ve=o(),k=a("p"),k.textContent=tt,_e=o(),r(P.$$.fragment),Ce=o(),q=a("p"),q.textContent=it,xe=o(),H=a("ol"),H.innerHTML=lt,he=o(),L=a("p"),L.innerHTML=ot,be=o(),r(R.$$.fragment),ye=o(),U=a("p"),U.textContent=nt,ze=o(),r(S.$$.fragment),Te=o(),A=a("p"),A.innerHTML=at,we=o(),r(G.$$.fragment),Me=o(),W=a("p"),W.textContent=st,ke=o(),r(Z.$$.fragment),Pe=o(),j=a("p"),j.innerHTML=ut,qe=o(),r(Q.$$.fragment),He=o(),F=a("p"),F.innerHTML=rt,Le=o(),r(I.$$.fragment),Re=o(),B=a("p"),B.textContent=ct,Ue=o(),r(E.$$.fragment),Se=o(),J=a("p"),J.textContent=dt,Ae=o(),r(N.$$.fragment),Ge=o(),D=a("p"),D.innerHTML=pt,We=o(),r(V.$$.fragment),Ze=o(),X=a("p"),X.textContent=mt,je=o(),Y=a("ul"),Y.innerHTML=ft,Qe=o(),O=a("p"),O.textContent=$t,Fe=o(),r(K.$$.fragment),Ie=o(),ee=a("p"),ee.textContent=gt,Be=o(),te=a("ul"),te.innerHTML=vt,Ee=o(),le=a("p"),this.h()},l(e){const t=Tt("svelte-u9bgzb",document.head);g=s(t,"META",{name:!0,content:!0}),t.forEach(i),ne=n(e),ie=s(e,"P",{}),_t(ie).forEach(i),ae=n(e),c(v.$$.fragment,e),se=n(e),_=s(e,"P",{"data-svelte-h":!0}),u(_)!=="svelte-x884y7"&&(_.textContent=De),ue=n(e),C=s(e,"UL",{"data-svelte-h":!0}),u(C)!=="svelte-10iagbn"&&(C.innerHTML=Ve),re=n(e),x=s(e,"P",{"data-svelte-h":!0}),u(x)!=="svelte-120kdh4"&&(x.textContent=Xe),ce=n(e),h=s(e,"P",{"data-svelte-h":!0}),u(h)!=="svelte-12o1tek"&&(h.textContent=Ye),de=n(e),c(b.$$.fragment,e),pe=n(e),y=s(e,"P",{"data-svelte-h":!0}),u(y)!=="svelte-ddz7hq"&&(y.textContent=Oe),me=n(e),c(z.$$.fragment,e),fe=n(e),T=s(e,"P",{"data-svelte-h":!0}),u(T)!=="svelte-7b674g"&&(T.textContent=Ke),$e=n(e),c(w.$$.fragment,e),ge=n(e),M=s(e,"P",{"data-svelte-h":!0}),u(M)!=="svelte-zuupn6"&&(M.innerHTML=et),ve=n(e),k=s(e,"P",{"data-svelte-h":!0}),u(k)!=="svelte-9imjiu"&&(k.textContent=tt),_e=n(e),c(P.$$.fragment,e),Ce=n(e),q=s(e,"P",{"data-svelte-h":!0}),u(q)!=="svelte-1gwmfa5"&&(q.textContent=it),xe=n(e),H=s(e,"OL",{"data-svelte-h":!0}),u(H)!=="svelte-37dzw1"&&(H.innerHTML=lt),he=n(e),L=s(e,"P",{"data-svelte-h":!0}),u(L)!=="svelte-1le8a4"&&(L.innerHTML=ot),be=n(e),c(R.$$.fragment,e),ye=n(e),U=s(e,"P",{"data-svelte-h":!0}),u(U)!=="svelte-1yo2yw2"&&(U.textContent=nt),ze=n(e),c(S.$$.fragment,e),Te=n(e),A=s(e,"P",{"data-svelte-h":!0}),u(A)!=="svelte-txjq72"&&(A.innerHTML=at),we=n(e),c(G.$$.fragment,e),Me=n(e),W=s(e,"P",{"data-svelte-h":!0}),u(W)!=="svelte-1f2ovqk"&&(W.textContent=st),ke=n(e),c(Z.$$.fragment,e),Pe=n(e),j=s(e,"P",{"data-svelte-h":!0}),u(j)!=="svelte-1ezvqkz"&&(j.innerHTML=ut),qe=n(e),c(Q.$$.fragment,e),He=n(e),F=s(e,"P",{"data-svelte-h":!0}),u(F)!=="svelte-1k40kd3"&&(F.innerHTML=rt),Le=n(e),c(I.$$.fragment,e),Re=n(e),B=s(e,"P",{"data-svelte-h":!0}),u(B)!=="svelte-1k82vv7"&&(B.textContent=ct),Ue=n(e),c(E.$$.fragment,e),Se=n(e),J=s(e,"P",{"data-svelte-h":!0}),u(J)!=="svelte-3ydaun"&&(J.textContent=dt),Ae=n(e),c(N.$$.fragment,e),Ge=n(e),D=s(e,"P",{"data-svelte-h":!0}),u(D)!=="svelte-myx6g1"&&(D.innerHTML=pt),We=n(e),c(V.$$.fragment,e),Ze=n(e),X=s(e,"P",{"data-svelte-h":!0}),u(X)!=="svelte-887q0w"&&(X.textContent=mt),je=n(e),Y=s(e,"UL",{"data-svelte-h":!0}),u(Y)!=="svelte-1ejvxn2"&&(Y.innerHTML=ft),Qe=n(e),O=s(e,"P",{"data-svelte-h":!0}),u(O)!=="svelte-1xmtr04"&&(O.textContent=$t),Fe=n(e),c(K.$$.fragment,e),Ie=n(e),ee=s(e,"P",{"data-svelte-h":!0}),u(ee)!=="svelte-w6onvg"&&(ee.textContent=gt),Be=n(e),te=s(e,"UL",{"data-svelte-h":!0}),u(te)!=="svelte-cbf9y"&&(te.innerHTML=vt),Ee=n(e),le=s(e,"P",{}),_t(le).forEach(i),this.h()},h(){Ct(g,"name","hf:doc:metadata"),Ct(g,"content",kt)},m(e,t){wt(document.head,g),l(e,ne,t),l(e,ie,t),l(e,ae,t),d(v,e,t),l(e,se,t),l(e,_,t),l(e,ue,t),l(e,C,t),l(e,re,t),l(e,x,t),l(e,ce,t),l(e,h,t),l(e,de,t),d(b,e,t),l(e,pe,t),l(e,y,t),l(e,me,t),d(z,e,t),l(e,fe,t),l(e,T,t),l(e,$e,t),d(w,e,t),l(e,ge,t),l(e,M,t),l(e,ve,t),l(e,k,t),l(e,_e,t),d(P,e,t),l(e,Ce,t),l(e,q,t),l(e,xe,t),l(e,H,t),l(e,he,t),l(e,L,t),l(e,be,t),d(R,e,t),l(e,ye,t),l(e,U,t),l(e,ze,t),d(S,e,t),l(e,Te,t),l(e,A,t),l(e,we,t),d(G,e,t),l(e,Me,t),l(e,W,t),l(e,ke,t),d(Z,e,t),l(e,Pe,t),l(e,j,t),l(e,qe,t),d(Q,e,t),l(e,He,t),l(e,F,t),l(e,Le,t),d(I,e,t),l(e,Re,t),l(e,B,t),l(e,Ue,t),d(E,e,t),l(e,Se,t),l(e,J,t),l(e,Ae,t),d(N,e,t),l(e,Ge,t),l(e,D,t),l(e,We,t),d(V,e,t),l(e,Ze,t),l(e,X,t),l(e,je,t),l(e,Y,t),l(e,Qe,t),l(e,O,t),l(e,Fe,t),d(K,e,t),l(e,Ie,t),l(e,ee,t),l(e,Be,t),l(e,te,t),l(e,Ee,t),l(e,le,t),Je=!0},p:ht,i(e){Je||(p(v.$$.fragment,e),p(b.$$.fragment,e),p(z.$$.fragment,e),p(w.$$.fragment,e),p(P.$$.fragment,e),p(R.$$.fragment,e),p(S.$$.fragment,e),p(G.$$.fragment,e),p(Z.$$.fragment,e),p(Q.$$.fragment,e),p(I.$$.fragment,e),p(E.$$.fragment,e),p(N.$$.fragment,e),p(V.$$.fragment,e),p(K.$$.fragment,e),Je=!0)},o(e){m(v.$$.fragment,e),m(b.$$.fragment,e),m(z.$$.fragment,e),m(w.$$.fragment,e),m(P.$$.fragment,e),m(R.$$.fragment,e),m(S.$$.fragment,e),m(G.$$.fragment,e),m(Z.$$.fragment,e),m(Q.$$.fragment,e),m(I.$$.fragment,e),m(E.$$.fragment,e),m(N.$$.fragment,e),m(V.$$.fragment,e),m(K.$$.fragment,e),Je=!1},d(e){e&&(i(ne),i(ie),i(ae),i(se),i(_),i(ue),i(C),i(re),i(x),i(ce),i(h),i(de),i(pe),i(y),i(me),i(fe),i(T),i($e),i(ge),i(M),i(ve),i(k),i(_e),i(Ce),i(q),i(xe),i(H),i(he),i(L),i(be),i(ye),i(U),i(ze),i(Te),i(A),i(we),i(Me),i(W),i(ke),i(Pe),i(j),i(qe),i(He),i(F),i(Le),i(Re),i(B),i(Ue),i(Se),i(J),i(Ae),i(Ge),i(D),i(We),i(Ze),i(X),i(je),i(Y),i(Qe),i(O),i(Fe),i(Ie),i(ee),i(Be),i(te),i(Ee),i(le)),i(g),f(v,e),f(b,e),f(z,e),f(w,e),f(P,e),f(R,e),f(S,e),f(G,e),f(Z,e),f(Q,e),f(I,e),f(E,e),f(N,e),f(V,e),f(K,e)}}}const kt='{"title":"Controlli su una Pull Request","local":"controlli-su-una-pull-request","sections":[{"title":"Tests","local":"tests","sections":[],"depth":2},{"title":"Build della documentazione","local":"build-della-documentazione","sections":[],"depth":2},{"title":"Stile del codice e della documentazione","local":"stile-del-codice-e-della-documentazione","sections":[],"depth":2},{"title":"Coerenza del repository","local":"coerenza-del-repository","sections":[],"depth":2}],"depth":1}';function Pt(Ne){return bt(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Ut extends yt{constructor(g){super(),zt(this,g,Pt,Mt,xt,{})}}export{Ut as component};
