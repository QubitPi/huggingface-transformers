import{s as is,o as rs,n as Y}from"../chunks/scheduler.36a0863c.js";import{S as os,i as ps,g as u,s as r,r as g,A as cs,h as d,f as s,c as o,j as as,u as $,x as f,k as ls,y as ms,a,v as h,d as b,t as y,w as j}from"../chunks/index.9c13489a.js";import{T as qt}from"../chunks/Tip.3b06990e.js";import{C as q}from"../chunks/CodeBlock.05d8ec32.js";import{F as ns,M as kt}from"../chunks/Markdown.88297c0b.js";import{H as Re}from"../chunks/Heading.7a254a62.js";function us(Z){let l,m='Puoi anche salvare il file di configurazione come dizionario oppure come la differenza tra gli attributi della tua configurazione personalizzata e gli attributi della configurazione predefinita! Guarda la documentazione <a href="main_classes/configuration">configuration</a> per piÃ¹ dettagli.';return{c(){l=u("p"),l.innerHTML=m},l(n){l=d(n,"P",{"data-svelte-h":!0}),f(l)!=="svelte-15jhhcb"&&(l.innerHTML=m)},m(n,p){a(n,l,p)},p:Y,d(n){n&&s(l)}}}function ds(Z){let l,m="Carica gli attributi della tua configurazione personalizzata nel modello:",n,p,v,z,C="Questo crea modelli con valori casuali invece di pesi pre-allenati. Non sarai in grado di usare questo modello per niente di utile finchÃ© non lo alleni. Lâ€™allenamento Ã¨ un processo costoso e che richiede tempo . Generalmente Ã¨ meglio usare un modello pre-allenato per ottenere risultati migliori velocemente, utilizzando solo una frazione delle risorse neccesarie per lâ€™allenamento.",w,M,k="Crea un modello pre-allenato con <code>from_pretrained()</code>:",c,_,W,J,U="Quando carichi pesi pre-allenati, la configurazione del modello predefinito Ã¨ automaticamente caricata se il modello Ã¨ fornito da ðŸ¤— Transformers. Tuttavia, puoi ancora sostituire gli attributi - alcuni o tutti - di configurazione del modello predefinito con i tuoi se lo desideri:",x,R,V;return p=new q({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMERpc3RpbEJlcnRNb2RlbCUwQSUwQW15X2NvbmZpZyUyMCUzRCUyMERpc3RpbEJlcnRDb25maWcuZnJvbV9wcmV0cmFpbmVkKCUyMi4lMkZ5b3VyX21vZGVsX3NhdmVfcGF0aCUyRm15X2NvbmZpZy5qc29uJTIyKSUwQW1vZGVsJTIwJTNEJTIwRGlzdGlsQmVydE1vZGVsKG15X2NvbmZpZyk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> DistilBertModel

<span class="hljs-meta">&gt;&gt;&gt; </span>my_config = DistilBertConfig.from_pretrained(<span class="hljs-string">&quot;./your_model_save_path/my_config.json&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>model = DistilBertModel(my_config)`,wrap:!1}}),_=new q({props:{code:"bW9kZWwlMjAlM0QlMjBEaXN0aWxCZXJ0TW9kZWwuZnJvbV9wcmV0cmFpbmVkKCUyMmRpc3RpbGJlcnQlMkZkaXN0aWxiZXJ0LWJhc2UtdW5jYXNlZCUyMik=",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>model = DistilBertModel.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>)',wrap:!1}}),R=new q({props:{code:"bW9kZWwlMjAlM0QlMjBEaXN0aWxCZXJ0TW9kZWwuZnJvbV9wcmV0cmFpbmVkKCUyMmRpc3RpbGJlcnQlMkZkaXN0aWxiZXJ0LWJhc2UtdW5jYXNlZCUyMiUyQyUyMGNvbmZpZyUzRG15X2NvbmZpZyk=",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>model = DistilBertModel.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>, config=my_config)',wrap:!1}}),{c(){l=u("p"),l.textContent=m,n=r(),g(p.$$.fragment),v=r(),z=u("p"),z.textContent=C,w=r(),M=u("p"),M.innerHTML=k,c=r(),g(_.$$.fragment),W=r(),J=u("p"),J.textContent=U,x=r(),g(R.$$.fragment)},l(i){l=d(i,"P",{"data-svelte-h":!0}),f(l)!=="svelte-1cmkkoy"&&(l.textContent=m),n=o(i),$(p.$$.fragment,i),v=o(i),z=d(i,"P",{"data-svelte-h":!0}),f(z)!=="svelte-zq50ce"&&(z.textContent=C),w=o(i),M=d(i,"P",{"data-svelte-h":!0}),f(M)!=="svelte-so9er"&&(M.innerHTML=k),c=o(i),$(_.$$.fragment,i),W=o(i),J=d(i,"P",{"data-svelte-h":!0}),f(J)!=="svelte-1qjkbx4"&&(J.textContent=U),x=o(i),$(R.$$.fragment,i)},m(i,T){a(i,l,T),a(i,n,T),h(p,i,T),a(i,v,T),a(i,z,T),a(i,w,T),a(i,M,T),a(i,c,T),h(_,i,T),a(i,W,T),a(i,J,T),a(i,x,T),h(R,i,T),V=!0},p:Y,i(i){V||(b(p.$$.fragment,i),b(_.$$.fragment,i),b(R.$$.fragment,i),V=!0)},o(i){y(p.$$.fragment,i),y(_.$$.fragment,i),y(R.$$.fragment,i),V=!1},d(i){i&&(s(l),s(n),s(v),s(z),s(w),s(M),s(c),s(W),s(J),s(x)),j(p,i),j(_,i),j(R,i)}}}function fs(Z){let l,m;return l=new kt({props:{$$slots:{default:[ds]},$$scope:{ctx:Z}}}),{c(){g(l.$$.fragment)},l(n){$(l.$$.fragment,n)},m(n,p){h(l,n,p),m=!0},p(n,p){const v={};p&2&&(v.$$scope={dirty:p,ctx:n}),l.$set(v)},i(n){m||(b(l.$$.fragment,n),m=!0)},o(n){y(l.$$.fragment,n),m=!1},d(n){j(l,n)}}}function gs(Z){let l,m="Carica gli attributi di configurazione personalizzati nel modello:",n,p,v,z,C="Questo crea modelli con valori casuali invece di pesi pre-allenati. Non sarai in grado di usare questo modello per niente di utile finchÃ© non lo alleni. Lâ€™allenamento Ã¨ un processo costoso e che richiede tempo . Generalmente Ã¨ meglio usare un modello pre-allenato per ottenere risultati migliori velocemente, utilizzando solo una frazione delle risorse neccesarie per lâ€™allenamento.",w,M,k="Crea un modello pre-allenoto con <code>from_pretrained()</code>:",c,_,W,J,U="Quando carichi pesi pre-allenati, la configurazione del modello predefinito Ã¨ automaticamente caricato se il modello Ã¨ fornito da ðŸ¤— Transformers. Tuttavia, puoi ancora sostituire gli attributi - alcuni o tutti - di configurazione del modello predefinito con i tuoi se lo desideri:",x,R,V;return p=new q({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMFRGRGlzdGlsQmVydE1vZGVsJTBBJTBBbXlfY29uZmlnJTIwJTNEJTIwRGlzdGlsQmVydENvbmZpZy5mcm9tX3ByZXRyYWluZWQoJTIyLiUyRnlvdXJfbW9kZWxfc2F2ZV9wYXRoJTJGbXlfY29uZmlnLmpzb24lMjIpJTBBdGZfbW9kZWwlMjAlM0QlMjBURkRpc3RpbEJlcnRNb2RlbChteV9jb25maWcp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> TFDistilBertModel

<span class="hljs-meta">&gt;&gt;&gt; </span>my_config = DistilBertConfig.from_pretrained(<span class="hljs-string">&quot;./your_model_save_path/my_config.json&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>tf_model = TFDistilBertModel(my_config)`,wrap:!1}}),_=new q({props:{code:"dGZfbW9kZWwlMjAlM0QlMjBURkRpc3RpbEJlcnRNb2RlbC5mcm9tX3ByZXRyYWluZWQoJTIyZGlzdGlsYmVydCUyRmRpc3RpbGJlcnQtYmFzZS11bmNhc2VkJTIyKQ==",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>tf_model = TFDistilBertModel.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>)',wrap:!1}}),R=new q({props:{code:"dGZfbW9kZWwlMjAlM0QlMjBURkRpc3RpbEJlcnRNb2RlbC5mcm9tX3ByZXRyYWluZWQoJTIyZGlzdGlsYmVydCUyRmRpc3RpbGJlcnQtYmFzZS11bmNhc2VkJTIyJTJDJTIwY29uZmlnJTNEbXlfY29uZmlnKQ==",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>tf_model = TFDistilBertModel.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>, config=my_config)',wrap:!1}}),{c(){l=u("p"),l.textContent=m,n=r(),g(p.$$.fragment),v=r(),z=u("p"),z.textContent=C,w=r(),M=u("p"),M.innerHTML=k,c=r(),g(_.$$.fragment),W=r(),J=u("p"),J.textContent=U,x=r(),g(R.$$.fragment)},l(i){l=d(i,"P",{"data-svelte-h":!0}),f(l)!=="svelte-1hu91xr"&&(l.textContent=m),n=o(i),$(p.$$.fragment,i),v=o(i),z=d(i,"P",{"data-svelte-h":!0}),f(z)!=="svelte-zq50ce"&&(z.textContent=C),w=o(i),M=d(i,"P",{"data-svelte-h":!0}),f(M)!=="svelte-3b4nvp"&&(M.innerHTML=k),c=o(i),$(_.$$.fragment,i),W=o(i),J=d(i,"P",{"data-svelte-h":!0}),f(J)!=="svelte-16aucye"&&(J.textContent=U),x=o(i),$(R.$$.fragment,i)},m(i,T){a(i,l,T),a(i,n,T),h(p,i,T),a(i,v,T),a(i,z,T),a(i,w,T),a(i,M,T),a(i,c,T),h(_,i,T),a(i,W,T),a(i,J,T),a(i,x,T),h(R,i,T),V=!0},p:Y,i(i){V||(b(p.$$.fragment,i),b(_.$$.fragment,i),b(R.$$.fragment,i),V=!0)},o(i){y(p.$$.fragment,i),y(_.$$.fragment,i),y(R.$$.fragment,i),V=!1},d(i){i&&(s(l),s(n),s(v),s(z),s(w),s(M),s(c),s(W),s(J),s(x)),j(p,i),j(_,i),j(R,i)}}}function $s(Z){let l,m;return l=new kt({props:{$$slots:{default:[gs]},$$scope:{ctx:Z}}}),{c(){g(l.$$.fragment)},l(n){$(l.$$.fragment,n)},m(n,p){h(l,n,p),m=!0},p(n,p){const v={};p&2&&(v.$$scope={dirty:p,ctx:n}),l.$set(v)},i(n){m||(b(l.$$.fragment,n),m=!0)},o(n){y(l.$$.fragment,n),m=!1},d(n){j(l,n)}}}function hs(Z){let l,m="Per esempio, <code>DistilBertForSequenceClassification</code> Ã¨ un modello DistilBERT base con una testa di classificazione per sequenze. La sequenza di classificazione head Ã¨ uno strato lineare sopra gli output ragruppati.",n,p,v,z,C="Riutilizza facilmente questo checkpoint per unâ€™altra attivitÃ  passando ad un model head differente. Per un attivitÃ  di risposta alle domande, utilizzerai il model head <code>DistilBertForQuestionAnswering</code>. La head per compiti di question answering Ã¨ simile alla classificazione di sequenza head tranne per il fatto che Ã¨ uno strato lineare sopra lâ€™output degli stati nascosti (hidden states in inglese)",w,M,k;return p=new q({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMERpc3RpbEJlcnRGb3JTZXF1ZW5jZUNsYXNzaWZpY2F0aW9uJTBBJTBBbW9kZWwlMjAlM0QlMjBEaXN0aWxCZXJ0Rm9yU2VxdWVuY2VDbGFzc2lmaWNhdGlvbi5mcm9tX3ByZXRyYWluZWQoJTIyZGlzdGlsYmVydCUyRmRpc3RpbGJlcnQtYmFzZS11bmNhc2VkJTIyKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> DistilBertForSequenceClassification

<span class="hljs-meta">&gt;&gt;&gt; </span>model = DistilBertForSequenceClassification.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>)`,wrap:!1}}),M=new q({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMERpc3RpbEJlcnRGb3JRdWVzdGlvbkFuc3dlcmluZyUwQSUwQW1vZGVsJTIwJTNEJTIwRGlzdGlsQmVydEZvclF1ZXN0aW9uQW5zd2VyaW5nLmZyb21fcHJldHJhaW5lZCglMjJkaXN0aWxiZXJ0JTJGZGlzdGlsYmVydC1iYXNlLXVuY2FzZWQlMjIp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> DistilBertForQuestionAnswering

<span class="hljs-meta">&gt;&gt;&gt; </span>model = DistilBertForQuestionAnswering.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>)`,wrap:!1}}),{c(){l=u("p"),l.innerHTML=m,n=r(),g(p.$$.fragment),v=r(),z=u("p"),z.innerHTML=C,w=r(),g(M.$$.fragment)},l(c){l=d(c,"P",{"data-svelte-h":!0}),f(l)!=="svelte-1u5umc5"&&(l.innerHTML=m),n=o(c),$(p.$$.fragment,c),v=o(c),z=d(c,"P",{"data-svelte-h":!0}),f(z)!=="svelte-3acy4z"&&(z.innerHTML=C),w=o(c),$(M.$$.fragment,c)},m(c,_){a(c,l,_),a(c,n,_),h(p,c,_),a(c,v,_),a(c,z,_),a(c,w,_),h(M,c,_),k=!0},p:Y,i(c){k||(b(p.$$.fragment,c),b(M.$$.fragment,c),k=!0)},o(c){y(p.$$.fragment,c),y(M.$$.fragment,c),k=!1},d(c){c&&(s(l),s(n),s(v),s(z),s(w)),j(p,c),j(M,c)}}}function bs(Z){let l,m;return l=new kt({props:{$$slots:{default:[hs]},$$scope:{ctx:Z}}}),{c(){g(l.$$.fragment)},l(n){$(l.$$.fragment,n)},m(n,p){h(l,n,p),m=!0},p(n,p){const v={};p&2&&(v.$$scope={dirty:p,ctx:n}),l.$set(v)},i(n){m||(b(l.$$.fragment,n),m=!0)},o(n){y(l.$$.fragment,n),m=!1},d(n){j(l,n)}}}function ys(Z){let l,m="Per esempio, <code>TFDistilBertForSequenceClassification</code> Ã¨ un modello DistilBERT base con classificazione di sequenza head. La classificazione di sequenza head Ã¨ uno strato lineare sopra gli output raggruppati.",n,p,v,z,C="Riutilizza facilmente questo checkpoint per un altra attivitÃ  passando ad un modello head diverso. Per un attivitÃ  di risposta alle domande, utilizzerai il model head <code>TFDistilBertForQuestionAnswering</code>. Il head di risposta alle domande Ã¨ simile alla sequenza di classificazione head tranne per il fatto che Ã¨ uno strato lineare sopra lâ€™output degli stati nascosti (hidden states in inglese)",w,M,k;return p=new q({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMFRGRGlzdGlsQmVydEZvclNlcXVlbmNlQ2xhc3NpZmljYXRpb24lMEElMEF0Zl9tb2RlbCUyMCUzRCUyMFRGRGlzdGlsQmVydEZvclNlcXVlbmNlQ2xhc3NpZmljYXRpb24uZnJvbV9wcmV0cmFpbmVkKCUyMmRpc3RpbGJlcnQlMkZkaXN0aWxiZXJ0LWJhc2UtdW5jYXNlZCUyMik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> TFDistilBertForSequenceClassification

<span class="hljs-meta">&gt;&gt;&gt; </span>tf_model = TFDistilBertForSequenceClassification.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>)`,wrap:!1}}),M=new q({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMFRGRGlzdGlsQmVydEZvclF1ZXN0aW9uQW5zd2VyaW5nJTBBJTBBdGZfbW9kZWwlMjAlM0QlMjBURkRpc3RpbEJlcnRGb3JRdWVzdGlvbkFuc3dlcmluZy5mcm9tX3ByZXRyYWluZWQoJTIyZGlzdGlsYmVydCUyRmRpc3RpbGJlcnQtYmFzZS11bmNhc2VkJTIyKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> TFDistilBertForQuestionAnswering

<span class="hljs-meta">&gt;&gt;&gt; </span>tf_model = TFDistilBertForQuestionAnswering.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>)`,wrap:!1}}),{c(){l=u("p"),l.innerHTML=m,n=r(),g(p.$$.fragment),v=r(),z=u("p"),z.innerHTML=C,w=r(),g(M.$$.fragment)},l(c){l=d(c,"P",{"data-svelte-h":!0}),f(l)!=="svelte-12mkr0g"&&(l.innerHTML=m),n=o(c),$(p.$$.fragment,c),v=o(c),z=d(c,"P",{"data-svelte-h":!0}),f(z)!=="svelte-1gxw94o"&&(z.innerHTML=C),w=o(c),$(M.$$.fragment,c)},m(c,_){a(c,l,_),a(c,n,_),h(p,c,_),a(c,v,_),a(c,z,_),a(c,w,_),h(M,c,_),k=!0},p:Y,i(c){k||(b(p.$$.fragment,c),b(M.$$.fragment,c),k=!0)},o(c){y(p.$$.fragment,c),y(M.$$.fragment,c),k=!1},d(c){c&&(s(l),s(n),s(v),s(z),s(w)),j(p,c),j(M,c)}}}function js(Z){let l,m;return l=new kt({props:{$$slots:{default:[ys]},$$scope:{ctx:Z}}}),{c(){g(l.$$.fragment)},l(n){$(l.$$.fragment,n)},m(n,p){h(l,n,p),m=!0},p(n,p){const v={};p&2&&(v.$$scope={dirty:p,ctx:n}),l.$set(v)},i(n){m||(b(l.$$.fragment,n),m=!0)},o(n){y(l.$$.fragment,n),m=!1},d(n){j(l,n)}}}function vs(Z){let l,m='Non tutti i modelli supportano un tokenizer veloce. Dai unâ€™occhiata a questo <a href="index#supported-frameworks">tabella</a> per verificare se un modello ha il supporto per tokenizer veloce.';return{c(){l=u("p"),l.innerHTML=m},l(n){l=d(n,"P",{"data-svelte-h":!0}),f(l)!=="svelte-1jbik8k"&&(l.innerHTML=m)},m(n,p){a(n,l,p)},p:Y,d(n){n&&s(l)}}}function zs(Z){let l,m="Per lâ€™impostazione predefinita, <code>AutoTokenizer</code> proverÃ  a caricare un tokenizer veloce. Puoi disabilitare questo comportamento impostando <code>use_fast=False</code> in <code>from_pretrained</code>.";return{c(){l=u("p"),l.innerHTML=m},l(n){l=d(n,"P",{"data-svelte-h":!0}),f(l)!=="svelte-1ar4vf4"&&(l.innerHTML=m)},m(n,p){a(n,l,p)},p:Y,d(n){n&&s(l)}}}function Ms(Z){let l,m="Se non stai cercando alcuna personalizzazione, usa il metodo <code>from_pretrained</code> per caricare i parametri di default dellâ€™estrattore di caratteristiche di un modello.";return{c(){l=u("p"),l.innerHTML=m},l(n){l=d(n,"P",{"data-svelte-h":!0}),f(l)!=="svelte-10hto70"&&(l.innerHTML=m)},m(n,p){a(n,l,p)},p:Y,d(n){n&&s(l)}}}function _s(Z){let l,m,n,p,v,z,C,w='Una <a href="model_doc/auto"><code>AutoClass</code></a> deduce automaticamente il modello dellâ€™architettura e scarica la configurazione e i pesi pre-allenati. Generalmente, noi consigliamo di usare un <code>AutoClass</code> per produrre un codice indipendente dal checkpoint. Ma gli utenti che desiderano un controllo maggiore su parametri specifici del modello possono creare un modello ðŸ¤— Transformers personalizzato da poche classi base. Questo potrebbe essere particolarmente utile per qualunque persona sia interessata nel studiare, allenare o sperimentare con un modello ðŸ¤— Transformers. In questa guida, approfondisci la creazione di un modello personalizzato senza <code>AutoClass</code>. Impara come:',M,k,c="<li>Caricare e personalizzare una configurazione del modello.</li> <li>Creare unâ€™architettura modello.</li> <li>Creare un tokenizer lento e veloce per il testo.</li> <li>Creare un estrattore di caratteristiche per attivitÃ  riguardanti audio o immagini.</li> <li>Creare un processore per attivitÃ  multimodali.</li>",_,W,J,U,x='Una <a href="main_classes/configuration">configurazione</a> si riferisce agli attributi specifici di un modello. Ogni configurazione del modello ha attributi diversi; per esempio, tutti i modelli npl hanno questi attributi in comune <code>hidden_size</code>, <code>num_attention_heads</code>, <code>num_hidden_layers</code> e <code>vocab_size</code>. Questi attributi specificano il numero di attention heads o strati nascosti con cui costruire un modello.',R,V,i='Dai unâ€™occhiata piÃ¹ da vicino a <a href="model_doc/distilbert">DistilBERT</a> accedendo a <code>DistilBertConfig</code> per ispezionare i suoi attributi:',T,L,We,Q,wt="<code>DistilBertConfig</code> mostra tutti gli attributi predefiniti usati per costruire una base <code>DistilBertModel</code>. Tutti gli attributi sono personalizzabili, creando uno spazio per sperimentare. Per esempio, puoi configurare un modello predefinito per:",Ve,N,Jt="<li>Provare un funzione di attivazione diversa con il parametro <code>activation</code>.</li> <li>Utilizzare tasso di drop out piÃ¹ elevato per le probalitÃ  di attention con il parametro <code>attention_dropout</code>.</li>",Ue,I,xe,P,Rt="Nella funzione <code>from_pretrained()</code> possono essere modificati gli attributi del modello pre-allenato:",Ge,D,Xe,S,Ct="Quando la configurazione del modello ti soddisfa, la puoi salvare con <code>save_pretrained()</code>. Il file della tua configurazione Ã¨ memorizzato come file JSON nella save directory specificata:",Fe,A,He,K,Wt="Per riutilizzare la configurazione del file, caricalo con <code>from_pretrained()</code>:",Ee,O,Be,G,Ye,ee,Le,te,Vt='Il prossimo passo e di creare <a href="main_classes/models">modello</a>. Il modello - vagamente riferito anche come architettura - definisce cosa ogni strato deve fare e quali operazioni stanno succedendo. Attributi come <code>num_hidden_layers</code> provenienti dalla configurazione sono usati per definire lâ€™architettura. Ogni modello condivide la classe base <code>PreTrainedModel</code> e alcuni metodi comuni come il ridimensionamento degli input embeddings e la soppressione delle self-attention heads . Inoltre, tutti i modelli sono la sottoclasse di <a href="https://pytorch.org/docs/stable/generated/torch.nn.Module.html" rel="nofollow"><code>torch.nn.Module</code></a>, <a href="https://www.tensorflow.org/api_docs/python/tf/keras/Model" rel="nofollow"><code>tf.keras.Model</code></a> o <a href="https://flax.readthedocs.io/en/latest/api_reference/flax.linen/module.html" rel="nofollow"><code>flax.linen.Module</code></a>. Cio significa che i modelli sono compatibili con lâ€™uso di ciascun di framework.',Qe,X,Ne,se,Ie,ae,Ut="A questo punto, hai un modello DistilBERT base i cui output sono gli <em>hidden states</em> (in italiano stati nascosti). Gli stati nascosti sono passati come input a un model head per produrre lâ€™output finale. ðŸ¤— Transformers fornisce un model head diverso per ogni attivitÃ  fintanto che il modello supporta lâ€™attivitÃ   (i.e., non puoi usare DistilBERT per un attivitÃ  sequence-to-sequence come la traduzione).",Pe,F,De,le,Se,ne,xt='Lâ€™ultima classe base di cui hai bisogno prima di utilizzare un modello per i dati testuali Ã¨ un <a href="main_classes/tokenizer">tokenizer</a> per convertire il testo grezzo in tensori. Ci sono due tipi di tokenizer che puoi usare con ðŸ¤— Transformers:',Ae,ie,Gt='<li><code>PreTrainedTokenizer</code>: unâ€™implementazione Python di un tokenizer.</li> <li><code>PreTrainedTokenizerFast</code>: un tokenizer dalla nostra libreria <a href="https://huggingface.co/docs/tokenizers/python/latest/" rel="nofollow">ðŸ¤— Tokenizer</a> basata su Rust. Questo tipo di tokenizer Ã¨ significativamente piÃ¹ veloce, specialmente durante la batch tokenization, grazie alla sua implementazione Rust. Il tokenizer veloce offre anche metodi aggiuntivi come <em>offset mapping</em> che associa i token alle loro parole o caratteri originali.</li>',Ke,re,Xt="Entrambi i tokenizer supportano metodi comuni come la codifica e la decodifica, lâ€™aggiunta di nuovi token e la gestione di token speciali.",Oe,H,et,oe,Ft="Se hai addestrato il tuo tokenizer, puoi crearne uno dal tuo file <em>vocabolario</em>:",tt,pe,st,ce,Ht="Ãˆ importante ricordare che il vocabolario di un tokenizer personalizzato sarÃ  diverso dal vocabolario generato dal tokenizer di un modello preallenato. Ãˆ necessario utilizzare il vocabolario di un modello preallenato se si utilizza un modello preallenato, altrimenti gli input non avranno senso. Crea un tokenizer con il vocabolario di un modello preallenato con la classe <code>DistilBertTokenizer</code>:",at,me,lt,ue,Et="Crea un tokenizer veloce con la classe <code>DistilBertTokenizerFast</code>:",nt,de,it,E,rt,fe,ot,ge,Bt="Un estrattore di caratteristiche (feature in inglese) elabora input audio o immagini. Eredita dalla classe <code>FeatureExtractionMixin</code> base e puÃ² anche ereditare dalla classe <code>ImageFeatureExtractionMixin</code> per lâ€™elaborazione delle caratteristiche dellâ€™immagine o dalla classe <code>SequenceFeatureExtractor</code> per lâ€™elaborazione degli input audio.",pt,$e,Yt='A seconda che tu stia lavorando a unâ€™attivitÃ  audio o visiva, crea un estrattore di caratteristiche associato al modello che stai utilizzando. Ad esempio, crea un <code>ViTFeatureExtractor</code> predefinito se stai usando <a href="model_doc/vit">ViT</a> per la classificazione delle immagini:',ct,he,mt,B,ut,be,Lt="Modifica uno qualsiasi dei parametri <code>ViTFeatureExtractor</code> per creare il tuo estrattore di caratteristiche personalizzato:",dt,ye,ft,je,Qt="Per gli input audio, puoi creare un <code>Wav2Vec2FeatureExtractor</code> e personalizzare i parametri in modo simile:",gt,ve,$t,ze,ht,Me,Nt="Per modelli che supportano attivitÃ  multimodali, ðŸ¤— Transformers offre una classe di processore che racchiude comodamente un estrattore di caratteristiche e un tokenizer in un unico oggetto. Ad esempio, utilizziamo <code>Wav2Vec2Processor</code> per unâ€™attivitÃ  di riconoscimento vocale automatico (ASR). ASR trascrive lâ€™audio in testo, quindi avrai bisogno di un estrattore di caratteristiche e di un tokenizer.",bt,_e,It="Crea un estrattore di feature per gestire gli input audio:",yt,Te,jt,Ze,Pt="Crea un tokenizer per gestire gli input di testo:",vt,qe,zt,ke,Dt="Combinare lâ€™estrattore di caratteristiche e il tokenizer in <code>Wav2Vec2Processor</code>:",Mt,we,_t,Je,St="Con due classi di base - configurazione e modello - e una classe di preelaborazione aggiuntiva (tokenizer, estrattore di caratteristiche o processore), puoi creare qualsiasi modello supportato da ðŸ¤— Transformers. Ognuna di queste classi base Ã¨ configurabile, consentendoti di utilizzare gli attributi specifici che desideri. Ãˆ possibile impostare facilmente un modello per lâ€™addestramento o modificare un modello preallenato esistente per la messa a punto.",Tt,Ce,Zt;return v=new Re({props:{title:"Crea unâ€™architettura personalizzata",local:"crea-unarchitettura-personalizzata",headingTag:"h1"}}),W=new Re({props:{title:"Configurazione",local:"configurazione",headingTag:"h2"}}),L=new q({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMERpc3RpbEJlcnRDb25maWclMEElMEFjb25maWclMjAlM0QlMjBEaXN0aWxCZXJ0Q29uZmlnKCklMEFwcmludChjb25maWcp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> DistilBertConfig

<span class="hljs-meta">&gt;&gt;&gt; </span>config = DistilBertConfig()
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(config)
DistilBertConfig {
  <span class="hljs-string">&quot;activation&quot;</span>: <span class="hljs-string">&quot;gelu&quot;</span>,
  <span class="hljs-string">&quot;attention_dropout&quot;</span>: <span class="hljs-number">0.1</span>,
  <span class="hljs-string">&quot;dim&quot;</span>: <span class="hljs-number">768</span>,
  <span class="hljs-string">&quot;dropout&quot;</span>: <span class="hljs-number">0.1</span>,
  <span class="hljs-string">&quot;hidden_dim&quot;</span>: <span class="hljs-number">3072</span>,
  <span class="hljs-string">&quot;initializer_range&quot;</span>: <span class="hljs-number">0.02</span>,
  <span class="hljs-string">&quot;max_position_embeddings&quot;</span>: <span class="hljs-number">512</span>,
  <span class="hljs-string">&quot;model_type&quot;</span>: <span class="hljs-string">&quot;distilbert&quot;</span>,
  <span class="hljs-string">&quot;n_heads&quot;</span>: <span class="hljs-number">12</span>,
  <span class="hljs-string">&quot;n_layers&quot;</span>: <span class="hljs-number">6</span>,
  <span class="hljs-string">&quot;pad_token_id&quot;</span>: <span class="hljs-number">0</span>,
  <span class="hljs-string">&quot;qa_dropout&quot;</span>: <span class="hljs-number">0.1</span>,
  <span class="hljs-string">&quot;seq_classif_dropout&quot;</span>: <span class="hljs-number">0.2</span>,
  <span class="hljs-string">&quot;sinusoidal_pos_embds&quot;</span>: false,
  <span class="hljs-string">&quot;transformers_version&quot;</span>: <span class="hljs-string">&quot;4.16.2&quot;</span>,
  <span class="hljs-string">&quot;vocab_size&quot;</span>: <span class="hljs-number">30522</span>
}`,wrap:!1}}),I=new q({props:{code:"bXlfY29uZmlnJTIwJTNEJTIwRGlzdGlsQmVydENvbmZpZyhhY3RpdmF0aW9uJTNEJTIycmVsdSUyMiUyQyUyMGF0dGVudGlvbl9kcm9wb3V0JTNEMC40KSUwQXByaW50KG15X2NvbmZpZyk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>my_config = DistilBertConfig(activation=<span class="hljs-string">&quot;relu&quot;</span>, attention_dropout=<span class="hljs-number">0.4</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(my_config)
DistilBertConfig {
  <span class="hljs-string">&quot;activation&quot;</span>: <span class="hljs-string">&quot;relu&quot;</span>,
  <span class="hljs-string">&quot;attention_dropout&quot;</span>: <span class="hljs-number">0.4</span>,
  <span class="hljs-string">&quot;dim&quot;</span>: <span class="hljs-number">768</span>,
  <span class="hljs-string">&quot;dropout&quot;</span>: <span class="hljs-number">0.1</span>,
  <span class="hljs-string">&quot;hidden_dim&quot;</span>: <span class="hljs-number">3072</span>,
  <span class="hljs-string">&quot;initializer_range&quot;</span>: <span class="hljs-number">0.02</span>,
  <span class="hljs-string">&quot;max_position_embeddings&quot;</span>: <span class="hljs-number">512</span>,
  <span class="hljs-string">&quot;model_type&quot;</span>: <span class="hljs-string">&quot;distilbert&quot;</span>,
  <span class="hljs-string">&quot;n_heads&quot;</span>: <span class="hljs-number">12</span>,
  <span class="hljs-string">&quot;n_layers&quot;</span>: <span class="hljs-number">6</span>,
  <span class="hljs-string">&quot;pad_token_id&quot;</span>: <span class="hljs-number">0</span>,
  <span class="hljs-string">&quot;qa_dropout&quot;</span>: <span class="hljs-number">0.1</span>,
  <span class="hljs-string">&quot;seq_classif_dropout&quot;</span>: <span class="hljs-number">0.2</span>,
  <span class="hljs-string">&quot;sinusoidal_pos_embds&quot;</span>: false,
  <span class="hljs-string">&quot;transformers_version&quot;</span>: <span class="hljs-string">&quot;4.16.2&quot;</span>,
  <span class="hljs-string">&quot;vocab_size&quot;</span>: <span class="hljs-number">30522</span>
}`,wrap:!1}}),D=new q({props:{code:"bXlfY29uZmlnJTIwJTNEJTIwRGlzdGlsQmVydENvbmZpZy5mcm9tX3ByZXRyYWluZWQoJTIyZGlzdGlsYmVydCUyRmRpc3RpbGJlcnQtYmFzZS11bmNhc2VkJTIyJTJDJTIwYWN0aXZhdGlvbiUzRCUyMnJlbHUlMjIlMkMlMjBhdHRlbnRpb25fZHJvcG91dCUzRDAuNCk=",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>my_config = DistilBertConfig.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>, activation=<span class="hljs-string">&quot;relu&quot;</span>, attention_dropout=<span class="hljs-number">0.4</span>)',wrap:!1}}),A=new q({props:{code:"bXlfY29uZmlnLnNhdmVfcHJldHJhaW5lZChzYXZlX2RpcmVjdG9yeSUzRCUyMi4lMkZ5b3VyX21vZGVsX3NhdmVfcGF0aCUyMik=",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>my_config.save_pretrained(save_directory=<span class="hljs-string">&quot;./your_model_save_path&quot;</span>)',wrap:!1}}),O=new q({props:{code:"bXlfY29uZmlnJTIwJTNEJTIwRGlzdGlsQmVydENvbmZpZy5mcm9tX3ByZXRyYWluZWQoJTIyLiUyRnlvdXJfbW9kZWxfc2F2ZV9wYXRoJTJGbXlfY29uZmlnLmpzb24lMjIp",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>my_config = DistilBertConfig.from_pretrained(<span class="hljs-string">&quot;./your_model_save_path/my_config.json&quot;</span>)',wrap:!1}}),G=new qt({props:{$$slots:{default:[us]},$$scope:{ctx:Z}}}),ee=new Re({props:{title:"Modello",local:"modello",headingTag:"h2"}}),X=new ns({props:{pytorch:!0,tensorflow:!0,jax:!1,$$slots:{tensorflow:[$s],pytorch:[fs]},$$scope:{ctx:Z}}}),se=new Re({props:{title:"Model head",local:"model-head",headingTag:"h3"}}),F=new ns({props:{pytorch:!0,tensorflow:!0,jax:!1,$$slots:{tensorflow:[js],pytorch:[bs]},$$scope:{ctx:Z}}}),le=new Re({props:{title:"Tokenizer",local:"tokenizer",headingTag:"h2"}}),H=new qt({props:{warning:!0,$$slots:{default:[vs]},$$scope:{ctx:Z}}}),pe=new q({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMERpc3RpbEJlcnRUb2tlbml6ZXIlMEElMEFteV90b2tlbml6ZXIlMjAlM0QlMjBEaXN0aWxCZXJ0VG9rZW5pemVyKHZvY2FiX2ZpbGUlM0QlMjJteV92b2NhYl9maWxlLnR4dCUyMiUyQyUyMGRvX2xvd2VyX2Nhc2UlM0RGYWxzZSUyQyUyMHBhZGRpbmdfc2lkZSUzRCUyMmxlZnQlMjIp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> DistilBertTokenizer

<span class="hljs-meta">&gt;&gt;&gt; </span>my_tokenizer = DistilBertTokenizer(vocab_file=<span class="hljs-string">&quot;my_vocab_file.txt&quot;</span>, do_lower_case=<span class="hljs-literal">False</span>, padding_side=<span class="hljs-string">&quot;left&quot;</span>)`,wrap:!1}}),me=new q({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMERpc3RpbEJlcnRUb2tlbml6ZXIlMEElMEFzbG93X3Rva2VuaXplciUyMCUzRCUyMERpc3RpbEJlcnRUb2tlbml6ZXIuZnJvbV9wcmV0cmFpbmVkKCUyMmRpc3RpbGJlcnQlMkZkaXN0aWxiZXJ0LWJhc2UtdW5jYXNlZCUyMik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> DistilBertTokenizer

<span class="hljs-meta">&gt;&gt;&gt; </span>slow_tokenizer = DistilBertTokenizer.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>)`,wrap:!1}}),de=new q({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMERpc3RpbEJlcnRUb2tlbml6ZXJGYXN0JTBBJTBBZmFzdF90b2tlbml6ZXIlMjAlM0QlMjBEaXN0aWxCZXJ0VG9rZW5pemVyRmFzdC5mcm9tX3ByZXRyYWluZWQoJTIyZGlzdGlsYmVydCUyRmRpc3RpbGJlcnQtYmFzZS11bmNhc2VkJTIyKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> DistilBertTokenizerFast

<span class="hljs-meta">&gt;&gt;&gt; </span>fast_tokenizer = DistilBertTokenizerFast.from_pretrained(<span class="hljs-string">&quot;distilbert/distilbert-base-uncased&quot;</span>)`,wrap:!1}}),E=new qt({props:{$$slots:{default:[zs]},$$scope:{ctx:Z}}}),fe=new Re({props:{title:"Estrattore Di Feature",local:"estrattore-di-feature",headingTag:"h2"}}),he=new q({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMFZpVEZlYXR1cmVFeHRyYWN0b3IlMEElMEF2aXRfZXh0cmFjdG9yJTIwJTNEJTIwVmlURmVhdHVyZUV4dHJhY3RvcigpJTBBcHJpbnQodml0X2V4dHJhY3Rvcik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> ViTFeatureExtractor

<span class="hljs-meta">&gt;&gt;&gt; </span>vit_extractor = ViTFeatureExtractor()
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(vit_extractor)
ViTFeatureExtractor {
  <span class="hljs-string">&quot;do_normalize&quot;</span>: true,
  <span class="hljs-string">&quot;do_resize&quot;</span>: true,
  <span class="hljs-string">&quot;feature_extractor_type&quot;</span>: <span class="hljs-string">&quot;ViTFeatureExtractor&quot;</span>,
  <span class="hljs-string">&quot;image_mean&quot;</span>: [
    <span class="hljs-number">0.5</span>,
    <span class="hljs-number">0.5</span>,
    <span class="hljs-number">0.5</span>
  ],
  <span class="hljs-string">&quot;image_std&quot;</span>: [
    <span class="hljs-number">0.5</span>,
    <span class="hljs-number">0.5</span>,
    <span class="hljs-number">0.5</span>
  ],
  <span class="hljs-string">&quot;resample&quot;</span>: <span class="hljs-number">2</span>,
  <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">224</span>
}`,wrap:!1}}),B=new qt({props:{$$slots:{default:[Ms]},$$scope:{ctx:Z}}}),ye=new q({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMFZpVEZlYXR1cmVFeHRyYWN0b3IlMEElMEFteV92aXRfZXh0cmFjdG9yJTIwJTNEJTIwVmlURmVhdHVyZUV4dHJhY3RvcihyZXNhbXBsZSUzRCUyMlBJTC5JbWFnZS5CT1glMjIlMkMlMjBkb19ub3JtYWxpemUlM0RGYWxzZSUyQyUyMGltYWdlX21lYW4lM0QlNUIwLjMlMkMlMjAwLjMlMkMlMjAwLjMlNUQpJTBBcHJpbnQobXlfdml0X2V4dHJhY3Rvcik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> ViTFeatureExtractor

<span class="hljs-meta">&gt;&gt;&gt; </span>my_vit_extractor = ViTFeatureExtractor(resample=<span class="hljs-string">&quot;PIL.Image.BOX&quot;</span>, do_normalize=<span class="hljs-literal">False</span>, image_mean=[<span class="hljs-number">0.3</span>, <span class="hljs-number">0.3</span>, <span class="hljs-number">0.3</span>])
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(my_vit_extractor)
ViTFeatureExtractor {
  <span class="hljs-string">&quot;do_normalize&quot;</span>: false,
  <span class="hljs-string">&quot;do_resize&quot;</span>: true,
  <span class="hljs-string">&quot;feature_extractor_type&quot;</span>: <span class="hljs-string">&quot;ViTFeatureExtractor&quot;</span>,
  <span class="hljs-string">&quot;image_mean&quot;</span>: [
    <span class="hljs-number">0.3</span>,
    <span class="hljs-number">0.3</span>,
    <span class="hljs-number">0.3</span>
  ],
  <span class="hljs-string">&quot;image_std&quot;</span>: [
    <span class="hljs-number">0.5</span>,
    <span class="hljs-number">0.5</span>,
    <span class="hljs-number">0.5</span>
  ],
  <span class="hljs-string">&quot;resample&quot;</span>: <span class="hljs-string">&quot;PIL.Image.BOX&quot;</span>,
  <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">224</span>
}`,wrap:!1}}),ve=new q({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMFdhdjJWZWMyRmVhdHVyZUV4dHJhY3RvciUwQSUwQXcydjJfZXh0cmFjdG9yJTIwJTNEJTIwV2F2MlZlYzJGZWF0dXJlRXh0cmFjdG9yKCklMEFwcmludCh3MnYyX2V4dHJhY3Rvcik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> Wav2Vec2FeatureExtractor

<span class="hljs-meta">&gt;&gt;&gt; </span>w2v2_extractor = Wav2Vec2FeatureExtractor()
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(w2v2_extractor)
Wav2Vec2FeatureExtractor {
  <span class="hljs-string">&quot;do_normalize&quot;</span>: true,
  <span class="hljs-string">&quot;feature_extractor_type&quot;</span>: <span class="hljs-string">&quot;Wav2Vec2FeatureExtractor&quot;</span>,
  <span class="hljs-string">&quot;feature_size&quot;</span>: <span class="hljs-number">1</span>,
  <span class="hljs-string">&quot;padding_side&quot;</span>: <span class="hljs-string">&quot;right&quot;</span>,
  <span class="hljs-string">&quot;padding_value&quot;</span>: <span class="hljs-number">0.0</span>,
  <span class="hljs-string">&quot;return_attention_mask&quot;</span>: false,
  <span class="hljs-string">&quot;sampling_rate&quot;</span>: <span class="hljs-number">16000</span>
}`,wrap:!1}}),ze=new Re({props:{title:"Processore",local:"processore",headingTag:"h2"}}),Te=new q({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMFdhdjJWZWMyRmVhdHVyZUV4dHJhY3RvciUwQSUwQWZlYXR1cmVfZXh0cmFjdG9yJTIwJTNEJTIwV2F2MlZlYzJGZWF0dXJlRXh0cmFjdG9yKHBhZGRpbmdfdmFsdWUlM0QxLjAlMkMlMjBkb19ub3JtYWxpemUlM0RUcnVlKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> Wav2Vec2FeatureExtractor

<span class="hljs-meta">&gt;&gt;&gt; </span>feature_extractor = Wav2Vec2FeatureExtractor(padding_value=<span class="hljs-number">1.0</span>, do_normalize=<span class="hljs-literal">True</span>)`,wrap:!1}}),qe=new q({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMFdhdjJWZWMyQ1RDVG9rZW5pemVyJTBBJTBBdG9rZW5pemVyJTIwJTNEJTIwV2F2MlZlYzJDVENUb2tlbml6ZXIodm9jYWJfZmlsZSUzRCUyMm15X3ZvY2FiX2ZpbGUudHh0JTIyKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> Wav2Vec2CTCTokenizer

<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer = Wav2Vec2CTCTokenizer(vocab_file=<span class="hljs-string">&quot;my_vocab_file.txt&quot;</span>)`,wrap:!1}}),we=new q({props:{code:"ZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMFdhdjJWZWMyUHJvY2Vzc29yJTBBJTBBcHJvY2Vzc29yJTIwJTNEJTIwV2F2MlZlYzJQcm9jZXNzb3IoZmVhdHVyZV9leHRyYWN0b3IlM0RmZWF0dXJlX2V4dHJhY3RvciUyQyUyMHRva2VuaXplciUzRHRva2VuaXplcik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> Wav2Vec2Processor

<span class="hljs-meta">&gt;&gt;&gt; </span>processor = Wav2Vec2Processor(feature_extractor=feature_extractor, tokenizer=tokenizer)`,wrap:!1}}),{c(){l=u("meta"),m=r(),n=u("p"),p=r(),g(v.$$.fragment),z=r(),C=u("p"),C.innerHTML=w,M=r(),k=u("ul"),k.innerHTML=c,_=r(),g(W.$$.fragment),J=r(),U=u("p"),U.innerHTML=x,R=r(),V=u("p"),V.innerHTML=i,T=r(),g(L.$$.fragment),We=r(),Q=u("p"),Q.innerHTML=wt,Ve=r(),N=u("ul"),N.innerHTML=Jt,Ue=r(),g(I.$$.fragment),xe=r(),P=u("p"),P.innerHTML=Rt,Ge=r(),g(D.$$.fragment),Xe=r(),S=u("p"),S.innerHTML=Ct,Fe=r(),g(A.$$.fragment),He=r(),K=u("p"),K.innerHTML=Wt,Ee=r(),g(O.$$.fragment),Be=r(),g(G.$$.fragment),Ye=r(),g(ee.$$.fragment),Le=r(),te=u("p"),te.innerHTML=Vt,Qe=r(),g(X.$$.fragment),Ne=r(),g(se.$$.fragment),Ie=r(),ae=u("p"),ae.innerHTML=Ut,Pe=r(),g(F.$$.fragment),De=r(),g(le.$$.fragment),Se=r(),ne=u("p"),ne.innerHTML=xt,Ae=r(),ie=u("ul"),ie.innerHTML=Gt,Ke=r(),re=u("p"),re.textContent=Xt,Oe=r(),g(H.$$.fragment),et=r(),oe=u("p"),oe.innerHTML=Ft,tt=r(),g(pe.$$.fragment),st=r(),ce=u("p"),ce.innerHTML=Ht,at=r(),g(me.$$.fragment),lt=r(),ue=u("p"),ue.innerHTML=Et,nt=r(),g(de.$$.fragment),it=r(),g(E.$$.fragment),rt=r(),g(fe.$$.fragment),ot=r(),ge=u("p"),ge.innerHTML=Bt,pt=r(),$e=u("p"),$e.innerHTML=Yt,ct=r(),g(he.$$.fragment),mt=r(),g(B.$$.fragment),ut=r(),be=u("p"),be.innerHTML=Lt,dt=r(),g(ye.$$.fragment),ft=r(),je=u("p"),je.innerHTML=Qt,gt=r(),g(ve.$$.fragment),$t=r(),g(ze.$$.fragment),ht=r(),Me=u("p"),Me.innerHTML=Nt,bt=r(),_e=u("p"),_e.textContent=It,yt=r(),g(Te.$$.fragment),jt=r(),Ze=u("p"),Ze.textContent=Pt,vt=r(),g(qe.$$.fragment),zt=r(),ke=u("p"),ke.innerHTML=Dt,Mt=r(),g(we.$$.fragment),_t=r(),Je=u("p"),Je.textContent=St,Tt=r(),Ce=u("p"),this.h()},l(e){const t=cs("svelte-u9bgzb",document.head);l=d(t,"META",{name:!0,content:!0}),t.forEach(s),m=o(e),n=d(e,"P",{}),as(n).forEach(s),p=o(e),$(v.$$.fragment,e),z=o(e),C=d(e,"P",{"data-svelte-h":!0}),f(C)!=="svelte-1pk49vt"&&(C.innerHTML=w),M=o(e),k=d(e,"UL",{"data-svelte-h":!0}),f(k)!=="svelte-1i4pxwa"&&(k.innerHTML=c),_=o(e),$(W.$$.fragment,e),J=o(e),U=d(e,"P",{"data-svelte-h":!0}),f(U)!=="svelte-1g7k4fs"&&(U.innerHTML=x),R=o(e),V=d(e,"P",{"data-svelte-h":!0}),f(V)!=="svelte-zjobm7"&&(V.innerHTML=i),T=o(e),$(L.$$.fragment,e),We=o(e),Q=d(e,"P",{"data-svelte-h":!0}),f(Q)!=="svelte-1nu4if9"&&(Q.innerHTML=wt),Ve=o(e),N=d(e,"UL",{"data-svelte-h":!0}),f(N)!=="svelte-timpd0"&&(N.innerHTML=Jt),Ue=o(e),$(I.$$.fragment,e),xe=o(e),P=d(e,"P",{"data-svelte-h":!0}),f(P)!=="svelte-1vxy6m3"&&(P.innerHTML=Rt),Ge=o(e),$(D.$$.fragment,e),Xe=o(e),S=d(e,"P",{"data-svelte-h":!0}),f(S)!=="svelte-rceoh2"&&(S.innerHTML=Ct),Fe=o(e),$(A.$$.fragment,e),He=o(e),K=d(e,"P",{"data-svelte-h":!0}),f(K)!=="svelte-10zc6fb"&&(K.innerHTML=Wt),Ee=o(e),$(O.$$.fragment,e),Be=o(e),$(G.$$.fragment,e),Ye=o(e),$(ee.$$.fragment,e),Le=o(e),te=d(e,"P",{"data-svelte-h":!0}),f(te)!=="svelte-1p5e5z3"&&(te.innerHTML=Vt),Qe=o(e),$(X.$$.fragment,e),Ne=o(e),$(se.$$.fragment,e),Ie=o(e),ae=d(e,"P",{"data-svelte-h":!0}),f(ae)!=="svelte-1ir6m4o"&&(ae.innerHTML=Ut),Pe=o(e),$(F.$$.fragment,e),De=o(e),$(le.$$.fragment,e),Se=o(e),ne=d(e,"P",{"data-svelte-h":!0}),f(ne)!=="svelte-u9n0xn"&&(ne.innerHTML=xt),Ae=o(e),ie=d(e,"UL",{"data-svelte-h":!0}),f(ie)!=="svelte-1bupnko"&&(ie.innerHTML=Gt),Ke=o(e),re=d(e,"P",{"data-svelte-h":!0}),f(re)!=="svelte-10hgx86"&&(re.textContent=Xt),Oe=o(e),$(H.$$.fragment,e),et=o(e),oe=d(e,"P",{"data-svelte-h":!0}),f(oe)!=="svelte-19yqkad"&&(oe.innerHTML=Ft),tt=o(e),$(pe.$$.fragment,e),st=o(e),ce=d(e,"P",{"data-svelte-h":!0}),f(ce)!=="svelte-tgkt2x"&&(ce.innerHTML=Ht),at=o(e),$(me.$$.fragment,e),lt=o(e),ue=d(e,"P",{"data-svelte-h":!0}),f(ue)!=="svelte-cd6sn7"&&(ue.innerHTML=Et),nt=o(e),$(de.$$.fragment,e),it=o(e),$(E.$$.fragment,e),rt=o(e),$(fe.$$.fragment,e),ot=o(e),ge=d(e,"P",{"data-svelte-h":!0}),f(ge)!=="svelte-1wdma6m"&&(ge.innerHTML=Bt),pt=o(e),$e=d(e,"P",{"data-svelte-h":!0}),f($e)!=="svelte-172gwou"&&($e.innerHTML=Yt),ct=o(e),$(he.$$.fragment,e),mt=o(e),$(B.$$.fragment,e),ut=o(e),be=d(e,"P",{"data-svelte-h":!0}),f(be)!=="svelte-s82mgl"&&(be.innerHTML=Lt),dt=o(e),$(ye.$$.fragment,e),ft=o(e),je=d(e,"P",{"data-svelte-h":!0}),f(je)!=="svelte-10s4a3d"&&(je.innerHTML=Qt),gt=o(e),$(ve.$$.fragment,e),$t=o(e),$(ze.$$.fragment,e),ht=o(e),Me=d(e,"P",{"data-svelte-h":!0}),f(Me)!=="svelte-eo5266"&&(Me.innerHTML=Nt),bt=o(e),_e=d(e,"P",{"data-svelte-h":!0}),f(_e)!=="svelte-s1q7lo"&&(_e.textContent=It),yt=o(e),$(Te.$$.fragment,e),jt=o(e),Ze=d(e,"P",{"data-svelte-h":!0}),f(Ze)!=="svelte-14d8if5"&&(Ze.textContent=Pt),vt=o(e),$(qe.$$.fragment,e),zt=o(e),ke=d(e,"P",{"data-svelte-h":!0}),f(ke)!=="svelte-bpecop"&&(ke.innerHTML=Dt),Mt=o(e),$(we.$$.fragment,e),_t=o(e),Je=d(e,"P",{"data-svelte-h":!0}),f(Je)!=="svelte-13i7cen"&&(Je.textContent=St),Tt=o(e),Ce=d(e,"P",{}),as(Ce).forEach(s),this.h()},h(){ls(l,"name","hf:doc:metadata"),ls(l,"content",Ts)},m(e,t){ms(document.head,l),a(e,m,t),a(e,n,t),a(e,p,t),h(v,e,t),a(e,z,t),a(e,C,t),a(e,M,t),a(e,k,t),a(e,_,t),h(W,e,t),a(e,J,t),a(e,U,t),a(e,R,t),a(e,V,t),a(e,T,t),h(L,e,t),a(e,We,t),a(e,Q,t),a(e,Ve,t),a(e,N,t),a(e,Ue,t),h(I,e,t),a(e,xe,t),a(e,P,t),a(e,Ge,t),h(D,e,t),a(e,Xe,t),a(e,S,t),a(e,Fe,t),h(A,e,t),a(e,He,t),a(e,K,t),a(e,Ee,t),h(O,e,t),a(e,Be,t),h(G,e,t),a(e,Ye,t),h(ee,e,t),a(e,Le,t),a(e,te,t),a(e,Qe,t),h(X,e,t),a(e,Ne,t),h(se,e,t),a(e,Ie,t),a(e,ae,t),a(e,Pe,t),h(F,e,t),a(e,De,t),h(le,e,t),a(e,Se,t),a(e,ne,t),a(e,Ae,t),a(e,ie,t),a(e,Ke,t),a(e,re,t),a(e,Oe,t),h(H,e,t),a(e,et,t),a(e,oe,t),a(e,tt,t),h(pe,e,t),a(e,st,t),a(e,ce,t),a(e,at,t),h(me,e,t),a(e,lt,t),a(e,ue,t),a(e,nt,t),h(de,e,t),a(e,it,t),h(E,e,t),a(e,rt,t),h(fe,e,t),a(e,ot,t),a(e,ge,t),a(e,pt,t),a(e,$e,t),a(e,ct,t),h(he,e,t),a(e,mt,t),h(B,e,t),a(e,ut,t),a(e,be,t),a(e,dt,t),h(ye,e,t),a(e,ft,t),a(e,je,t),a(e,gt,t),h(ve,e,t),a(e,$t,t),h(ze,e,t),a(e,ht,t),a(e,Me,t),a(e,bt,t),a(e,_e,t),a(e,yt,t),h(Te,e,t),a(e,jt,t),a(e,Ze,t),a(e,vt,t),h(qe,e,t),a(e,zt,t),a(e,ke,t),a(e,Mt,t),h(we,e,t),a(e,_t,t),a(e,Je,t),a(e,Tt,t),a(e,Ce,t),Zt=!0},p(e,[t]){const At={};t&2&&(At.$$scope={dirty:t,ctx:e}),G.$set(At);const Kt={};t&2&&(Kt.$$scope={dirty:t,ctx:e}),X.$set(Kt);const Ot={};t&2&&(Ot.$$scope={dirty:t,ctx:e}),F.$set(Ot);const es={};t&2&&(es.$$scope={dirty:t,ctx:e}),H.$set(es);const ts={};t&2&&(ts.$$scope={dirty:t,ctx:e}),E.$set(ts);const ss={};t&2&&(ss.$$scope={dirty:t,ctx:e}),B.$set(ss)},i(e){Zt||(b(v.$$.fragment,e),b(W.$$.fragment,e),b(L.$$.fragment,e),b(I.$$.fragment,e),b(D.$$.fragment,e),b(A.$$.fragment,e),b(O.$$.fragment,e),b(G.$$.fragment,e),b(ee.$$.fragment,e),b(X.$$.fragment,e),b(se.$$.fragment,e),b(F.$$.fragment,e),b(le.$$.fragment,e),b(H.$$.fragment,e),b(pe.$$.fragment,e),b(me.$$.fragment,e),b(de.$$.fragment,e),b(E.$$.fragment,e),b(fe.$$.fragment,e),b(he.$$.fragment,e),b(B.$$.fragment,e),b(ye.$$.fragment,e),b(ve.$$.fragment,e),b(ze.$$.fragment,e),b(Te.$$.fragment,e),b(qe.$$.fragment,e),b(we.$$.fragment,e),Zt=!0)},o(e){y(v.$$.fragment,e),y(W.$$.fragment,e),y(L.$$.fragment,e),y(I.$$.fragment,e),y(D.$$.fragment,e),y(A.$$.fragment,e),y(O.$$.fragment,e),y(G.$$.fragment,e),y(ee.$$.fragment,e),y(X.$$.fragment,e),y(se.$$.fragment,e),y(F.$$.fragment,e),y(le.$$.fragment,e),y(H.$$.fragment,e),y(pe.$$.fragment,e),y(me.$$.fragment,e),y(de.$$.fragment,e),y(E.$$.fragment,e),y(fe.$$.fragment,e),y(he.$$.fragment,e),y(B.$$.fragment,e),y(ye.$$.fragment,e),y(ve.$$.fragment,e),y(ze.$$.fragment,e),y(Te.$$.fragment,e),y(qe.$$.fragment,e),y(we.$$.fragment,e),Zt=!1},d(e){e&&(s(m),s(n),s(p),s(z),s(C),s(M),s(k),s(_),s(J),s(U),s(R),s(V),s(T),s(We),s(Q),s(Ve),s(N),s(Ue),s(xe),s(P),s(Ge),s(Xe),s(S),s(Fe),s(He),s(K),s(Ee),s(Be),s(Ye),s(Le),s(te),s(Qe),s(Ne),s(Ie),s(ae),s(Pe),s(De),s(Se),s(ne),s(Ae),s(ie),s(Ke),s(re),s(Oe),s(et),s(oe),s(tt),s(st),s(ce),s(at),s(lt),s(ue),s(nt),s(it),s(rt),s(ot),s(ge),s(pt),s($e),s(ct),s(mt),s(ut),s(be),s(dt),s(ft),s(je),s(gt),s($t),s(ht),s(Me),s(bt),s(_e),s(yt),s(jt),s(Ze),s(vt),s(zt),s(ke),s(Mt),s(_t),s(Je),s(Tt),s(Ce)),s(l),j(v,e),j(W,e),j(L,e),j(I,e),j(D,e),j(A,e),j(O,e),j(G,e),j(ee,e),j(X,e),j(se,e),j(F,e),j(le,e),j(H,e),j(pe,e),j(me,e),j(de,e),j(E,e),j(fe,e),j(he,e),j(B,e),j(ye,e),j(ve,e),j(ze,e),j(Te,e),j(qe,e),j(we,e)}}}const Ts='{"title":"Crea unâ€™architettura personalizzata","local":"crea-unarchitettura-personalizzata","sections":[{"title":"Configurazione","local":"configurazione","sections":[],"depth":2},{"title":"Modello","local":"modello","sections":[{"title":"Model head","local":"model-head","sections":[],"depth":3}],"depth":2},{"title":"Tokenizer","local":"tokenizer","sections":[],"depth":2},{"title":"Estrattore Di Feature","local":"estrattore-di-feature","sections":[],"depth":2},{"title":"Processore","local":"processore","sections":[],"depth":2}],"depth":1}';function Zs(Z){return rs(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Ws extends os{constructor(l){super(),ps(this,l,Zs,_s,is,{})}}export{Ws as component};
